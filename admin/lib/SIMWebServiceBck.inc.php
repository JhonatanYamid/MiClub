<?php

//2021-05-06 13:30

class SIMWebService
{

    public function valida_socio($email, $clave, $id_club, $AppVersion, $Data = "")
    {

        $dbo = &SIMDB::get();

        if ($AppVersion >= 31 && !empty($Data)) {
            $valornonce = substr($Data, 0, 48);
            $valorencrip = substr($Data, 48);
            $param['key'] = KEY_API;
            $param['chiper'] = $valorencrip;
            $param['nonce'] = $valornonce;
            $result_decrypt = SIMUtil::decryptSodium($param);
            if ($result_decrypt["decryptedText"] == "nodecrypt") {
                $respuesta["message"] = "ENCRIPT. No";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            } else {
                $result_decrypt["decryptedText"];
                $array_datos = json_decode($result_decrypt["decryptedText"]);
                $email = $array_datos->ax;
                $clave = $array_datos->az;
            }
        }

        if (!empty($email) && !empty($clave)) {
            $foto = "";
            $foto_cod_barras = "";

            $sql_campos_carne = "SELECT IDCampoCarne,Nombre,CampoTabla From CampoCarne Where 1";
            $r_campo_carne = $dbo->query($sql_campos_carne);
            while ($row_campo_carne = $dbo->fetchArray($r_campo_carne)) {
                $array_campo_carne[$row_campo_carne["IDCampoCarne"]] = $row_campo_carne;
            }

            //Caso especial hacienda fontanar que enviaron las claves en la codificaciÃ³n propia de su sistema
            if ($id_club == "18"):
                $llave_fija = "63380fcfe2bf3c3d2cb3ec089c3c521b";
                $clave_especial = md5($email . md5($llave_fija . "-" . $clave));
                //$clave_especial =  md5($email."_".md5($clave));
                $otra_condicion_clave = " or Clave = '" . $clave_especial . "'";
            endif;

            //Caso especial fedegolf si no existe en la base lo consulto y lo creo
            if ($id_club == "17"):
                require LIBDIR . "SIMUruguay.inc.php";
                $resultado = SIMWebServiceFedegolf::login($email,$clave);
                if($resultado["success"]){
            			//echo "Bien";
                  $socio_codigo = $dbo->getFields("Socio", "IDSocio", "IDClub = '" . $id_club . "' and Email = '" . $email . "'");
                  $datos_socio = $dbo->fetchAll("Socio", " Email = '" . $email . "' and IDClub = '" . $id_club . "' ", "array");
                  if (empty($datos_socio["IDSocio"])):
                      //busco en el ws si existe este codigo para crearlo
                      $datos_jugador = SIMWebServiceFedegolf::get_usuario_codigo( $email );
                      if (!empty($datos_jugador["response"][0]["codJugador"])):
                          $sql_crea_socio = "INSERT INTO Socio (IDClub, IDCategoria, IDParentesco, IDEstadoSocio, Accion, NumeroDerecho, Genero, Nombre, Apellido, FechaNacimiento, NumeroDocumento, Email, Clave, CorreoElectronico, FechaTrCr, UsuarioTrCr, TipoSocio, PermiteReservar, CambioClave)												Values ('" . $id_club . "',1,18,1,'" . $email . "','" . $email . "','" . trim($datos_jugador["response"][0]["genero"]) . "','" . trim($datos_jugador["response"][0]["nombre"]) . "','" . trim($datos_jugador["response"][0]["apellido"]) . "','" . substr($datos_jugador["response"][0]["fecha_nacimiento"], 0, 10) . "','" . trim($datos_jugador["response"][0]["documento"]) . "',												'" . $email . "',sha1('" . $email . "'), '" . trim($datos_jugador["response"][0]["email"]) . "',NOW(),'WebServiceFedegolf','Socio','S','N')";
                          $dbo->query($sql_crea_socio);
                      endif;
                  endif;
            		}
            		else{
                  $respuesta["message"] = $resp["mensaje"];
                  $respuesta["success"] = false;
                  $respuesta["response"] = null;
                  return $respuesta;
            		}

                /*
                $socio_codigo = $dbo->getFields("Socio", "IDSocio", "IDClub = '" . $id_club . "' and Email = '" . $email . "'");
                if (empty($socio_codigo)):
                    //busco en el ws si existe este codigo para crearlo
                    //$datos_jugador = SIMWebServiceFedegolf::get_usuario_codigo( $email );
                    if (!empty($datos_jugador["response"][0]["codJugador"])):
                        $sql_crea_socio = "Insert into Socio (IDClub, IDCategoria, IDParentesco, IDEstadoSocio, Accion, NumeroDerecho, Genero, Nombre, Apellido, FechaNacimiento, NumeroDocumento, Email, Clave, CorreoElectronico, FechaTrCr, UsuarioTrCr, TipoSocio, PermiteReservar, CambioClave)												Values ('" . $id_club . "',1,18,1,'" . $email . "','" . $email . "','" . trim($datos_jugador["response"][0]["genero"]) . "','" . trim($datos_jugador["response"][0]["nombre"]) . "','" . trim($datos_jugador["response"][0]["apellido"]) . "','" . substr($datos_jugador["response"][0]["fecha_nacimiento"], 0, 10) . "','" . trim($datos_jugador["response"][0]["documento"]) . "',												'" . $email . "',sha1('" . $email . "'), '" . trim($datos_jugador["response"][0]["email"]) . "',NOW(),'WebServiceFedegolf','Socio','S','N')";
                        $dbo->query($sql_crea_socio);
                    endif;
                endif;
                */

            endif;

            //Uruguay
            if ($id_club == "125") {
                $sql_verifica_uru = "SELECT IDSocio FROM Socio WHERE ( Email = '" . $email . "' and Token <> '' ) and IDClub in (" . $id_club . ") Limit 1";
                $r_uru = $dbo->query($sql_verifica_uru);
                $row_uru = $dbo->fetchArray($r_uru);
                if ((int) $row_uru["IDSocio"] <= 0) {

                    //No es socios verifico si es empleado
                    if ($AppVersion >= 25):
                        $result_funcionario = SIMWebserviceApp::valida_usuario_web($email, $clave, $id_club, "", $AppVersion);
                        if ($result_funcionario["message"] == "ok"):
                            return $result_funcionario;
                        endif;
                    endif;

                    require LIBDIR . "SIMUruguay.inc.php";
                    $resp = SIMUruguay::valida_socio_uruguay($id_club, $email, $clave);
                    if ($resp["estado"] != "ok") {
                        $respuesta["message"] = $resp["mensaje"];
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }
            }
            //Fin Uruguay

            //Mi Club ingreso con socio de ZEUS DEMO TEMPORAL
            if ($id_club == "8" && ($email == "860000164" || $email == "860058490")) {
                $urlendpoint = "http://www.zeustecnologia.com/wszeus/ServiceWS.asmx?WSDL";
                $usuariuozeus = "wsclubes";
                $clavezeus = "zeus";
                $TokenZeus = SIMWebServiceZeus::obtener_token_club($urlendpoint, $usuariuozeus, $clavezeus);
                if (empty($TokenZeus)) {
                    $respuesta["message"] = "No se pudo obtener token de zeus";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                } else {
                    $datos_socio_zeus = $dbo->fetchAll("Socio", " Email = '" . $email . "' and IDClub = '" . $id_club . "' ", "array");
                    $Identificacion = $email;
                    $Accion = $datos_socio_zeus["Accion"];
                    $Secuencia = "00";
                    $DatosSocioZeus = SIMWebServiceZeus::estado_socio($urlendpoint, $TokenZeus, $Identificacion, $Accion, $Secuencia);

                    if ($DatosSocioZeus->item->estado != "A") {
                        $respuesta["message"] = "Bloqeado en Zeus por la siguiente razon: " . $DatosSocioZeus->item->motivo;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    } else {
                        //actualizo el valor de  la cartera
                        $sql_cartera = "UPDATE Socio Set ValorCartera='" . $DatosSocioZeus->item->saldocartera . "' WHERE IDClub = '" . $id_club . "' and Email = '" . $email . "'";
                        $dbo->query($sql_cartera);
                    }

                }
            }

            //Caso especial Club Colombia se consulta con lo WS de club colombia
            if ($id_club == "38"):
                $token_socio = SIMWebServiceApp::obtener_token_colombia($email, $clave);
                if (empty($token_socio)):

                    //No es socios verifico si es empleado
                    if ($AppVersion >= 25):
                        $result_funcionario = SIMWebserviceApp::valida_usuario_web($email, $clave, $id_club, "", $AppVersion);
                        if ($result_funcionario["message"] == "ok"):
                            return $result_funcionario;
                        endif;
                    endif;

                    $respuesta["message"] = "No encontrado, por favor verifica tu usuario y/o clave";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                else:
                    $datos_socio = SIMWebServiceApp::get_datos_usuario_club_colombia($token_socio, $email, $clave);
                    if ($datos_socio != "ok"):
                        $respuesta["message"] = "No se pudo obtener los datos del usuario, por favor intente mas tarde";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                endif;
            endif;

            //Caso especial Country Club se consulta con lo WS de ellos
            if ($id_club == "44") {
                /*
            $estado_autentica = SIMWebServiceApp::autentica_country_club( $email, $clave );
            if ( $estado_autentica==0 ){
            $respuesta[ "message" ] = "No encontrado, por favor verifica tu usuario y/o clave";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            //return $respuesta;
            }
             */
            }

            //Caso especial Puerto Azul se consulta con lo WS de ellos
            if ($id_club == "130") {
                require LIBDIR . "SIMWebServicePtoAzul.inc.php";
                $datos_autentica = SIMWebServicePtoAzul::autentica($email, $clave, $id_club);
                if ($datos_autentica["success"] == false) {
                    $respuesta["message"] = $datos_autentica["message"];
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

            // si el club tiene hijos valido usuario/clave dl primero que lo encuentre
            $sql_hijos = " Select IDClub From Club Where IDClubPadre = '" . $id_club . "' ";
            $result_hijos = $dbo->query($sql_hijos);
            while ($r_hijos = $dbo->fetchArray($result_hijos)):
                $array_id_hijos[] = $r_hijos["IDClub"];
            endwhile;
            if (count($array_id_hijos) > 0):
                $id_club_consulta = implode(",", $array_id_hijos);
            else:
                $id_club_consulta = $id_club;
            endif;

            $sql_verifica = "SELECT * FROM Socio WHERE ( Email = '" . $email . "' ) and ( Clave = '" . sha1($clave) . "' " . $otra_condicion_clave . ")  and IDClub in (" . $id_club_consulta . ") and (IDEstadoSocio <> 2  ) Limit 1";

            $qry_verifica = $dbo->query($sql_verifica);

            if ($dbo->rows($qry_verifica) == 0) {

                //No es socios verifico si es empleado
                if ($AppVersion >= 25):
                    $result_funcionario = SIMWebserviceApp::valida_usuario_web($email, $clave, $id_club, $id_club_consulta, $AppVersion);
                    if ($result_funcionario["message"] == "ok"):
                        return $result_funcionario;
                    endif;
                endif;

                $respuesta["message"] = "Por favor verifica tu usuario y/o clave";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end if
            else {

                    $datos_socio = $dbo->fetchArray($qry_verifica);

                    if ($datos_socio["IDEstadoSocio"] == 3) {
                        $respuesta["message"] = "Su cuenta estÃ¡ en mora, no es posible su acceso al club";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }

                    //Borro el id de socios que tienen que cerrar sesion obligatoriamente
                    $sql_borra_sesion = "delete from CierreSesionSocio Where IDSocio ='" . $datos_socio["IDSocio"] . "' Limit 1";
                    $dbo->query($sql_borra_sesion);

                    $flag_canje_cortesia = 0;

                    //Si el socio es por canje o cortesia valido este activo segun las fechas

                    switch ($datos_socio["TipoSocio"]):
                case "Canje":
                    $fecha_hoy = strtotime(date("Y-m-d"));
                    $FechaInicioCanje = strtotime($datos_socio["FechaInicioCanje"]);
                    $FechaFinCanje = strtotime($datos_socio["FechaFinCanje"]);
                    //echo $FechaInicioCanje.">=".$fecha_hoy ."&&". $fecha_hoy."<=".$FechaFinCanje;
                    if ($fecha_hoy >= $FechaInicioCanje && $fecha_hoy <= $FechaFinCanje):
                        $flag_canje_cortesia = 0;
                    else:
                        $flag_canje_cortesia = 1;
                    endif;
                    break;
                case "Cortesia":
                    $fecha_hoy = strtotime(date("Y-m-d"));
                    $FechaInicioCortesia = strtotime($datos_socio["FechaInicioCortesia"]);
                    $FechaFinCortesia = strtotime($datos_socio["FechaFinCortesia"]);
                    if ($fecha_hoy >= $FechaInicioCortesia && $fecha_hoy <= $FechaFinCortesia):
                        $flag_canje_cortesia = 0;
                    else:
                        $flag_canje_cortesia = 1;
                    endif;
                    break;
                case "Invitado":
                    $fecha_hoy = strtotime(date("Y-m-d"));
                    $FechaInicioInvitado = strtotime($datos_socio["FechaInicioInvitado"]);
                    $FechaFinInvitado = strtotime($datos_socio["FechaFinInvitado"]);
                    if ($fecha_hoy >= $FechaInicioInvitado && $fecha_hoy <= $FechaFinInvitado):
                        $flag_canje_cortesia = 0;
                    else:
                        $flag_canje_cortesia = 1;
                    endif;
                    break;
                default:
                    $flag_canje_cortesia = 0;
                    endswitch;

                    if ($flag_canje_cortesia == 0) {

                            if (!empty($datos_socio["Foto"])) {
                                $foto = SOCIO_ROOT . $datos_socio["Foto"];
                            }

                            $tipo_codigo_carne = $dbo->getFields("Club", "TipoCodigoCarne", "IDClub = '" . $id_club . "'");

                            switch ($tipo_codigo_carne) {
                                case "Barras":
                                    if (!empty($datos_socio["CodigoBarras"])) {
                                        $foto_cod_barras = SOCIO_ROOT . $datos_socio["CodigoBarras"];
                                    }
                                    break;
                                case "QR":
                                    if (!empty($datos_socio["CodigoQR"])) {
                                        $foto_cod_barras = SOCIO_ROOT . "qr/" . $datos_socio["CodigoQR"];
                                    }
                                    break;
                                default:
                                    $foto_cod_barras = "";
                            }

                            //Consulto el nucleo familiar
                            if (!empty($datos_socio["AccionPadre"])): // Es beneficiario
                                $condicion_nucleo = " and (AccionPadre = '" . $datos_socio["AccionPadre"] . "' or Accion = '" . $datos_socio["AccionPadre"] . "')";
                                //$tipo_socio = "Beneficiario";
                                $tipo_socio = $datos_socio["TipoSocio"];
                            else: // es Cabeza familia
                                $condicion_nucleo = " and AccionPadre = '" . $datos_socio["Accion"] . "'";
                                //$tipo_socio = "Socio";
                                $tipo_socio = $datos_socio["TipoSocio"];
                            endif;

                            //Especial uruguaty los hijos de socios separados deben salir en ambos asi sean acciones distintas
                            if ($id_club == 125 && !empty($datos_socio["ClaveSistemaExterno"])) {
                                $AccionOtro = $dbo->getFields("Socio", "Accion", "NumeroDocumento = '" . $datos_socio["ClaveSistemaExterno"] . "'");
                                if (!empty($AccionOtro)) {
                                    $condicion_nucleo .= " or AccionPadre = '" . $AccionOtro . "'";
                                }

                            }

                            if ($id_club == 50) {
                                $tipo_socio = "Cargo: ";
                            }

                            $tipo_socio .= " " . $datos_socio["Predio"] . " " . $datos_socio["Torre"];

                            $response_nucleo = array();
                            $sql_nucleo = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and IDSocio <> '" . $datos_socio["IDSocio"] . "' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 ) " . $condicion_nucleo;
                            $qry_nucleo = $dbo->query($sql_nucleo);
                            while ($datos_nucleo = $dbo->fetchArray($qry_nucleo)):
                                $foto_nucleo = "";
                                $foto_cod_barras_nucleo = "";

                                if (!empty($datos_nucleo["Foto"])) {
                                    $foto_nucleo = SOCIO_ROOT . $datos_nucleo["Foto"];
                                }

                                switch ($tipo_codigo_carne) {
                                    case "Barras":
                                        if (!empty($datos_nucleo["CodigoBarras"])) {
                                            $foto_cod_barras_nucleo = SOCIO_ROOT . $datos_nucleo["CodigoBarras"];
                                        }
                                        break;
                                    case "QR":
                                        if (!empty($datos_nucleo["CodigoQR"])) {
                                            $foto_cod_barras_nucleo = SOCIO_ROOT . "qr/" . $datos_nucleo["CodigoQR"];
                                        }
                                        break;
                                    default:
                                        $foto_cod_barras_nucleo = "";
                                }

                                //if (!empty($datos_nucleo["CodigoBarras"])){
                                //$foto_cod_barras_nucleo =     SOCIO_ROOT.$datos_nucleo["CodigoBarras"];
                                //}

                                //Averiguo tipo: Socio o Beneficiario
                                if (!empty($datos_nucleo["AccionPadre"])): // Es beneficiario
                                    $tipo_socio_nucleo = "Beneficiario";
                                    $tipo_socio_nucleo = $datos_nucleo["TipoSocio"];
                                else: // es Cabeza familia
                                    //$tipo_socio_nucleo = "Socio";
                                    $tipo_socio_nucleo = $datos_nucleo["TipoSocio"];
                                endif;

                                if ($id_club == 29) {
                                    $tipo_socio_nucleo .= " " . substr(trim($datos_nucleo["Predio"]), 0, 16);
                                } else {
                                    $tipo_socio_nucleo .= " " . trim($datos_nucleo["Predio"]);
                                }

                                $nucleo["IDSocio"] = $datos_nucleo[IDSocio];
                                $nucleo["IDClub"] = $datos_nucleo[IDClub];
                                $nucleo["Foto"] = $foto_nucleo;
                                $nucleo["Socio"] = $datos_nucleo["Nombre"] . " " . $datos_nucleo["Apellido"];
                                $nucleo["NumeroDerecho"] = $datos_nucleo["Accion"];
                                $nucleo["CodigoBarras"] = $foto_cod_barras_nucleo;
                                $nucleo["TipoSocio"] = $tipo_socio_nucleo;
                                $nucleo["LabelEstadoUsuario"] = $datos_nucleo["LabelEstadoUsuario"];

                                //Campos carne
                                $array_carne_club_nucleo = array();
                                $reponse_datos_carne_nucleo = array();
                                $campo_mostrar_carne_nucleo = array();
                                $CamposCarne = $dbo->getFields("Club", "CampoCarne", "IDClub = '" . $id_club . "'");
                                if (!empty($CamposCarne)) {
                                    $array_carne_club_nucleo = explode("|||", $CamposCarne);
                                    foreach ($array_carne_club_nucleo as $DetalleCampoCarne) {
                                        $EtiquetaCarne = $array_campo_carne[$DetalleCampoCarne]["Nombre"];
                                        $DatoCarne = $datos_nucleo[$array_campo_carne[$DetalleCampoCarne]["CampoTabla"]];
                                        $campo_mostrar_carne_nucleo[] = $EtiquetaCarne . " " . $DatoCarne;
                                    }
                                }
                                if ($id_club == 44 && $datos_nucleo["SocioAusente"] == "S") {
                                    $campo_mostrar_carne_nucleo[] = "Eres Socio Ausente";
                                    $campo_mostrar_carne_nucleo[] = "Numero Entradas: " . $datos_nucleo["CantidadAusencias"];
                                    $campo_mostrar_carne_nucleo[] = "Accion: " . $datos_nucleo["Accion"];

                                } elseif ($id_club == 133) {
                                $fechaNacimiento = $datos_nucleo["FechaNacimiento"];
                                $dia_actual = date("Y-m-d");
                                $edad_diff = date_diff(date_create($fechaNacimiento), date_create($dia_actual));
                                $aÃ±os = $edad_diff->format('%y');

                                $campo_mostrar_carne_nucleo[] = "Edad Socio: " . $aÃ±os;
                                $campo_mostrar_carne_nucleo[] = "Fecha Ingreso: " . $datos_nucleo["FechaPago"];

                            }

                            $nucleo["ValoresCarnet"] = $campo_mostrar_carne_nucleo;

                            array_push($response_nucleo, $nucleo);

                            /*
                            $array_nucleo[$datos_nucleo[IDSocio]][IDSocio] = $datos_nucleo[IDSocio];
                            $array_nucleo[$datos_nucleo[IDSocio]][IDClub] = $datos_nucleo[IDClub];
                            $array_nucleo[$datos_nucleo[IDSocio]][Foto] = $foto_nucleo;
                            $array_nucleo[$datos_nucleo[IDSocio]][Socio] = $datos_nucleo[Socio];
                            $array_nucleo[$datos_nucleo[IDSocio]][NumeroDerecho] = $datos_nucleo[Accion];
                            $array_nucleo[$datos_nucleo[IDSocio]][CodigoBarras] = $foto_cod_barras_nucleo;
                             */

                            if ($id_club == 70 || $id_club == 9) {
                                self::set_socio_favorito($id_club, $datos_socio["IDSocio"], $datos_nucleo["IDSocio"], "S");
                            }

                        endwhile;

                        //Preferencias Contenido
                        $response_seccion_noticia = array();
                        $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                        while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                            $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                            $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                            $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                            array_push($response_seccion_noticia, $seccion_noticia);
                            /*
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                         */
                        endwhile;

                        $response_seccion_noticia2 = array();
                        $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion2 Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                        while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                            $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                            $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                            $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                            array_push($response_seccion_noticia2, $seccion_noticia);
                            /*
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                         */
                        endwhile;

                        $response_seccion_noticia3 = array();
                        $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion3 Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                        while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                            $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                            $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                            $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                            array_push($response_seccion_noticia3, $seccion_noticia);
                            /*
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                        $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                         */
                        endwhile;

                        //Preferencias Eventos
                        $response_seccion_evento = array();
                        $sql_seccioneve_socio = $dbo->query("Select * From SocioSeccionEvento Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                        while ($r_seccioneve_socio = $dbo->fetchArray($sql_seccioneve_socio)):
                            $seccion_evento[IDSocio] = $datos_socio["IDSocio"];
                            $seccion_evento[IDClub] = $datos_socio["IDClub"];
                            $seccion_evento[IDSeccionEvento] = $r_seccioneve_socio["IDSeccionEvento"];
                            array_push($response_seccion_evento, $seccion_evento);
                        endwhile;

                        //Socios Favoritos
                        $response_favoritos = array();
                        $sql_favorito_socio = $dbo->query("Select * From SocioFavorito Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                        while ($r_favorito_socio = $dbo->fetchArray($sql_favorito_socio)):
                            $favorito_socio[IDSocio] = $r_favorito_socio["IDSocio2"];
                            array_push($response_favoritos, $favorito_socio);
                        endwhile;

                        $response["IDClub"] = $datos_socio["IDClub"];
                        $response["IDSocio"] = $datos_socio["IDSocio"];
                        $response["Foto"] = $foto;
                        $response["Socio"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                        $response["Nombre"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                        $response["Apellido"] = $datos_socio["Apellido"];
                        $response["Celular"] = $datos_socio["Celular"];
                        $response["CorreoElectronico"] = $datos_socio["CorreoElectronico"];
                        $response["Direccion"] = $datos_socio["Direccion"];
                        $response["EstadoCivil"] = $datos_socio["EstadoCivil"];
                        $response["NumeroDocumento"] = $datos_socio["NumeroDocumento"];

                        if ($id_club == 46) {
                            $dato_carne = utf8_encode($datos_socio["NumeroDocumento"]);
                        } elseif ($id_club == 44 && !empty($datos_socio["CodigoCarne"])) {
                            $dato_carne = $datos_socio["CodigoCarne"];
                        } elseif ($id_club == 133) {
                            $dato_carne = $datos_socio["AccionPadre"];
                        } else {
                            $dato_carne = $datos_socio["Accion"];
                        }

                        $response["NumeroDerecho"] = $dato_carne;
                        $response["CodigoBarras"] = $foto_cod_barras;
                        $response["NucleoFamiliar"] = $response_nucleo;
                        $response["PreferenciasContenido"] = $response_seccion_noticia;
                        $response["PreferenciasContenido2"] = $response_seccion_noticia2;
                        $response["PreferenciasEvento"] = $response_seccion_evento;
                        $response["SocioFavorito"] = $response_favoritos;
                        $response["Dispositivo"] = $datos_socio["Dispositivo"];
                        $response["Token"] = $datos_socio["Token"];
                        $response["TipoSocio"] = $tipo_socio;
                        $response["TipoUsuario"] = "Socio";
                        $response["LabelEstadoUsuario"] = $datos_socio["LabelEstadoUsuario"];

                        //Campos carne
                        $array_carne_club = array();
                        $reponse_datos_carne = array();
                        $campo_mostrar_carne = array();
                        $CamposCarne = $dbo->getFields("Club", "CampoCarne", "IDClub = '" . $id_club . "'");
                        if (!empty($CamposCarne)) {
                            $array_carne_club = explode("|||", $CamposCarne);
                            foreach ($array_carne_club as $DetalleCampoCarne) {
                                $EtiquetaCarne = $array_campo_carne[$DetalleCampoCarne]["Nombre"];
                                $DatoCarne = $datos_socio[$array_campo_carne[$DetalleCampoCarne]["CampoTabla"]];
                                $campo_mostrar_carne[] = $EtiquetaCarne . " " . $DatoCarne;
                            }
                        }

                        if ($id_club == 44 && $datos_socio["SocioAusente"] == "S") {
                            $campo_mostrar_carne[] = "Eres Socio Ausente";
                            $campo_mostrar_carne[] = "Numero Entradas: " . $datos_socio["CantidadAusencias"];
                            $campo_mostrar_carne[] = "Accion: " . $datos_socio["Accion"];
                        } elseif ($id_club == 133) {
                            $fechaNacimiento = $datos_socio["FechaNacimiento"];
                            $dia_actual = date("Y-m-d");
                            $edad_diff = date_diff(date_create($fechaNacimiento), date_create($dia_actual));
                            $aÃ±os = $edad_diff->format('%y');

                            $campo_mostrar_carne[] = "Edad Socio: " . $aÃ±os;
                            $campo_mostrar_carne[] = "Fecha Ingreso: " . $datos_socio["FechaPago"];

                        }

                        $response["ValoresCarnet"] = $campo_mostrar_carne;

                        //Si el club tiene configurado para solciitar cambio de clave al primer ingreso o el usuario esta marcado para cambio de clave
                        $cambio_clave_club = $dbo->getFields("Club", "SolicitaCambioClave", "IDClub = '" . $datos_socio["IDClub"] . "'");
                        if ((empty($datos_socio["Token"]) && empty($datos_socio["Token"])) && $cambio_clave_club == "S" && (empty($datos_socio["CambioClave"]) || $datos_socio["CambioClave"] == "S")):
                            $cambiar_clave = "S";
                        elseif ($cambio_clave_club == "S"):
                            $cambiar_clave = "S";
                        else:
                            $cambiar_clave = "N";
                        endif;
                        $response["CambioClave"] = $datos_socio["CambioClave"];
                        $response["CambioSegundaClave"] = $datos_socio["CambioSegundaClave"];

                        //Datos mostrar al editar perfil
                        $response_campo_editar = array();
                        /*
                        $sql_campo_editar = "SELECT CES.* FROM ClubCampoEditarSocio CCES,CampoEditarSocio CES
                        WHERE CCES.`IDCampoEditarSocio`=CES.IDCampoEditarSocio and CCES.IDClub = '" . $id_club . "' ORDER BY CES.Orden";
                         */

                        $sql_campo_editar = "SELECT CES.* FROM CampoEditarSocio CES
																WHERE CES.IDClub = '" . $datos_socio["IDClub"] . "' ORDER BY CES.Orden";

                        $qry_campo_editar = $dbo->query($sql_campo_editar);
                        if ($dbo->rows($qry_campo_editar) > 0) {
                            while ($r_campo_editar = $dbo->fetchArray($qry_campo_editar)) {
                                $campo_editar["IDCampoEditarSocio"] = $r_campo_editar["IDCampoEditarSocio"];
                                $campo_editar["Nombre"] = $r_campo_editar["Nombre"];
                                $campo_editar["Tipo"] = $r_campo_editar["Tipo"];
                                $campo_editar["Valores"] = trim(preg_replace('/\s+/', ' ', $r_campo_editar["Valores"]));
                                $campo_editar["PermiteEditar"] = $r_campo_editar["PermiteEditar"];
                                //Consulto el valor de la actualizaciÃ³n
                                $ValorDatoCampo = $dbo->getFields("SocioCampoEditarSocio", "Valor", "IDCampoEditarSocio = '" . $r_campo_editar["IDCampoEditarSocio"] . "' and IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                if ($ValorDatoCampo != "" && $ValorDatoCampo != "false") {
                                    $ValorDato = $ValorDatoCampo;
                                } else {
                                    $ValorDato = $datos_socio[$r_campo_editar["Nombre"]];

                                }

                                //$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
                                $campo_editar["ValorActual"] = trim(preg_replace('/\s+/', ' ', $ValorDato));

                                $campo_editar["Obligatorio"] = $r_campo_editar["Obligatorio"];
                                array_push($response_campo_editar, $campo_editar);

                            } //ednw while
                        }
                        $response["CampoEditar"] = $response_campo_editar;

                        if ($AppVersion >= 31) {
                            $respuesta = json_encode($response);
                            $param['key'] = KEY_API;
                            $param['nonce'] = sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
                            $param['msg'] = $respuesta;
                            $result = SIMUtil::cryptSodium($param);

                            //$response_encrip=array();
                            //$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
                            $respuesta = array();
                            $respuesta["message"] = "ok";
                            $respuesta["success"] = true;
                            $respuesta["response"] = $param['nonce'] . sodium_bin2hex($result["cryptedText"]);

                        } else {
                            $respuesta["message"] = "ok";
                            $respuesta["success"] = true;
                            $respuesta["response"] = $response;
                        }

                } else {
                    $respuesta["message"] = "Lo sentimos, las fechas de la cortesia o canje ya vencieron";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            }
        } else {
            $respuesta["message"] = "1. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    } //end function

    public function get_noticacion_local($IDClub, $IDSocio, $IDUsuario)
    {
        $dbo = &SIMDB::get();
        //Notificaciones Locales
        $condicion_notif_local = SIMWebServiceApp::verificar_notificacion_local($IDSocio, $IDUsuario, $IDClub);
        $response_notif_local = array();
        $sql_notif = "SELECT *
								FROM NotificacionLocal
								WHERE IDClub = '" . $IDClub . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() " . $condicion_notif_local;
        $qry_notif = $dbo->query($sql_notif);
        if ($dbo->rows($qry_notif) > 0) {
            while ($r_notif = $dbo->fetchArray($qry_notif)) {
                $datos_notif["IDNotificacionLocal"] = $r_notif["IDNotificacionLocal"];
                $datos_notif["IDModulo"] = $r_notif["IDModulo"];
                $datos_notif["IDDetalle"] = $r_notif["IDDetalle"];
                $datos_notif["Titulo"] = $r_notif["Titulo"];
                $datos_notif["Mensaje"] = $r_notif["Mensaje"];
                //$datos_notif[ "FechaInicio" ] = $r_notif[ "FechaInicio" ];
                $datos_notif["FechaInicio"] = date("Y-m-d");
                $datos_notif["FechaFin"] = $r_notif["FechaFin"];
                $datos_notif["HoraInicio"] = $r_notif["HoraInicio"];
                $datos_notif["HoraFin"] = $r_notif["HoraFin"];
                $datos_notif["Periodicidad"] = $r_notif["Periodicidad"];

                $response_dias = array();
                $datos_dia = array();
                $array_dias = array();
                $array_dias = explode("|", $r_notif["Dias"]);
                foreach ($array_dias as $dia) {
                    if ((string) $dia == "0") {
                        $dia = 7;
                    }

                    if (!empty($dia)) {
                        switch ($dia) {
                            case '0':
                            case '7':
                                $datos_dia["Dia"] = "D";
                                break;
                            case '1':
                                $datos_dia["Dia"] = "L";
                                break;
                            case '2':
                                $datos_dia["Dia"] = "M";
                                break;
                            case '3':
                                $datos_dia["Dia"] = "X";
                                break;
                            case '4':
                                $datos_dia["Dia"] = "J";
                                break;
                            case '5':
                                $datos_dia["Dia"] = "V";
                                break;
                            case '6':
                                $datos_dia["Dia"] = "S";
                                break;
                            default:
                                $datos_dia["Dia"] = "D";
                        }
                        array_push($response_dias, $datos_dia);
                    }
                }
                ;

                $datos_notif["Dias"] = $response_dias;
                array_push($response_notif_local, $datos_notif);
            } //ednw while
        }

        $respuesta["message"] = "Encontrado";
        $respuesta["success"] = true;
        $respuesta["response"] = $response_notif_local;

        return $respuesta;

    }

    public function get_perfil($IDClub, $IDSocio, $IDUsuario)
    {
        $dbo = &SIMDB::get();

        $response = array();

        if (!empty($IDSocio)) {
            $sql_campo_editar = "SELECT CES.* FROM CampoEditarSocio CES
													WHERE CES.IDClub = '" . $IDClub . "' ORDER BY CES.Orden";

            $qry_campo_editar = $dbo->query($sql_campo_editar);
            if ($dbo->rows($qry_campo_editar) > 0) {
                while ($r_campo_editar = $dbo->fetchArray($qry_campo_editar)) {
                    $array_datos_perfil["IDCampoEditarSocio"] = $r_campo_editar["IDCampoEditarSocio"];
                    $array_datos_perfil["Nombre"] = $r_campo_editar["Nombre"];
                    $array_datos_perfil["Tipo"] = $r_campo_editar["Tipo"];
                    $array_datos_perfil["Valores"] = $r_campo_editar["Valores"];
                    $array_datos_perfil["PermiteEditar"] = $r_campo_editar["PermiteEditar"];
                    //Consulto el valor de la actualizaciÃ³n
                    $ValorDato = $dbo->getFields("SocioCampoEditarSocio", "Valor", "IDCampoEditarSocio = '" . $r_campo_editar["IDCampoEditarSocio"] . "' and IDSocio = '" . $IDSocio . "'");
                    //$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
                    $array_datos_perfil["ValorActual"] = $ValorDato;
                    $array_datos_perfil["Obligatorio"] = $r_campo_editar["Obligatorio"];
                    array_push($response, $array_datos_perfil);

                } //ednw while
            }
        } elseif (!empty($IDUsuario)) {
            $sql_campo_editar = "SELECT CEU.* FROM CampoEditarUsuario CEU
												WHERE CEU.IDClub = '" . $IDClub . "' ORDER BY CEU.Orden";

            $qry_campo_editar = $dbo->query($sql_campo_editar);
            if ($dbo->rows($qry_campo_editar) > 0) {
                while ($r_campo_editar = $dbo->fetchArray($qry_campo_editar)) {
                    $array_datos_perfil["IDCampoEditarSocio"] = $r_campo_editar["IDCampoEditarUsuario"];
                    $array_datos_perfil["Nombre"] = $r_campo_editar["Nombre"];
                    $array_datos_perfil["Tipo"] = $r_campo_editar["Tipo"];
                    $array_datos_perfil["Valores"] = $r_campo_editar["Valores"];
                    $array_datos_perfil["PermiteEditar"] = $r_campo_editar["PermiteEditar"];
                    //Consulto el valor de la actualizaciÃ³n
                    $ValorDato = $dbo->getFields("UsuarioCampoEditarUsuario", "Valor", "IDCampoEditarUsuario = '" . $r_campo_editar["IDCampoEditarUsuario"] . "' and IDUsuario = '" . $IDUsuario . "'");
                    //$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
                    $array_datos_perfil["ValorActual"] = $ValorDato;
                    $array_datos_perfil["Obligatorio"] = $r_campo_editar["Obligatorio"];
                    array_push($response, $array_datos_perfil);

                } //ednw while
            }
        }

        $respuesta["message"] = "ok";
        $respuesta["success"] = true;
        $respuesta["response"] = $response;

        return $respuesta;

    }

    public function valida_socio_accion($IDClub, $Accion)
    {
        $dbo = &SIMDB::get();
        $datos_socio = $dbo->fetchAll("Socio", " Accion = '" . $Accion . "' and IDCLub = '" . $IDClub . "' LIMIT 1", "array");
        $datos_socio = array_map("utf8_encode", $datos_socio);
        if (!empty($datos_socio["IDSocio"])):
            $respuesta["message"] = "ok";
            $respuesta["success"] = true;
            $respuesta["response"] = $datos_socio;
        else:
            $respuesta["message"] = "Socio no encontrado";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        endif;

        return $respuesta;

    }

    public function validar_canje_activo($IDSocio)
    {
        $dbo = &SIMDB::get();
        $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
        $flag_canje_cortesia = 0;
        //Si el socio es por canje o cortesia valido este activo segun las fechas

        switch ($datos_socio["TipoSocio"]):
    case "Canje":
        $fecha_hoy = strtotime(date("Y-m-d"));
        $FechaInicioCanje = strtotime($datos_socio["FechaInicioCanje"]);
        $FechaFinCanje = strtotime($datos_socio["FechaFinCanje"]);
        //echo $FechaInicioCanje.">=".$fecha_hoy ."&&". $fecha_hoy."<=".$FechaFinCanje;
        if ($fecha_hoy >= $FechaInicioCanje && $fecha_hoy <= $FechaFinCanje):
            $flag_canje_cortesia = 0;
        else:
            $flag_canje_cortesia = 1;
        endif;
        break;
    case "Cortesia":
        $fecha_hoy = strtotime(date("Y-m-d"));
        $FechaInicioCortesia = strtotime($datos_socio["FechaInicioCortesia"]);
        $FechaFinCortesia = strtotime($datos_socio["FechaFinCortesia"]);
        if ($fecha_hoy >= $FechaInicioCortesia && $fecha_hoy <= $FechaFinCortesia):
            $flag_canje_cortesia = 0;
        else:
            $flag_canje_cortesia = 1;
        endif;
        break;
    case "Invitado":
        $fecha_hoy = strtotime(date("Y-m-d"));
        $FechaInicioInvitado = strtotime($datos_socio["FechaInicioInvitado"]);
        $FechaFinInvitado = strtotime($datos_socio["FechaFinInvitado"]);
        if ($fecha_hoy >= $FechaInicioInvitado && $fecha_hoy <= $FechaFinInvitado):
            $flag_canje_cortesia = 0;
        else:
            $flag_canje_cortesia = 1;
        endif;
        break;
    default:
        $flag_canje_cortesia = 0;
        endswitch;

        return $flag_canje_cortesia;

    }

    public function get_banner_app($id_club)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY RAND()";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $banner["IDBannerApp"] = $r["IDBannerApp"];
                    $banner["Nombre"] = $r["Nombre"];
                    if (!empty($r["Foto1"])):
                        $foto = BANNERAPP_ROOT . $r["Foto1"];
                    else:
                        $foto = "";
                    endif;
                    $banner["Foto1"] = $foto;
                    array_push($response, $banner);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
            else {
                    $respuesta["message"] = "No se ha encontrado splash";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

                return $respuesta;

        } // fin function

        public function get_banner_app_empleado($id_club)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY RAND()";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $banner["IDBannerApp"] = $r["IDBannerApp"];
                    $banner["Nombre"] = $r["Nombre"];
                    if (!empty($r["Foto1"])):
                        $foto = BANNERAPP_ROOT . $r["Foto1"];
                    else:
                        $foto = "";
                    endif;
                    $banner["Foto1"] = $foto;
                    array_push($response, $banner);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado splash";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function verificar_contenido_modulo($IDModulo, $id_club)
    {
            $dbo = &SIMDB::get();
            $flag_mostrar = 0;
            //Para Noticias, Eventos y galeria se verifica si hay contenido para mostrarlo en el menu los id son 3,4,5
            switch ($IDModulo):
        case "3": // Noticias
            // verifico que la seccion tenga por lo menos una noticia publicada
            $id_noticia = $dbo->getFields("Noticia", "IDNoticia", "IDClub = '" . $id_club . "' and Publicar = 'S' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T')");
            if (empty($id_noticia)):
                $flag_mostrar = 1;
            endif;
            break;
        case "4": // Eventos
            // verifico que la seccion tenga por lo menos una noticia publicada
            $id_evento = $dbo->getFields("Evento", "IDEvento", "IDClub = '" . $id_club . "' and Publicar = 'S' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T')");
            if (empty($id_evento)):
                $flag_mostrar = 1;
            endif;
            break;
        case "5": // Galerias
            // verifico que la seccion tenga por lo menos una galeria publicada
            $id_galeria = $dbo->getFields("Galeria", "IDGaleria", "IDClub = '" . $id_club . "' and Publicar = 'S'");
            if (empty($id_galeria)):
                $flag_mostrar = 1;
            endif;
            break;
        default:
            $flag_mostrar = 0;
            endswitch;

            return $flag_mostrar;
        }

        public function get_club($id_club, $IDSocio = "")
    {

                $dbo = &SIMDB::get();

                $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
                $PermiteReservar = $datos_socio["PermiteReservar"];

                $response = array();
                $sql = "SELECT * FROM Club WHERE IDClub = '" . $id_club . "'";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        if (!empty($r["FotoLogoApp"])) {
                            $foto_logo = CLUB_ROOT . $r["FotoLogoApp"];
                        }
                        if (!empty($r["FotoDiseno1"])) {
                            $foto1 = CLUB_ROOT . $r["FotoDiseno1"];
                        }
                        if (!empty($r["FotoDiseno2"])) {
                            $foto2 = CLUB_ROOT . $r["FotoDiseno2"];
                        }

                        //Banners
                        $response_banner = array();
                        $sql_banner = "SELECT * FROM BannerApp WHERE (DirigidoA <> 'E' or DirigidoA='T')  and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY IDBannerApp";
                        $qry_banner = $dbo->query($sql_banner);
                        if ($dbo->rows($qry_banner) > 0) {
                            while ($r_banner = $dbo->fetchArray($qry_banner)) {
                                $banner["IDClub"] = $id_club;
                                $banner["IDBannerApp"] = $r_banner["IDBannerApp"];
                                if (!empty($r_banner["UrlVideo"])) {
                                    $banner["Tipo"] = "Video";
                                    $banner["UrlVideo"] = $r_banner["UrlVideo"];
                                } else {
                                    $banner["Tipo"] = "Imagen";
                                    if (!empty($r_banner["Foto1"])):
                                        $foto = BANNERAPP_ROOT . $r_banner["Foto1"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $banner["Foto"] = $foto;
                                }

                                array_push($response_banner, $banner);

                            } //ednw hile
                        }

                        // Consulto los tipos de servicio Iniciales
                        $sql_servicio_inicial = "SELECT * FROM ServicioInicial Where Publicar='S'";
                        $qry_servicio_inicial = $dbo->query($sql_servicio_inicial);
                        while ($r_servicio_inicial = $dbo->fetchArray($qry_servicio_inicial)) {
                            $array_servicio_inicial[$r_servicio_inicial["IDServicioInicial"]] = $r_servicio_inicial["Nombre"];
                        }

                        //Servicios Reservas
                        $response_servicio = array();
                        $sql_servicio = "SELECT * FROM ServicioClub WHERE IDClub = '" . $id_club . "' and Activo ='S' ORDER BY IDServicioMaestro";
                        //$sql_servicio = "SELECT * FROM Servicio WHERE IDClub = '".$id_club."' ORDER BY IDServicio";
                        $qry_servicio = $dbo->query($sql_servicio);
                        if ($dbo->rows($qry_servicio) > 0) {
                            while ($r_servicio = $dbo->fetchArray($qry_servicio)) {

                                $datos_servicio = $dbo->fetchAll("Servicio", " IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' and IDClub='" . $id_club . "' ", "array");

                                $servicio["IDClub"] = $id_club;
                                $servicio["IDServicio"] = $datos_servicio["IDServicio"];
                                $servicio["NombreServicio"] = $datos_servicio["Nombre"];
                                if (!empty($datos_servicio["Icono"])):
                                    $foto = SERVICIO_ROOT . $datos_servicio["Icono"];
                                else:
                                    $foto = "";
                                endif;
                                $servicio["Icono"] = $foto;
                                $IDInicial = $dbo->getFields("ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "'");
                                //$servicio[ "ServicioInicial" ] = $dbo->getFields( "ServicioInicial", "Nombre", "IDServicioInicial = '" . $IDInicial . "'" );
                                $servicio["ServicioInicial"] = $array_servicio_inicial[$IDInicial];

                                array_push($response_servicio, $servicio);

                            } //ednw while
                        }

                        //Reviso si el socio tiene en numero de invitaciones mayor a cero para hacer invitaciones para mostrar o no el modulo
                        if (!empty($IDSocio)):
                            $NumeroInvitados = $datos_socio["NumeroInvitados"];
                            $NumeroAccesos = $datos_socio["NumeroAccesos"];
                            if ((int) $NumeroInvitados <= 0 && (int) $NumeroAccesos <= 0):
                                $condicion_modulo = " and IDModulo not in ( 1, 25, 28, 26 ) ";
                            endif;

                        endif;

                        //Modulos Sistema Menu Central

                        $CerrarSesion = $datos_socio["SolicitarCierreSesion"];
                        if ($CerrarSesion == "S") {
                            $condicion_modulo = " and IDModulo = 14 "; //cerrar sesion
                        }

                        //Consulto los modulos que se configuraron para un socio especifico
                        $sql_tiposoc_mod = "SELECT IDModulo,InvitadoSeleccion From PermisoSocioModulo Where IDClub = '" . $id_club . "' and InvitadoSeleccion <> '' ";
                        $r_tiposoc_mod = $dbo->query($sql_tiposoc_mod);
                        while ($row_tiposoc_mod = $dbo->fetchArray($r_tiposoc_mod)) {
                            $array_invitados = explode("|||", $row_tiposoc_mod["InvitadoSeleccion"]);
                            $array_soc_id = array();
                            foreach ($array_invitados as $id_invitado => $datos_invitado) {
                                if (!empty($datos_invitado)) {
                                    $array_datos_invitados = explode("-", $datos_invitado);
                                    $IDSocioInvitacion = $array_datos_invitados[1];
                                    if ($IDSocioInvitacion > 0):
                                        $array_soc_id[] = $IDSocioInvitacion;
                                    endif;
                                }
                            }

                            $array_mod_esp = explode("|", $row_tiposoc_mod["IDModulo"]);
                            foreach ($array_mod_esp as $IDModulo) {
                                if (!empty($IDModulo)) {
                                    $array_id_mod_esp[$IDModulo] = $array_soc_id;
                                }
                            }
                        }
                        //FIN Consulto los modulos que se configuraron para un socio especifico

                        //reviso si tienen modulo personalizado por perfil de socio
                        $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $IDSocio . "'");
                        $sql_modulo_perfil = "Select * From TipoSocioModulo Where IDClub = '" . $id_club . "' and TipoSocio = '" . $TipoSocio . "' Limit 1";
                        $r_modulo_perfil = $dbo->query($sql_modulo_perfil);
                        if ($dbo->rows($r_modulo_perfil) > 0) {
                            $row_modulo_perfil = $dbo->fetchArray($r_modulo_perfil);
                            if (!empty($row_modulo_perfil["IDModulo"])) {
                                $array_id_modulo = explode("|", $row_modulo_perfil["IDModulo"]);
                                if (count($array_id_modulo) > 0) {
                                    $id_modulo_ver = implode(",", $array_id_modulo);
                                    $condicion_modulo .= " and IDModulo in (" . $id_modulo_ver . ")";
                                }
                            }
                        }

                        $response_modulo = array();
                        $sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Central%' " . $condicion_modulo . " ORDER BY Orden";
                        $qry_modulo = $dbo->query($sql_modulo);
                        if ($dbo->rows($qry_modulo) > 0) {

                            while ($r_modulo = $dbo->fetchArray($qry_modulo)) {
                                // Verificar si el modulo tiene contenido para mostrar
                                $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);

                                //Para mostrar el modulo solo a unos socios
                                if ($r_modulo["IDModulo"] == "2" && $PermiteReservar == "N" && ($id_club != 20 && $id_club != 48)):
                                    $flag_mostrar = 1;
                                endif;

                                // Verificar si es un modulo que se debe revisar permiso
                                if (array_key_exists($r_modulo["IDModulo"], $array_id_mod_esp)) {
                                    if (in_array($IDSocio, $array_id_mod_esp[$r_modulo["IDModulo"]])) {
                                        $flag_mostrar = 0;
                                    } else {
                                        $flag_mostrar = 1;
                                    }

                                } else {
                                    $flag_mostrar = 0;
                                }

                                $datos_modulo = $dbo->fetchAll("Modulo", " IDModulo = '" . $r_modulo["IDModulo"] . "' ", "array");

                                //$flag_mostrar=0;
                                if ($flag_mostrar == 0):
                                    $modulo["IDClub"] = $id_club;
                                    $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                    if (!empty($r_modulo["Titulo"])) {
                                        $modulo["NombreModulo"] = trim($r_modulo["Titulo"]);
                                    } else {
                                        $modulo["NombreModulo"] = $datos_modulo["Nombre"];
                                    }

                                    $modulo["Tipo"] = $datos_modulo["Tipo"];

                                    $modulo["Orden"] = $r_modulo["Orden"];
                                    $icono_modulo = $r_modulo["Icono"];
                                    if (!empty($r_modulo["Icono"])):
                                        $foto = MODULO_ROOT . $r_modulo["Icono"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $modulo["Icono"] = $foto;
                                    $modulo["MostrarBadgeNotificaciones"] = $datos_modulo["MostrarBadgeNotificaciones"];

                                    //Consulto si tiene submodulos
                                    $sql_sub = "Select * From SubModulo Where IDModulo = '" . $r_modulo["IDModulo"] . "' and IDClub = '" . $id_club . "'";
                                    $result_sub = $dbo->query($sql_sub);
                                    if ($dbo->rows($result_sub) > 0):
                                        $modulo["SubModulos"] = "S";
                                    else:
                                        $modulo["SubModulos"] = "";
                                    endif;
                                    //Fin Submodulos

                                    array_push($response_modulo, $modulo);
                                endif;

                            } //ednw while
                        }

                        //Modulos Sistema Menu Lateral

                        unset($modulo);
                        $response_modulo_lateral = array();
                        $sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Lateral%' " . $condicion_modulo . " ORDER BY Orden";
                        $qry_modulo = $dbo->query($sql_modulo);
                        if ($dbo->rows($qry_modulo) > 0) {

                            while ($r_modulo = $dbo->fetchArray($qry_modulo)) {
                                // Verificar si el modulo tiene contenido para mostrar
                                $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);

                                if ($r_modulo["IDModulo"] == "2" && $PermiteReservar == "N" && ($id_club != 20 && $id_club != 48)):
                                    $flag_mostrar = 1;
                                endif;

                                // Verificar si es un modulo que se debe revisar permiso
                                if (array_key_exists($r_modulo["IDModulo"], $array_id_mod_esp)) {
                                    if (in_array($IDSocio, $array_id_mod_esp[$r_modulo["IDModulo"]])) {
                                        $flag_mostrar = 0;
                                    } else {
                                        $flag_mostrar = 1;
                                    }

                                } else {
                                    $flag_mostrar = 0;
                                }

                                $datos_modulo = $dbo->fetchAll("Modulo", " IDModulo = '" . $r_modulo["IDModulo"] . "' ", "array");
                                //$flag_mostrar=0;
                                if ($flag_mostrar == 0):
                                    $modulo["IDClub"] = $id_club;
                                    $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                    //$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
                                    if (!empty($r_modulo["Titulo"])) {
                                        $modulo["NombreModulo"] = trim($r_modulo["TituloLateral"]);
                                    } else {
                                        $modulo["NombreModulo"] = $datos_modulo["Nombre"];
                                    }

                                    $modulo["Orden"] = $r_modulo["Orden"];
                                    $modulo["Tipo"] = $datos_modulo["Tipo"];

                                    $icono_modulo_lateral = $r_modulo["IconoLateral"];
                                    if (!empty($r_modulo["IconoLateral"])):
                                        $foto = MODULO_ROOT . $r_modulo["IconoLateral"];
                                    else:
                                        if (!empty($r_modulo["Icono"])):
                                            $foto = MODULO_ROOT . $r_modulo["Icono"];
                                        else:
                                            $foto = "";
                                        endif;
                                    endif;
                                    $modulo["Icono"] = $foto;
                                    $modulo["MostrarBadgeNotificaciones"] = $datos_modulo["MostrarBadgeNotificaciones"];

                                    //Consulto si tiene submodulos
                                    $sql_sub = "Select * From SubModulo Where IDModulo = '" . $r_modulo["IDModulo"] . "' and IDClub = '" . $id_club . "'";
                                    $result_sub = $dbo->query($sql_sub);
                                    if ($dbo->rows($result_sub) > 0):
                                        $modulo["SubModulos"] = "S";
                                    else:
                                        $modulo["SubModulos"] = "N";
                                    endif;
                                    //Fin Submodulos
                                    array_push($response_modulo_lateral, $modulo);
                                endif;

                            } //ednw while
                        }

                        // Georeferenciacion
                        //Tomo los valores de accesos que debe apolicar para invitados
                        $IDParametroAcceso = $dbo->getFields("ParametroAcceso", "IDParametroAcceso", "IDClub = '" . $id_club . "'");
                        $datos_ParametroAcceso = $dbo->fetchAll("ParametroAcceso", " IDParametroAcceso = '" . $IDParametroAcceso . "' ", "array");
                        $response_georef = array();
                        $georef["Georeferenciacion"] = $datos_ParametroAcceso["Georeferenciacion"];
                        $georef["Latitud"] = $datos_ParametroAcceso["Latitud"];
                        $georef["Longitud"] = $datos_ParametroAcceso["Longitud"];
                        $georef["Rango"] = $datos_ParametroAcceso["Rango"];
                        $georef["MensajeFueraRango"] = $datos_ParametroAcceso["MensajeFueraRango"];
                        $georef["Georeferenciacion"] = $datos_ParametroAcceso["Georeferenciacion"];
                        //array_push($response_georef, $georef);

                        $datos_club["IDClub"] = $r["IDClub"];
                        $datos_club["Nombre"] = $r["Nombre"];
                        $datos_club["Direccion"] = $r["Direccion"];
                        $datos_club["Telefono"] = $r["Telefono"];
                        $datos_club["Email"] = $r["Email"];
                        $datos_club["IDDiseno"] = $r["IDDiseno"];
                        $datos_club["Foto"] = $foto_logo;
                        $datos_club["Foto1"] = $foto1;
                        $datos_club["Foto2"] = $foto2;
                        $datos_club["Color1"] = $r["Color1"];
                        $datos_club["Color2"] = $r["Color2"];
                        $datos_club["ColorFondoCarne"] = $r["ColorFondoCarne"];
                        $datos_club["Banner"] = $response_banner;
                        $datos_club["Terminos"] = $r["Terminos"];
                        $datos_club["SolicitaCambioCorreo"] = $r["SolicitaCambioCorreo"];
                        $datos_club["IDSocio"] = $IDSocio;
                        $datos_club["PermiteReservar"] = $PermiteReservar;

                        //datos IOS Version
                        $datos_club["iosVersion"] = $r["Version"];
                        $datos_club["iosEsencial"] = $r["Esencial"];
                        $datos_club["iosversionMessage"] = $r["VersionMessage"];
                        $datos_club["versionURLiOS"] = $r["VersionURLIOS"];

                        //datos Android Version
                        $datos_club["androidVersion"] = $r["VersionAndroid"];
                        $datos_club["androidEsencial"] = $r["EsencialAndroid"];
                        $datos_club["androidversionMessage"] = $r["VersionMessageAndroid"];
                        $datos_club["versionURLAndroid"] = $r["VersionURLAndroid"];

                        /*
                        $datos_club["Version"] = $r["Version"];
                        $datos_club["Esencial"] = $r["Esencial"];
                        $datos_club["versionMessage"] = $r["VersionMessage"];
                        $datos_club["versionURLiOS"] = $r["VersionURLIOS"];
                        $datos_club["versionURLAndroid"] = $r["VersionURLAndroid"];
                         */

                        $datos_club["ServiciosReserva"] = $response_servicio;
                        $datos_club["Modulos"] = $response_modulo;
                        $datos_club["ModulosLateral"] = $response_modulo_lateral;
                        $datos_club["Georeferenciacion"] = $georef;

                        //Si es club es numero derecho si es Residencial o colegio Numero Doc
                        if (!empty($r["LabelIdentificadorUsuario"])):
                            $IdentificadorUsuario = $r["LabelIdentificadorUsuario"];
                        else:
                            $IdentificadorUsuario = "Numero de derecho";
                        endif;
                        $datos_club["IdentificadorUsuario"] = $IdentificadorUsuario . " ";

                        $datos_club["LabelUsuario"] = $r["LabelUsuario"];
                        $datos_club["LabelClave"] = $r["LabelClave"];
                        $datos_club["LabelDigiteUsuario"] = $r["LabelDigiteUsuario"];
                        $datos_club["LabelDigiteClave"] = $r["LabelDigiteClave"];
                        $datos_club["LabelOlvidoUsuario"] = $r["LabelOlvidoUsuario"];
                        $datos_club["LabelFotoError"] = $r["LabelFotoError"];
                        $datos_club["LabelCodigoHandicap"] = $r["LabelCodigoHandicap"];
                        $datos_club["LabelNombreHandicap"] = $r["LabelNombreHandicap"];
                        $datos_club["AyudaHandicap"] = $r["AyudaHandicap"];
                        $datos_club["InstruccionQr"] = $r["InstruccionQr"];
                        $datos_club["PorcentajeQrAndroid"] = $r["PorcentajeQrAndroid"];
                        $datos_club["PorcentajeQrIOS"] = $r["PorcentajeQrIOS"];
                        $datos_club["MensajeListaEsperaReservas"] = $r["MensajeListaEsperaReservas"];
                        $datos_club["MensajeListaEsperaHotel"] = $r["MensajeListaEsperaHotel"];
                        $datos_club["MensajeAceptacionListaEsperaReservas"] = $r["MensajeAceptacionListaEsperaReservas"];
                        $datos_club["MensajeAceptacionListaEsperaHotel"] = $r["MensajeAceptacionListaEsperaHotel"];
                        $datos_club["PermiteListaEsperaHotel"] = $r["PermiteListaEsperaHotel"];
                        $datos_club["PermiteSMS"] = $r["PermiteSMS"];
                        $datos_club["PermiteOtroValorHotel"] = $r["PermiteOtroValorHotel"];
                        $datos_club["PermiteMisEventos"] = $r["PermiteMisEventos"];
                        $datos_club["CampoObservacionContratista"] = $r["CampoObservacionContratista"];
                        $datos_club["ColorFondoEvento"] = $r["ColorFondoEvento"];
                        $datos_club["EventoLista"] = $r["EventoLista"];
                        $datos_club["BuscadorFechaEvento"] = $r["BuscadorFechaEvento"];
                        $datos_club["LabelTerminos"] = $r["LabelTerminos"];
                        $datos_club["TipoTerminos"] = $r["TipoTerminos"];
                        $datos_club["ArchivoTerminos"] = CLUB_ROOT . $r["ArchivoTerminos"];
                        $datos_club["LabelInvitacion"] = $r["LabelInvitacion"];
                        $datos_club["CheckSeguridadSocial"] = $r["CheckSeguridadSocial"];
                        $datos_club["LabelSeguridadSocial"] = $r["LabelSeguridadSocial"];
                        $datos_club["Presalida"] = $r["Presalida"];
                        $datos_club["TiempoSplash"] = $r["TiempoSplash"];
                        $datos_club["TipoCeldaEvento"] = $r["TipoCeldaEvento"];
                        $datos_club["TipoFiltroEvento"] = $r["TipoFiltroEvento"];
                        $datos_club["LabelCambioSegundaClave"] = $r["LabelCambioSegundaClave"];
                        $datos_club["LabelPlaca"] = (empty($r["LabelPlaca"])) ? 'Placa' : $r["LabelPlaca"];
                        $datos_club["LabelPresalida"] = (empty($r["LabelPresalida"])) ? 'Numero Documento' : $r["LabelPresalida"];
                        $datos_club["LabelFelicitacion"] = utf8_encode($r["LabelFelicitacion"]);
                        $datos_club["LabelCalificacion"] = $r["LabelCalificacion"];
                        $datos_club["LabelComentarioFelicitacion"] = $r["LabelComentarioFelicitacion"];
                        $datos_club["ObligatorioComentarioCalificar"] = $r["ObligatorioComentarioCalificar"];
                        $datos_club["ObligatorioComentarioCalificar"] = $r["ObligatorioComentarioCalificar"];
                        $datos_club["LabelBotonEventos"] = $r["LabelBotonEventos"];
                        $datos_club["LabelVerMisReservas"] = $r["LabelVerMisReservas"];
                        $datos_club["LabelAcercaDe"] = $r["LabelAcercaDe"];
                        $datos_club["SolicitaEditarPerfil"] = $datos_socio["SolicitaEditarPerfil"];
                        $datos_club["FechaInicioEditarPerfil"] = $r["FechaInicioEditarPerfil"];
                        $datos_club["SolicitaEditarPefilLabel"] = $r["SolicitaEditarPefilLabel"];
                        $datos_club["OcultarOlvideMiUsuario"] = $r["OcultarOlvideMiUsuario"];

                        $SegundaClave = $dbo->getFields("Socio", "SegundaClave", "IDSocio = '" . $IDSocio . "'");
                        if (empty($SegundaClave) && $r["ManejoSegundaClave"] == "S") {
                            $crearsegundaclave = "S";
                        } else {
                            $crearsegundaclave = "N";
                        }

                        $datos_club["CrearSegundaClave"] = $crearsegundaclave;

                        $datos_club["IDClubPadre"] = $r["IDClubPadre"];

                        //Servicios Reservas
                        $response_club_hijo = array();
                        $sql_club_hijo = "SELECT * FROM Club WHERE IDClubPadre = '" . $id_club . "' ORDER BY Nombre";
                        $qry_club_hijo = $dbo->query($sql_club_hijo);
                        if ($dbo->rows($qry_club_hijo) > 0) {
                            while ($r_club_hijo = $dbo->fetchArray($qry_club_hijo)) {
                                $club_hijo["IDClub"] = $r_club_hijo["IDClub"];
                                $club_hijo["Nombre"] = $r_club_hijo["Nombre"];

                                array_push($response_club_hijo, $club_hijo);

                            } //ednw while
                        }
                        $datos_club["IDClubHijos"] = $response_club_hijo;

                        //Encuestas al abrir app
                        $encuesta_activa = 0;
                        $response_encuesta = array();
                        $sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'S' or DirigidoA = 'T')  ORDER BY Orden ";
                        $qry_encuesta = $dbo->query($sql_encuesta);
                        if ($dbo->rows($qry_encuesta) > 0) {
                            while ($r_encuesta = $dbo->fetchArray($qry_encuesta)) {
                                $mostrar_encuesta = 0;
                                //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                if ($r_encuesta["UnaporSocio"] == "S") {
                                    $sql_resp = "Select IDEncuesta From EncuestaRespuesta Where IDSocio = '" . $IDSocio . "' and IDEncuesta = '" . $r_encuesta["IDEncuesta"] . "' Limit 1";
                                    $r_resp = $dbo->query($sql_resp);
                                    if ($dbo->rows($r_resp) <= 0) {
                                        $mostrar_encuesta = 1;
                                    }
                                } else {
                                    $mostrar_encuesta = 1;
                                }
                                //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                $permiso_encuesta = SIMWebServiceApp::verifica_ver_encuesta($r_encuesta, $IDSocio);
                                //$permiso_encuesta=1;

                                if ($mostrar_encuesta == 1 && $permiso_encuesta == 1) {
                                    $encuesta["IDClub"] = $r_encuesta["IDClub"];
                                    $encuesta["IDEncuesta"] = $r_encuesta["IDEncuesta"];
                                    $encuesta["Nombre"] = $r_encuesta["Nombre"];
                                    $encuesta["Descripcion"] = $r_encuesta["Descripcion"];
                                    if (!empty($r_encuesta["Imagen"])):
                                        $foto = BANNERAPP_ROOT . $r_encuesta["Imagen"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $encuesta["ImagenEncuesta"] = $foto;
                                    $encuesta_activa = 1;

                                    array_push($response_encuesta, $encuesta);
                                }

                            } //ednw while
                        }
                        //FIN Encuestas al abrir app
                        $datos_club["Encuesta"] = $response_encuesta;
                        $datos_club["LabelEncuesta"] = $r["LabelEncuesta"];

                        //Encuestas2 de calificacion al abrir app
                        $encuesta_activa = 0;
                        $response_encuesta = array();
                        $sql_encuesta = "SELECT * FROM Encuesta2 WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'S' or DirigidoA = 'T')  ORDER BY Orden ";
                        $qry_encuesta = $dbo->query($sql_encuesta);
                        if ($dbo->rows($qry_encuesta) > 0) {
                            while ($r_encuesta = $dbo->fetchArray($qry_encuesta)) {
                                $mostrar_encuesta = 0;
                                //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                if ($r_encuesta["UnaporSocio"] == "S") {
                                    $sql_resp = "Select IDEncuesta2 From Encuesta2Respuesta Where IDSocio = '" . $IDSocio . "' and IDEncuesta2 = '" . $r_encuesta["IDEncuesta2"] . "' Limit 1";
                                    $r_resp = $dbo->query($sql_resp);
                                    if ($dbo->rows($r_resp) <= 0) {
                                        $mostrar_encuesta = 1;
                                    }
                                } else {
                                    $mostrar_encuesta = 1;
                                }
                                //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                $permiso_encuesta = SIMWebServiceApp::verifica_ver_encuesta2($r_encuesta, $IDSocio);
                                //$permiso_encuesta=1;

                                if ($mostrar_encuesta == 1 && $permiso_encuesta == 1) {
                                    $encuesta["IDClub"] = $r_encuesta["IDClub"];
                                    $encuesta["IDEncuesta"] = $r_encuesta["IDEncuesta"];
                                    $encuesta["Nombre"] = $r_encuesta["Nombre"];
                                    $encuesta["Descripcion"] = $r_encuesta["Descripcion"];
                                    if (!empty($r_encuesta["Imagen"])):
                                        $foto = BANNERAPP_ROOT . $r_encuesta["Imagen"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $encuesta["ImagenEncuesta"] = $foto;
                                    $encuesta_activa = 1;

                                    array_push($response_encuesta, $encuesta);
                                }

                            } //ednw while
                        }
                        //FIN Encuestas al abrir app
                        $datos_club["EncuestaCalificada"] = $response_encuesta;
                        $datos_club["LabelEncuestaCalificada"] = $r["LabelEncuesta2"];

                        //Autodisagnostico al abrir app
                        $diagnostico_activa = 0;
                        $response_diagnostico = array();
                        $sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'S' or DirigidoA = 'T')  ORDER BY Orden ";
                        $qry_diagnostico = $dbo->query($sql_diagnostico);
                        if ($dbo->rows($qry_diagnostico) > 0) {
                            while ($r_diagnostico = $dbo->fetchArray($qry_diagnostico)) {
                                $mostrar_disgnostico = 0;
                                //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                if ($r_diagnostico["UnaporSocio"] == "S") {
                                    $sql_resp = "Select IDDiagnostico From DiagnosticoRespuesta Where IDSocio = '" . $IDSocio . "' and IDDiagnostico = '" . $r_diagnostico["IDDiagnostico"] . "' Limit 1";
                                    $r_resp = $dbo->query($sql_resp);
                                    if ($dbo->rows($r_resp) <= 0) {
                                        $mostrar_disgnostico = 1;
                                    }
                                } else {
                                    $mostrar_disgnostico = 1;
                                }
                                //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                $permiso_diagnostico = SIMWebServiceApp::verifica_ver_diagnostico($r_diagnostico, $IDSocio, $IDUsuario);
                                //$permiso_encuesta=1;

                                if ($mostrar_disgnostico == 1 && $permiso_diagnostico == 1) {
                                    $diagnostico["IDClub"] = $r_diagnostico["IDClub"];
                                    $diagnostico["IDDiagnostico"] = $r_diagnostico["IDDiagnostico"];
                                    $diagnostico["Nombre"] = $r_diagnostico["Nombre"];
                                    $diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
                                    if (!empty($r_diagnostico["Imagen"])):
                                        $foto = BANNERAPP_ROOT . $r_diagnostico["Imagen"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $diagnostico["ImagenDiagnostico"] = $foto;
                                    $diagnostico_activa = 1;

                                    array_push($response_diagnostico, $diagnostico);
                                }

                            } //ednw while
                        }
                        //FIN Encuestas al abrir app
                        $datos_club["Diagnostico"] = $response_diagnostico;
                        $datos_club["LabelDiagnostico"] = $r["LabelDiagnostico"];

                        // Se valida que no haya una encuesta activa destacada para asi mostrar la votacion
                        if ($encuesta_activa == 0) {
                            $response_votacion = array();
                            $sql_votacion = "SELECT * FROM Votacion WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S'  ORDER BY Orden ";
                            $qry_votacion = $dbo->query($sql_votacion);
                            if ($dbo->rows($qry_votacion) > 0) {
                                while ($r_votacion = $dbo->fetchArray($qry_votacion)) {
                                    $mostrar_votacion = 0;
                                    //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                    if ($r_votacion["UnaporSocio"] == "S") {
                                        $sql_resp = "Select IDVotacion From VotacionRespuesta Where IDSocio = '" . $IDSocio . "' and IDVotacion = '" . $r_encuesta["IDVotacion"] . "' Limit 1";
                                        $r_resp = $dbo->query($sql_resp);
                                        if ($dbo->rows($r_resp) <= 0) {
                                            $mostrar_votacion = 1;
                                        }
                                    } else {
                                        $mostrar_votacion = 1;
                                    }
                                    //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                    $permiso_votacion = SIMWebServiceApp::verifica_ver_votacion($r_votacion, $IDSocio, $IDUsuario);
                                    //$permiso_votacion=1;

                                    if ($mostrar_votacion == 1 && $permiso_votacion == 1) {
                                        $votacion["IDClub"] = $r_votacion["IDClub"];
                                        $votacion["IDVotacion"] = $r_votacion["IDVotacion"];
                                        $votacion["Nombre"] = $r_votacion["Nombre"];
                                        $votacion["Descripcion"] = $r_votacion["Descripcion"];
                                        if (!empty($r_votacion["Imagen"])):
                                            $foto = BANNERAPP_ROOT . $r_votacion["Imagen"];
                                        else:
                                            $foto = "";
                                        endif;
                                        $votacion["ImagenVotacion"] = $foto;
                                        array_push($response_votacion, $votacion);
                                    }

                                } //ednw while
                            }
                            //FIN Encuestas al abrir app
                            $datos_club["Votacion"] = $response_votacion;
                            $datos_club["LabelVotacion"] = $r["LabelVotacion"];

                        }

                        //Movilidad al abrir app
                        $diagnostico_activa = 0;
                        $response_diagnostico = array();
                        $sql_diagnostico = "SELECT * FROM EncuestaArbol WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'S' or DirigidoA = 'T')  ORDER BY Orden ";
                        $qry_diagnostico = $dbo->query($sql_diagnostico);
                        if ($dbo->rows($qry_diagnostico) > 0) {
                            while ($r_diagnostico = $dbo->fetchArray($qry_diagnostico)) {
                                $mostrar_disgnostico = 0;
                                //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                if ($r_diagnostico["UnaporSocio"] == "S") {
                                    $sql_resp = "Select IDEncuestaArbol From EncuestaArbolRespuesta Where IDSocio = '" . $IDSocio . "' and IDEncuestaArbol = '" . $r_diagnostico["IDEncuestaArbol"] . "' Limit 1";
                                    $r_resp = $dbo->query($sql_resp);
                                    if ($dbo->rows($r_resp) <= 0) {
                                        $mostrar_disgnostico = 1;
                                    }
                                } else {
                                    $mostrar_disgnostico = 1;
                                }
                                //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                //require( LIBDIR . "SIMWebServiceEncuestaArbol.inc.php" );
                                //$permiso_diagnostico=SIMWebServiceEncuestaArbol::verifica_ver_EncuestaArbol($r_diagnostico,$IDSocio,$IDUsuario);
                                //$permiso_encuesta=1;

                                if ($mostrar_disgnostico == 1 && $permiso_diagnostico == 1) {
                                    $diagnostico["IDClub"] = $r_diagnostico["IDClub"];
                                    $diagnostico["IDMovilidad"] = $r_diagnostico["IDEncuestaArbol"];
                                    $diagnostico["Nombre"] = $r_diagnostico["Nombre"];
                                    $diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
                                    if (!empty($r_diagnostico["Imagen"])):
                                        $foto = BANNERAPP_ROOT . $r_diagnostico["Imagen"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $diagnostico["ImagenDiagnostico"] = $foto;
                                    $diagnostico_activa = 1;

                                    array_push($response_diagnostico, $diagnostico);
                                }

                            } //ednw while
                        }
                        //FIN Encuestas al abrir app
                        $datos_club["Movilidad"] = $response_diagnostico;
                        $datos_club["LabelMovilidad"] = $r["LabelMovilidad"];

                        //Tipo de header de app
                        if (empty($r["TipoHeaderApp"])):
                            $datos_club["TipoHeaderApp"] = "Clasico";
                            $datos_club["TiempoPublicidadHeader"] = "0";
                        else:
                            $datos_club["TipoHeaderApp"] = $r["TipoHeaderApp"];
                            $datos_club["TiempoPublicidadHeader"] = $r["TiempoPublicidadHeader"];
                        endif;

                        array_push($response, $datos_club);

                    } //ednw hile

                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;

                } //End if
            else {
                    $respuesta["message"] = "No se ha encontrado club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

                return $respuesta;

        } // fin function

        public function get_app_empleado($id_club, $IDUsuario = "")
    {

            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM AppEmpleado WHERE IDClub = '" . $id_club . "'";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                $datos_club_soc = $dbo->fetchAll("Club", " IDClub = '" . $id_club . "' ", "array");
                while ($r = $dbo->fetchArray($qry)) {
                    if (!empty($r["FotoLogoApp"])) {
                        $foto_logo = CLUB_ROOT . $r["FotoLogoApp"];
                    }
                    if (!empty($r["FotoDiseno1"])) {
                        $foto1 = CLUB_ROOT . $r["FotoDiseno1"];
                    }
                    if (!empty($r["FotoDiseno2"])) {
                        $foto2 = CLUB_ROOT . $r["FotoDiseno2"];
                    }

                    //Banners
                    $response_banner = array();
                    $sql_banner = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY IDBannerApp";
                    $qry_banner = $dbo->query($sql_banner);
                    if ($dbo->rows($qry_banner) > 0) {

                        while ($r_banner = $dbo->fetchArray($qry_banner)) {
                            $banner["IDClub"] = $id_club;
                            $banner["IDBannerApp"] = $r_banner["IDBannerApp"];
                            if (!empty($r_banner["Foto1"])):
                                $foto = BANNERAPP_ROOT . $r_banner["Foto1"];
                            else:
                                $foto = "";
                            endif;
                            $banner["Foto"] = $foto;
                            array_push($response_banner, $banner);

                        } //ednw hile
                    }

                    // Georeferenciacion
                    //Tomo los valores de accesos que debe apolicar para invitados
                    $IDParametroAcceso = $dbo->getFields("ParametroAcceso", "IDParametroAcceso", "IDClub = '" . $id_club . "'");
                    $datos_ParametroAcceso = $dbo->fetchAll("ParametroAcceso", " IDParametroAcceso = '" . $IDParametroAcceso . "' ", "array");
                    $response_georef = array();
                    $georef["Georeferenciacion"] = $datos_ParametroAcceso["Georeferenciacion"];
                    $georef["Latitud"] = $datos_ParametroAcceso["Latitud"];
                    $georef["Longitud"] = $datos_ParametroAcceso["Longitud"];
                    $georef["Rango"] = $datos_ParametroAcceso["Rango"];
                    $georef["MensajeFueraRango"] = $datos_ParametroAcceso["MensajeFueraRango"];
                    $georef["Georeferenciacion"] = $datos_ParametroAcceso["Georeferenciacion"];
                    //array_push($response_georef, $georef);

                    $datos_club["IDClub"] = $r["IDClub"];
                    $datos_club["Telefono"] = $datos_club_soc["Telefono"];
                    $datos_club["Foto"] = $foto_logo;
                    $datos_club["Foto1"] = $foto1;
                    $datos_club["Foto2"] = $foto2;
                    $datos_club["Color1"] = $r["Color1"];
                    $datos_club["Color2"] = $r["Color2"];
                    $datos_club["Banner"] = $response_banner;
                    $datos_club["Terminos"] = $r["TerminosEmpleados"];
                    $datos_club["PermiteInvitacionPortero"] = $r["PermiteInvitacionPortero"];

                    //datos IOS Version
                    $datos_club["iosVersion"] = $r["Version"];
                    $datos_club["iosEsencial"] = $r["Esencial"];
                    $datos_club["iosversionMessage"] = $r["VersionMessage"];
                    $datos_club["versionURLiOS"] = $r["VersionURLIOS"];

                    //datos Android Version
                    $datos_club["androidVersion"] = $r["VersionAndroid"];
                    $datos_club["androidEsencial"] = $r["EsencialAndroid"];
                    $datos_club["androidversionMessage"] = $r["VersionMessageAndroid"];
                    $datos_club["versionURLAndroid"] = $r["VersionURLAndroid"];

                    $datos_club["Georeferenciacion"] = $georef;

                    $datos_club["LabelTerminos"] = $r["LabelTerminos"];
                    $datos_club["TipoTerminos"] = $r["TipoTerminos"];
                    $datos_club["ArchivoTerminos"] = CLUB_ROOT . $r["ArchivoTerminos"];
                    $datos_club["LabelInvitacion"] = $r["LabelInvitacion"];
                    $datos_club["PorcentajeQrAndroid"] = $r["PorcentajeQrAndroid"];
                    $datos_club["PorcentajeQrIOS"] = $r["PorcentajeQrIOS"];

                    if (!empty($r["OpcionesIngreso"])) {
                        $datos_club["OpcionesTipoIngreso"] = "S";
                    } else {
                        $datos_club["OpcionesTipoIngreso"] = "N";
                    }

                    $datos_club["OpcionesIngreso"] = $r["OpcionesIngreso"];

                    //Tipo de header de app
                    if (empty($r["TipoHeaderApp"])):
                        $datos_club["TipoHeaderApp"] = "Clasico";
                        $datos_club["TiempoPublicidadHeader"] = "0";
                    else:
                        $datos_club["TipoHeaderApp"] = $r["TipoHeaderApp"];
                        $datos_club["TiempoPublicidadHeader"] = $r["TiempoPublicidadHeader"];
                    endif;

                    //Otros datos Usuario
                    $datos_usuario = $dbo->fetchAll("Usuario", " IDUsuario = '" . $IDUsuario . "' ", "array");

                    $CerrarSesion = $datos_usuario["SolicitarCierreSesion"];
                    if ($CerrarSesion == "S") {
                        $condicion_modulo = " and IDModulo = 14 "; //cerrar sesion
                    }

                    //Modulos Sistema Menu Central
                    $response_modulo = array();
                    $sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Central%' " . $condicion_modulo . " ORDER BY Orden";
                    $qry_modulo = $dbo->query($sql_modulo);
                    if ($dbo->rows($qry_modulo) > 0) {
                        while ($r_modulo = $dbo->fetchArray($qry_modulo)) {

                            $agregar_modulo = SIMWebServiceApp::verifica_permiso_modulo($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

                            if ($agregar_modulo == "S"):
                                // Verificar si el modulo tiene contenido para mostrar
                                $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
                                //$flag_mostrar=0;
                                if ($flag_mostrar == 0):
                                    $modulo["IDClub"] = $id_club;
                                    $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                    if (!empty($r_modulo["Titulo"])) {
                                        $modulo["NombreModulo"] = trim($r_modulo["Titulo"]);
                                    } else {
                                        $modulo["NombreModulo"] = trim($dbo->getFields("Modulo", "Nombre", "IDModulo = '" . $r_modulo["IDModulo"] . "'"));
                                    }

                                    $modulo["Orden"] = $r_modulo["Orden"];
                                    $icono_modulo = $r_modulo["Icono"];
                                    if (!empty($r_modulo["Icono"])):
                                        $foto = MODULO_ROOT . $r_modulo["Icono"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $modulo["Icono"] = $foto;
                                    array_push($response_modulo, $modulo);
                                endif;
                            endif;

                        } //ednw while
                    }

                    //Modulos Sistema Menu Lateral
                    unset($modulo);
                    $response_modulo_lateral = array();
                    $sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Lateral%' " . $condicion_modulo . " ORDER BY Orden";
                    $qry_modulo = $dbo->query($sql_modulo);
                    if ($dbo->rows($qry_modulo) > 0) {

                        while ($r_modulo = $dbo->fetchArray($qry_modulo)) {
                            $agregar_modulo = SIMWebServiceApp::verifica_permiso_modulo($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

                            if ($agregar_modulo == "S"):
                                // Verificar si el modulo tiene contenido para mostrar
                                $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
                                //$flag_mostrar=0;
                                if ($flag_mostrar == 0):
                                    $modulo["IDClub"] = $id_club;
                                    $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                    //$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
                                    if (!empty($r_modulo["TituloLateral"])) {
                                        $modulo["NombreModulo"] = trim($r_modulo["TituloLateral"]);
                                    } else {
                                        $modulo["NombreModulo"] = trim($dbo->getFields("Modulo", "Nombre", "IDModulo = '" . $r_modulo["IDModulo"] . "'"));
                                    }

                                    $modulo["Orden"] = $r_modulo["Orden"];
                                    $icono_modulo = $r_modulo["Icono"];
                                    if (!empty($r_modulo["Icono"])):
                                        $foto = MODULO_ROOT . $r_modulo["Icono"];
                                    else:
                                        $foto = "";
                                    endif;
                                    $modulo["Icono"] = $foto;
                                    array_push($response_modulo_lateral, $modulo);
                                endif;
                            endif;

                        } //ednw while
                    }

                    //traer servicios del usuario
                    $response_servicio = array();
                    $sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $IDUsuario . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
                    $qry_servicios = $dbo->query($sql_servicios);
                    while ($r_servicio = $dbo->fetchArray($qry_servicios)) {
                        $servicio["IDClub"] = $id_club;
                        $servicio["IDServicio"] = $r_servicio["IDServicio"];
                        $servicio["NombreServicio"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' ");
                        if (!empty($r_servicio["Icono"])):
                            $foto = SERVICIO_ROOT . $r_servicio["Icono"];
                        else:
                            $foto = "";
                        endif;

                        $servicio["Icono"] = $foto;
                        //$servicio["ServicioInicial"] = $dbo->getFields( "ServicioInicial" , "Nombre" , "IDServicioInicial = '".$r_servicio["IDServicioInicial"]."'" );
                        array_push($response_servicio, $servicio);

                    } //end while

                    $tipo_codigo_carne = $dbo->getFields("AppEmpleado", "TipoCodigoCarne", "IDClub = '" . $id_club . "'");
                    switch ($tipo_codigo_carne) {
                        case "Barras":
                            if (!empty($datos_usuario["CodigoBarras"])) {
                                $foto_cod_barras = USUARIO_ROOT . $datos_usuario["CodigoBarras"];
                            }
                            break;
                        case "QR":
                            if (!empty($datos_usuario["CodigoQR"])) {
                                $foto_cod_barras = USUARIO_ROOT . "qr/" . $datos_usuario["CodigoQR"];
                            }
                            break;
                        default:
                            $foto_cod_barras = "";
                    }

                    if (!empty($datos_usuario["Foto"])) {
                        $foto_empleado = USUARIO_ROOT . $datos_usuario["Foto"];
                    }

                    $datos_club["IDUsuario"] = $datos_usuario["IDUsuario"];
                    $datos_club["IDPerfil"] = $datos_usuario["IDPerfil"];
                    $respdatos_clubonse["Nombre"] = $datos_usuario["Nombre"];
                    $datos_club["Autorizado"] = $datos_usuario["Autorizado"];
                    $datos_club["Nivel"] = $datos_usuario["Nivel"];
                    $datos_club["Permiso"] = $datos_usuario["Permiso"];
                    $datos_club["ServiciosReserva"] = $response_servicio;
                    $datos_club["Modulos"] = $response_modulo;
                    $datos_club["ModulosLateral"] = $response_modulo_lateral;
                    $datos_club["CodigoBarras"] = $foto_cod_barras;
                    $datos_club["Dispositivo"] = $datos_usuario["Dispositivo"];
                    $resdatos_clubponse["Token"] = $datos_usuario["Token"];
                    //$response["NumeroDerecho"] = $datos_usuario["CodigoUsuario"];
                    $datos_club["NumeroDerecho"] = "";
                    //Consulto si el app esta configurado para permitir se puede cambiar p[ara que sea por usuario
                    $datos_club["PermiteInvitacionPortero"] = $dbo->getFields("AppEmpleado", "PermiteInvitacionPortero", "IDClub = '" . $id_club . "'");
                    //Consulto las areas
                    $sql_area_usuario = "Select * From UsuarioArea Where IDUsuario = '" . $datos_usuario["IDUsuario"] . "'";
                    $result_area_usuario = $dbo->query($sql_area_usuario);
                    while ($row_area = $dbo->fetchArray($result_area_usuario)):
                        $nombre_area = utf8_encode($dbo->getFields("Area", "Nombre", "IDArea = '" . $row_area["IDArea"] . "'"));
                        $array_areas[] = $nombre_area;
                    endwhile;
                    if (count($array_areas) > 0):
                        $nombre_areas = implode(",", $array_areas);
                    endif;

                    $nombre_areas = "";
                    $datos_club["Area"] = $nombre_areas;
                    $datos_club["Cargo"] = utf8_encode($datos_usuario["Cargo"]);
                    $datos_club["Codigo"] = $datos_usuario["CodigoUsuario"];
                    $datos_club["PermiteReservar"] = $datos_usuario["PermiteReservar"];
                    $datos_club["SolicitaEditarPerfil"] = $datos_usuario["SolicitaEditarPerfil"];
                    $datos_club["Activo"] = $datos_usuario["Activo"];
                    //$datos_club["Foto"] = $foto_empleado;
                    $datos_club["TipoUsuario"] = "Empleado";

                    //Fin otros datos usuario

                    //Encuestas al abrir app
                    $encuesta_activa = 0;
                    $response_encuesta = array();
                    $sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
                    $qry_encuesta = $dbo->query($sql_encuesta);
                    if ($dbo->rows($qry_encuesta) > 0) {
                        while ($r_encuesta = $dbo->fetchArray($qry_encuesta)) {
                            $mostrar_encuesta = 0;
                            //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                            if ($r_encuesta["UnaporSocio"] == "S") {
                                $sql_resp = "Select IDEncuesta From EncuestaRespuesta Where IDSocio = '" . $datos_usuario["IDUsuario"] . "' and IDEncuesta = '" . $r_encuesta["IDEncuesta"] . "' Limit 1";
                                $r_resp = $dbo->query($sql_resp);
                                if ($dbo->rows($r_resp) <= 0) {
                                    $mostrar_encuesta = 1;
                                }
                            } else {
                                $mostrar_encuesta = 1;
                            }
                            //Verifico si la encuesta es solo para algunos socios para mostrar o no
                            //$permiso_encuesta=SIMWebServiceApp::verifica_ver_encuesta($r_encuesta,$IDSocio);
                            $permiso_encuesta = 1;

                            if ($mostrar_encuesta == 1 && $permiso_encuesta == 1) {
                                $encuesta["IDClub"] = $r_encuesta["IDClub"];
                                $encuesta["IDEncuesta"] = $r_encuesta["IDEncuesta"];
                                $encuesta["Nombre"] = $r_encuesta["Nombre"];
                                $encuesta["Descripcion"] = $r_encuesta["Descripcion"];
                                if (!empty($r_encuesta["Imagen"])):
                                    $foto = BANNERAPP_ROOT . $r_encuesta["Imagen"];
                                else:
                                    $foto = "";
                                endif;
                                $encuesta["ImagenEncuesta"] = $foto;
                                $encuesta_activa = 1;

                                array_push($response_encuesta, $encuesta);
                            }

                        } //ednw while
                    }
                    //FIN Encuestas al abrir app
                    $datos_club["Encuesta"] = $response_encuesta;
                    $datos_club["LabelEncuesta"] = "Encuesta";

                    //Autodisagnostico al abrir app
                    $diagnostico_activa = 0;
                    $response_diagnostico = array();
                    $sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
                    $qry_diagnostico = $dbo->query($sql_diagnostico);
                    if ($dbo->rows($qry_diagnostico) > 0) {
                        while ($r_diagnostico = $dbo->fetchArray($qry_diagnostico)) {
                            $mostrar_disgnostico = 0;
                            //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                            if ($r_diagnostico["UnaporSocio"] == "S") {
                                $sql_resp = "Select IDDiagnostico From DiagnosticoRespuesta Where IDSocio = '" . $IDSocio . "' and IDDiagnostico = '" . $r_diagnostico["IDDiagnostico"] . "' Limit 1";
                                $r_resp = $dbo->query($sql_resp);
                                if ($dbo->rows($r_resp) <= 0) {
                                    $mostrar_disgnostico = 1;
                                }
                            } else {
                                $mostrar_disgnostico = 1;
                            }
                            //Verifico si la encuesta es solo para algunos socios para mostrar o no
                            $permiso_diagnostico = SIMWebServiceApp::verifica_ver_diagnostico($r_diagnostico, $IDSocio, $IDUsuario);
                            //$permiso_encuesta=1;

                            if ($mostrar_disgnostico == 1 && $permiso_diagnostico == 1) {
                                $diagnostico["IDClub"] = $r_diagnostico["IDClub"];
                                $diagnostico["IDDiagnostico"] = $r_diagnostico["IDDiagnostico"];
                                $diagnostico["Nombre"] = $r_diagnostico["Nombre"];
                                $diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
                                if (!empty($r_diagnostico["Imagen"])):
                                    $foto = BANNERAPP_ROOT . $r_diagnostico["Imagen"];
                                else:
                                    $foto = "";
                                endif;
                                $diagnostico["ImagenDiagnostico"] = $foto;
                                $diagnostico_activa = 1;

                                array_push($response_diagnostico, $diagnostico);
                            }

                        } //ednw while
                    }
                    //FIN Encuestas al abrir app
                    $datos_club["Diagnostico"] = $response_diagnostico;
                    $datos_club["LabelDiagnostico"] = $r["LabelDiagnostico"];

                    array_push($response, $datos_club);

                } //ednw hile

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_parametro_acceso($id_club)
    {

            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM ParametroAcceso WHERE IDClub = '" . $id_club . "'";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    if (!empty($r["IconoFamiliar"])) {
                        $foto_familiar = CLUB_ROOT . $r["IconoFamiliar"];
                    }
                    if (!empty($r["IconoIndividual"])) {
                        $foto_individual = CLUB_ROOT . $r["IconoIndividual"];
                    }

                    //Tipo Invitado
                    $response_tipo_invitado = array();
                    $array_tipo_invitado = explode("|", $r["TipoInvitado"]);
                    if (count($array_tipo_invitado) > 0):
                        foreach ($array_tipo_invitado as $nombre_tipo):
                            $dato_tipo_invitado[] = $nombre_tipo;
                            array_push($response_tipo_invitado, $nombre_tipo);
                        endforeach;
                    endif;

                    //Tipo Autorizacion
                    $response_tipo_autorizacion = array();
                    $array_tipo_autorizacion = explode("|", $r["TipoAutorizacion"]);
                    if (count($array_tipo_autorizacion) > 0):
                        foreach ($array_tipo_autorizacion as $nombre_tipo):
                            $dato_tipo_autorizacion[] = $nombre_tipo;
                            array_push($response_tipo_autorizacion, $nombre_tipo);
                        endforeach;
                    endif;

                    //Tipo Documentos
                    $response_tipodoc = array();
                    $sql_tipodoc = "SELECT * FROM TipoDocumento WHERE Publicar = 'S' ORDER BY Nombre";
                    $qry_tipodoc = $dbo->query($sql_tipodoc);
                    if ($dbo->rows($qry_tipodoc) > 0) {
                        while ($r_tipodoc = $dbo->fetchArray($qry_tipodoc)) {
                            $tipodoc["IDTipoDocumento"] = (int) $r_tipodoc["IDTipoDocumento"];
                            $tipodoc["Nombre"] = $r_tipodoc["Nombre"];
                            array_push($response_tipodoc, $tipodoc);

                        } //ednw hile
                    }

                    // Georeferenciacion
                    $response_georef = array();
                    $georef["Georeferenciacion"] = $r["Georeferenciacion"];
                    $georef["Latitud"] = $r["Latitud"];
                    $georef["Longitud"] = $r["Longitud"];
                    $georef["Rango"] = $r["Rango"];
                    $georef["MensajeFueraRango"] = $r["MensajeFueraRango"];
                    //array_push($response_georef, $georef);

                    // Georeferenciacion
                    $response_georef_contratista = array();
                    $georef_contratista["Georeferenciacion"] = $r["GeoreferenciacionContratista"];
                    $georef_contratista["Latitud"] = $r["LatitudContratista"];
                    $georef_contratista["Longitud"] = $r["LongitudContratista"];
                    $georef_contratista["Rango"] = $r["Rango"];
                    $georef_contratista["MensajeFueraRango"] = $r["MensajeFueraRangoContratista"];
                    //array_push($response_georef, $georef);

                    $datos_acceso["IDClub"] = $r["IDClub"];
                    $datos_acceso["GrupoFamiliar"] = $r["GrupoFamiliar"];
                    $datos_acceso["IconoFamiliar"] = $foto_familiar;
                    $datos_acceso["NombreFamiliar"] = $r["NombreFamiliar"];
                    $datos_acceso["Invitado"] = $r["Invitado"];
                    $datos_acceso["IconoIndividual"] = $foto_individual;
                    $datos_acceso["NombreIndividual"] = $r["NombreIndividual"];
                    $datos_acceso["TipoInvitado"] = $response_tipo_invitado;
                    $datos_acceso["TipoAutorizacion"] = $response_tipo_autorizacion;
                    $datos_acceso["TipoDocumento"] = $response_tipodoc;
                    $datos_acceso["TextoMenorEdad"] = $r["TextoMenorEdad"];
                    $datos_acceso["GeoreferenciacionInvitado"] = $georef;
                    $datos_acceso["GeoreferenciacionContratista"] = $georef_contratista;

                    array_push($response, $datos_acceso);

                } //ednw hile

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_seccion($id_club, $id_socio = "", $id_usuario = "", $TipoApp = "", $Version = "")
    {
            if (!empty($id_socio)):
                //$condicion = " and SS.IDSeccion = S.IDSeccion and IDSocio = '" . $id_socio . "' ";
                //$tabla_join = ", SocioSeccion".$Version." SS ";
            endif;

            $dbo = &SIMDB::get();
            $response = array();

            $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'");
            if ($id_club == 36 && $TipoSocio == "Estudiante") {
                $condicion_noticia .= " and TipoSocio = 'Estudiante'";
            } else {
                $condicion_noticia .= " and TipoSocio <> 'Estudiante'";
            }

            if ($TipoApp == "Socio") {
                $condicion_seccion .= " and (DirigidoA = 'S' or DirigidoA = 'T') ";
            } else {
                $condicion_seccion .= " and (DirigidoA = 'E' or DirigidoA = 'T') ";
            }

            $sql = "SELECT S.* FROM Seccion" . $Version . " S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " " . $condicion_seccion . " ORDER BY Orden";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    // verifico que la seccion tenga por lo menos una noticia publicada
                    $id_noticia = $dbo->getFields("Noticia" . $Version, "IDNoticia", "IDSeccion = '" . $r["IDSeccion"] . "' and Publicar = 'S' " . $condicion_noticia);
                    if (!empty($id_noticia)):
                        $seccion["IDClub"] = $r["IDClub"];
                        $seccion["IDSeccion"] = $r["IDSeccion"];
                        $seccion["Nombre"] = $r["Nombre"];
                        $seccion["Descripcion"] = $r["Descripcion"];
                        array_push($response, $seccion);
                    endif;

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_seccionevento($id_club, $id_socio = "", $Version = "")
    {
            $dbo = &SIMDB::get();

            if (!empty($id_socio)):
                //$condicion = " and SSE.IDSeccionEvento = S.IDSeccionEvento and IDSocio = '" . $id_socio . "' ";
                //$tabla_join = ", SocioSeccionEvento SSE ";
            endif;

            $response = array();
            $sql = "SELECT S.* FROM SeccionEvento" . $Version . " S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    // verifico que la seccion tenga por lo menos una noticia publicada
                    //$id_noticia = $dbo->getFields( "Evento", "IDEvento", "IDSeccionEvento = '" . $r[ "IDSeccionEvento" ] . "' and Publicar = 'S' and FechaFinEvento >= NOW()" );
                    $id_noticia = $dbo->getFields("Evento" . $Version, "IDEvento" . $Version, "(DirigidoA = 'S' or DirigidoA = 'T') and IDSeccionEvento" . $Version . " = '" . $r["IDSeccionEvento" . $Version] . "' and Publicar = 'S' and  FechaInicio <= CURDATE() and FechaFin >= CURDATE()");
                    if (!empty($id_noticia)):
                        $seccion["IDClub"] = $r["IDClub"];
                        $seccion["IDSeccion"] = $r["IDSeccionEvento" . $Version];
                        $seccion["Nombre"] = $r["Nombre"];
                        $seccion["Descripcion"] = $r["Descripcion"];
                        array_push($response, $seccion);
                    endif;

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_secciongaleria($id_club, $id_socio = "")
    {
            $dbo = &SIMDB::get();

            if (!empty($id_socio)):
                //$condicion = " and SSG.IDSeccionGaleria = S.IDSeccionGaleria and IDSocio = '" . $id_socio . "' ";
                //$tabla_join = ", SocioSeccionGaleria SSG ";
            endif;

            $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'");
            if ($id_club == 36 && $TipoSocio == "Estudiante") {
                $condicion_galeria .= " and TipoSocio = 'Estudiante'";
            } else {
                $condicion_galeria .= " and TipoSocio <> 'Estudiante'";
            }

            $response = array();
            $sql = "SELECT S.* FROM SeccionGaleria S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " ORDER BY Orden";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    // verifico que la seccion tenga por lo menos una galeria publicada
                    $id_galeria = $dbo->getFields("Galeria", "IDGaleria", "IDSeccionGaleria = '" . $r["IDSeccionGaleria"] . "' and Publicar = 'S' " . $condicion_galeria);
                    if (!empty($id_galeria)):
                        $seccion["IDClub"] = $r["IDClub"];
                        $seccion["IDSeccion"] = $r["IDSeccionGaleria"];
                        $seccion["Nombre"] = $r["Nombre"];
                        $seccion["Descripcion"] = $r["Descripcion"];
                        array_push($response, $seccion);
                    endif;

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_seccion_club($id_club, $id_socio = "")
    {
            $dbo = &SIMDB::get();
            $response = array();
            $contador_resultado = 0;

            //Secciones Noticia
            $sql = "SELECT * FROM Seccion S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            while ($r = $dbo->fetchArray($qry)) {
                $contador_resultado++;
                $seccion["IDClub"] = $r["IDClub"];
                //Verifico si tiene nombre pesonalizado la secciÃ³n
                //$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 3" ));
                if (empty($nombre_modulo)) {
                    $nombre_modulo = "Noticia";
                }

                $seccion["Tipo"] = $nombre_modulo;
                $seccion["IDSeccion"] = $r["IDSeccion"];
                $seccion["Nombre"] = $r["Nombre"];
                $seccion["Descripcion"] = $r["Descripcion"];

                // verifico si es de preferencia del socio
                if (!empty($id_socio)):
                    $sql_preferencia = "Select * From SocioSeccion Where IDSocio = '" . $id_socio . "' and IDSeccion = '" . $seccion["IDSeccion"] . "'";
                    $result_preferencia = $dbo->query($sql_preferencia);
                    if ($dbo->rows($result_preferencia) > 0):
                        $seccion["PreferenciaSocio"] = "S";
                    else:
                        $seccion["PreferenciaSocio"] = "N";
                    endif;
                else:
                    $seccion["PreferenciaSocio"] = "N";
                endif;

                array_push($response, $seccion);
            } //end while

            //Secciones Noticia 2
            unset($seccion);
            $nombre_modulo = "";
            $sql = "SELECT * FROM Seccion3 S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            while ($r = $dbo->fetchArray($qry)) {
                $contador_resultado++;
                $seccion["IDClub"] = $r["IDClub"];
                //Verifico si tiene nombre pesonalizado la secciÃ³n
                //$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 3" ));
                if (empty($nombre_modulo)) {
                    $nombre_modulo = "Noticia3";
                }

                $seccion["Tipo"] = $nombre_modulo;
                $seccion["IDSeccion"] = $r["IDSeccion"];
                $seccion["Nombre"] = $r["Nombre"];
                $seccion["Descripcion"] = $r["Descripcion"];

                // verifico si es de preferencia del socio
                if (!empty($id_socio)):
                    $sql_preferencia = "Select * From SocioSeccion3 Where IDSocio = '" . $id_socio . "' and IDSeccion = '" . $seccion["IDSeccion"] . "'";
                    $result_preferencia = $dbo->query($sql_preferencia);
                    if ($dbo->rows($result_preferencia) > 0):
                        $seccion["PreferenciaSocio"] = "S";
                    else:
                        $seccion["PreferenciaSocio"] = "N";
                    endif;
                else:
                    $seccion["PreferenciaSocio"] = "N";
                endif;

                array_push($response, $seccion);
            } //end while

            unset($seccion);
            $nombre_modulo = "";
            //Secciones Evento
            $sql = "SELECT * FROM SeccionEvento S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            while ($r = $dbo->fetchArray($qry)) {
                $contador_resultado++;
                $seccion["IDClub"] = $r["IDClub"];
                //Verifico si tiene nombre pesonalizado la secciÃ³n
                //$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 4" ));
                if (empty($nombre_modulo)) {
                    $nombre_modulo = "Evento";
                }

                $seccion["Tipo"] = $nombre_modulo;

                $seccion["IDSeccion"] = $r["IDSeccionEvento"];
                $seccion["Nombre"] = $r["Nombre"];
                $seccion["Descripcion"] = $r["Descripcion"];

                // verifico si es de preferencia del socio
                if (!empty($id_socio)):
                    $sql_preferencia = "Select * From SocioSeccionEvento Where IDSocio = '" . $id_socio . "' and IDSeccionEvento = '" . $seccion["IDSeccion"] . "'";
                    $result_preferencia = $dbo->query($sql_preferencia);
                    if ($dbo->rows($result_preferencia) > 0):
                        $seccion["PreferenciaSocio"] = "S";
                    else:
                        $seccion["PreferenciaSocio"] = "N";
                    endif;
                else:
                    $seccion["PreferenciaSocio"] = "N";
                endif;

                array_push($response, $seccion);
            } //end while

            unset($seccion);
            $nombre_modulo = "";
            //Secciones Galeria
            $sql = "SELECT * FROM SeccionGaleria S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            while ($r = $dbo->fetchArray($qry)) {
                $contador_resultado++;
                $seccion["IDClub"] = $r["IDClub"];
                //Verifico si tiene nombre pesonalizado la secciÃ³n
                //$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 5" ));
                if (empty($nombre_modulo)) {
                    $nombre_modulo = "Galeria";
                }

                $seccion["Tipo"] = $nombre_modulo;
                $seccion["IDSeccion"] = $r["IDSeccionGaleria"];
                $seccion["Nombre"] = $r["Nombre"];
                $seccion["Descripcion"] = $r["Descripcion"];

                // verifico si es de preferencia del socio
                if (!empty($id_socio)):
                    $sql_preferencia = "Select * From SocioSeccionGaleria Where IDSocio = '" . $id_socio . "' and IDSeccionGaleria = '" . $seccion["IDSeccion"] . "'";
                    $result_preferencia = $dbo->query($sql_preferencia);
                    if ($dbo->rows($result_preferencia) > 0):
                        $seccion["PreferenciaSocio"] = "S";
                    else:
                        $seccion["PreferenciaSocio"] = "N";
                    endif;
                else:
                    $seccion["PreferenciaSocio"] = "N";
                endif;

                array_push($response, $seccion);
            } //end while

            unset($seccion);
            $nombre_modulo = "";
            //Secciones Clasificado
            $sql = "SELECT * FROM SeccionClasificados S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
            $qry = $dbo->query($sql);
            while ($r = $dbo->fetchArray($qry)) {
                $contador_resultado++;
                $seccion["IDClub"] = $r["IDClub"];
                //Verifico si tiene nombre pesonalizado la secciÃ³n
                $nombre_modulo = utf8_encode($dbo->getFields("ClubModulo", "Titulo", "IDClub = '" . $id_club . "' and IDModulo = 46"));
                $nombre_modulo = "Clasificado";

                $seccion["Tipo"] = $nombre_modulo;
                $seccion["IDSeccion"] = $r["IDSeccionClasificados"];
                $seccion["Nombre"] = $r["Nombre"];
                $seccion["Descripcion"] = $r["Descripcion"];

                // verifico si es de preferencia del socio
                if (!empty($id_socio)):
                    $sql_preferencia = "Select * From SocioSeccionClasificados Where IDSocio = '" . $id_socio . "' and IDSeccionClasificados = '" . $seccion["IDSeccion"] . "'";
                    $result_preferencia = $dbo->query($sql_preferencia);
                    if ($dbo->rows($result_preferencia) > 0):
                        $seccion["PreferenciaSocio"] = "S";
                    else:
                        $seccion["PreferenciaSocio"] = "N";
                    endif;
                else:
                    $seccion["PreferenciaSocio"] = "N";
                endif;

                array_push($response, $seccion);
            } //end while

            $message = $contador_resultado . " Encontrados";
            if ($contador_resultado > 0) {
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_area_club($IDClub)
    {

            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * From Area WHERE Activo = 'S' and IDClub = '" . $IDClub . "' and MostrarApp <> 'N' ORDER BY Orden,Nombre";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {

                    $area["IDClub"] = $r["IDClub"];
                    $area["IDArea"] = $r["IDArea"];
                    $area["Nombre"] = $r["Nombre"];
                    $area["CorreoResponsable"] = $r["CorreoResponsable"];
                    $foto = "";
                    $foto_icono = $r["Icono"];

                    if (!empty($r["Icono"])) {
                        $foto = PQR_ROOT . $r["Icono"];
                    }

                    $area["Icono"] = $foto;

                    array_push($response, $area);
                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_pqr_socio($IDClub, $IDSocio, $IDPqr)
    {
            $dbo = &SIMDB::get();

            $response = array();

            $array_id_consulta[] = $IDSocio;

            if (!empty($IDPqr)) {
                $condicion .= " and IDPqr = '" . $IDPqr . "'";
            }

            if (!empty($IDSocio)) {
                $condicion .= " and IDSocio = '" . $IDSocio . "'";
            }

            $sql = "SELECT * FROM Pqr WHERE IDClub = '" . $IDClub . "' $condicion ORDER BY IDPqr Desc ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($row_pqr = $dbo->fetchArray($qry)):
                    $pqr["IDClub"] = $IDClub;
                    $pqr["IDSocio"] = $IDSocio;
                    $pqr["IDPqr"] = $row_pqr["IDPqr"];
                    $pqr["IDArea"] = $row_pqr["IDArea"];
                    $pqr["IDTipoPqr"] = $row_pqr["IDTipoPqr"];
                    $pqr["IDPqrEstado"] = $row_pqr["IDPqrEstado"];
                    $pqr["NombreArea"] = $dbo->getFields("Area", "Nombre", "IDArea = '" . $row_pqr["IDArea"] . "'");
                    $pqr["Tipo"] = $dbo->getFields("TipoPqr", "Nombre", "IDTipoPqr = '" . $row_pqr["IDTipoPqr"] . "'");
                    $pqr["Asunto"] = $row_pqr["Asunto"];
                    $pqr["Comentario"] = $row_pqr["Descripcion"];

                    if (!empty($row_pqr["Archivo1"])) {
                        $pqr["Archivo"] = PQR_ROOT . $row_pqr["Archivo1"];
                    } else {
                        $pqr["Archivo"] = "";
                    }

                    $pqr["Fecha"] = $row_pqr["Fecha"];
                    $pqr["Estado"] = $dbo->getFields("PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'");

                    $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $row_pqr["IDSocio"] . "' ", "array");
                    $pqr["NombreSocio"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                    $pqr["CelularSocio"] = $datos_socio["Celular"];
                    $pqr["AccionSocio"] = $datos_socio["Accion"];

                    //Bitacora Pqr
                    $response_bitacora = array();
                    $sql_bitacora = $dbo->query("SELECT * FROM Detalle_Pqr WHERE IDPQR = '" . $row_pqr["IDPqr"] . "' AND MostrarSocio <> 'N' Order By 	IDDetallePqr Desc");
                    while ($r_bitacora = $dbo->fetchArray($sql_bitacora)):

                        $bitacora[IDDetallePqr] = $r_bitacora["IDDetallePqr"];
                        if ($r_bitacora[IDUsuario] > 0) {
                            $usuario_responde = "CLUB: " . $dbo->getFields("Usuario", "Nombre", "IDUsuario = '" . $r_bitacora[IDUsuario] . "'");
                            $pos = strpos($r_bitacora["Respuesta"], "<p>"); //para saber si la respuesta esta en html o no
                            //quito caracteres especiales
                            $respuesta_pqr = strip_tags($r_bitacora["Respuesta"]);
                            $respuesta_pqr = str_replace("&nbsp;", " ", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&aacute;", "Ã¡", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&eacute;", "Ã©", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&iacute;", "Ã­", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&oacute;", "Ã³", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&uacute;", "Ãº", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&ntilde;", "Ã±", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Aacute;", "Ã", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Eacute;", "Ã", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Iacute;", "Ã", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Oacute;", "Ã", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Uacute;", "Ã", $respuesta_pqr);
                            $respuesta_pqr = str_replace("&Ntilde;", "Ã", $respuesta_pqr);
                            if ($pos !== false) {
                                $respuesta_pqr = html_entity_decode($respuesta_pqr, ENT_QUOTES, "UTF-8");
                            }

                        } elseif ($r_bitacora[IDSocio] > 0) {
                        //$nombre_cliente = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $r_bitacora[ IDSocio ] . "'" ) );
                        //$apellido_cliente = utf8_encode( $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $r_bitacora[ IDSocio ] . "'" ) );
                        $nombre_cliente = $datos_socio["Nombre"];
                        $apellido_cliente = $datos_socio["Apellido"];
                        $usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
                        $respuesta_pqr = $r_bitacora["Respuesta"];
                    }
                    $bitacora[UsuarioResponde] = $usuario_responde;
                    $bitacora[RespuestaPqr] = $respuesta_pqr;
                    $bitacora[Estado] = $dbo->getFields("PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'");
                    $bitacora[FechaRespuesta] = substr($r_bitacora["Fecha"], 0, 10);

                    if (!empty($r_bitacora["Archivo"])) {
                        $array_documento_resp[] = PQR_ROOT . $r_bitacora["Archivo"];
                    }
                    $bitacora["Archivos"] = $array_documento_resp;
                    array_push($response_bitacora, $bitacora);
                    $array_documento_resp = array();
                endwhile;

                $bitacora = array();
                //Agrego el primer comentario como parte del seguimiento
                $bitacora[IDDetallePqr] = $row_pqr["IDPqr"];
                //$nombre_cliente = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocio . "'" ) );
                //$apellido_cliente = utf8_encode( $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocio . "'" ) );
                $nombre_cliente = $datos_socio["Nombre"];
                $apellido_cliente = $datos_socio["Apellido"];
                $usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
                $respuesta_pqr = $row_pqr["Descripcion"];
                $bitacora[UsuarioResponde] = $usuario_responde;
                $bitacora[RespuestaPqr] = $respuesta_pqr;
                $bitacora[Estado] = $dbo->getFields("PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'");
                $bitacora[FechaRespuesta] = substr($row_pqr["Fecha"], 0, 10);
                array_push($response_bitacora, $bitacora);

                $pqr["Seguimiento"] = $response_bitacora;
                array_push($response, $pqr);
            endwhile;

            $respuesta["message"] = $message;
            $respuesta["success"] = true;
            $respuesta["response"] = $response;
        } //End if
        else {

                $pqr["IDSocio"] = "";
                $pqr["IDPqr"] = "";
                $pqr["IDArea"] = "";
                $pqr["IDTipoPqr"] = "";
                $pqr["IDPqrEstado"] = "";
                $pqr["NombreArea"] = "";
                $pqr["Tipo"] = "";
                $pqr["Asunto"] = "";
                $pqr["Comentario"] = "";
                $pqr["Archivo"] = "";
                $pqr["Fecha"] = "";
                $pqr["Estado"] = "";

                array_push($response, $reserva);
                $respuesta["message"] = "No se han encontraron resultados";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;

                //$respuesta[ "message" ] = "No se han encontraron resultados";
                //$respuesta[ "success" ] = false;
                //$respuesta[ "response" ] = NULL;
            } //end else

            return $respuesta;

        } // fin function

        public function get_noticias($id_club, $id_seccion = "", $id_socio = "", $tag = "", $Version = "", $IDUsuario = "")
    {

            $dbo = &SIMDB::get();

            if (!empty($IDUsuario)) {

                // Secciones Empleado
                if (!empty($id_empleado)):
                    $sql_seccion_empleado = $dbo->query("Select * From UsuarioSeccion Where IDUsuario = '" . $id_usuario . "'");
                    while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
                        $array_secciones_empleado[] = $row_seccion["IDSeccion"];
                    endwhile;

                    if (count($array_secciones_empleado) > 0):
                        $id_secciones = implode(",", $array_secciones_empleado);
                        $array_condiciones[] = " IDSeccion in(" . $id_secciones . ") ";
                    endif;
                endif;

                // Seccion Especifica
                if (!empty($id_seccion)):
                    $array_condiciones[] = " IDSeccion  = '" . $id_seccion . "'";
                endif;

                // Tag
                if (!empty($tag)):
                    $array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%')";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = implode(" and ", $array_condiciones);
                    $condiciones_noticia = " and " . $condiciones;
                endif;

                if ($id_club == 25) {
                    $orden = " ORDER BY Orden ASC, FechaInicio";
                } else {
                    $orden = " ORDER BY FechaInicio DESC, Orden";
                }

                $response = array();
                $sql = "SELECT * FROM Noticia WHERE  FechaInicio <= CURDATE() AND FechaFin >= CURDATE() AND (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "'" . $condiciones_noticia . $orden;
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {

                        $noticia["IDClub"] = $r["IDClub"];
                        $noticia["IDSeccion"] = $r["IDSeccion"];
                        $noticia["IDNoticia"] = $r["IDNoticia"];
                        $noticia["Titular"] = $r["Titular"];
                        $noticia["Introduccion"] = $r["Introduccion"];

                        $cuerpo_noticia = str_replace("/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r["Cuerpo"]);

                        //Documentos adjuntos
                        if (!empty($r["Adjunto1File"])):
                            $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto1File"] . "' >" . $r["Adjunto1File"] . '</a>';
                        endif;
                        if (!empty($r["Adjunto2File"])):
                            $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto2File"] . "' >" . $r["Adjunto2File"] . '</a>';
                        endif;

                        $noticia["Cuerpo"] = $cuerpo_noticia;

                        $noticia["Fecha"] = $r["FechaInicio"];
                        if (!empty($r["NoticiaFile"])):
                            if (strstr(strtolower($r["NoticiaFile"]), "http://")) {
                                $foto1 = $r["NoticiaFile"];
                            } else {
                                $foto1 = IMGNOTICIA_ROOT . $r["NoticiaFile"];
                            }

                            //$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
                        else :
                            $foto1 = "";
                        endif;

                        if (!empty($r["FotoDestacada"])):
                            if (strstr(strtolower($r["FotoDestacada"]), "http://")) {
                                $foto2 = $r["FotoDestacada"];
                            } else {
                                $foto2 = IMGNOTICIA_ROOT . $r["FotoDestacada"];
                            }

                            //$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
                        else :
                            $foto2 = "";
                        endif;

                        if (!empty($r["FotoPortada"])):
                            if (strstr(strtolower($r["FotoPortada"]), "http://")) {
                                $FotoPortada = $r["FotoPortada"];
                            } else {
                                $FotoPortada = IMGNOTICIA_ROOT . $r["FotoPortada"];
                            }

                            //$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
                        else :
                            $FotoPortada = "";
                        endif;

                        $noticia["Foto"] = $foto1;
                        $noticia["Foto2"] = $foto2;
                        $noticia["FotoPortada"] = $FotoPortada;

                        array_push($response, $noticia);

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

            } else {
                // Secciones Socio
                if (!empty($id_socio) && $id_seccion == ""):

                    $sql_seccion_socio = $dbo->query("Select * From SocioSeccion" . $Version . " Where IDSocio = '" . $id_socio . "'");

                    //$dbo->object($sql_seccion_socio);

                    while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
                        $array_secciones_socio[] = $row_seccion["IDSeccion"];
                    endwhile;

                    if (count($array_secciones_socio) > 0):
                        $id_secciones = implode(",", $array_secciones_socio);
                        $array_condiciones[] = " IDSeccion in(" . $id_secciones . ") ";
                    endif;

                    $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'");
                    if ($id_club == 36 && $TipoSocio == "Estudiante") {
                        $array_condiciones[] = " TipoSocio = 'Estudiante'";
                    } else {
                        $array_condiciones[] = " (TipoSocio = '' or TipoSocio = 'Socio' )";
                    }
                endif;

                // Seccion Especifica
                if (!empty($id_seccion)):
                    $array_condiciones[] = " IDSeccion  = '" . $id_seccion . "'";
                endif;

                // Tag
                if (!empty($tag)):
                    $array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%')";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = implode(" and ", $array_condiciones);
                    $condiciones_noticia = " and " . $condiciones;
                endif;

                if ($id_club == 25) {
                    $orden = " ORDER BY Orden ASC, FechaInicio";
                } else {
                    $orden = " ORDER BY FechaInicio DESC, Orden";
                }

                $response = array();
                $sql = "SELECT * FROM Noticia" . $Version . " WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "'" . $condiciones_noticia . $orden;
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        $ver_registro = 1;

                        $arregloGrupos = explode("|||", $r["SeleccionGrupo"]);

                        if (count($arregloGrupos) > 0) {
                            foreach ($arregloGrupos as $id_grupo => $datos_grupo) {
                                if (!empty($datos_grupo)) {
                                    $array_datos_grupo = explode("-", $datos_grupo);
                                    $SociosGrupo = $dbo->getFields("GrupoSocio", "IDSocio", "IDGrupoSocio = '" . $array_datos_grupo[1] . "'");
                                    $array_invitados = explode("|||", $SociosGrupo);

                                    if (count($array_invitados) > 0) {
                                        foreach ($array_invitados as $id_invitado => $datos_invitado) {
                                            $array_socios[] = $datos_invitado;
                                        }
                                    }

                                    if (in_array($id_socio, $array_socios)) {
                                        $ver_registro = 1;
                                    } else {
                                        $ver_registro = 0;
                                    }
                                }
                            }
                        }

                        if ($ver_registro = 1) {
                            $noticia["IDClub"] = $r["IDClub"];
                            $noticia["IDSeccion"] = $r["IDSeccion"];
                            $noticia["IDNoticia"] = $r["IDNoticia"];
                            $noticia["Titular"] = $r["Titular"];
                            $noticia["Introduccion"] = $r["Introduccion"];

                            $cuerpo_noticia = str_replace("/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r["Cuerpo"]);

                            //Documentos adjuntos
                            if (!empty($r["Adjunto1File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto1File"] . "' >" . $r["Adjunto1File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto1File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';

                            endif;
                            if (!empty($r["Adjunto2File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto2File"] . "' >" . $r["Adjunto2File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto2File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto3File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto3File"] . "' >" . $r["Adjunto3File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto3File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto4File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto4File"] . "' >" . $r["Adjunto4File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto4File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto5File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto5File"] . "' >" . $r["Adjunto5File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto5File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto6File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto6File"] . "' >" . $r["Adjunto6File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto6File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto7File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto7File"] . "' >" . $r["Adjunto7File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto7File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;
                            if (!empty($r["Adjunto8File"])):
                                $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto8File"] . "' >" . $r["Adjunto8File"] . '</a>';
                                //$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto8File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
                            endif;

                            $noticia["Cuerpo"] = $cuerpo_noticia;

                            if ($id_club == 51) {
                                $noticia["Fecha"] = "";
                            } else {
                                $noticia["Fecha"] = $r["FechaInicio"];
                            }

                            if (!empty($r["NoticiaFile"])):
                                if (strstr(strtolower($r["NoticiaFile"]), "http://")) {
                                    $foto1 = $r["NoticiaFile"];
                                } else {
                                    $foto1 = IMGNOTICIA_ROOT . $r["NoticiaFile"];
                                }

                                //$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
                            else :
                                $foto1 = "";
                            endif;

                            if (!empty($r["FotoDestacada"])):
                                if (strstr(strtolower($r["FotoDestacada"]), "http://")) {
                                    $foto2 = $r["FotoDestacada"];
                                } else {
                                    $foto2 = IMGNOTICIA_ROOT . $r["FotoDestacada"];
                                }

                                //$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
                            else :
                                $foto2 = "";
                            endif;

                            if (!empty($r["FotoPortada"])):
                                if (strstr(strtolower($r["FotoPortada"]), "http://")) {
                                    $FotoPortada = $r["FotoPortada"];
                                } else {
                                    $FotoPortada = IMGNOTICIA_ROOT . $r["FotoPortada"];
                                }

                                //$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
                            else :
                                $FotoPortada = "";
                            endif;

                            $noticia["Foto"] = $foto1;
                            $noticia["Foto2"] = $foto2;
                            $noticia["FotoPortada"] = $FotoPortada;

                            if (empty($Version)) {
                                $Version = 1;
                            }

                            $sql_like_total = "SELECT count(IDNoticiaLike) as Total FROM NoticiaLike WHERE IDNoticia = '" . $r["IDNoticia"] . "' and Version = '" . $Version . "'";
                            $r_like_total = $dbo->query($sql_like_total);
                            $row_like_total = $dbo->fetchArray($r_like_total);
                            $noticia["Likes"] = (int) $row_like_total["Total"];

                            $sql_comen_total = "SELECT count(IDNoticiaComentario) as Total FROM NoticiaComentario WHERE IDNoticia = '" . $r["IDNoticia"] . "' and Version = '" . $Version . "'";
                            $r_comen_total = $dbo->query($sql_comen_total);
                            $row_comen_total = $dbo->fetchArray($r_comen_total);
                            $noticia["CantidadComentarios"] = (int) $row_comen_total["Total"];

                            //Consulto si usuario ya hizo like
                            $Like = "N";
                            if (!empty($id_socio)) {
                                $sql_like = "SELECT IDNoticiaLike FROM NoticiaLike WHERE IDSocio= '" . $id_socio . "' and IDNoticia = '" . $r["IDNoticia"] . "' and Version = '" . $Version . "' Limit 1";
                                $r_like = $dbo->query($sql_like);
                                $row_like = $dbo->fetchArray($r_like);
                                if ((int) $row_like["IDNoticiaLike"] > 0) {
                                    $Like = "S";
                                } else {
                                    $Like = "N";
                                }

                            }

                            if (!empty($IDUsuario)) {
                                $sql_like = "SELECT IDNoticiaLike FROM NoticiaLike WHERE IDUsuario= '" . $IDUsuario . "' and IDNoticia = '" . $r["IDNoticia"] . "' and Version = '" . $Version . "' Limit 1";
                                $r_like = $dbo->query($sql_like);
                                $row_like = $dbo->fetchArray($r_like);
                                if ((int) $row_like["IDNoticiaLike"] > 0) {
                                    $Like = "S";
                                } else {
                                    $Like = "N";
                                }

                            }

                            $noticia["HeHechoLike"] = $Like;

                            array_push($response, $noticia);
                        }

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

            }

            return $respuesta;

        } // fin function

        public function get_comentarios_noticias($IDClub, $IDNoticia, $IDSocio, $IDUsuario, $Pagina, $Version)
    {

            $dbo = &SIMDB::get();
            $RegistrosPagina = 10;

            $Pagina = (int) $Pagina;
            if ($Pagina == 0) {
                $limite = "0," . $RegistrosPagina;
            } else {
                $Pagina = $Pagina * 10;
                $limite = $Pagina . "," . $RegistrosPagina;
            }

            if (empty($Version)) {
                $Version = 1;
            }

            $response = array();
            $sql = "SELECT * FROM NoticiaComentario WHERE  Publicar = 'S' AND IDNoticia = '" . $IDNoticia . "' and Version = '" . $Version . "' ORDER BY FechaTrCr DESC LIMIT " . $limite;
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $noticia["IDNoticia"] = $r["IDNoticia"];
                    $noticia["IDComentario"] = $r["IDNoticiaComentario"];
                    $noticia["IDSocio"] = $r["IDSocio"];
                    $noticia["IDUsuario"] = $r["IDUsuario"];
                    $foto = "";
                    if ((int) $r["IDSocio"] > 0) {
                        $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $r["IDSocio"] . "' ", "array");
                        $Nombre = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                        if (!empty($datos_socio["Foto"])) {
                            $foto = SOCIO_ROOT . $datos_socio["Foto"];
                        }
                    } else {
                        $datos_usuario = $dbo->fetchAll("Usuario", " IDUsuario = '" . $r["IDUsuario"] . "' ", "array");
                        $Nombre = $datos_usuario["Nombre"];
                        if (!empty($datos_usuario["Foto"])) {
                            $foto = USUARIO_ROOT . $datos_socio["Foto"];
                        }
                    }
                    $noticia["Nombre"] = $Nombre;
                    $noticia["Foto"] = $foto;
                    $noticia["Comentario"] = $r["Comentario"];
                    $noticia["Fecha"] = substr($r["FechaTrCr"], 0, 10);
                    array_push($response, $noticia);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "Cuentanos que te parecio esta noticia dejando un Comentario o un Me Gusta.";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function set_like_noticia($IDClub, $IDNoticia, $IDSocio, $IDUsuario, $HacerLike, $Version)
    {

            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDNoticia)) {

                if (empty($Version)) {
                    $Version = 1;
                }

                if ($HacerLike == "S") {
                    if (!empty($IDSocio)) {
                        $sql_like = "INSERT INTO NoticiaLike (IDSocio,IDNoticia,Version,UsuarioTrCr,FechaTrCr) VALUES ('" . $IDSocio . "','" . $IDNoticia . "','" . $Version . "','WS',NOW())";
                    } else {
                        $sql_like = "INSERT INTO NoticiaLike (IDUsuario,IDNoticia,Version,UsuarioTrCr,FechaTrCr) VALUES ('" . $IDUsuario . "','" . $IDNoticia . "','" . $Version . "','WS',NOW())";
                    }

                    $dbo->query($sql_like);
                } else {
                    if (!empty($IDSocio)) {
                        $sql_like = "DELETE FROM NoticiaLike WHERE  IDSocio = '" . $IDSocio . "' and Version='" . $Version . "' and IDNoticia = '" . $IDNoticia . "' LIMIT 1";
                    } else {
                        $sql_like = "DELETE FROM NoticiaLike WHERE  IDUsuario = '" . $IDSocio . "' and Version='" . $Version . "' and IDNoticia = '" . $IDNoticia . "' LIMIT 1";
                    }

                    $dbo->query($sql_like);
                }

                $respuesta["message"] = "guardado.";
                $respuesta["success"] = true;
                $respuesta["response"] = $datos_reserva;
            } else {
                $respuesta["message"] = "E1. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }
            return $respuesta;
        }

        public function set_comentar_noticias($IDClub, $IDNoticia, $IDSocio, $IDUsuario, $Comentario, $Version)
    {

            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDNoticia)) {

                if (empty($Version)) {
                    $Version = 1;
                }

                if (!empty($IDSocio)) {
                    $sql_comenta = "INSERT INTO NoticiaComentario (IDSocio,IDNoticia,Version,Comentario,UsuarioTrCr,FechaTrCr) VALUES ('" . $IDSocio . "','" . $IDNoticia . "','" . $Version . "','" . $Comentario . "','WS',NOW())";
                } else {
                    $sql_comenta = "INSERT INTO NoticiaComentario (IDUsuario,IDNoticia,Version,Comentario,UsuarioTrCr,FechaTrCr) VALUES ('" . $IDUsuario . "','" . $IDNoticia . "','" . $Version . "','" . $Comentario . "','WS',NOW())";
                }

                $dbo->query($sql_comenta);

                $correo = $dbo->getFields("Club", "CorreoNotificacionComentarioNoticia", "IDClub = " . $IDClub);

                if (!empty($correo)) {
                    SIMUtil::notifica_nuevo_cometario_noticia($IDNoticia, $Version, $Comentario, $IDSocio, $IDUsuario);

                }

                $respuesta["message"] = "guardado";
                $respuesta["success"] = true;
                $respuesta["response"] = $datos_reserva;
            } else {
                $respuesta["message"] = "E1. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }
            return $respuesta;
        }

        public function get_noticias_empleados($id_club, $id_seccion = "", $id_usuario = "", $tag = "")
    {

            $dbo = &SIMDB::get();

            // Secciones Empleado
            if (!empty($id_empleado)):
                $sql_seccion_empleado = $dbo->query("Select * From UsuarioSeccion Where IDUsuario = '" . $id_usuario . "'");
                while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
                    $array_secciones_empleado[] = $row_seccion["IDSeccion"];
                endwhile;

                if (count($array_secciones_empleado) > 0):
                    $id_secciones = implode(",", $array_secciones_empleado);
                    $array_condiciones[] = " IDSeccion in(" . $id_secciones . ") ";
                endif;
            endif;

            // Seccion Especifica
            if (!empty($id_seccion)):
                $array_condiciones[] = " IDSeccion  = '" . $id_seccion . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%')";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_noticia = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM Noticia WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "'" . $condiciones_noticia . " ORDER BY FechaInicio DESC,Orden";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $noticia["IDClub"] = $r["IDClub"];
                    $noticia["IDSeccion"] = $r["IDSeccion"];
                    $noticia["IDNoticia"] = $r["IDNoticia"];
                    $noticia["Titular"] = $r["Titular"];
                    $noticia["Introduccion"] = $r["Introduccion"];

                    $cuerpo_noticia = str_replace("/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r["Cuerpo"]);

                    //Documentos adjuntos
                    if (!empty($r["Adjunto1File"])):
                        $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto1File"] . "' >" . $r["Adjunto1File"] . '</a>';
                    endif;
                    if (!empty($r["Adjunto2File"])):
                        $cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r["Adjunto2File"] . "' >" . $r["Adjunto2File"] . '</a>';
                    endif;

                    $noticia["Cuerpo"] = $cuerpo_noticia;

                    $noticia["Fecha"] = $r["FechaInicio"];
                    if (!empty($r["NoticiaFile"])):
                        if (strstr(strtolower($r["NoticiaFile"]), "http://")) {
                            $foto1 = $r["NoticiaFile"];
                        } else {
                            $foto1 = IMGNOTICIA_ROOT . $r["NoticiaFile"];
                        }

                        //$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
                    else :
                        $foto1 = "";
                    endif;

                    if (!empty($r["FotoDestacada"])):
                        if (strstr(strtolower($r["FotoDestacada"]), "http://")) {
                            $foto2 = $r["FotoDestacada"];
                        } else {
                            $foto2 = IMGNOTICIA_ROOT . $r["FotoDestacada"];
                        }

                        //$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
                    else :
                        $foto2 = "";
                    endif;

                    $noticia["Foto"] = $foto1;
                    $noticia["Foto2"] = $foto2;

                    array_push($response, $noticia);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_eventos($id_club, $id_seccion = "", $id_socio = "", $tag = "", $Fecha = "", $Version = "")
    {
            $dbo = &SIMDB::get();

            // Secciones Socio
            if (!empty($id_socio) && $id_seccion == ""):

                $sql_seccion_socio = $dbo->query("Select * From SocioSeccionEvento" . $Version . " Where IDSocio = '" . $id_socio . "'");
                while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
                    $array_secciones_socio[] = $row_seccion["IDSeccionEvento"];
                endwhile;

                if (count($array_secciones_socio) > 0):
                    $id_secciones = implode(",", $array_secciones_socio);
                    //$array_condiciones[] = " IDSeccionEvento".$Version." in(".$id_secciones.") ";
                endif;

                $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'");
                if ($id_club == 36 && $TipoSocio == "Estudiante") {
                    $array_condiciones[] = " TipoSocio = 'Estudiante'";
                } else {
                    $array_condiciones[] = " (TipoSocio = '' or TipoSocio = 'Socio' ) ";
                }
            endif;

            // Seccion Especifica
            if (!empty($id_seccion)):
                $array_condiciones[] = " IDSeccionEvento" . $Version . "  = '" . $id_seccion . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%' or Lugar like '%" . $tag . "%' )";
            endif;

            if (!empty($Fecha)):
                $array_condiciones[] = " FechaEvento  = '" . $Fecha . "'";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_noticia = " and " . $condiciones;
            endif;

            if ($id_club == 34):
                $orden = " IDEvento" . $Version . " DESC";
                $CondicionFechaEvento = " ";
                //elseif($id_club == 44):
                //$orden = " Orden ASC";
                //$CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
            elseif ($id_club == 37):
                $CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
                $orden = " FechaEvento ASC";
            elseif ($id_club == 88 || $id_club == 86):
                $orden = " FechaEvento DESC";
                $CondicionFechaEvento = " ";
            else:
                $orden = " FechaEvento ASC";
                //$CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
            endif;

            $response = array();
            $sql = "SELECT * FROM Evento" . $Version . " WHERE (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and FechaInicio <= CURDATE() and FechaFin >= CURDATE() " . $CondicionFechaEvento . " and IDClub = '" . $id_club . "' " . $condiciones_noticia . " ORDER BY " . $orden . " ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $evento["IDClub"] = $r["IDClub"];
                    $evento["IDSeccionEvento"] = $r["IDSeccionEvento" . $Version];
                    $evento["IDEvento"] = $r["IDEvento" . $Version];
                    $evento["Titular"] = $r["FechaEvento"] . ": " . $r["Titular"];
                    $evento["Introduccion"] = $r["Introduccion"];

                    $cuerpo_evento = str_replace("/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r["Cuerpo"]);

                    //Documentos adjuntos
                    if (!empty($r["Adjunto1File"])):
                        $cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r["Adjunto1File"] . "' >" . $r["Adjunto1File"] . '</a>';
                    endif;
                    if (!empty($r["Adjunto2File"])):
                        $cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r["Adjunto2File"] . "' >" . $r["Adjunto2File"] . '</a>';
                    endif;
                    if (!empty($r["Adjunto3File"])):
                        $cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r["Adjunto3File"] . "' >" . $r["Adjunto3File"] . '</a>';
                    endif;
                    if (!empty($r["Adjunto4File"])):
                        $cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r["Adjunto4File"] . "' >" . $r["Adjunto4File"] . '</a>';
                    endif;

                    $evento["Cuerpo"] = utf8_encode($cuerpo_evento);

                    $evento["CuerpoEmail"] = $r["CuerpoEmail"];
                    $evento["Fecha"] = $r["FechaEvento"];
                    $evento["FechaFinEvento"] = $r["FechaFinEvento"];
                    $evento["Lugar"] = $r["Lugar"];

                    $HoraEvento = (string) $r["Hora"];
                    if ($HoraEvento == "00:00:00") {
                        $evento["Hora"] = "";
                    } else {
                        $evento["Hora"] = (string) $r["Hora"];
                    }

                    $evento["Valor"] = $r["Valor"];
                    $evento["EmailContacto"] = $r["EmailContacto"];
                    $evento["InscripcionApp"] = $r["InscripcionApp"];

                    if ($r["InscripcionApp"] == "S") {
                        //Verifico si quedan cupos
                        $sql_registrados = "SELECT count(*) as Total FROM  EventoRegistro" . $Version . " Where IDEvento" . $Version . " = '" . $r["IDEvento"] . "'";
                        $r_registrados = $dbo->query($sql_registrados);
                        $row_registrados = $dbo->FetchArray($r_registrados);
                        if ((int) $row_registrados["Total"] >= (int) $r["MaximoParticipantes"]) {
                            $evento["InscripcionApp"] = "N";
                            $evento["Cuerpo"] .= "<br><strong>Se lleg&oacute; al maximo de cupos</strong>";
                        }

                        //verifico  la fecha/hora lÃ­mite de inscripcion
                        $fechahora_actual = date("Y-m-d H:i:s");
                        $FechaHoraLimite = $r["FechaLimiteInscripcion"] . " " . $r["HoraLimiteInscripcion"];
                        if ($FechaHoraLimite != "0000-00-00" && strtotime($fechahora_actual) > strtotime($FechaHoraLimite)) {
                            $evento["InscripcionApp"] = "N";
                            $evento["Cuerpo"] .= "<br><strong>Inscripciones cerradas</strong>";
                        }

                    }

                    $evento["MensajePagoInscripcion"] = $r["MensajePagoInscripcion"];
                    //Tipos de pagos recibidos
                    $response_tipo_pago = array();
                    $sql_tipo_pago = "SELECT * FROM EventoTipoPago" . $Version . " ETP, TipoPago TP  WHERE ETP.IDTipoPago = TP.IDTipoPago and IDEvento" . $Version . " = '" . $r["IDEvento" . $Version] . "' ";
                    $qry_tipo_pago = $dbo->query($sql_tipo_pago);
                    if ($dbo->rows($qry_tipo_pago) > 0) {
                        $evento["PagoReserva"] = "S";
                        while ($r_tipo_pago = $dbo->fetchArray($qry_tipo_pago)) {
                            $tipopago["IDClub"] = $id_club;
                            $tipopago["IDServicio"] = $r_tipo_pago["IDServicio"];
                            $tipopago["IDTipoPago"] = $r_tipo_pago["IDTipoPago"];
                            $tipopago["PasarelaPago"] = $r_tipo_pago["PasarelaPago"];
                            $tipopago["Action"] = SIMUtil::obtener_accion_pasarela($r_tipo_pago["IDTipoPago"], $id_club);
                            $tipopago["Nombre"] = $r_tipo_pago["Nombre"];
                            $tipopago["PaGoCredibanco"] = $r_tipo_pago["PaGoCredibanco"];

                            $imagen = "";
                            //Para el condado y es pagos online muestro la imagen de placetopay
                            if ($id_club == 51 || $id_club == 8 || $id_club == 84) {
                                switch ($r_tipo_pago["IDTipoPago"]) {
                                    case "1":
                                        $imagen = "https://static.placetopay.com/placetopay-logo.svg";
                                        break;
                                    case "2":
                                        $imagen = "https://www.miclubapp.com/file/noticia/icono-bono.png";
                                        break;
                                    case "3":
                                        $imagen = "https://www.miclubapp.com/file/noticia/abonoc.png";
                                        break;
                                    case "11":
                                        $imagen = "https://static.placetopay.com/placetopay-logo.svg";
                                        break;
                                }
                            }

                            $tipopago["Imagen"] = $imagen;
                            array_push($response_tipo_pago, $tipopago);

                        } //end while
                        $evento["TipoPago"] = $response_tipo_pago;
                    } else {
                        $evento["PagoReserva"] = "N";
                    }

                    //Campos Formulario
                    $response_campo_formulario = array();
                    $sql_campo_form = "SELECT * FROM CampoFormularioEvento" . $Version . " WHERE IDEvento" . $Version . " = '" . $r["IDEvento" . $Version] . "' and Publicar = 'S' order by Orden ";
                    $qry_campo_form = $dbo->query($sql_campo_form);
                    if ($dbo->rows($qry_campo_form) > 0) {
                        while ($r_campo = $dbo->fetchArray($qry_campo_form)) {
                            $campoformulario["IDCampoFormularioEvento"] = $r_campo["IDCampoFormularioEvento" . $Version];
                            $campoformulario["TipoCampo"] = $r_campo["TipoCampo"];
                            $campoformulario["EtiquetaCampo"] = $r_campo["EtiquetaCampo"];
                            $campoformulario["Obligatorio"] = $r_campo["Obligatorio"];
                            $campoformulario["Valores"] = $r_campo["Valores"];
                            array_push($response_campo_formulario, $campoformulario);

                        } //end while
                        $evento["CampoFormulario"] = $response_campo_formulario;
                    } else {
                        $evento["CampoFormulario"] = $response_campo_formulario;
                    }

                    if (!empty($r["EventoFile"])):
                        if (strstr(strtolower($r["EventoFile"]), "http://")) {
                            $foto1 = $r["EventoFile"];
                        } else {
                            $foto1 = IMGEVENTO_ROOT . $r["EventoFile"];
                        }

                        //$foto1 = IMGEVENTO_ROOT.$r["EventoFile"];
                    else :
                        $foto1 = "";
                    endif;

                    if (!empty($r["FotoDestacada"])):
                        if (strstr(strtolower($r["FotoDestacada"]), "http://")) {
                            $foto2 = $r["FotoDestacada"];
                        } else {
                            $foto2 = IMGEVENTO_ROOT . $r["FotoDestacada"];
                        }

                        //$foto2 = IMGEVENTO_ROOT.$r["FotoDestacada"];
                    else :
                        $foto2 = "";
                    endif;

                    $evento["Foto"] = $foto1;
                    $evento["Foto2"] = $foto2;

                    array_push($response, $evento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_eventos_empleados($id_club, $id_seccion = "", $id_usuario = "", $tag = "", $Version = "")
    {
            $dbo = &SIMDB::get();

            // Secciones Empleado
            if (!empty($id_usuario)):
                $sql_seccion_empleado = $dbo->query("Select * From UsuarioSeccionEvento Where IDSocio = '" . $id_socio . "'");
                while ($row_seccion = $dbo->fetchArray($sql_seccion_empleado)):
                    $array_secciones_empleado[] = $row_seccion["IDSeccionEvento"];
                endwhile;

                if (count($array_secciones_empleado) > 0):
                    $id_secciones = implode(",", $array_secciones_empleado);
                    $array_condiciones[] = " IDSeccionEvento in(" . $id_secciones . ") ";
                endif;
            endif;

            // Seccion Especifica
            if (!empty($id_seccion)):
                $array_condiciones[] = " IDSeccionEvento  = '" . $id_seccion . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%' or Lugar like '%" . $tag . "%' )";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_noticia = " and " . $condiciones;
            endif;

            $orden = " FechaEvento ASC";

            $response = array();
            $sql = "SELECT * FROM Evento" . $Version . " WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and FechaInicio <= NOW() and FechaFin >= NOW() and  IDClub = '" . $id_club . "'" . $condiciones_noticia . " ORDER BY " . $orden . "";

            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $evento["IDClub"] = $r["IDClub"];
                    $evento["IDSeccionEvento"] = $r["IDSeccionEvento"];
                    $evento["IDEvento"] = $r["IDEvento"];
                    $evento["Titular"] = $r["Titular"];
                    $evento["Introduccion"] = $r["Introduccion"];

                    $cuerpo_evento = str_replace("/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r["Cuerpo"]);
                    $evento["Cuerpo"] = $cuerpo_evento;

                    $evento["CuerpoEmail"] = $r["CuerpoEmail"];
                    $evento["Fecha"] = $r["FechaEvento"];
                    $evento["FechaFinEvento"] = $r["FechaFinEvento"];
                    $evento["Lugar"] = $r["Lugar"];
                    $evento["Valor"] = $r["Valor"];
                    $evento["EmailContacto"] = $r["EmailContacto"];

                    if (!empty($r["EventoFile"])):
                        if (strstr(strtolower($r["EventoFile"]), "http://")) {
                            $foto1 = $r["EventoFile"];
                        } else {
                            $foto1 = IMGEVENTO_ROOT . $r["EventoFile"];
                        }

                        //$foto1 = IMGEVENTO_ROOT.$r["EventoFile"];
                    else :
                        $foto1 = "";
                    endif;

                    if (!empty($r["FotoDestacada"])):
                        if (strstr(strtolower($r["FotoDestacada"]), "http://")) {
                            $foto2 = $r["FotoDestacada"];
                        } else {
                            $foto2 = IMGEVENTO_ROOT . $r["FotoDestacada"];
                        }

                        //$foto2 = IMGEVENTO_ROOT.$r["FotoDestacada"];
                    else :
                        $foto2 = "";
                    endif;

                    $evento["Foto"] = $foto1;
                    $evento["Foto2"] = $foto2;

                    array_push($response, $evento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_directorio($id_club, $tag)
    {
            $dbo = &SIMDB::get();

            if (!empty($tag)):
                $tag = utf8_decode($tag);
                $array_buscar = explode(" ", $tag);
                foreach ($array_buscar as $key => $value) {
                    $array_condiciones_nombre[] = " (	Nombre  like '%" . $value . "%' or Descripcion like '%" . $value . "%'  )";
                }
                if (count($array_condiciones_nombre) > 0) {
                    $condicion_nombre = implode(" and ", $array_condiciones_nombre);
                }
                $array_condiciones[] = $condicion_nombre;
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_directorio = " and " . $condiciones;
            endif;

            if ($id_club == "36") {
                $condicion_orden = " Orden ";
            } else {
                $condicion_orden = " Nombre ";
            }

            $response = array();
            $sql = "SELECT * FROM Directorio WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_directorio . " ORDER BY " . $condicion_orden;
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $response_otros = array();
                    $directorio["IDClub"] = $r["IDClub"];
                    $directorio["IDDirectorio"] = $r["IDDirectorio"];
                    $directorio["Nombre"] = $r["Nombre"];
                    $directorio["Telefono"] = $r["Telefono"];
                    $directorio["PermiteCalificacion"] = $r["PermiteCalificar"];
                    $directorio["MostrarIcono"] = $r["MostrarIcono"];
                    $directorio["MostrarIconoEmail"] = $r["MostrarIconoEmail"];

                    if (!empty($r["Foto1"])):
                        $foto = DIRECTORIO_ROOT . $r["Foto1"];
                    else:
                        $foto = "";
                    endif;

                    $directorio["Foto"] = $foto;

                    $icono_telefono = $dbo->getFields("Club", "IconoTelefono", "IDClub = '" . $id_club . "'");
                    if (!empty($icono_telefono)):
                        $fototelefono = CLUB_ROOT . $icono_telefono;
                    else:
                        $fototelefono = "";
                    endif;
                    $directorio["IconoTelefono"] = $fototelefono;

                    $icono_email = $dbo->getFields("Club", "IconoEmail", "IDClub = '" . $id_club . "'");
                    if (!empty($icono_email)):
                        $fotomail = CLUB_ROOT . $icono_email;
                    else:
                        $fotomail = "";
                    endif;
                    $directorio["IconoEmail"] = $fotomail;

                    //Otros datos
                    if (!empty(trim($r["Descripcion"]))):
                        $array_otros["Campo"] = "DescripciÃ³n";
                        $array_otros["Valor"] = $r["Descripcion"];
                        array_push($response_otros, $array_otros);
                    endif;

                    if (trim($r["Email"]) != ""):
                        $array_otros["Campo"] = "Email";
                        $array_otros["Valor"] = $r["Email"];
                        array_push($response_otros, $array_otros);
                    endif;

                    $sql_otros = "Select * From CampoDirectorioClubValor Where IDDirectorio = '" . $r["IDDirectorio"] . "'";
                    $result_otros = $dbo->query($sql_otros);
                    while ($row_otros = $dbo->fetchArray($result_otros)):
                        $array_otros["Campo"] = $dbo->getFields("CampoDirectorioClub", "Nombre", "IDCampoDirectorioClub = '" . $row_otros["IDCampoDirectorioClub"] . "'");
                        $array_otros["Valor"] = $row_otros["Valor"];
                        array_push($response_otros, $array_otros);
                    endwhile;

                    $directorio["OtrosDatos"] = $response_otros;

                    array_push($response, $directorio);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_directorio_socio($id_club, $tag)
    {
            $dbo = &SIMDB::get();

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%' )";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_directorio = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM DirectorioSocio WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_directorio . " ORDER BY Nombre";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $response_otros = array();
                    $directorio["IDClub"] = $r["IDClub"];
                    $directorio["IDDirectorioSocio"] = $r["IDDirectorioSocio"];
                    $directorio["Nombre"] = $r["Nombre"];
                    $directorio["Telefono"] = $r["Telefono"];
                    $directorio["PermiteCalificacion"] = $r["PermiteCalificar"];
                    $directorio["MostrarIcono"] = $r["MostrarIcono"];
                    $directorio["MostrarIconoEmail"] = $r["MostrarIconoEmail"];

                    if (!empty($r["Foto1"])):
                        $foto = DIRECTORIO_ROOT . $r["Foto1"];
                    else:
                        $foto = "";
                    endif;

                    $directorio["Foto"] = $foto;

                    $icono_telefono = $dbo->getFields("Club", "IconoTelefono", "IDClub = '" . $id_club . "'");
                    if (!empty($icono_telefono)):
                        $fototelefono = CLUB_ROOT . $icono_telefono;
                    else:
                        $fototelefono = "";
                    endif;
                    $directorio["IconoTelefono"] = $fototelefono;

                    $icono_mail = $dbo->getFields("Club", "IconoEmail", "IDClub = '" . $id_club . "'");
                    if (!empty($icono_mail)):
                        $fotomail = CLUB_ROOT . $icono_mail;
                    else:
                        $fotomail = "";
                    endif;
                    $directorio["IconoEmail"] = $fotomail;

                    //Otros datos
                    if (!empty(trim($r["Descripcion"]))):
                        $array_otros["Campo"] = "DescripciÃ³n";
                        $array_otros["Valor"] = $r["Descripcion"];
                        array_push($response_otros, $array_otros);
                    endif;

                    if (trim($r["Email"]) != ""):
                        $array_otros["Campo"] = "Email";
                        $array_otros["Valor"] = $r["Email"];
                        array_push($response_otros, $array_otros);
                    endif;

                    $sql_otros = "Select * From CampoDirectorioSocioValor Where IDDirectorio = '" . $r["IDDirectorioSocio"] . "'";
                    $result_otros = $dbo->query($sql_otros);
                    while ($row_otros = $dbo->fetchArray($result_otros)):
                        $array_otros["Campo"] = $dbo->getFields("CampoDirectorioSocio", "Nombre", "IDCampoDirectorioSocio = '" . $row_otros["IDCampoDirectorioSocio"] . "'");
                        $array_otros["Valor"] = $row_otros["Valor"];
                        array_push($response_otros, $array_otros);
                    endwhile;

                    $directorio["OtrosDatos"] = $response_otros;

                    array_push($response, $directorio);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_categoria_directorio($IDClub, $IDCategoria = "", $Tag = "")
    {

            $dbo = &SIMDB::get();

            // Seccion Especifica
            if (!empty($IDCategoria)):
                $array_condiciones[] = " IDCategoriaDirectorio  = '" . $IDCategoria . "'";
            endif;

            // Tag
            if (!empty($Tag)):
                $array_condiciones[] = " (Nombre  like '%" . $Tag . "%' or Descripcion like '%" . $Tag . "%')";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_producto = " and " . $condiciones;
            endif;

            $response = array();
            $response_lista_producto = array();
            $sql = "SELECT * FROM CategoriaDirectorio WHERE Publicar = 'S' and IDClub = '" . $IDClub . "'" . $condiciones_producto . " ORDER BY Orden ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $categoria_directorio["IDClub"] = $r["IDClub"];
                    $categoria_directorio["IDCategoriaDirectorio"] = $r["IDCategoriaDirectorio"];
                    $categoria_directorio["NombreCategoria"] = $r["Nombre"];
                    $categoria_directorio["DescripcionCategoria"] = $r["Descripcion"];
                    //Busco los registros de la categoria
                    $response_detalle_directorio = array();

                    $sql_directorio = "Select * From Directorio Where IDCategoriaDirectorio = '" . $r["IDCategoriaDirectorio"] . "' and Publicar = 'S' Order by Nombre ";
                    $result_directorio = $dbo->query($sql_directorio);
                    while ($row_directorio = $dbo->fetchArray($result_directorio)):
                        $response_otros = array();
                        $array_otros = array();
                        $directorio["IDClub"] = $row_directorio["IDClub"];
                        $directorio["IDDirectorio"] = $row_directorio["IDDirectorio"];
                        $directorio["Nombre"] = $row_directorio["Nombre"];
                        $directorio["Telefono"] = $row_directorio["Telefono"];

                        $directorio["PermiteCalificacion"] = $row_directorio["PermiteCalificar"];
                        if (!empty($row_directorio["Foto1"])):
                            $foto = DIRECTORIO_ROOT . $row_directorio["Foto1"];
                        else:
                            $foto = "";
                        endif;
                        $directorio["Foto"] = $foto;

                        //Otros datos
                        if (!empty(trim($row_directorio["Descripcion"]))):
                            $array_otros["Campo"] = "DescripciÃ³n";
                            $array_otros["Valor"] = $row_directorio["Descripcion"];
                            array_push($response_otros, $array_otros);
                        endif;

                        if (trim($row_directorio["Email"]) != ""):
                            $array_otros["Campo"] = "Email";
                            $array_otros["Valor"] = $row_directorio["Email"];
                            array_push($response_otros, $array_otros);
                        endif;

                        $sql_otros = "Select * From CampoDirectorioClubValor Where IDDirectorio = '" . $row_directorio["IDDirectorio"] . "'";
                        $result_otros = $dbo->query($sql_otros);
                        while ($row_otros = $dbo->fetchArray($result_otros)):
                            $array_otros["Campo"] = $dbo->getFields("CampoDirectorioClub", "Nombre", "IDCampoDirectorioClub = '" . $row_otros["IDCampoDirectorioClub"] . "'");
                            $array_otros["Valor"] = $row_otros["Valor"];
                            array_push($response_otros, $array_otros);
                        endwhile;

                        $directorio["OtrosDatos"] = $response_otros;
                        array_push($response_detalle_directorio, $directorio);
                    endwhile;

                    $categoria_directorio["Registros"] = $response_detalle_directorio;
                    array_push($response, $categoria_directorio);

                } //ednw hile

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_categoria_directorio_socio($IDClub, $IDCategoria = "", $Tag = "")
    {

            $dbo = &SIMDB::get();

            // Seccion Especifica
            if (!empty($IDCategoria)):
                $array_condiciones[] = " IDCategoriaDirectorioSocio  = '" . $IDCategoria . "'";
            endif;

            // Tag
            if (!empty($Tag)):
                $array_condiciones[] = " (Nombre  like '%" . $Tag . "%' or Descripcion like '%" . $Tag . "%')";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_producto = " and " . $condiciones;
            endif;

            $response = array();
            $response_lista_producto = array();
            $sql = "SELECT * FROM CategoriaDirectorioSocio WHERE Publicar = 'S' and IDClub = '" . $IDClub . "'" . $condiciones_producto . " ORDER BY Orden ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $categoria_directorio["IDClub"] = $r["IDClub"];
                    $categoria_directorio["IDCategoriaDirectorioSocio"] = $r["IDCategoriaDirectorioSocio"];
                    $categoria_directorio["NombreCategoria"] = $r["Nombre"];
                    $categoria_directorio["DescripcionCategoria"] = $r["Descripcion"];
                    //Busco los registros de la categoria
                    $response_detalle_directorio = array();

                    $sql_directorio = "Select * From DirectorioSocio Where IDCategoriaDirectorioSocio = '" . $r["IDCategoriaDirectorioSocio"] . "' and Publicar = 'S'";
                    $result_directorio = $dbo->query($sql_directorio);
                    while ($row_directorio = $dbo->fetchArray($result_directorio)):
                        $array_otros = array();
                        $response_otros = array();

                        $directorio["IDClub"] = $row_directorio["IDClub"];
                        $directorio["IDDirectorioSocio"] = $row_directorio["IDDirectorioSocio"];
                        $directorio["Nombre"] = $row_directorio["Nombre"];
                        $directorio["Telefono"] = $row_directorio["Telefono"];
                        $directorio["PermiteCalificacion"] = $row_directorio["PermiteCalificar"];
                        if (!empty($row_directorio["Foto1"])):
                            $foto = DIRECTORIO_ROOT . $row_directorio["Foto1"];
                        else:
                            $foto = "";
                        endif;
                        $directorio["Foto"] = $foto;

                        //Otros datos
                        if (!empty(trim($row_directorio["Descripcion"]))):
                            $array_otros["Campo"] = "DescripciÃ³n";
                            $array_otros["Valor"] = $row_directorio["Descripcion"];
                            array_push($response_otros, $array_otros);
                        endif;

                        if (trim($row_directorio["Email"]) != ""):
                            $array_otros["Campo"] = "Email";
                            $array_otros["Valor"] = $row_directorio["Email"];
                            array_push($response_otros, $array_otros);
                        endif;

                        $sql_otros = "Select * From CampoDirectorioSocioValor Where IDDirectorioSocio = '" . $row_directorio["IDDirectorioSocio"] . "'";
                        $result_otros = $dbo->query($sql_otros);
                        while ($row_otros = $dbo->fetchArray($result_otros)):
                            $array_otros["Campo"] = $dbo->getFields("CampoDirectorioSocio", "Nombre", "IDCampoDirectorioSocio = '" . $row_otros["IDCampoDirectorioSocio"] . "'");
                            $array_otros["Valor"] = $row_otros["Valor"];
                            array_push($response_otros, $array_otros);
                        endwhile;

                        $directorio["OtrosDatos"] = $response_otros;

                        array_push($response_detalle_directorio, $directorio);
                    endwhile;

                    $categoria_directorio["Registros"] = $response_detalle_directorio;
                    array_push($response, $categoria_directorio);

                } //ednw hile

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_restaurante($id_club)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM Restaurante WHERE Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY Orden ASC";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $restaurante["IDClub"] = $r["IDClub"];
                    $restaurante["IDRestaurante"] = $r["IDRestaurante"];
                    $restaurante["Nombre"] = $r["Nombre"];
                    $restaurante["Lugar"] = $r["Lugar"];
                    $restaurante["Menu"] = nl2br($r["Menu"]);
                    $restaurante["Horario"] = $r["Horario"];
                    $restaurante["Localizacion"] = $r["Localizacion"];

                    if (!empty($r["RestauranteFile"])):
                        $foto1 = IMGEVENTO_ROOT . $r["RestauranteFile"];
                    else:
                        $foto1 = "";
                    endif;

                    $restaurante["Foto"] = $foto1;

                    if (!empty($r["RestauranteIcono"])):
                        $fotoicono = IMGEVENTO_ROOT . $r["RestauranteIcono"];
                    else:
                        $fotoicono = "";
                    endif;

                    $restaurante["Icono"] = $fotoicono;

                    //Para la carta

                    if (!empty($r["CartaFile"])):
                        $foto1 = IMGEVENTO_ROOT . $r["CartaFile"];
                    else:
                        $foto1 = "";
                    endif;
                    $restaurante["FotoCarta"] = "";

                    $fotos_carta = array();
                    $fotos_carta[] = $foto1;

                    //Para la carta
                    if (!empty($r["CartaFile2"])):
                        $foto2 = IMGEVENTO_ROOT . $r["CartaFile2"];
                        $fotos_carta[] = $foto2;
                    else:
                        $foto2 = "";
                    endif;
                    //$restaurante["FotoCarta2"] = $foto2;

                    //Para la carta
                    if (!empty($r["CartaFile3"])):
                        $foto3 = IMGEVENTO_ROOT . $r["CartaFile3"];
                        $fotos_carta[] = $foto3;
                    else:
                        $foto3 = "";
                    endif;
                    //$restaurante["FotoCarta3"] = $foto3;

                    //Para la carta
                    if (!empty($r["CartaFile4"])):
                        $foto4 = IMGEVENTO_ROOT . $r["CartaFile4"];
                        $fotos_carta[] = $foto4;
                    else:
                        $foto4 = "";
                    endif;
                    //$restaurante["FotoCarta4"] = $foto4;

                    //Para la carta
                    if (!empty($r["CartaFile5"])):
                        $foto5 = IMGEVENTO_ROOT . $r["CartaFile5"];
                        $fotos_carta[] = $foto5;
                    else:
                        $foto5 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile6"])):
                        $foto6 = IMGEVENTO_ROOT . $r["CartaFile6"];
                        $fotos_carta[] = $foto6;
                    else:
                        $foto6 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile7"])):
                        $foto7 = IMGEVENTO_ROOT . $r["CartaFile7"];
                        $fotos_carta[] = $foto7;
                    else:
                        $foto7 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile8"])):
                        $foto8 = IMGEVENTO_ROOT . $r["CartaFile8"];
                        $fotos_carta[] = $foto8;
                    else:
                        $foto8 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile9"])):
                        $foto9 = IMGEVENTO_ROOT . $r["CartaFile9"];
                        $fotos_carta[] = $foto9;
                    else:
                        $foto9 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile10"])):
                        $foto10 = IMGEVENTO_ROOT . $r["CartaFile10"];
                        $fotos_carta[] = $foto10;
                    else:
                        $foto10 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile11"])):
                        $foto11 = IMGEVENTO_ROOT . $r["CartaFile11"];
                        $fotos_carta[] = $foto11;
                    else:
                        $fot11 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile12"])):
                        $foto12 = IMGEVENTO_ROOT . $r["CartaFile12"];
                        $fotos_carta[] = $foto12;
                    else:
                        $foto12 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile13"])):
                        $foto13 = IMGEVENTO_ROOT . $r["CartaFile13"];
                        $fotos_carta[] = $foto13;
                    else:
                        $foto13 = "";
                    endif;

                    //Para la carta
                    if (!empty($r["CartaFile14"])):
                        $foto14 = IMGEVENTO_ROOT . $r["CartaFile14"];
                        $fotos_carta[] = $foto14;
                    else:
                        $foto14 = "";
                    endif;

                    $restaurante["fotoscarta"] = $fotos_carta;

                    array_push($response, $restaurante);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_documento($id_club, $id_tipo_archivo = "", $id_servicio = "")
    {
            $dbo = &SIMDB::get();

            //inserta _log
            //$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros) Values ('get_documento','TipoArchivo: ".$id_tipo_archivo. " IDServicio:" . $id_servicio . "')");

            // Tipo Archivo Especifico
            if (!empty($id_tipo_archivo)):
                $condiciones = " and IDTipoArchivo  = '" . $id_tipo_archivo . "'";
            endif;

            // Servicio Especifico
            if (!empty($id_servicio)):
                $condiciones = " and IDServicio  = '" . $id_servicio . "'";
            endif;

            $response = array();
            $sql = "SELECT * FROM Documento WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones . " ORDER BY Fecha DESC";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $documento["IDClub"] = $r["IDClub"];
                    $documento["IDTipoArchivo"] = $r["IDTipoArchivo"];
                    $documento["TipoArchivo"] = $dbo->getFields("TipoArchivo", "Nombre", "IDTipoArchivo = '" . $r["IDTipoArchivo"] . "'");

                    $foto_servicio = "";
                    if (!empty($r["Icono"])):
                        $foto_servicio = DOCUMENTO_ROOT . $r["Icono"];
                    else:
                        $foto_servicio = "";
                    endif;

                    if (empty($r["IDServicio"])):
                        $servicio = "";
                        $id_servicio = "";
                    else:
                        $id_servicio = $r["IDServicio"];
                        $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $r["IDServicio"] . "'");
                        $servicio = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                        $icono_servicio = $dbo->getFields("Servicio", "Icono", "IDServicio = '" . $r["IDServicio"] . "'");

                        if (empty($foto_servicio)):
                            if (!empty($icono_servicio)):
                                $foto_servicio = SERVICIO_ROOT . $icono_servicio;
                            else:
                                $foto_servicio = "";
                            endif;
                        endif;
                    endif;

                    $documento["IDServicio"] = $id_servicio;
                    //$documento["Servicio"] = $servicio;
                    $documento["Servicio"] = $r["Nombre"];
                    $documento["IconoServicio"] = $foto_servicio;
                    $documento["IDDocumento"] = $r["IDDocumento"];
                    $documento["Titular"] = $r["Nombre"];
                    $documento["Subtitular"] = $r["Subtitular"];
                    $documento["Fecha"] = $r["Fecha"];
                    $documento["Descripcion"] = $r["Descripcion"];
                    //ruta temporal =
                    //$ruta_temporal = str_replace( "https", "http", DOCUMENTO_ROOT );
                    $ruta_temporal = DOCUMENTO_ROOT;
                    if (!empty($r["Archivo1"])):
                        $archivo = $ruta_temporal . $r["Archivo1"];
                    else:
                        $archivo = "";
                    endif;
                    $documento["Documento"] = $archivo;
                    array_push($response, $documento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_documento_personal($id_club, $IDSocio)
    {
            $dbo = &SIMDB::get();

            $response = array();
            $sql = "SELECT * FROM DocumentoPersonal WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and IDSocio = '" . $IDSocio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $documento["IDClub"] = $r["IDClub"];
                    $foto_servicio = "";
                    if (!empty($r["Icono"])):
                        $foto_servicio = DOCUMENTO_ROOT . $r["Icono"];
                    else:
                        $foto_servicio = "";
                    endif;

                    $documento["IconoServicio"] = $foto_servicio;
                    $documento["IDDocumentoPersonal"] = $r["IDDocumentoPersonal"];
                    $documento["Nombre"] = $r["Nombre"];
                    $documento["Fecha"] = $r["Fecha"];
                    $documento["Descripcion"] = $r["Descripcion"];
                    //ruta temporal =
                    //$ruta_temporal = str_replace( "https", "http", DOCUMENTO_ROOT );
                    $ruta_temporal = DOCUMENTO_ROOT;
                    if (!empty($r["Archivo1"])):
                        $archivo = $ruta_temporal . $r["Archivo1"];
                    else:
                        $archivo = "";
                    endif;
                    $documento["Documento"] = $archivo;
                    array_push($response, $documento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_tipoarchivo($IDClub, $id_tipo_archivo = "", $IDSubmodulo = "")
    {
            $dbo = &SIMDB::get();

            // Tipo Archivo Especifico
            if (!empty($id_tipo_archivo)):
                $condiciones = " and IDTipoArchivo  = '" . $id_tipo_archivo . "'";
            endif;

            $response = array();
            $sql = "SELECT * FROM TipoArchivo WHERE Publicar = 'S' " . $condiciones . " ORDER BY Nombre";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $activo_tipoarchivo = $dbo->getFields("ClubTipoArchivo", "Activo", "IDTipoArchivo = '" . $r["IDTipoArchivo"] . "' and IDClub = '" . $IDClub . "'");
                    if ($activo_tipoarchivo == "S"):
                        $foto = "";
                        $foto_icono = $dbo->getFields("ClubTipoArchivo", "Icono", "IDTipoArchivo = '" . $r["IDTipoArchivo"] . "' and IDClub = '" . $IDClub . "'");
                        if (!empty($foto_icono)) {
                            $foto = CLIENTE_ROOT . $foto_icono;
                        }

                        if (!empty($r["Icono"]) && empty($foto)) {
                            $foto = CLIENTE_ROOT . $r["Icono"];
                        }

                        $tipo_archivo["IDTipoArchivo"] = $r["IDTipoArchivo"];

                        $nombre_tipoarchivo = $dbo->getFields("ClubTipoArchivo", "NombreTipoArchivo", "IDTipoArchivo = '" . $r["IDTipoArchivo"] . "' and IDClub = '" . $IDClub . "'");
                        $tipo_archivo["Nombre"] = $r["Nombre"];

                        if (!empty($nombre_tipoarchivo)):
                            $tipo_archivo["Label"] = $nombre_tipoarchivo;
                        else:
                            $tipo_archivo["Label"] = $r["Nombre"];
                        endif;

                        $tipo_archivo["Icono"] = $foto;
                        array_push($response, $tipo_archivo);
                    endif;

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_tipo_pqr($IDClub)
    {
            $dbo = &SIMDB::get();

            $response = array();
            $sql = "SELECT * FROM TipoPqr WHERE Publicar = 'S' and IDClub = '" . $IDClub . "' ORDER BY Nombre";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $tipo_pqr["IDTipoPqr"] = $r["IDTipoPqr"];
                    $tipo_pqr["Nombre"] = $r["Nombre"];
                    array_push($response, $tipo_pqr);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registro";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_galeria($id_club, $id_seccion = "", $id_socio = "", $tag = "")
    {
            $dbo = &SIMDB::get();

            // Secciones Socio
            if (!empty($id_socio)):
                /*
                $sql_seccion_socio = $dbo->query("Select * From SocioSeccionGaleria Where IDSocio = '".$id_socio."'");
                while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
                $array_secciones_socio[] = $row_seccion["IDSeccionGaleria"];
                endwhile;

                if (count($array_secciones_socio)>0):
                $id_secciones = implode(",",$array_secciones_socio);
                $array_condiciones[] = " IDSeccionGaleria in(".$id_secciones.") ";
                endif;
                 */
                $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'");
                if ($id_club == 36 && $TipoSocio == "Estudiante") {
                    $array_condiciones[] = " TipoSocio = 'Estudiante'";
                } else {
                    $array_condiciones[] = " TipoSocio = ''";
                }
            endif;

            // Seccion Especifica
            if (!empty($id_seccion)):
                $array_condiciones[] = " IDSeccionGaleria  = '" . $id_seccion . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%')";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_galeria = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM Galeria WHERE (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_galeria . " Order by Fecha DESC";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    if (!empty($r["Foto"])) {
                        if (strstr(strtolower($r["Foto"]), "http://")) {
                            $foto_principal = $r["Foto"];
                        } else {
                            $foto_principal = GALERIA_ROOT . $r["Foto"];
                        }

                        //$foto_principal = GALERIA_ROOT.$r["Foto"];
                    }

                    //Fotos
                    $response_foto = array();
                    $sql_foto = "SELECT * FROM FotoGaleria WHERE IDGaleria = '" . $r["IDGaleria"] . "' ORDER BY Orden ASC";
                    $qry_foto = $dbo->query($sql_foto);
                    if ($dbo->rows($qry_foto) > 0) {
                        while ($r_foto = $dbo->fetchArray($qry_foto)) {
                            $foto_galeria["IDClub"] = $id_club;
                            $foto_galeria["IDFoto"] = $r_foto["IDFoto"];
                            $foto_galeria["IDGaleria"] = $r_foto["IDGaleria"];
                            $foto_galeria["Nombre"] = $r_foto["Nombre"];
                            $foto_galeria["Orden"] = $r_foto["Orden"];
                            $foto_galeria["Descripcion"] = $r_foto["Descripcion"];
                            if (!empty($r_foto["Foto"])):
                                if (strstr(strtolower($r_foto["Foto"]), "http://")) {
                                    $foto = $r_foto["Foto"];
                                } else {
                                    $foto = GALERIA_ROOT . $r_foto["Foto"];
                                } else :
                                $foto = "";
                            endif;
                            $foto_galeria["Foto"] = $foto;
                            array_push($response_foto, $foto_galeria);

                        } //ednw hile
                    }

                    $datos_galeria["IDClub"] = $r["IDClub"];
                    $datos_galeria["IDSeccionGaleria"] = $r["IDSeccionGaleria"];
                    $datos_galeria["IDGaleria"] = $r["IDGaleria"];
                    $datos_galeria["Nombre"] = $r["Nombre"];
                    $datos_galeria["Descripcion"] = $r["Descripcion"];
                    $datos_galeria["Fecha"] = $r["Fecha"];
                    $datos_galeria["Foto"] = $foto_principal;
                    $datos_galeria["FotoGaleria"] = $response_foto;
                    array_push($response, $datos_galeria);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_galeria_empleados($id_club, $id_seccion = "", $id_usuario = "", $tag = "")
    {
            $dbo = &SIMDB::get();

            // Secciones Socio
            if (!empty($id_usuario)):
                $sql_seccion_empleado = $dbo->query("Select * From UsuarioSeccionGaleria Where IDSocio = '" . $id_usuario . "'");
                while ($row_seccion = $dbo->fetchArray($sql_seccion_empleado)):
                    $array_secciones_empleado[] = $row_seccion["IDSeccionGaleria"];
                endwhile;

                if (count($array_secciones_empleado) > 0):
                    $id_secciones = implode(",", $array_secciones_empleado);
                    $array_condiciones[] = " IDSeccionGaleria in(" . $id_secciones . ") ";
                endif;
            endif;

            // Seccion Especifica
            if (!empty($id_seccion)):
                $array_condiciones[] = " IDSeccionGaleria  = '" . $id_seccion . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%')";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_galeria = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM Galeria WHERE (DirigidoA = 'E' or DirigidoA = 'T' ) and Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_galeria . "ORDER BY IDGaleria DESC";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    if (!empty($r["Foto"])) {
                        if (strstr(strtolower($r["Foto"]), "http://")) {
                            $foto_principal = $r["Foto"];
                        } else {
                            $foto_principal = GALERIA_ROOT . $r["Foto"];
                        }

                        //$foto_principal = GALERIA_ROOT.$r["Foto"];
                    }

                    //Fotos
                    $response_foto = array();
                    $sql_foto = "SELECT * FROM FotoGaleria WHERE IDGaleria = '" . $r["IDGaleria"] . "' ORDER BY RAND()";
                    $qry_foto = $dbo->query($sql_foto);
                    if ($dbo->rows($qry_foto) > 0) {
                        while ($r_foto = $dbo->fetchArray($qry_foto)) {
                            $foto_galeria["IDClub"] = $id_club;
                            $foto_galeria["IDFoto"] = $r_foto["IDFoto"];
                            $foto_galeria["IDGaleria"] = $r_foto["IDGaleria"];
                            $foto_galeria["Nombre"] = $r_foto["Nombre"];
                            $foto_galeria["Orden"] = $r_foto["Orden"];
                            $foto_galeria["Descripcion"] = $r_foto["Descripcion"];
                            if (!empty($r_foto["Foto"])):
                                if (strstr(strtolower($r_foto["Foto"]), "http://")) {
                                    $foto = $r_foto["Foto"];
                                } else {
                                    $foto = GALERIA_ROOT . $r_foto["Foto"];
                                } else :
                                $foto = "";
                            endif;
                            $foto_galeria["Foto"] = $foto;
                            array_push($response_foto, $foto_galeria);

                        } //ednw hile
                    }

                    $datos_galeria["IDClub"] = $r["IDClub"];
                    $datos_galeria["IDSeccionGaleria"] = $r["IDSeccionGaleria"];
                    $datos_galeria["IDGaleria"] = $r["IDGaleria"];
                    $datos_galeria["Nombre"] = $r["Nombre"];
                    $datos_galeria["Descripcion"] = $r["Descripcion"];
                    $datos_galeria["Fecha"] = $r["Fecha"];
                    $datos_galeria["Foto"] = $foto_principal;
                    $datos_galeria["FotoGaleria"] = $response_foto;
                    array_push($response, $datos_galeria);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_socios_club($id_club, $numero_documento = "", $numero_derecho = "", $tag = "", $IDSocio = "", $Titular = "")
    {
            $dbo = &SIMDB::get();

            $foto = "";

            // Secciones Socio
            if (!empty($numero_documento)):
                $array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
            endif;

            // Seccion Especifica
            if (!empty($numero_derecho)):
                $array_condiciones[] = " Accion  = '" . $numero_derecho . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $tag = utf8_decode($tag);
                $array_buscar = explode(" ", $tag);
                foreach ($array_buscar as $key => $value) {
                    $array_condiciones_nombre[] = " (	Nombre  like '%" . $value . "%' or Apellido like '%" . $value . "%' or Accion like '%" . $value . "%' or NumeroDocumento like '%" . $value . "%' or Accion like '%" . $value . "%' or Predio like '%" . $value . "%' )";
                }
                if (count($array_condiciones_nombre) > 0) {
                    $condicion_nombre = implode(" and ", $array_condiciones_nombre);
                }

                $array_condiciones[] = $condicion_nombre;
            endif;

            if (!empty($IDSocio) && empty($tag)):
                $sql_fav = "SELECT * FROM SocioFavorito WHERE IDSocio = '" . $IDSocio . "'";
                $qry_fav = $dbo->query($sql_fav);
                while ($r_fav = $dbo->fetchArray($qry_fav)) {
                    $array_favoritos[] = $r_fav["IDSocio2"];
                }
                if (count($array_favoritos) > 0):
                    $array_condiciones[] = " IDSocio  in  (" . implode(",", $array_favoritos) . ")";
                else:
                    $array_condiciones[] = " IDSocio  in  (0)";
                endif;
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_noticia = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and (IDEstadoSocio = 1 OR IDEstadoSocio = 5) and IDSocio <> '" . $IDSocio . "'" . $condiciones_noticia . " ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {

                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $evento["IDClub"] = $r["IDClub"];
                    $evento["IDSocio"] = $r["IDSocio"];

                    if (!empty($r["Foto"])) {
                        $foto = SOCIO_ROOT . $r["Foto"];
                    }

                    $favorito = "N";
                    if (!empty($IDSocio)):
                        $socio_favorito = $dbo->getFields("SocioFavorito", "IDSocioFavorito", "IDSocio = '" . $IDSocio . "' and IDSocio2 = '" . $r["IDSocio"] . "'");
                        if (!empty($socio_favorito)):
                            $favorito = "S";
                        else:
                            $favorito = "N";
                        endif;
                    endif;

                    $evento["Foto"] = $foto;
                    $evento["Socio"] = $r["Nombre"] . " " . $r["Apellido"];
                    $evento["Favorito"] = $favorito;
                    $evento["NumeroDerecho"] = $r["Accion"];
                    $evento["Predio"] = $r["Predio"];
                    array_push($response, $evento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "Por favor utilice el buscador, no se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_info_socio($IDClub, $IDSocio, $AppVersion, $Data, $TipoApp)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $id_club = $IDClub;

            if ($AppVersion >= 31 && !empty($Data)) {
                $valornonce = substr($Data, 0, 48);
                $valorencrip = substr($Data, 48);
                $param['key'] = KEY_API;
                $param['chiper'] = $valorencrip;
                $param['nonce'] = $valornonce;
                $result_decrypt = SIMUtil::decryptSodium($param);
                if ($result_decrypt["decryptedText"] == "nodecrypt") {
                    $respuesta["message"] = "ENCRIPT. No";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                } else {
                    $result_decrypt["decryptedText"];
                    $texto_desencrip = json_decode($result_decrypt["decryptedText"]);
                    $IDSocio = $texto_desencrip;

                    $sql_campos_carne = "SELECT IDCampoCarne,Nombre,CampoTabla From CampoCarne Where 1";
                    $r_campo_carne = $dbo->query($sql_campos_carne);
                    while ($row_campo_carne = $dbo->fetchArray($r_campo_carne)) {
                        $array_campo_carne[$row_campo_carne["IDCampoCarne"]] = $row_campo_carne;
                    }

                    if ($TipoApp == "Socio") {

                        $sql_verifica = "SELECT * FROM Socio WHERE IDSocio = '" . $IDSocio . "' Limit 1";
                        $qry_verifica = $dbo->query($sql_verifica);
                        if ($dbo->rows($qry_verifica) == 0) {
                            $respuesta["message"] = "Datos no encontrados";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        } else {

                            $datos_socio = $dbo->fetchArray($qry_verifica);

                            //Borro el id de socios que tienen que cerrar sesion obligatoriamente
                            $sql_borra_sesion = "delete from CierreSesionSocio Where IDSocio ='" . $datos_socio["IDSocio"] . "' Limit 1";
                            $dbo->query($sql_borra_sesion);

                            $flag_canje_cortesia = 0;

                            //Si el socio es por canje o cortesia valido este activo segun las fechas

                            switch ($datos_socio["TipoSocio"]):
                        case "Canje":
                            $fecha_hoy = strtotime(date("Y-m-d"));
                            $FechaInicioCanje = strtotime($datos_socio["FechaInicioCanje"]);
                            $FechaFinCanje = strtotime($datos_socio["FechaFinCanje"]);
                            //echo $FechaInicioCanje.">=".$fecha_hoy ."&&". $fecha_hoy."<=".$FechaFinCanje;
                            if ($fecha_hoy >= $FechaInicioCanje && $fecha_hoy <= $FechaFinCanje):
                                $flag_canje_cortesia = 0;
                            else:
                                $flag_canje_cortesia = 1;
                            endif;
                            break;
                        case "Cortesia":
                            $fecha_hoy = strtotime(date("Y-m-d"));
                            $FechaInicioCortesia = strtotime($datos_socio["FechaInicioCortesia"]);
                            $FechaFinCortesia = strtotime($datos_socio["FechaFinCortesia"]);
                            if ($fecha_hoy >= $FechaInicioCortesia && $fecha_hoy <= $FechaFinCortesia):
                                $flag_canje_cortesia = 0;
                            else:
                                $flag_canje_cortesia = 1;
                            endif;
                            break;
                        case "Invitado":
                            $fecha_hoy = strtotime(date("Y-m-d"));
                            $FechaInicioInvitado = strtotime($datos_socio["FechaInicioInvitado"]);
                            $FechaFinInvitado = strtotime($datos_socio["FechaFinInvitado"]);
                            if ($fecha_hoy >= $FechaInicioInvitado && $fecha_hoy <= $FechaFinInvitado):
                                $flag_canje_cortesia = 0;
                            else:
                                $flag_canje_cortesia = 1;
                            endif;
                            break;
                        default:
                            $flag_canje_cortesia = 0;
                            endswitch;

                            if ($flag_canje_cortesia == 0) {

                                    if (!empty($datos_socio["Foto"])) {
                                        $foto = SOCIO_ROOT . $datos_socio["Foto"];
                                    }

                                    $tipo_codigo_carne = $dbo->getFields("Club", "TipoCodigoCarne", "IDClub = '" . $id_club . "'");

                                    switch ($tipo_codigo_carne) {
                                        case "Barras":
                                            if (!empty($datos_socio["CodigoBarras"])) {
                                                $foto_cod_barras = SOCIO_ROOT . $datos_socio["CodigoBarras"];
                                            }
                                            break;
                                        case "QR":
                                            if (!empty($datos_socio["CodigoQR"])) {
                                                $foto_cod_barras = SOCIO_ROOT . "qr/" . $datos_socio["CodigoQR"];
                                            }
                                            break;
                                        default:
                                            $foto_cod_barras = "";
                                    }

                                    //Consulto el nucleo familiar
                                    if (!empty($datos_socio["AccionPadre"])): // Es beneficiario
                                        $condicion_nucleo = " and (AccionPadre = '" . $datos_socio["AccionPadre"] . "' or Accion = '" . $datos_socio["AccionPadre"] . "')";
                                        //$tipo_socio = "Beneficiario";
                                        $tipo_socio = $datos_socio["TipoSocio"];
                                    else: // es Cabeza familia
                                        $condicion_nucleo = " and AccionPadre = '" . $datos_socio["Accion"] . "'";
                                        //$tipo_socio = "Socio";
                                        $tipo_socio = $datos_socio["TipoSocio"];
                                    endif;

                                    if ($id_club == 50) {
                                        $tipo_socio = "Cargo: ";
                                    }

                                    $tipo_socio .= " " . $datos_socio["Predio"] . " " . $datos_socio["Torre"];

                                    $response_nucleo = array();
                                    $sql_nucleo = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and IDSocio <> '" . $datos_socio["IDSocio"] . "' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 ) " . $condicion_nucleo;
                                    $qry_nucleo = $dbo->query($sql_nucleo);
                                    while ($datos_nucleo = $dbo->fetchArray($qry_nucleo)):
                                        $foto_nucleo = "";
                                        $foto_cod_barras_nucleo = "";

                                        if (!empty($datos_nucleo["Foto"])) {
                                            $foto_nucleo = SOCIO_ROOT . $datos_nucleo["Foto"];
                                        }

                                        switch ($tipo_codigo_carne) {
                                            case "Barras":
                                                if (!empty($datos_nucleo["CodigoBarras"])) {
                                                    $foto_cod_barras_nucleo = SOCIO_ROOT . $datos_nucleo["CodigoBarras"];
                                                }
                                                break;
                                            case "QR":
                                                if (!empty($datos_nucleo["CodigoQR"])) {
                                                    $foto_cod_barras_nucleo = SOCIO_ROOT . "qr/" . $datos_nucleo["CodigoQR"];
                                                }
                                                break;
                                            default:
                                                $foto_cod_barras_nucleo = "";
                                        }

                                        //if (!empty($datos_nucleo["CodigoBarras"])){
                                        //$foto_cod_barras_nucleo =     SOCIO_ROOT.$datos_nucleo["CodigoBarras"];
                                        //}

                                        //Averiguo tipo: Socio o Beneficiario
                                        if (!empty($datos_nucleo["AccionPadre"])): // Es beneficiario
                                            $tipo_socio_nucleo = "Beneficiario";
                                            $tipo_socio_nucleo = $datos_nucleo["TipoSocio"];
                                        else: // es Cabeza familia
                                            //$tipo_socio_nucleo = "Socio";
                                            $tipo_socio_nucleo = $datos_nucleo["TipoSocio"];
                                        endif;

                                        if ($id_club == 29) {
                                            $tipo_socio_nucleo .= " " . substr(trim($datos_nucleo["Predio"]), 0, 16);
                                        } else {
                                            $tipo_socio_nucleo .= " " . trim($datos_nucleo["Predio"]);
                                        }

                                        $nucleo["IDSocio"] = $datos_nucleo[IDSocio];
                                        $nucleo["IDClub"] = $datos_nucleo[IDClub];
                                        $nucleo["Foto"] = $foto_nucleo;
                                        $nucleo["Socio"] = $datos_nucleo["Nombre"] . " " . $datos_nucleo["Apellido"];
                                        $nucleo["NumeroDerecho"] = $datos_nucleo["Accion"];
                                        $nucleo["CodigoBarras"] = $foto_cod_barras_nucleo;
                                        $nucleo["TipoSocio"] = $tipo_socio_nucleo;
                                        $nucleo["LabelEstadoUsuario"] = $datos_nucleo["LabelEstadoUsuario"];

                                        //Campos carne
                                        $array_carne_club_nucleo = array();
                                        $reponse_datos_carne_nucleo = array();
                                        $campo_mostrar_carne_nucleo = array();
                                        $CamposCarne = $dbo->getFields("Club", "CampoCarne", "IDClub = '" . $id_club . "'");
                                        if (!empty($CamposCarne)) {
                                            $array_carne_club_nucleo = explode("|||", $CamposCarne);
                                            foreach ($array_carne_club_nucleo as $DetalleCampoCarne) {
                                                $EtiquetaCarne = $array_campo_carne[$DetalleCampoCarne]["Nombre"];
                                                $DatoCarne = $datos_nucleo[$array_campo_carne[$DetalleCampoCarne]["CampoTabla"]];
                                                $campo_mostrar_carne_nucleo[] = $EtiquetaCarne . " " . $DatoCarne;
                                            }
                                        }

                                        if ($id_club == 44 && $datos_nucleo["SocioAusente"] == "S") {
                                            $campo_mostrar_carne_nucleo[] = "Eres Socio Ausente";
                                            $campo_mostrar_carne_nucleo[] = "Numero Entradas: " . $datos_nucleo["CantidadAusencias"];
                                            $campo_mostrar_carne_nucleo[] = "Accion: " . $datos_nucleo["Accion"];

                                        } elseif ($id_club == 133) {
                                        $fechaNacimiento = $datos_nucleo["FechaNacimiento"];
                                        $dia_actual = date("Y-m-d");
                                        $edad_diff = date_diff(date_create($fechaNacimiento), date_create($dia_actual));
                                        $aÃ±os = $edad_diff->format('%y');

                                        $campo_mostrar_carne_nucleo[] = "Edad Socio: " . $aÃ±os;
                                        $campo_mostrar_carne_nucleo[] = "Fecha Ingreso: " . $datos_nucleo["FechaPago"];

                                    }

                                    $nucleo["ValoresCarnet"] = $campo_mostrar_carne_nucleo;

                                    array_push($response_nucleo, $nucleo);

                                    /*
                                    $array_nucleo[$datos_nucleo[IDSocio]][IDSocio] = $datos_nucleo[IDSocio];
                                    $array_nucleo[$datos_nucleo[IDSocio]][IDClub] = $datos_nucleo[IDClub];
                                    $array_nucleo[$datos_nucleo[IDSocio]][Foto] = $foto_nucleo;
                                    $array_nucleo[$datos_nucleo[IDSocio]][Socio] = $datos_nucleo[Socio];
                                    $array_nucleo[$datos_nucleo[IDSocio]][NumeroDerecho] = $datos_nucleo[Accion];
                                    $array_nucleo[$datos_nucleo[IDSocio]][CodigoBarras] = $foto_cod_barras_nucleo;
                                     */

                                    if ($id_club == 70 || $id_club == 9) {
                                        self::set_socio_favorito($id_club, $datos_socio["IDSocio"], $datos_nucleo["IDSocio"], "S");
                                    }

                                endwhile;

                                //Preferencias Contenido
                                $response_seccion_noticia = array();
                                $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                                    $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                                    $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                                    $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                    array_push($response_seccion_noticia, $seccion_noticia);
                                    /*
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                 */
                                endwhile;

                                $response_seccion_noticia2 = array();
                                $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion2 Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                                    $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                                    $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                                    $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                    array_push($response_seccion_noticia2, $seccion_noticia);
                                    /*
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                 */
                                endwhile;

                                $response_seccion_noticia3 = array();
                                $sql_seccionnot_socio = $dbo->query("Select * From SocioSeccion3 Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                while ($r_seccionnot_socio = $dbo->fetchArray($sql_seccionnot_socio)):
                                    $seccion_noticia[IDSocio] = $datos_socio["IDSocio"];
                                    $seccion_noticia[IDClub] = $datos_socio["IDClub"];
                                    $seccion_noticia[IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                    array_push($response_seccion_noticia3, $seccion_noticia);
                                    /*
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
                                $array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
                                 */
                                endwhile;

                                //Preferencias Eventos
                                $response_seccion_evento = array();
                                $sql_seccioneve_socio = $dbo->query("Select * From SocioSeccionEvento Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                while ($r_seccioneve_socio = $dbo->fetchArray($sql_seccioneve_socio)):
                                    $seccion_evento[IDSocio] = $datos_socio["IDSocio"];
                                    $seccion_evento[IDClub] = $datos_socio["IDClub"];
                                    $seccion_evento[IDSeccionEvento] = $r_seccioneve_socio["IDSeccionEvento"];
                                    array_push($response_seccion_evento, $seccion_evento);
                                endwhile;

                                //Socios Favoritos
                                $response_favoritos = array();
                                $sql_favorito_socio = $dbo->query("Select * From SocioFavorito Where IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                while ($r_favorito_socio = $dbo->fetchArray($sql_favorito_socio)):
                                    $favorito_socio[IDSocio] = $r_favorito_socio["IDSocio2"];
                                    array_push($response_favoritos, $favorito_socio);
                                endwhile;

                                $response["IDClub"] = $datos_socio["IDClub"];
                                $response["IDSocio"] = $datos_socio["IDSocio"];
                                $response["Foto"] = $foto;
                                $response["Socio"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                                $response["Nombre"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                                $response["Apellido"] = $datos_socio["Apellido"];
                                $response["Celular"] = $datos_socio["Celular"];
                                $response["CorreoElectronico"] = $datos_socio["CorreoElectronico"];
                                $response["Direccion"] = $datos_socio["Direccion"];
                                $response["EstadoCivil"] = $datos_socio["EstadoCivil"];
                                $response["NumeroDocumento"] = $datos_socio["NumeroDocumento"];

                                if ($id_club == 46) {
                                    $dato_carne = utf8_encode($datos_socio["NumeroDocumento"]);
                                } elseif ($id_club == 44 && !empty($datos_socio["CodigoCarne"])) {
                                    $dato_carne = $datos_socio["CodigoCarne"];
                                } elseif ($id_club == 133) {
                                    $dato_carne = $datos_socio["AccionPadre"];
                                } else {
                                    $dato_carne = $datos_socio["Accion"];
                                }

                                $response["NumeroDerecho"] = $dato_carne;
                                $response["CodigoBarras"] = $foto_cod_barras;
                                $response["NucleoFamiliar"] = $response_nucleo;
                                $response["PreferenciasContenido"] = $response_seccion_noticia;
                                $response["PreferenciasContenido2"] = $response_seccion_noticia2;
                                $response["PreferenciasEvento"] = $response_seccion_evento;
                                $response["SocioFavorito"] = $response_favoritos;
                                $response["Dispositivo"] = $datos_socio["Dispositivo"];
                                $response["Token"] = $datos_socio["Token"];
                                $response["TipoSocio"] = $tipo_socio;
                                $response["TipoUsuario"] = "Socio";
                                $response["LabelEstadoUsuario"] = $datos_socio["LabelEstadoUsuario"];

                                //Campos carne
                                $array_carne_club = array();
                                $reponse_datos_carne = array();
                                $campo_mostrar_carne = array();
                                $CamposCarne = $dbo->getFields("Club", "CampoCarne", "IDClub = '" . $id_club . "'");
                                if (!empty($CamposCarne)) {
                                    $array_carne_club = explode("|||", $CamposCarne);
                                    foreach ($array_carne_club as $DetalleCampoCarne) {
                                        $EtiquetaCarne = $array_campo_carne[$DetalleCampoCarne]["Nombre"];
                                        $DatoCarne = $datos_socio[$array_campo_carne[$DetalleCampoCarne]["CampoTabla"]];
                                        $campo_mostrar_carne[] = $EtiquetaCarne . " " . $DatoCarne;
                                    }
                                }

                                if ($id_club == 44 && $datos_socio["SocioAusente"] == "S") {
                                    $campo_mostrar_carne[] = "Eres Socio Ausente";
                                    $campo_mostrar_carne[] = "Numero Entradas: " . $datos_socio["CantidadAusencias"];
                                    $campo_mostrar_carne[] = "Accion: " . $datos_socio["Accion"];
                                } elseif ($id_club == 133) {
                                    $fechaNacimiento = $datos_socio["FechaNacimiento"];
                                    $dia_actual = date("Y-m-d");
                                    $edad_diff = date_diff(date_create($fechaNacimiento), date_create($dia_actual));
                                    $aÃ±os = $edad_diff->format('%y');

                                    $campo_mostrar_carne[] = "Edad Socio: " . $aÃ±os;
                                    $campo_mostrar_carne[] = "Fecha Ingreso: " . $datos_socio["FechaPago"];

                                }

                                $response["ValoresCarnet"] = $campo_mostrar_carne;

                                //Si el club tiene configurado para solciitar cambio de clave al primer ingreso o el usuario esta marcado para cambio de clave
                                $cambio_clave_club = $dbo->getFields("Club", "SolicitaCambioClave", "IDClub = '" . $datos_socio["IDClub"] . "'");
                                if ((empty($datos_socio["Token"]) && empty($datos_socio["Token"])) && $cambio_clave_club == "S" && (empty($datos_socio["CambioClave"]) || $datos_socio["CambioClave"] == "S")):
                                    $cambiar_clave = "S";
                                elseif ($cambio_clave_club == "S"):
                                    $cambiar_clave = "S";
                                else:
                                    $cambiar_clave = "N";
                                endif;
                                $response["CambioClave"] = $datos_socio["CambioClave"];
                                $response["CambioSegundaClave"] = $datos_socio["CambioSegundaClave"];

                                //Datos mostrar al editar perfil
                                $response_campo_editar = array();
                                /*
                                $sql_campo_editar = "SELECT CES.* FROM ClubCampoEditarSocio CCES,CampoEditarSocio CES
                                WHERE CCES.`IDCampoEditarSocio`=CES.IDCampoEditarSocio and CCES.IDClub = '" . $id_club . "' ORDER BY CES.Orden";
                                 */

                                $sql_campo_editar = "SELECT CES.* FROM CampoEditarSocio CES
																			WHERE CES.IDClub = '" . $datos_socio["IDClub"] . "' ORDER BY CES.Orden";

                                $qry_campo_editar = $dbo->query($sql_campo_editar);
                                if ($dbo->rows($qry_campo_editar) > 0) {
                                    while ($r_campo_editar = $dbo->fetchArray($qry_campo_editar)) {
                                        $campo_editar["IDCampoEditarSocio"] = $r_campo_editar["IDCampoEditarSocio"];
                                        $campo_editar["Nombre"] = $r_campo_editar["Nombre"];
                                        $campo_editar["Tipo"] = $r_campo_editar["Tipo"];
                                        $campo_editar["Valores"] = trim(preg_replace('/\s+/', ' ', $r_campo_editar["Valores"]));
                                        $campo_editar["PermiteEditar"] = $r_campo_editar["PermiteEditar"];
                                        //Consulto el valor de la actualizaciÃ³n
                                        $ValorDatoCampo = $dbo->getFields("SocioCampoEditarSocio", "Valor", "IDCampoEditarSocio = '" . $r_campo_editar["IDCampoEditarSocio"] . "' and IDSocio = '" . $datos_socio["IDSocio"] . "'");
                                        if ($ValorDatoCampo != "" && $ValorDatoCampo != "false") {
                                            $ValorDato = $ValorDatoCampo;
                                        } else {
                                            $ValorDato = $datos_socio[$r_campo_editar["Nombre"]];

                                        }

                                        //$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
                                        $campo_editar["ValorActual"] = trim(preg_replace('/\s+/', ' ', $ValorDato));

                                        $campo_editar["Obligatorio"] = $r_campo_editar["Obligatorio"];
                                        array_push($response_campo_editar, $campo_editar);

                                    } //ednw while
                                }
                                $response["CampoEditar"] = $response_campo_editar;

                                if ($AppVersion >= 31) {
                                    $respuesta = json_encode($response);
                                    $param['key'] = KEY_API;
                                    $param['nonce'] = sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
                                    $param['msg'] = $respuesta;
                                    $result = SIMUtil::cryptSodium($param);

                                    //$response_encrip=array();
                                    //$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
                                    $respuesta = array();
                                    $respuesta["message"] = "ok";
                                    $respuesta["success"] = true;
                                    $respuesta["response"] = $param['nonce'] . sodium_bin2hex($result["cryptedText"]);

                                } else {
                                    $respuesta["message"] = "ok";
                                    $respuesta["success"] = true;
                                    $respuesta["response"] = $response;
                                }

                        } else {
                            $respuesta["message"] = "Lo sentimos, las fechas de la cortesia o canje ya vencieron";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    }
                } else {

                    //Es un empleado
                    $sql_verifica = "SELECT * FROM Usuario WHERE IDUsuario = '" . $IDSocio . "'  and IDClub ='" . $id_club . "'";
                    $qry_verifica = $dbo->query($sql_verifica);
                    $datos_usuario = $dbo->fetchArray($qry_verifica);

                    if ($dbo->rows($qry_verifica) == 0) {
                        $respuesta["message"] = "No encontrado";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    } //end if
                    else {

                            $CerrarSesion = $datos_usuario["SolicitarCierreSesion"];
                            if ($CerrarSesion == "S") {
                                $condicion_modulo = " and IDModulo = 14 "; //cerrar sesion
                            }

                            //Modulos Sistema Menu Central
                            $response_modulo = array();
                            $sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Central%' " . $condicion_modulo . " ORDER BY Orden";
                            $qry_modulo = $dbo->query($sql_modulo);
                            if ($dbo->rows($qry_modulo) > 0) {
                                while ($r_modulo = $dbo->fetchArray($qry_modulo)) {

                                    $agregar_modulo = SIMWebserviceApp::verifica_permiso_modulo($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

                                    if ($agregar_modulo == "S"):
                                        // Verificar si el modulo tiene contenido para mostrar
                                        $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
                                        //$flag_mostrar=0;
                                        if ($flag_mostrar == 0):
                                            $modulo["IDClub"] = $datos_usuario["IDClub"];
                                            $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                            if (!empty($r_modulo["Titulo"])) {
                                                $modulo["NombreModulo"] = $r_modulo["Titulo"];
                                            } else {
                                                $modulo["NombreModulo"] = $dbo->getFields("Modulo", "Nombre", "IDModulo = '" . $r_modulo["IDModulo"] . "'");
                                            }

                                            $modulo["Orden"] = $r_modulo["Orden"];
                                            $icono_modulo = $r_modulo["Icono"];
                                            if (!empty($r_modulo["Icono"])):
                                                $foto = MODULO_ROOT . $r_modulo["Icono"];
                                            else:
                                                $foto = "";
                                            endif;
                                            $modulo["Icono"] = $foto;
                                            array_push($response_modulo, $modulo);
                                        endif;
                                    endif;

                                } //ednw while
                            }

                            //Modulos Sistema Menu Lateral
                            unset($modulo);
                            $response_modulo_lateral = array();
                            $sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Lateral%'  " . $condicion_modulo . " ORDER BY Orden";
                            $qry_modulo = $dbo->query($sql_modulo);
                            if ($dbo->rows($qry_modulo) > 0) {

                                while ($r_modulo = $dbo->fetchArray($qry_modulo)) {
                                    $agregar_modulo = SIMWebserviceApp::verifica_permiso_modulo($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

                                    if ($agregar_modulo == "S"):
                                        // Verificar si el modulo tiene contenido para mostrar
                                        $flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
                                        //$flag_mostrar=0;
                                        if ($flag_mostrar == 0):
                                            $modulo["IDClub"] = $datos_usuario["IDClub"];
                                            $modulo["IDModulo"] = $r_modulo["IDModulo"];
                                            //$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
                                            if (!empty($r_modulo["Titulo"])) {
                                                $modulo["NombreModulo"] = $r_modulo["Titulo"];
                                            } else {
                                                $modulo["NombreModulo"] = $dbo->getFields("Modulo", "Nombre", "IDModulo = '" . $r_modulo["IDModulo"] . "'");
                                            }

                                            $modulo["Orden"] = $r_modulo["Orden"];
                                            $icono_modulo = $r_modulo["Icono"];
                                            if (!empty($r_modulo["Icono"])):
                                                $foto = MODULO_ROOT . $r_modulo["Icono"];
                                            else:
                                                $foto = "";
                                            endif;
                                            $modulo["Icono"] = $foto;
                                            array_push($response_modulo_lateral, $modulo);
                                        endif;
                                    endif;

                                } //ednw while
                            }

                            //traer servicios del usuario
                            $response_servicio = array();
                            $sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $datos_usuario["IDUsuario"] . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
                            $qry_servicios = $dbo->query($sql_servicios);
                            while ($r_servicio = $dbo->fetchArray($qry_servicios)) {
                                $servicio["IDClub"] = $datos_usuario["IDClub"];
                                $servicio["IDServicio"] = $r_servicio["IDServicio"];
                                $servicio["NombreServicio"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' ");
                                if (!empty($r_servicio["Icono"])):
                                    $foto = SERVICIO_ROOT . $r_servicio["Icono"];
                                else:
                                    $foto = "";
                                endif;

                                $servicio["Icono"] = $foto;
                                //$servicio["ServicioInicial"] = $dbo->getFields( "ServicioInicial" , "Nombre" , "IDServicioInicial = '".$r_servicio["IDServicioInicial"]."'" );
                                array_push($response_servicio, $servicio);

                            } //end while

                            $tipo_codigo_carne = $dbo->getFields("AppEmpleado", "TipoCodigoCarne", "IDClub = '" . $id_club . "'");
                            switch ($tipo_codigo_carne) {
                                case "Barras":
                                    if (!empty($datos_usuario["CodigoBarras"])) {
                                        $foto_cod_barras = USUARIO_ROOT . $datos_usuario["CodigoBarras"];
                                    }
                                    break;
                                case "QR":
                                    if (!empty($datos_usuario["CodigoQR"])) {
                                        $foto_cod_barras = USUARIO_ROOT . "qr/" . $datos_usuario["CodigoQR"];
                                    }
                                    break;
                                default:
                                    $foto_cod_barras = "";
                            }

                            if (!empty($datos_usuario["Foto"])) {
                                $foto_empleado = USUARIO_ROOT . $datos_usuario["Foto"];
                            }

                            $response["IDClub"] = $datos_usuario["IDClub"];
                            $response["IDUsuario"] = $datos_usuario["IDUsuario"];
                            $response["IDPerfil"] = $datos_usuario["IDPerfil"];
                            $response["Nombre"] = $datos_usuario["Nombre"];
                            $response["Autorizado"] = $datos_usuario["Autorizado"];
                            $response["Nivel"] = $datos_usuario["Nivel"];
                            $response["Permiso"] = $datos_usuario["Permiso"];
                            $response["ServiciosReserva"] = $response_servicio;
                            $response["Modulos"] = $response_modulo;
                            $response["ModulosLateral"] = $response_modulo_lateral;
                            $response["CodigoBarras"] = $foto_cod_barras;
                            $response["Dispositivo"] = $datos_usuario["Dispositivo"];
                            $response["Token"] = $datos_usuario["Token"];
                            //$response["NumeroDerecho"] = $datos_usuario["CodigoUsuario"];
                            $response["NumeroDerecho"] = "";
                            //Consulto si el app esta configurado para permitir se puede cambiar p[ara que sea por usuario
                            $response["PermiteInvitacionPortero"] = $dbo->getFields("AppEmpleado", "PermiteInvitacionPortero", "IDClub = '" . $id_club . "'");
                            //Consulto las areas
                            $sql_area_usuario = "Select * From UsuarioArea Where IDUsuario = '" . $datos_usuario["IDUsuario"] . "'";
                            $result_area_usuario = $dbo->query($sql_area_usuario);
                            while ($row_area = $dbo->fetchArray($result_area_usuario)):
                                $nombre_area = utf8_encode($dbo->getFields("Area", "Nombre", "IDArea = '" . $row_area["IDArea"] . "'"));
                                $array_areas[] = $nombre_area;
                            endwhile;
                            if (count($array_areas) > 0):
                                $nombre_areas = implode(",", $array_areas);
                            endif;

                            $nombre_areas = "";
                            $response["Area"] = $nombre_areas;
                            $response["Cargo"] = utf8_encode($datos_usuario["Cargo"]);
                            $response["Codigo"] = $datos_usuario["CodigoUsuario"];
                            $response["PermiteReservar"] = $datos_usuario["PermiteReservar"];
                            $response["Activo"] = $datos_usuario["Activo"];
                            $response["Foto"] = $foto_empleado;
                            $response["TipoUsuario"] = "Empleado";

                            //Encuestas al abrir app
                            $encuesta_activa = 0;
                            $response_encuesta = array();
                            $sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
                            $qry_encuesta = $dbo->query($sql_encuesta);
                            if ($dbo->rows($qry_encuesta) > 0) {
                                while ($r_encuesta = $dbo->fetchArray($qry_encuesta)) {
                                    $mostrar_encuesta = 0;
                                    //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                    if ($r_encuesta["UnaporSocio"] == "S") {
                                        $sql_resp = "Select IDEncuesta From EncuestaRespuesta Where IDSocio = '" . $datos_usuario["IDUsuario"] . "' and IDEncuesta = '" . $r_encuesta["IDEncuesta"] . "' Limit 1";
                                        $r_resp = $dbo->query($sql_resp);
                                        if ($dbo->rows($r_resp) <= 0) {
                                            $mostrar_encuesta = 1;
                                        }
                                    } else {
                                        $mostrar_encuesta = 1;
                                    }
                                    //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                    //$permiso_encuesta=SIMWebServiceApp::verifica_ver_encuesta($r_encuesta,$IDSocio);
                                    $permiso_encuesta = 1;

                                    if ($mostrar_encuesta == 1 && $permiso_encuesta == 1) {
                                        $encuesta["IDClub"] = $r_encuesta["IDClub"];
                                        $encuesta["IDEncuesta"] = $r_encuesta["IDEncuesta"];
                                        $encuesta["Nombre"] = $r_encuesta["Nombre"];
                                        $encuesta["Descripcion"] = $r_encuesta["Descripcion"];
                                        if (!empty($r_encuesta["Imagen"])):
                                            $foto = BANNERAPP_ROOT . $r_encuesta["Imagen"];
                                        else:
                                            $foto = "";
                                        endif;
                                        $encuesta["ImagenEncuesta"] = $foto;
                                        $encuesta_activa = 1;

                                        array_push($response_encuesta, $encuesta);
                                    }

                                } //ednw while
                            }
                            //FIN Encuestas al abrir app
                            $response["Encuesta"] = $response_encuesta;
                            $response["LabelEncuesta"] = "Encuesta";

                            //Autodisagnostico al abrir app
                            $diagnostico_activa = 0;
                            $response_diagnostico = array();
                            $sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
                            $qry_diagnostico = $dbo->query($sql_diagnostico);
                            if ($dbo->rows($qry_diagnostico) > 0) {
                                while ($r_diagnostico = $dbo->fetchArray($qry_diagnostico)) {
                                    $mostrar_disgnostico = 0;
                                    //Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestÃ³ para mostrarla o no
                                    if ($r_diagnostico["UnaporSocio"] == "S") {
                                        $sql_resp = "Select IDDiagnostico From DiagnosticoRespuesta Where IDUsuario = '" . $IDUsuario . "' and IDDiagnostico = '" . $r_diagnostico["IDDiagnostico"] . "' Limit 1";
                                        $r_resp = $dbo->query($sql_resp);
                                        if ($dbo->rows($r_resp) <= 0) {
                                            $mostrar_disgnostico = 1;
                                        }
                                    } else {
                                        $mostrar_disgnostico = 1;
                                    }
                                    //Verifico si la encuesta es solo para algunos socios para mostrar o no
                                    $permiso_diagnostico = SIMWebServiceApp::verifica_ver_diagnostico($r_diagnostico, $IDSocio, $IDUsuario);
                                    //$permiso_encuesta=1;

                                    if ($mostrar_disgnostico == 1 && $permiso_diagnostico == 1) {
                                        $diagnostico["IDClub"] = $r_diagnostico["IDClub"];
                                        $diagnostico["IDDiagnostico"] = $r_diagnostico["IDDiagnostico"];
                                        $diagnostico["Nombre"] = $r_diagnostico["Nombre"];
                                        $diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
                                        if (!empty($r_diagnostico["Imagen"])):
                                            $foto = BANNERAPP_ROOT . $r_diagnostico["Imagen"];
                                        else:
                                            $foto = "";
                                        endif;
                                        $diagnostico["ImagenDiagnostico"] = $foto;
                                        $diagnostico_activa = 1;

                                        array_push($response_diagnostico, $diagnostico);
                                    }

                                } //ednw while
                            }
                            //FIN Encuestas al abrir app
                            $response["Diagnostico"] = $response_diagnostico;
                            $response["LabelDiagnostico"] = "Diligenciar auto";

                            $response_campo_editar = array();
                            $sql_campo_editar = "SELECT CEU.* FROM CampoEditarUsuario CEU
																							WHERE CEU.IDClub = '" . $datos_usuario["IDClub"] . "' ORDER BY CEU.Orden";

                            $qry_campo_editar = $dbo->query($sql_campo_editar);
                            if ($dbo->rows($qry_campo_editar) > 0) {
                                while ($r_campo_editar = $dbo->fetchArray($qry_campo_editar)) {
                                    $campo_editar["IDCampoEditarSocio"] = $r_campo_editar["IDCampoEditarUsuario"];
                                    $campo_editar["Nombre"] = $r_campo_editar["Nombre"];
                                    $campo_editar["Tipo"] = $r_campo_editar["Tipo"];
                                    $campo_editar["Valores"] = $r_campo_editar["Valores"];
                                    $campo_editar["PermiteEditar"] = $r_campo_editar["PermiteEditar"];
                                    //Consulto el valor de la actualizaciÃ³n
                                    $ValorDatoCampo = $dbo->getFields("UsuarioCampoEditarUsuario", "Valor", "IDCampoEditarUsuario = '" . $r_campo_editar["IDCampoEditarUsuario"] . "' and IDUsuario = '" . $datos_usuario["IDUsuario"] . "'");
                                    if ($ValorDatoCampo != "" && $ValorDatoCampo != "false") {
                                        $ValorDato = $ValorDatoCampo;
                                    } else {
                                        $ValorDato = $datos_socio[$r_campo_editar["Nombre"]];

                                    }

                                    //$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
                                    $campo_editar["ValorActual"] = $ValorDato;

                                    $campo_editar["Obligatorio"] = $r_campo_editar["Obligatorio"];
                                    array_push($response_campo_editar, $campo_editar);

                                } //ednw while
                            }
                            $response["CampoEditar"] = $response_campo_editar;

                            if ($AppVersion >= 31) {
                                $respuesta = json_encode($response);
                                $param['key'] = KEY_API;
                                $param['nonce'] = sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
                                $param['msg'] = $respuesta;
                                $result = SIMUtil::cryptSodium($param);

                                //$response_encrip=array();
                                //$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
                                $respuesta = array();
                                $respuesta["message"] = "ok";
                                $respuesta["success"] = true;
                                $respuesta["response"] = $param['nonce'] . sodium_bin2hex($result["cryptedText"]);

                            } else {
                                $respuesta["message"] = "ok";
                                $respuesta["success"] = true;
                                $respuesta["response"] = $response;
                            }

                        }

                    }

                }

            } else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = true;
                $respuesta["response"] = null;
            }

            /*
            $sql = "SELECT * FROM Socio WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "'";
            $qry = $dbo->query( $sql );
            if ( $dbo->rows( $qry ) > 0 ) {

            $message = $dbo->rows( $qry ) . " Encontrados";
            while ( $r = $dbo->fetchArray( $qry ) ) {
            $informacion[ "IDClub" ] = $r[ "IDClub" ];
            $informacion[ "IDSocio" ] = $r[ "IDSocio" ];

            if ( !empty( $r[ "Foto" ] ) ) {
            $foto = SOCIO_ROOT . $r[ "Foto" ];
            }
            $informacion[ "Foto" ] = $foto;
            $informacion[ "Accion" ] = $r[ "Accion" ];
            $informacion[ "DireccionDomicilio" ] = utf8_encode( $r[ "Direccion" ]);
            $informacion[ "Telefono" ] = utf8_encode( $r[ "Telefono" ]);
            $informacion[ "DireccionOficina" ] = utf8_encode( $r[ "DireccionOficina" ]);
            $informacion[ "TelefonoOficina" ] = utf8_encode( $r[ "TelefonoOficina" ]);
            $informacion[ "Celular" ] = utf8_encode( $r[ "Celular" ]);
            $informacion[ "CorreoElectronico" ] = utf8_encode( $r[ "CorreoElectronico" ]);
            array_push( $response, $informacion );

            } //ednw hile
            $respuesta[ "message" ] = $message;
            $respuesta[ "success" ] = true;
            $respuesta[ "response" ] = $response;
            } //End if
            else {
            $respuesta[ "message" ] = "No se encontraron registros";
            $respuesta[ "success" ] = true;
            $respuesta[ "response" ] = NULL;
            } //end else
             */

            return $respuesta;

        } // fin function

        public function get_invitado_general($id_club, $numero_documento = "", $tag = "")
    {
            $dbo = &SIMDB::get();

            // Doc
            if (!empty($numero_documento)):
                $array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
            endif;

            // Tag
            if (!empty($tag)):
                $array_condiciones[] = " (	Nombre  like '%" . $tag . "%' or Apellido like '%" . $tag . "%' or Email like '%" . $tag . "%' or NumeroDocumento like '%" . $tag . "%' )";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
                $condiciones_noticia = " and " . $condiciones;
            endif;

            $response = array();
            $sql = "SELECT * FROM Invitado WHERE 1 " . $condiciones_noticia . " ORDER BY Nombre ";

            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $datos_invitado["IDInvitado"] = $r["IDInvitado"];
                    $datos_invitado["IDTipoDocumento"] = $r["IDTipoDocumento"];
                    $datos_invitado["NumeroDocumento"] = $r["NumeroDocumento"];
                    $datos_invitado["Nombre"] = utf8_encode($r["Nombre"]);
                    $datos_invitado["Apellido"] = utf8_encode($r["Apellido"]);
                    $datos_invitado["Direccion"] = $r["Direccion"];
                    $datos_invitado["Telefono"] = $r["Telefono"];
                    $datos_invitado["Email"] = $r["Email"];
                    $datos_invitado["FechaNacimiento"] = $r["FechaNacimiento"];

                    array_push($response, $datos_invitado);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "Por favor utilice el buscador, no se encontraron registros";
                $respuesta["success"] = true;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_invitado_dia_socio($IDClub, $NumeroDocumento = "", $Nombre = "", $Fecha, $IDSocio)
    {
            $dbo = &SIMDB::get();

            // Secciones Socio
            if (!empty($NumeroDocumento)):
                $array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
            endif;

            // Seccion Especifica
            if (!empty($Nombre)):
                $array_condiciones[] = " Nombre  = '%" . $Nombre . "%'";
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
            endif;

            if (count($array_condiciones) > 0):
                $condiciones = implode(" and ", $array_condiciones);
            endif;

            $response = array();
            $sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and FechaIngreso = '" . $Fecha . "'" . $condiciones . " ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $datos_invitado["IDClub"] = $r["IDClub"];
                    $datos_invitado["IDSocio"] = $r["IDSocio"];
                    $datos_invitado["NumeroDocumento"] = $r["NumeroDocumento"];
                    $datos_invitado["Nombre"] = utf8_encode($r["Nombre"]);
                    $datos_invitado["FechaIngreso"] = $r["FechaIngreso"];
                    array_push($response, $datos_invitado);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "Por favor utilice el buscador , no se encontraron registros";
                $respuesta["success"] = true;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } // fin function

        public function get_servicios($id_club, $TipoApp = "", $IDUsuario = "", $IDSocio = "")
    {
            $dbo = &SIMDB::get();

            $response = array();

            //Consulto los modulos que se configuraron para un socio especifico
            $sql_tiposoc_mod = "SELECT IDServicioMaestro,InvitadoSeleccion From PermisoSocioModulo Where IDClub = '" . $id_club . "' and InvitadoSeleccion <> '' ";
            $r_tiposoc_mod = $dbo->query($sql_tiposoc_mod);
            while ($row_tiposoc_mod = $dbo->fetchArray($r_tiposoc_mod)) {
                $array_invitados = explode("|||", $row_tiposoc_mod["InvitadoSeleccion"]);
                $array_soc_id = array();
                foreach ($array_invitados as $id_invitado => $datos_invitado) {
                    if (!empty($datos_invitado)) {
                        $array_datos_invitados = explode("-", $datos_invitado);
                        $IDSocioInvitacion = $array_datos_invitados[1];
                        if ($IDSocioInvitacion > 0):
                            $array_soc_id[] = $IDSocioInvitacion;
                        endif;
                    }
                }

                $array_mod_esp = explode("|", $row_tiposoc_mod["IDServicioMaestro"]);
                foreach ($array_mod_esp as $IDModulo) {
                    if (!empty($IDModulo)) {
                        $array_id_mod_esp[$IDModulo] = $array_soc_id;
                    }
                }
            }
            //FIN Consulto los modulos que se configuraron para un socio especifico

            //reviso si tienen modulo personalizado por perfil de socio
            $TipoSocio = $dbo->getFields("Socio", "TipoSocio", "IDSocio = '" . $IDSocio . "'");
            $sql_servicio_perfil = "Select * From TipoSocioModulo Where IDClub = '" . $id_club . "' and TipoSocio = '" . $TipoSocio . "' Limit 1";
            $r_servicio_perfil = $dbo->query($sql_servicio_perfil);
            if ($dbo->rows($r_servicio_perfil) > 0) {
                $row_servicio_perfil = $dbo->fetchArray($r_servicio_perfil);
                if (!empty($row_servicio_perfil["IDServicioMaestro"])) {
                    $array_id_servicio = explode("|", $row_servicio_perfil["IDServicioMaestro"]);
                    if (count($array_id_servicio) > 0) {
                        $id_servicio_ver = implode(",", $array_id_servicio);
                        $condicion_servicio = " and IDServicioMaestro in (" . $id_servicio_ver . ")";
                    }
                }
            }

            //Consulto los servicios activos del club
            $sql_servicio_club = "Select * From  ServicioClub Where IDClub = '" . $id_club . "' and Activo = 'S'";
            $qry_servicio_club = $dbo->query($sql_servicio_club);
            $message = $dbo->rows($qry) . " Encontrados";
            while ($r_servicio_club = $dbo->fetchArray($qry_servicio_club)) {
                $array_id_servicios[] = $r_servicio_club["IDServicioMaestro"];
                $array_nom_servicios[$r_servicio_club["IDServicioMaestro"]] = $r_servicio_club["TituloServicio"];
            }

            if (count($array_id_servicios) > 0):
                $id_servicios = implode(",", $array_id_servicios);
            endif;

            //traer servicios del usuario
            if ($TipoApp == "Empleado" && !empty($IDUsuario)):
                unset($array_id_servicios);
                $id_servicios = "0";
                $response_servicio = array();
                $sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $IDUsuario . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
                $qry_servicios = $dbo->query($sql_servicios);
                while ($r_servicio = $dbo->fetchArray($qry_servicios)) {
                    $array_id_servicios[] = $r_servicio["IDServicioMaestro"];

                } //end while
                if (count($array_id_servicios) > 0):
                    $id_servicios = implode(",", $array_id_servicios);
                endif;
            endif;

            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $id_club . "' and IDServicioMaestro in (" . $id_servicios . ") " . $condicion_servicio . " ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $servicio["IDClub"] = $r["IDClub"];
                    $servicio["IDServicio"] = $r["IDServicio"];

                    //Si tiene un nombre personalizado se lo pongo de lo contrario le pongo el general
                    if (!empty($array_nom_servicios[$r["IDServicioMaestro"]])):
                        $servicio["Nombre"] = $array_nom_servicios[$r["IDServicioMaestro"]];
                    else:
                        $servicio["Nombre"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                    endif;

                    $foto = "";
                    if (!empty($r["Icono"])) {
                        $foto = SERVICIO_ROOT . $r["Icono"];
                    } else {
                        $icono_maestro = $dbo->getFields("ServicioMaestro", "Icono", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                        if (!empty($icono_maestro)) {
                            $foto = SERVICIO_ROOT . $icono_maestro;
                        }
                    }

                    $invitadoclub = "";
                    $invitadoexterno = "";
                    $servicio["Icono"] = $foto;
                    $servicio["General"] = $dbo->getFields("ServicioMaestro", "General", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");

                    //TEMPORAL....Consulto alguna disponibilidad para ver el numero de invitados, esto se debe hacer por el servicio que consulta disponibilidades
                    $id_disponibilidad = $dbo->getFields("ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r["IDServicio"] . "' and Activo <>'N'");

                    //Consulto cual es la mayor disponibildad en tiempo apara armar el dia maximo en el servicio cuando se empieza por el elemento
                    $sql_disponibilidad = "Select * From Disponibilidad Where IDServicio = '" . $r["IDServicio"] . "'";
                    $result_disponibilidad = $dbo->query($sql_disponibilidad);
                    $dia_mayor = 0;
                    while ($row_disponibilidad = $dbo->fetchArray($result_disponibilidad)) {
                        $medicion_tiempo_anticipacion = $row_disponibilidad["MedicionTiempoAnticipacion"];
                        $valor_anticipacion_turno = (int) $row_disponibilidad["Anticipacion"];
                        switch ($medicion_tiempo_anticipacion):
                    case "Dias":
                        $dias_anticipacion_turno = $valor_anticipacion_turno;
                        break;
                    case "Horas":
                        $dias_anticipacion_turno = (int) ($valor_anticipacion_turno / 24);
                        break;
                    case "Minutos":
                        $dias_anticipacion_turno = (int) ($valor_anticipacion_turno / 1440);
                        break;
                    default:
                        $dias_anticipacion_turno = 0;
                        endswitch;

                        if ((int) $dias_anticipacion_turno >= (int) $dia_mayor):
                            $dia_mayor = $dias_anticipacion_turno;
                        endif;

                    }

                    $invitadoclub = $dbo->getFields("ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r["IDServicio"] . "' and Activo <>'N'");
                    $invitadoexterno = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");

                    if (!empty($invitadoclub)):
                        $servicio["NumeroInvitadoClub"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    else:
                        $servicio["NumeroInvitadoClub"] = "";
                    endif;
                    if (!empty($invitadoexterno)):
                        $servicio["NumeroInvitadoExterno"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    else:
                        $servicio["NumeroInvitadoExterno"] = "";
                    endif;

                    /*
                    //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
                    $medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad" , "MedicionTiempoAnticipacion" , "IDDisponibilidad = '" . $id_disponibilidad  . "'" );
                    $valor_anticipacion_turno = (int)$dbo->getFields( "Disponibilidad" , "Anticipacion" , "IDDisponibilidad = '" . $id_disponibilidad  . "'" );
                    switch($medicion_tiempo_anticipacion):
                    case "Dias":
                    $dias_anticipacion_turno = $valor_anticipacion_turno;
                    break;
                    case "Horas":
                    $dias_anticipacion_turno = (int)($valor_anticipacion_turno/24);
                    break;
                    case "Minutos":
                    $dias_anticipacion_turno = (int)($valor_anticipacion_turno/1440);
                    break;
                    default:
                    $dias_anticipacion_turno = 0;
                    endswitch;
                    $servicio["DiasMaximoReserva"] = "$dias_anticipacion_turno";
                     */
                    $servicio["DiasMaximoReserva"] = "$dia_mayor";

                    //temporal lagartos

                    if ($id_club == 7 && $r["IDServicio"] == 43) { //Clases tenis especial
                            $dias_maximo_especial = 9 - (int) date("w");
                            $servicio["DiasMaximoReserva"] = "$dias_maximo_especial";
                    }

                    //FIN TEMPORAL

                    $datos_maestro = $dbo->fetchAll("ServicioMaestro", " IDServicioMaestro = '" . $r["IDServicioMaestro"] . "' ", "array");

                    if (!empty($r["LabelElementoBoton"])) {
                        $servicio["LabelElemento"] = $r["LabelElementoBoton"];
                    } else {
                        $servicio["LabelElemento"] = $datos_maestro["LabelElementoBoton"];
                    }

                    $servicio["LabelElementoSocio"] = utf8_encode($r["LabelElementoSocio"]);
                    $servicio["LabelElementoExterno"] = utf8_encode($r["LabelElementoExterno"]);

                    $labelauxiliar = $dbo->getFields("Club", "LabelAuxiliar", "IDClub = '" . $id_club . "'");
                    if (empty($labelauxiliar)) {
                        $labelauxiliar = $dbo->getFields("ServicioMaestro", "LabelAuxiliar", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                    }

                    if (!empty($r["LabelAuxiliar"])) {
                        $servicio["LabelAuxiliar"] = $r["LabelAuxiliar"];
                    } else {
                        $servicio["LabelAuxiliar"] = $datos_maestro["LabelAuxiliar"];
                    }

                    if (!empty($r["HorarioAcordeon"])) {
                        $servicio["HorarioAcordeon"] = $r["HorarioAcordeon"];
                    } else {
                        $servicio["HorarioAcordeon"] = $datos_maestro["HorarioAcordeon"];
                    }

                    if (!empty($r["LabelTipoReserva"])) {
                        $servicio["LabelTipoReserva"] = $r["LabelTipoReserva"];
                    } else {
                        $servicio["LabelTipoReserva"] = $datos_maestro["LabelTipoReserva"];
                    }

                    //$servicio[ "LabelTipoReserva" ] = $datos_maestro["LabelTipoReserva"];

                    $servicio["TextoLegal"] = $r["TextoLegal"];
                    $servicio["DiasAnticipacion"] = "$r[DiasAnticipacion]";

                    $servicio["AcordeonAbiertoPrimeraOpcion"] = "N";
                    $servicio["ColorLetraHora"] = "$r[ColorLetraHora]";
                    $servicio["ColorFondoHora"] = "$r[ColorFondoHora]";
                    $servicio["NegrillaLetraHora"] = "S";

                    if ($id_club == 25): //Gun club y Pereira no permite beneficiarios y ya estab configurado asi se pone esta validacion especial
                        $servicio["PermiteBeneficiario"] = "N";
                        $servicio["LabelBeneficiario"] = "";
                    else:

                        if (!empty($r["PermiteBeneficiario"])) {
                            $servicio["PermiteBeneficiario"] = $r["PermiteBeneficiario"];
                        } else {
                            $servicio["PermiteBeneficiario"] = $datos_maestro["PermiteBeneficiario"];
                        }

                        if (!empty($r["LabelBeneficiario"])) {
                            $servicio["LabelBeneficiario"] = $r["LabelBeneficiario"];
                        } else {
                            $servicio["LabelBeneficiario"] = $datos_maestro["LabelBeneficiario"];
                        }

                    endif;

                    $servicio["HoraDesde"] = $r["HoraHasta"];
                    $servicio["HoraCancelacion"] = $r["HoraCancelacion"];
                    $servicio["IntervaloHora"] = $r["IntervaloHora"];
                    $servicio["MinutosReserva"] = "$r[MinutosReserva]";
                    $servicio["TurnosMaximo"] = "$r[TurnosMaximo]";
                    $id_servicio_inicial = $dbo->getFields("ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                    $servicio["PrimerServicio"] = $dbo->getFields("ServicioInicial", "Nombre", "IDServicioInicial = '" . $id_servicio_inicial . "'");
                    $servicio["Orden"] = $dbo->getFields("ServicioClub", "Orden", "IDClub = '" . $id_club . "' and IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                    $servicio["Georeferenciacion"] = "$r[Georeferenciacion]";
                    $servicio["Latitud"] = $r["Latitud"];
                    $servicio["Longitud"] = $r["Longitud"];
                    $servicio["Rango"] = $r["Rango"];
                    $servicio["MensajeFueraRango"] = $r["MensajeFueraRango"];
                    $servicio["MostrarBotonBuscar"] = $r["MostrarBotonBuscar"];
                    $servicio["MultipleAuxiliar"] = $r["MultipleAuxiliar"];
                    $servicio["MaximoInvitadosSalon"] = $r["MaximoInvitadosSalon"];
                    $servicio["PermiteListaEspera"] = $r["PermiteListaEspera"];
                    $servicio["PermiteListaEsperaAuxiliar"] = $r["PermiteListaEsperaAuxiliar"];
                    $servicio["PermiteAgregarGrupo"] = $r["PermiteAgregarGrupo"];
                    $servicio["PermiteEditarAuxiliar"] = $r["PermiteEditarAuxiliar"];
                    $servicio["PermiteEditarAdicionales"] = $r["PermiteEditarAdicionales"];
                    $servicio["AdicionalesObligatorio"] = $r["AdicionalesObligatorio"];
                    $servicio["LabelEncabezadoInvitados"] = $r["LabelEncabezadoInvitados"];
                    $servicio["LabelEncabezadoBeneficiarios"] = $r["LabelEncabezadoBeneficiarios"];
                    $servicio["TextoAbrirMapa"] = $r["TextoAbrirMapa"];
                    $servicio["SoloIcono"] = $dbo->getFields("Club", "SoloIcono", "IDClub = '" . $id_club . "'");
                    $servicio["SoloFechaSeleccionada"] = $datos_maestro["SoloFechaSeleccionada"];
                    $servicio["LabelReservaMultiple"] = $datos_maestro["LabelReservaMultiple"];
                    $servicio["PermiteAdicionarServicios"] = $r["PermiteAdicionarServicios"];
                    $servicio["MostrarDecimal"] = $r["MostrarDecimal"];
                    $servicio["PermiteIrDomicilio"] = $r["PermiteIrDomicilio"];
                    $servicio["LabelPermiteIrDomicilio"] = $r["LabelPermiteIrDomicilio"];
                    $servicio["IDModuloDomicilio"] = $r["IDModuloDomicilio"];
                    //Externos
                    $servicio["PermiteInvitadoExternoCedula"] = $r["PermiteInvitadoExternoCedula"];
                    $servicio["PermiteInvitadoExternoCorreo"] = $r["PermiteInvitadoExternoCorreo"];
                    $servicio["InvitadoExternoPago"] = $r["InvitadoExternoPago"];
                    $servicio["LabelInvitadoExternoPago"] = $r["LabelInvitadoExternoPago"];
                    $servicio["InvitadoExternoValor"] = $r["InvitadoExternoValor"];

                    $servicio["PermiteFiltroElementoFechaPorTexto"] = $r["PermiteFiltroElementoFechaPorTexto"];
                    $servicio["PermiteFiltroElementoFechaPorBoton"] = $r["PermiteFiltroElementoFechaPorBoton"];
                    $servicio["LabelFiltroElementoFechaPorTexto"] = $r["LabelFiltroElementoFechaPorTexto"];
                    $servicio["LabelFiltroElementoFechaPorBoton"] = $r["LabelFiltroElementoFechaPorBoton"];
                    $servicio["PermiteGuardarCalendarioDispositivo"] = $r["PermiteGuardarCalendarioDispositivo"];


                    $servicio["MostrarImagenEncabezado"] = $r["MostrarImagenEncabezado"];
                    $fotoencabezado = "";
                    if (!empty($r["ImagenEncabezado"])) {
                        $fotoencabezado = SERVICIO_ROOT . $r["ImagenEncabezado"];
                    } else {
                        $fotoencabezado = "";
                    }

                    $servicio["ImagenEncabezado"] = $fotoencabezado;

                    $zonahoraria = date_default_timezone_get();
                    $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                    $servicio["GMT"] = SIMWebservice::timezone_offset_string($offset);

                    //Campos Reservas
                    $response_campos = array();
                    $sql_campos = "SELECT * FROM ServicioCampo WHERE Publicar = 'S' and IDServicio= '" . $r["IDServicio"] . "' ORDER BY Nombre";
                    $qry_campos = $dbo->query($sql_campos);
                    if ($dbo->rows($qry_campos) > 0) {
                        while ($r_campos = $dbo->fetchArray($qry_campos)) {
                            $campos["IDClub"] = $id_club;
                            $campos["IDServicio"] = $r_campos["IDServicio"];
                            $campos["IDServicioCampo"] = $r_campos["IDServicioCampo"];
                            $campos["Nombre"] = $r_campos["Nombre"];
                            $campos["Descripcion"] = utf8_encode($r_campos["Descripcion"]);
                            $campos["Tipo"] = $r_campos["Tipo"];
                            $campos["Valor"] = $r_campos["Valor"];
                            $campos["Obligatorio"] = $r_campos["Obligatorio"];

                            array_push($response_campos, $campos);

                        } //end while
                    }
                    $servicio["CamposReserva"] = $response_campos;

                    //Servicios Asociados
                    $response_servicio_asociado = array();
                    $datos_guardados = explode("|||", $r["IDServicioAsociado"]);
                    foreach ($datos_guardados as $id_servicio):
                        if (!empty($id_servicio)) {
                            $servicio_asoc["IDServicio"] = $id_servicio;
                            $id_servicio_mestro_menu = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $id_servicio . "'");
                            $asoc_servicio["Nombre"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_mestro_menu . "'");
                            $asoc_servicio["NombrePersonalizado"] = $dbo->getFields("ServicioClub", "TituLoServicio", "IDClub = '" . SIMUser::get("club") . "' and Activo = 'S' and IDServicioMaestro = '" . $id_servicio_mestro_menu . "'");

                            if (!empty($asoc_servicio["NombrePersonalizado"])) {
                                $NombreServicio = $asoc_servicio["NombrePersonalizado"];
                            } else {
                                $NombreServicio = $asoc_servicio["Nombre"];
                            }

                            $servicio_asoc["Nombre"] = $NombreServicio;
                            array_push($response_servicio_asociado, $servicio_asoc);
                        }
                    endforeach;
                    $servicio["ServicioAsociado"] = $response_servicio_asociado;

                    //Tipos de Reservas
                    $response_tiporeservas = array();
                    $sql_tiporeservas = "SELECT * FROM ServicioTipoReserva WHERE Activo = 'S' and IDServicio= '" . $r["IDServicio"] . "' " . $condicion_tipo . " ORDER BY Orden";
                    $qry_tiporeservas = $dbo->query($sql_tiporeservas);
                    if ($dbo->rows($qry_tiporeservas) > 0) {
                        while ($r_tiporeservas = $dbo->fetchArray($qry_tiporeservas)) {
                            $tiporeserva["IDClub"] = $id_club;
                            $tiporeserva["IDServicio"] = $r_tiporeservas["IDServicio"];
                            $tiporeserva["IDServicioTipoReserva"] = $r_tiporeservas["IDServicioTipoReserva"];
                            $tiporeserva["Nombre"] = $r_tiporeservas["Nombre"];
                            array_push($response_tiporeservas, $tiporeserva);

                        } //end while
                    }

                    $servicio["TipoReserva"] = $response_tiporeservas;

                    //Tipos de pagos recibidos
                    $response_tipo_pago = array();
                    $sql_tipo_pago = "SELECT * FROM ServicioTipoPago STP, TipoPago TP  WHERE STP.IDTipoPago = TP.IDTipoPago and IDServicio= '" . $r["IDServicio"] . "' ";
                    $qry_tipo_pago = $dbo->query($sql_tipo_pago);
                    if ($dbo->rows($qry_tipo_pago) > 0) {
                        $servicio["PagoReserva"] = "S";
                        while ($r_tipo_pago = $dbo->fetchArray($qry_tipo_pago)) {
                            $desactivado = false;

                            if (!$desactivado) {
                                $tipopago["IDClub"] = $id_club;
                                $tipopago["IDServicio"] = $r_tipo_pago["IDServicio"];
                                $tipopago["IDTipoPago"] = $r_tipo_pago["IDTipoPago"];
                                $tipopago["PasarelaPago"] = $r_tipo_pago["PasarelaPago"];
                                $tipopago["Action"] = SIMUtil::obtener_accion_pasarela($r_tipo_pago["IDTipoPago"], $id_club);
                                $tipopago["Nombre"] = $r_tipo_pago["Nombre"];
                                $tipopago["PaGoCredibanco"] = $r_tipo_pago["PaGoCredibanco"];

                                //Para el condado y es pagos online muestro la imagen de placetopay

                                switch ($r_tipo_pago["IDTipoPago"]) {
                                    case "1":
                                        $imagen = "https://static.placetopay.com/placetopay-logo.svg";
                                        break;
                                    case "2":
                                        $imagen = "https://www.miclubapp.com/file/noticia/icono-bono.png";
                                        break;
                                    case "3":
                                        $imagen = "https://www.miclubapp.com/file/noticia/abonoc.png";
                                        break;
                                    case "11":
                                        $imagen = "https://www.miclubapp.com/file/noticia/260838_Sin_t__tulo.png";
                                        break;
                                    default:
                                        $imagen = "https://www.miclubapp.com/file/noticia/abonoc.png";
                                        break;
                                }

                                $tipopago["Imagen"] = $imagen;
                                array_push($response_tipo_pago, $tipopago);
                            }
                        } //end while
                        $servicio["TipoPago"] = $response_tipo_pago;
                    } else {
                        $servicio["PagoReserva"] = "N";
                    }

                    $servicio["MensajePagoReserva"] = $r["MensajePagoReserva"];

                    $flag_mostrar = 0;

                    // Verificar si es un modulo que se debe revisar permiso
                    if (array_key_exists($r["IDServicioMaestro"], $array_id_mod_esp)) {
                        if (in_array($IDSocio, $array_id_mod_esp[$r["IDServicioMaestro"]])) {
                            $flag_mostrar = 0;
                        } else {
                            $flag_mostrar = 1;
                        }

                    } else {
                        $flag_mostrar = 0;
                    }

                    if ($flag_mostrar == 0) {
                        array_push($response, $servicio);
                    }

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function get_tipo_reserva($IDClub, $TipoApp, $IDUsuario, $IDSocio, $IDServicio, $Fecha)
    {
            $dbo = &SIMDB::get();
            $condicion_elemento = "";
            if (!empty($IDServicio)) {

                $response = array();
                $sql_tiporeservas = "SELECT * FROM ServicioTipoReserva WHERE Activo = 'S' and IDServicio= '" . $IDServicio . "' ORDER BY Orden";
                $qry_tiporeservas = $dbo->query($sql_tiporeservas);
                if ($dbo->rows($qry_tiporeservas) > 0) {
                    while ($r_tiporeservas = $dbo->fetchArray($qry_tiporeservas)) {
                        $tiporeserva["IDClub"] = $IDClub;
                        $tiporeserva["IDServicio"] = $r_tiporeservas["IDServicio"];
                        $tiporeserva["IDServicioTipoReserva"] = $r_tiporeservas["IDServicioTipoReserva"];
                        $tiporeserva["Nombre"] = $r_tiporeservas["Nombre"];
                        array_push($response, $tiporeserva);

                    } //end while
                }

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function get_elementos($IDClub, $IDSocio, $IDServicio, $IDUsuario = "")
    {
            $dbo = &SIMDB::get();
            $condicion_elemento = "";
            if (!empty($IDUsuario)):
                $sql_elemento_usuario = "Select * From UsuarioServicioElemento Where IDUsuario = '" . $IDUsuario . "'";
                $result_elemento_usuario = $dbo->query($sql_elemento_usuario);
                while ($row_elemento_usuario = $dbo->fetchArray($result_elemento_usuario)):
                    $array_id_elemento[] = $row_elemento_usuario["IDServicioElemento"];
                endwhile;
                if (count($array_id_elemento) > 0):
                    $condicion_elemento = " and IDServicioElemento in (" . implode(",", $array_id_elemento) . ") ";
                endif;
            endif;

            $response = array();
            $sql = "SELECT SE.* FROM ServicioElemento SE, Servicio S WHERE SE.IDServicio = S.IDServicio and SE.Publicar = 'S' and S.IDClub = '" . $IDClub . "' and SE.IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " ORDER BY SE.Orden ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $elemento["IDElemento"] = $r["IDServicioElemento"];
                    $elemento["IDFiltro"] = $r["IDServicioElemento"];
                    $elemento["IDClub"] = $IDClub;
                    $elemento["IDServicio"] = $r["IDServicio"];
                    $elemento["IDPadre"] = $r["IDPadre"];
                    $elemento["Nombre"] = $r["Nombre"];
                    $elemento["Tipo"] = "Elemento";
                    if (!empty($r["Foto"])) {
                        $FotoElemento = ELEMENTOS_ROOT . $r["Foto"];
                    } else {
                        $FotoElemento = "";
                    }

                    $elemento["Foto"] = $FotoElemento;

                    array_push($response, $elemento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function get_invitado($IDClub, $IDSocio, $NumeroDocumento, $FechaIngreso)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio)) {

                // Numero Doc
                if (!empty($NumeroDocumento)):
                    $array_condiciones[] = " NumeroDocumento  like '%" . $NumeroDocumento . "%'";
                endif;

                if (!empty($FechaIngreso)):
                    $array_condiciones[] = " FechaIngreso  = '" . $FechaIngreso . "'";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = "and " . implode(" and ", $array_condiciones);
                endif;

                $sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " and Estado = 'P' and FechaIngreso >= CURDATE()  ORDER BY FechaIngreso Desc ";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        $elemento["IDClub"] = $IDClub;
                        $elemento["IDInvitacion"] = $r["IDSocioInvitado"];
                        $elemento["Nombre"] = $r["Nombre"];
                        $elemento["NumeroDocumento"] = $r["NumeroDocumento"];
                        $elemento["FechaIngreso"] = $r["FechaIngreso"];

                        array_push($response, $elemento);

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;
                } //end else
            } else {
                $respuesta["message"] = "2. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_mis_invitado($IDClub, $IDSocio, $NumeroDocumento)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio)) {

                // Numero Doc
                if (!empty($NumeroDocumento)):
                    $array_condiciones[] = " NumeroDocumento  like '%" . $NumeroDocumento . "%'";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = "and " . implode(" and ", $array_condiciones);
                endif;

                $sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " and Mostrar <> 'N' Group by IDSocio, NumeroDocumento ORDER BY FechaIngreso Desc";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        $elemento["IDClub"] = $IDClub;
                        $elemento["IDSocioInvitado"] = $r["IDSocioInvitado"];
                        $elemento["Nombre"] = $r["Nombre"];
                        $elemento["NumeroDocumento"] = $r["NumeroDocumento"];

                        array_push($response, $elemento);

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;
                } //end else
            } else {
                $respuesta["message"] = "3. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_eliminar_invitado_v1($IDClub, $IDSocio, $IDSocioInvitado)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDSocioInvitado)) {
                $sql = "Update SocioInvitado Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioInvitado = '" . $IDSocioInvitado . "'";
                $qry = $dbo->query($sql);
                $respuesta["message"] = "Invitado eliminado correctamente";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I5. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_ingreso_salida_invitadov1($IDClub, $IDSocio, $IDSocioInvitado)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDSocioInvitado)) {
                $sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDSocioInvitado . "' and IDClub = '" . $IDClub . "' and Tipo = 'SocioInvitado' Order by IDLogAcceso Desc Limit 30";
                $qry = $dbo->query($sql);
                while ($r = $dbo->fetchArray($qry)) {
                    $acceso["IDClub"] = $IDClub;
                    $acceso["IDSocioInvitado"] = $r["IDInvitacion"];
                    if ($r["Entrada"] == "S"):
                        $TipoMovimiento = "Entrada";
                        $FechaMovimiento = $r["FechaIngreso"];
                    else:
                        $TipoMovimiento = "Salida";
                        $FechaMovimiento = $r["FechaSalida"];
                    endif;
                    $acceso["Movimiento"] = $TipoMovimiento;
                    $acceso["FechaMovimiento"] = $FechaMovimiento;
                    array_push($response, $acceso);
                } //ednw hile
                $respuesta["message"] = "Historial";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I6. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_ingresosalida_autorizaciones_invitados($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {
                $sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDInvitacion . "' and IDClub = '" . $IDClub . "' and Tipo = 'InvitadoAcceso' Order by IDLogAcceso Desc Limit 30";
                $qry = $dbo->query($sql);
                while ($r = $dbo->fetchArray($qry)) {
                    $acceso["IDClub"] = $IDClub;
                    $acceso["IDSocioInvitado"] = $r["IDInvitacion"];
                    if ($r["Entrada"] == "S"):
                        $TipoMovimiento = "Entrada";
                        $FechaMovimiento = $r["FechaIngreso"];
                    else:
                        $TipoMovimiento = "Salida";
                        $FechaMovimiento = $r["FechaSalida"];
                    endif;
                    $acceso["Movimiento"] = $TipoMovimiento;
                    $acceso["FechaMovimiento"] = $FechaMovimiento;
                    array_push($response, $acceso);
                } //ednw hile
                $respuesta["message"] = "Historial";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I6. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;
        }

        public function get_ingresosalida_autorizaciones_contratista($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {
                $sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDInvitacion . "' and IDClub = '" . $IDClub . "' and Tipo = 'Contratista' Order by IDLogAcceso Desc Limit 30";
                $qry = $dbo->query($sql);
                while ($r = $dbo->fetchArray($qry)) {
                    $acceso["IDClub"] = $IDClub;
                    $acceso["IDSocioInvitado"] = $r["IDInvitacion"];
                    if ($r["Entrada"] == "S"):
                        $TipoMovimiento = "Entrada";
                        $FechaMovimiento = $r["FechaIngreso"];
                    else:
                        $TipoMovimiento = "Salida";
                        $FechaMovimiento = $r["FechaSalida"];
                    endif;
                    $acceso["Movimiento"] = $TipoMovimiento;
                    $acceso["FechaMovimiento"] = $FechaMovimiento;
                    array_push($response, $acceso);
                } //ednw hile
                $respuesta["message"] = "Historial";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I6. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;
        }

        public function elimina_misautorizaciones_invitados_anterior($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {
                $sql = "Update SocioInvitadoEspecial Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioInvitadoEspecial = '" . $IDInvitacion . "'";
                $qry = $dbo->query($sql);
                $respuesta["message"] = "Invitado eliminado correctamente";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I5. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;
        }

        public function elimina_misautorizaciones_contratista_anterior($IDClub, $IDSocio, $IDAutorizacion)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio) && !empty($IDAutorizacion)) {
                $sql = "Update SocioAutorizacion Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioAutorizacion = '" . $IDAutorizacion . "'";
                $qry = $dbo->query($sql);
                $respuesta["message"] = "Invitado eliminado correctamente";
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } else {
                $respuesta["message"] = "I5. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;
        }

        public function get_mis_autorizaciones_invitados($IDClub, $IDSocio, $Tag, $FechaIngreso, $Tiempo = "")
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio)) {

                // Tag
                if (!empty($Tag)):
                    // Consulto lo invitados con este dato
                    $sql_busca_invitado = "Select * From Invitado Where NumeroDocumento like '%" . $Tag . "%' or Nombre like '%" . $Tag . "%' or Apellido like '%" . $Tag . "%'  or Telefono like '%" . $Tag . "%' or Email like '%" . $Tag . "%' ";
                    $result_busca_invitado = $dbo->query($sql_busca_invitado);
                    while ($row_busca_invitado = $dbo->fetchArray($result_busca_invitado)):
                        $array_condiciones_invitado[] = " IDInvitado  = '" . $row_busca_invitado["IDInvitado"] . "'";
                    endwhile;
                endif;

                if (count($array_condiciones_invitado) > 0):
                    $condiciones_invitado = "and (" . implode(" or ", $array_condiciones_invitado) . ")";
                endif;

                if (!empty($FechaIngreso)):
                    $array_condiciones[] = " FechaInicio  = '" . $FechaIngreso . "'";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = "and " . implode(" and ", $array_condiciones);
                endif;

                if ($Tiempo == "Futuro" || $Tiempo == ""):
                    $condicion_tiempo = " and FechaFin >= CURDATE() ";
                elseif ($Tiempo == "Pasado"):
                    $condicion_tiempo = " and (FechaInicio <= CURDATE() or FechaInicio >= CURDATE() ) ";
                endif;

                //$sql = "SELECT * FROM SocioInvitadoEspecial WHERE IDClub = '" . $IDClub . "' and Mostrar <> 'N' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . " " . $condiciones_invitado . " " . $condicion_tiempo . "  ORDER BY IDSocioInvitadoEspecial,FechaInicio  Desc ";
                $sql = "SELECT * FROM SocioInvitadoEspecial WHERE IDClub = '" . $IDClub . "' and Mostrar <> 'N' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . " " . $condiciones_invitado . " " . $condicion_tiempo . "  ORDER BY IDSocioInvitadoEspecial,FechaInicio  Desc ";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        if (!in_array($r["IDInvitado"], $array_socio_listado)):

                            $elemento["IDClub"] = $IDClub;
                            $elemento["IDInvitacion"] = $r["IDSocioInvitadoEspecial"];
                            //Consulto datos invitado
                            $datos_invitado = $dbo->fetchAll("Invitado", " IDInvitado = '" . $r["IDInvitado"] . "' ", "array");
                            $elemento["Nombre"] = $datos_invitado["Nombre"];
                            $elemento["Apellido"] = $datos_invitado["Apellido"];
                            $elemento["NumeroDocumento"] = "$datos_invitado[NumeroDocumento]";
                            $elemento["Email"] = $datos_invitado["Email"];
                            $elemento["TipoInvitado"] = $r["TipoInvitacion"];

                            unset($response_tipodoc);
                            $response_tipodoc = array();
                            $tipodoc["IDTipoDocumento"] = (int) $datos_invitado["IDTipoDocumento"];
                            $tipodoc["Nombre"] = $dbo->getFields("TipoDocumento", "Nombre", "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'");
                            array_push($response_tipodoc, $tipodoc);
                            $elemento["TipoDocumento"] = $response_tipodoc;
                            $elemento["FechaIngreso"] = $r["FechaInicio"];
                            $elemento["FechaSalida"] = $r["FechaFin"];
                            //Consulto datos vehiculo
                            $datos_vehiculo = $dbo->fetchAll("VehiculoInvitacion", " IDSocioInvitadoEspecial = '" . $r["IDSocioInvitadoEspecial"] . "' ", "array");
                            $elemento["Vehiculo"] = $datos_vehiculo["Placa"];
                            $elemento["CabezaInvitacion"] = $r["CabezaInvitacion"];

                            //Reviso si ya se le dio entrada
                            $presalida = $dbo->getFields("Club", "Presalida", "IDClub = '" . $IDClub . "'");
                            if ($presalida == "S") {
                                $HabilitaPresalida = $dbo->getFields("LogAcceso", "Entrada", "IDClub = '" . $IDClub . "' and IDInvitacion = '" . $r["IDSocioInvitadoEspecial"] . "' and Fechaingreso >= '" . date("Y-m-d") . " 00:00:00' ");
                            }

                            if ($HabilitaPresalida != "S") {
                                $HabilitaPresalida = "N";
                            }

                            $elemento["HabilitaPresalida"] = $HabilitaPresalida;

                            //$array_socio_listado[] = $r[ "IDInvitado" ];

                            // Si tiene grupo familiar devuelvo el grupo y lo marco para no mostrarlo de nuevo
                            if ((int) $r["IDPadre"] > 0):
                                $condicion_padre = " or IDPadre = '" . $r["IDPadre"] . "'";
                            endif;
                            /*
                            $response_invitado_familia = array();
                            $sql_grupo_familiar = "Select * From SocioInvitadoEspecial Where IDPadre = '".$r["IDInvitado"]."' or IDInvitado = '".$r["IDPadre"]."' " . $condicion_padre;
                            $result_grupo_familiar = $dbo->query($sql_grupo_familiar);
                            while($row_grupo_familiar = $dbo->fetchArray($result_grupo_familiar)):
                            if(!in_array($row_grupo_familiar["IDInvitado"],$array_socio_listado)):
                            $dato_invitado_asociado["IDClub"] = $IDClub;
                            $dato_invitado_asociado["IDInvitacion"] = $row_grupo_familiar["IDSocioInvitadoEspecial"];
                            //Consulto datos invitado
                            $datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $row_grupo_familiar["IDInvitado"] . "' ", "array" );
                            $dato_invitado_asociado["Nombre"] = $datos_invitado["Nombre"];
                            $dato_invitado_asociado["Apellido"] = $datos_invitado["Apellido"];
                            $dato_invitado_asociado["NumeroDocumento"] = "$datos_invitado[NumeroDocumento]";
                            $dato_invitado_asociado["Email"] = $datos_invitado["Email"];
                            $dato_invitado_asociado["TipoInvitado"] = $row_grupo_familiar["TipoInvitacion"];

                            unset($response_tipodoc_asociado);
                            $response_tipodoc_asociado = array();
                            $tipodoc_asociado["IDTipoDocumento"] = (int)$datos_invitado["IDTipoDocumento"];
                            $tipodoc_asociado["Nombre"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
                            array_push($response_tipodoc_asociado, $tipodoc_asociado);
                            $dato_invitado_asociado["TipoDocumento"] = $response_tipodoc_asociado;

                            $dato_invitado_asociado["FechaIngreso"] = $row_grupo_familiar["FechaInicio"];
                            $dato_invitado_asociado["FechaSalida"] = $row_grupo_familiar["FechaFin"];
                            //Consulto datos vehiculo
                            $datos_vehiculo = $dbo->fetchAll( "VehiculoInvitacion", " IDSocioInvitadoEspecial = '" . $row_grupo_familiar["IDSocioInvitadoEspecial"] . "' ", "array" );
                            $dato_invitado_asociado["Vehiculo"] = $datos_vehiculo["Placa"];
                            $dato_invitado_asociado["CabezaInvitacion"] = $row_grupo_familiar["CabezaInvitacion"];
                            array_push($response_invitado_familia, $dato_invitado_asociado);
                            $array_socio_listado[]=$row_grupo_familiar["IDInvitado"];
                            endif;
                            endwhile;
                             */

                            $elemento["GrupoFamiliar"] = $response_invitado_familia;
                            array_push($response, $elemento);
                        endif;

                    } //end while
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;
                } //end else
            } else {
                $respuesta["message"] = "2. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_mis_autorizaciones_contratista($IDClub, $IDSocio, $Tag, $FechaIngreso, $Tiempo = "")
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDSocio)) {

                if (!empty($Tag)):
                    // Consulto lo invitados con este dato
                    $sql_busca_invitado = "Select * From Invitado Where NumeroDocumento like '%" . $Tag . "%' or Nombre like '%" . $Tag . "%' or Apellido like '%" . $Tag . "%'  or Telefono like '%" . $Tag . "%' or Email like '%" . $Tag . "%' ";
                    $result_busca_invitado = $dbo->query($sql_busca_invitado);
                    while ($row_busca_invitado = $dbo->fetchArray($result_busca_invitado)):
                        $array_condiciones_invitado[] = " IDInvitado  = '" . $row_busca_invitado["IDInvitado"] . "'";
                    endwhile;
                endif;

                if (count($array_condiciones_invitado) > 0):
                    $condiciones_invitado = "and (" . implode(" or ", $array_condiciones_invitado) . ")";
                endif;

                if (count($array_condiciones) > 0):
                    $condiciones = "and " . implode(" and ", $array_condiciones);
                endif;

                if ($Tiempo == "Futuro" || $Tiempo == ""):
                    //$condicion_tiempo = " and FechaInicio >= CURDATE() ";
                    $condicion_tiempo = " and FechaFin >= CURDATE() ";
                elseif ($Tiempo == "Pasado"):
                    $condicion_tiempo = " and (FechaInicio <= CURDATE() or FechaInicio >= CURDATE() ) ";
                endif;

                $sql = "SELECT * FROM SocioAutorizacion WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . $condiciones_invitado . " " . $condicion_tiempo . "  and Mostrar <> 'N' ORDER BY FechaInicio Desc ";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        $elemento["IDClub"] = $IDClub;
                        $elemento["IDAutorizacion"] = $r["IDSocioAutorizacion"];
                        //Consulto datos invitado
                        $datos_invitado = $dbo->fetchAll("Invitado", " IDInvitado = '" . $r["IDInvitado"] . "' ", "array");
                        $elemento["Nombre"] = utf8_encode($datos_invitado["Nombre"]);
                        $elemento["Apellido"] = utf8_encode($datos_invitado["Apellido"]);
                        $elemento["NumeroDocumento"] = "$datos_invitado[NumeroDocumento]";
                        $elemento["TipoAutorizacion"] = $r["TipoAutorizacion"];
                        $elemento["Email"] = $datos_invitado["Email"];
                        unset($response_tipodoc_asociado);
                        $response_tipodoc_asociado = array();
                        $tipodoc_asociado["IDTipoDocumento"] = (int) $datos_invitado["IDTipoDocumento"];
                        $tipodoc_asociado["Nombre"] = $dbo->getFields("TipoDocumento", "Nombre", "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'");
                        array_push($response_tipodoc_asociado, $tipodoc_asociado);
                        $elemento["TipoDocumento"] = $response_tipodoc_asociado;

                        $elemento["FechaIngreso"] = $r["FechaInicio"];
                        $elemento["FechaSalida"] = $r["FechaFin"];
                        //Consulto datos vehiculo
                        $datos_vehiculo = $dbo->fetchAll("Vehiculo", " IDVehiculo = '" . $r["IDVehiculo"] . "' ", "array");
                        $elemento["Vehiculo"] = $datos_vehiculo["Placa"];
                        $elemento["Observaciones"] = $r["ObservacionSocio"];

                        //Reviso si ya se le dio entrada
                        $presalida = $dbo->getFields("Club", "Presalida", "IDClub = '" . $IDClub . "'");
                        if ($presalida == "S") {
                            $HabilitaPresalida = $dbo->getFields("LogAcceso", "Entrada", "IDClub = '" . $IDClub . "' and IDInvitacion = '" . $r["IDSocioAutorizacion"] . "' and Fechaingreso >= '" . date("Y-m-d") . " 00:00:00' ");
                        }

                        if ($HabilitaPresalida != "S") {
                            $HabilitaPresalida = "N";
                        }

                        $elemento["HabilitaPresalida"] = $HabilitaPresalida;

                        array_push($response, $elemento);

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;
                } //end else
            } else {
                $respuesta["message"] = "2. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_horas($IDClub, $IDSocio, $IDServicio)
    {
            $dbo = &SIMDB::get();

            //inserta _log
            $sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_horas','IDClub: " . $IDClub . " IDSocio:" . $IDSocio . " . IDServicio: " . $IDServicio . " Elemento: " . $IDElemento . "','" . json_encode($respuesta) . "')");

            $response = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {

                    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
                    $sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and Activo <>'N' Order by HoraDesde Limit 1";
                    $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
                    $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);

                    $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");

                    $horaInicial = $row_dispo_elemento_primera["HoraDesde"];
                    $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_primera["IDDisponibilidad"] . "'");
                    $hora_final = strtotime($row_dispo_elemento_primera["HoraHasta"]);
                    $hora_actual = $row_dispo_elemento_primera["HoraDesde"];

                    while ($hora_actual <= $hora_final):

                        $servicio_hora["IDClub"] = $r["IDClub"];
                        $servicio_hora["IDServicio"] = $r["IDServicio"];

                        if (strlen($horaInicial) != 8):
                            $horaInicial .= ":00";
                        endif;

                        $servicio_hora["Hora"] = $horaInicial;
                        $zonahoraria = date_default_timezone_get();
                        $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                        $servicio_hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

                        array_push($response, $servicio_hora);

                        $segundos_horaInicial = strtotime($horaInicial);
                        $segundos_minutoAnadir = $minutoAnadir * 60;
                        $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                        $hora_actual = strtotime($nuevaHora);
                        $horaInicial = $nuevaHora;

                    endwhile;

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        //Verifica si club y el servicio estÃ¡ abierto en la fecha indicada
        public function verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDServicioElemento = "", $Hora = "", $Tee = "")
    {
            $dbo = &SIMDB::get();
            $respuesta = "";
            $condicion_servicio = "and IDServicio = '" . $IDServicio . "'";
            $sql = "SELECT IDClubFechaCierre,Motivo FROM  ClubFechaCierre WHERE Fecha = '" . $Fecha . "' and IDClub = '" . $IDClub . "'";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $r_cierre = $dbo->fetchArray($qry);
                $respuesta = "Lo sentimos club cerrado el dia: " . $Fecha . " Motivo: " . $r_cierre["Motivo"];
            } else {

                if (!empty($IDServicioElemento)) {
                    $condicion_multiple_elemento = SIMWebService::verifica_elemento_otro_servicio($IDServicioElemento, $IDServicio);
                    $array_multiple_id = explode(",", $condicion_multiple_elemento);
                    if (count($array_multiple_id) > 1):
                        foreach ($array_multiple_id as $id_elemento):
                            $array_condicion_multiple_elemento[] = " IDServicioElemento like '%|" . $id_elemento . "|%'";
                        endforeach;
                        if (count($condicion_multiple_elemento) > 0):
                            $condicion_elemento = " and (" . implode(" or ", $array_condicion_multiple_elemento) . ")";
                            $condicion_servicio = ""; // no consulto el servicio por que puede ser distintos
                        endif;
                    else:
                        $condicion_elemento = " and IDServicioElemento like '%|" . $IDServicioElemento . "|%'";
                    endif;

                } else {
                    $condicion_elemento = " and IDServicioElemento = ''";
                }

                if (!empty($Tee)) {
                    $condicion_tee = " and " . $Tee . " = 'S'";
                }

                if (!empty($Hora)):
                    $condicion_hora = " and HoraInicio <= '" . $Hora . "' and HoraFin >= '" . $Hora . "' ";
                else:
                    $condicion_hora = " and HoraInicio = '00:00:00' and HoraFin = '00:00:00' ";
                endif;

                $dia_semana_fecha = date("w", strtotime($Fecha));
                //$sql_servicio = "SELECT * FROM  ServicioCierre WHERE FechaInicio <= '".$Fecha."' and FechaFin >= '".$Fecha."' and IDServicio = '".$IDServicio."' " . $condicion_hora . $condicion_elemento;
                $sql_servicio = "SELECT Dias,Descripcion FROM  ServicioCierre WHERE FechaInicio <= '" . $Fecha . "' and FechaFin >= '" . $Fecha . "' " . $condicion_servicio . $condicion_hora . $condicion_elemento . $condicion_tee;

                $qry_servicio = $dbo->query($sql_servicio);
                while ($r_cierre_servicio = $dbo->fetchArray($qry_servicio)) {

                    //$r_cierre_servicio = $dbo->fetchArray( $qry_servicio );
                    if (!empty($r_cierre_servicio["Dias"])) {
                        $array_dias_cierre = explode("|", $r_cierre_servicio["Dias"]);
                        if (in_array($dia_semana_fecha, $array_dias_cierre)) {
                            $respuesta = "Lo sentimos servicio cerrado el dia: " . $Fecha . " motivo: " . $r_cierre_servicio["Descripcion"];
                        }
                    } else {
                        $respuesta = "Lo sentimos servicio cerrado el dia: " . $Fecha . " Motivo: " . $r_cierre_servicio["Descripcion"];
                    }
                }

            }

            return $respuesta;
        }

        public function consultar_disponibilidad($qry, $IDElemento, $IDServicio, $Fecha)
    {

            $dbo = &SIMDB::get();
            //Horas Disponibles Elemento
            $response_disponibilidad = array();

            if (!empty($IDElemento)) {
                $condicion_elemento = " and IDServicioElemento = '" . $IDElemento . "'";
            }

            while ($r = $dbo->fetchArray($qry)) {

                $sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " Order by Orden";
                $result_elementos_servicio = $dbo->query($sql_elementos_servicio);
                while ($r_elementos_servicio = $dbo->FetchArray($result_elementos_servicio)):
                    unset($array_hora_reservada);
                    $IDElemento = $r_elementos_servicio["IDServicioElemento"];

                    //Consulto lo que  tiene reservado el elemento en la fecha indicada
                    $sql_reserva_elemento = "SELECT ReservaGeneral.*, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";
                    $qry_reserva_elemento = $dbo->query($sql_reserva_elemento);
                    $array_socio = array();
                    while ($row_reserva_elemento = $dbo->fetchArray($qry_reserva_elemento)) {
                        $array_hora_reservada[] = $row_reserva_elemento["Hora"];
                        $array_socio[$row_reserva_elemento["Hora"]] = $row_reserva_elemento;
                        $array_socio[$row_reserva_elemento["Hora"]]["NombreSocio"] = utf8_encode($row_reserva_elemento["Socio"]);
                    }

                    //Horas generales del servicio
                    $horaInicial = $r["HoraDesde"];
                    $minutoAnadir = $r["IntervaloHora"];
                    $hora_final = strtotime($r["HoraHasta"]);
                    $hora_actual = $r["HoraDesde"];

                    $dia_fecha = date('N', strtotime($Fecha));

                    //Verifico si tene disponibilidad especifica el elemento
                    $sql_dispo_elemento = "Select * From ElementoDisponibilidad Where IDServicioElemento = '" . $IDElemento . "'";
                    $qry_dispo_elemento = $dbo->query($sql_dispo_elemento);
                    if ($dbo->rows($qry_dispo_elemento) > 0) {
                        $verifica_disponibilidad_especifica = 1;
                        $sql_dispo_elemento = "Select * From ElementoDisponibilidad Where IDServicioElemento = '" . $IDElemento . "' and IDDia = '" . $dia_fecha . "' Order by HoraDesde";
                        $qry_dispo_elemento = $dbo->query($sql_dispo_elemento);
                        while ($row_dispo_elemento = $dbo->fetchArray($qry_dispo_elemento)) {
                            $horaInicial = $row_dispo_elemento["HoraDesde"];
                            $minutoAnadir = $r["IntervaloHora"];
                            $hora_final = strtotime($row_dispo_elemento["HoraHasta"]);
                            $hora_actual = strtotime($row_dispo_elemento["HoraDesde"]);

                            while ($hora_actual <= $hora_final):
                                if (strlen($horaInicial) != 8):
                                    $horaInicial .= ":00";
                                endif;

                                $hora["Hora"] = $horaInicial;
                                $zonahoraria = date_default_timezone_get();
                                $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);
                                if (in_array($horaInicial, $array_hora_reservada)) {
                                    $hora["Disponible"] = "N";
                                    $hora["Socio"] = $array_socio["$horaInicial"]["NombreSocio"];
                                } else {
                                    $hora["Disponible"] = "S";
                                    $hora["Socio"] = "";
                                }

                                $hora["IDElemento"] = $IDElemento;
                                $hora["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'");
                                array_push($response_disponibilidad, $hora);

                                $array_horas_elemento[] = $horaInicial;
                                $segundos_horaInicial = strtotime($horaInicial);
                                $segundos_minutoAnadir = $minutoAnadir * 60;
                                $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                $hora_actual = strtotime($nuevaHora);
                                $horaInicial = $nuevaHora;
                            endwhile;

                        }
                    }
                    // Si no tiene disponibildad especifica busco la general para elementos
                else {
                        //Verifico si tene disponibilidad  general el elemento
                        $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N'";
                        $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);
                        if ($dbo->rows($qry_dispo_elemento_gral) > 0) {

                            $verifica_disponibilidad_general = 1;
                            while ($row_dispo_elemento_gral = $dbo->fetchArray($qry_dispo_elemento_gral)) {
                                $horaInicial = $row_dispo_elemento_gral["HoraDesde"];
                                $minutoAnadir = $r["IntervaloHora"];
                                $hora_final = strtotime($row_dispo_elemento_gral["HoraHasta"]);
                                $hora_actual = strtotime($row_dispo_elemento_gral["HoraDesde"]);

                                while ($hora_actual <= $hora_final):
                                    if (strlen($horaInicial) != 8):
                                        $horaInicial .= ":00";
                                    endif;

                                    $hora["Hora"] = $horaInicial;
                                    $zonahoraria = date_default_timezone_get();
                                    $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                    $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);
                                    if (in_array($horaInicial, $array_hora_reservada)) {
                                        $hora["Disponible"] = "N";
                                        $hora["Socio"] = $array_socio["$horaInicial"]["NombreSocio"];
                                    } else {
                                        $hora["Disponible"] = "S";
                                        $hora["Socio"] = "";
                                    }

                                    $hora["IDElemento"] = $IDElemento;
                                    $hora["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'");
                                    array_push($response_disponibilidad, $hora);

                                    $array_horas_elemento[] = $horaInicial;
                                    $segundos_horaInicial = strtotime($horaInicial);
                                    $segundos_minutoAnadir = $minutoAnadir * 60;
                                    $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                    $hora_actual = strtotime($nuevaHora);
                                    $horaInicial = $nuevaHora;
                                endwhile;

                            }

                        }
                    }

                    // Si no se ha especificado disponibilidad general o especifica aal elemento consulto la del servicio
                    if ($verifica_disponibilidad_especifica == 0 && $verifica_disponibilidad_general == 0):
                        $horaInicial = $r["HoraDesde"];
                        $minutoAnadir = $r["IntervaloHora"];
                        $hora_final = strtotime($r["HoraHasta"]);
                        $hora_actual = strtotime($r["HoraDesde"]);

                        while ($hora_actual <= $hora_final):

                            if (strlen($horaInicial) != 8):
                                $horaInicial .= ":00";
                            endif;

                            $hora["Hora"] = $horaInicial;
                            $zonahoraria = date_default_timezone_get();
                            $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                            $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);
                            if (in_array($horaInicial, $array_hora_reservada)) {
                                $hora["Disponible"] = "N";
                                $hora["Socio"] = $array_socio["$horaInicial"]["NombreSocio"];
                            } else {
                                $hora["Disponible"] = "S";
                                $hora["Socio"] = "";
                            }

                            $hora["IDElemento"] = $IDElemento;
                            $hora["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'");
                            array_push($response_disponibilidad, $hora);

                            $segundos_horaInicial = strtotime($horaInicial);
                            $segundos_minutoAnadir = $minutoAnadir * 60;
                            $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                            $hora_actual = strtotime($nuevaHora);
                            $horaInicial = $nuevaHora;

                        endwhile;
                    endif;

                endwhile;

            } //ednw hile

            return $response_disponibilidad;

        }

        public function get_disponiblidad_elemento($IDClub, $IDElemento, $IDServicio, $Fecha)
    {
            $dbo = &SIMDB::get();

            $verifica_disponibilidad_especifica = 0;
            $verifica_disponibilidad_general = 0;

            // Verifico que el club y servicio este disponible en la fecha consultada
            $verificacion = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio);
            if (!empty($verificacion)):
                $respuesta["message"] = $verificacion;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            $response = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                $servicio_hora["IDClub"] = $IDClub;
                $servicio_hora["IDServicio"] = $IDServicio;
                $servicio_hora["IDElemento"] = $IDElemento;
                $servicio_hora["Fecha"] = $Fecha;

                $response_disponibilidad = SIMWebService::consultar_disponibilidad($qry, $IDElemento, $IDServicio, $Fecha);
                $servicio_hora["Disponibilidad"] = $response_disponibilidad;
                array_push($response, $servicio_hora);

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function timezone_offset_string($offset)
    {
            return sprintf("%s%02d:%02d", ($offset >= 0) ? '+' : '-', abs($offset / 3600), abs($offset % 3600));
        }

        public function valida_cupos_disponibles($IDClub, $IDServicio, $IDElemento, $Fecha, $horaInicial)
    {
            $dbo = &SIMDB::get();

            $datos_servicio = $dbo->fetchAll("Servicio", " IDServicio= '" . $IDServicio . "' ", "array");

            //Consulto cuantos reservas se han tomado en esta hora para saber si ya llegÃ³ al limite de cupos
            $sql_reserva_elemento_hora_fecha = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ORDER BY Hora ";
            $result_reserva_elemento_hora_fecha = $dbo->query($sql_reserva_elemento_hora_fecha);
            $total_cupos_reservados = $dbo->rows($result_reserva_elemento_hora_fecha);

            //le sumo los invitados por cada reserva
            $total_invitados = 0;
            while ($row_invitados_reserva = $dbo->fetchArray($result_reserva_elemento_hora_fecha)):
                $sql_invitado = "Select count(IDReservaGeneralInvitado) as TotalInvitados From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_invitados_reserva["IDReservaGeneral"] . "'";
                $result_invitado = $dbo->query($sql_invitado);
                $row_invitados = $dbo->fetchArray($result_invitado);
                $total_invitados += $row_invitados["TotalInvitados"];
            endwhile;
            //en el polo en practicas que es diferente le quito los invitados por que quedan como socios
            if ($IDClub == 37 && $IDServicio == 3575) {
                $total_invitados = 0;
            }

            $total_cupos_reservados += $total_invitados;

            $total_invitados = 0;

            if ($datos_servicio["MaximoInvitadosSalon"] > 0) {
                //le sumo los invitados seleccionados, por ejemplo en salones le pide al socio cuantos invitados sin necesidad de poner los nombres
                $sql_reserva_num_invitados = "SELECT SUM(CantidadInvitadoSalon) as TotalOtrosInvitados FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ORDER BY Hora ";
                $result_reserva_num_invitados = $dbo->query($sql_reserva_num_invitados);
                $row_num_invitados = $dbo->fetchArray($result_reserva_num_invitados);
                $total_num_invitados = $row_num_invitados["TotalOtrosInvitados"];
                $total_cupos_reservados += $total_num_invitados;
            }

            return $total_cupos_reservados;

        }

        public function verifica_elemento_otro_servicio($IDElemento, $IDServicio = "")
    {
            $dbo = &SIMDB::get();

            $condicion_multiple_elemento = "";
            $condicion_multiple_elemento = $IDElemento;
            unset($array_id_elemento);
            $IdentificadorElemento = $dbo->getFields("ServicioElemento", "IdentificadorElemento", "IDServicioElemento = '" . $IDElemento . "'");
            if ((int) $IdentificadorElemento > 100000): //esto para que valide si es un numero de documento

                if (!empty($IDServicio)) {
                    $condicion_servicio = " Group by IDServicio ";
                }

                $sql_elemento_otro_servicio = "SELECT IDServicioElemento From ServicioElemento Where IdentificadorElemento = '" . $IdentificadorElemento . "' " . $condicion_servicio;
                $result_elemento_otro_servicio = $dbo->query($sql_elemento_otro_servicio);
                while ($row_elemento_otro_servicio = $dbo->fetchArray($result_elemento_otro_servicio)):
                    $array_id_elemento[] = $row_elemento_otro_servicio["IDServicioElemento"];
                endwhile;
                if (count($array_id_elemento) > 0):
                    $condicion_multiple_elemento = implode(",", $array_id_elemento);
                endif;
            endif;

            return $condicion_multiple_elemento;

        }

        public function get_disponiblidad_elemento_servicio($IDClub, $IDServicio, $Fecha, $IDElemento = "", $Admin = "", $UnElemento = "", $NumeroTurnos = "", $IDTipoReserva = "", $Agenda = "", $MostrarTodoDia = "", $IDUsuario = "")
    {
            $dbo = &SIMDB::get();

            $datos_servicio_actual = $dbo->fetchAll("Servicio", " IDServicio = '" . $IDServicio . "' ", "array");

            if (!empty($IDUsuario)) {
                $PermiteReservarUsuario = $dbo->getFields("Usuario", "PermiteReservar", "IDUsuario = '" . $IDUsuario . "'");
            } else {
                $PermiteReservarUsuario = "N";
            }

            $CuposporHora = $datos_servicio_actual["CupoMaximoBloque"];

            //Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
            $id_servicio_maestro = $datos_servicio_actual["IDServicioMaestro"];
            $datos_servicio_mestro = $dbo->fetchAll("ServicioMaestro", " IDServicioMaestro = '" . $id_servicio_maestro . "' ", "array");
            $id_servicio_cancha = $datos_servicio_mestro["IDServicioMaestroReservar"];

            if ($id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30): //Golf
                //$respuesta = SIMWebService::get_disponibilidad_campo($IDClub,$IDCampo,$Fecha, $IDServicio);
                $respuesta = SIMWebService::get_disponibilidad_campo($IDClub, "", $Fecha, $IDServicio, $Admin, $NumeroTurnos, $MostrarTodoDia);
                return $respuesta;
            endif;

            $fecha_disponible = 0;

            $verifica_disponibilidad_especifica = 0;
            $verifica_disponibilidad_general = 0;
            $verificacion = "";
            // Verifico que el club y servicio este disponible en la fecha consultada
            $verificacion = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio);

            if (!empty($verificacion)):
                $respuesta["message"] = $verificacion;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            /*
            //if($IDClub==10):
            //valido si el servicio tiene opciones para seleccionar la opcion por ejemplo dobles o sencillos
            $sql_tipo_reserva_servicio = "Select * From ServicioTipoReserva Where IDServicio = '".$IDServicio."' and Activo = 'S'";
            $result_tipo_reserva_servicio = $dbo->query($sql_tipo_reserva_servicio);
            $total_tipo_reserva = $dbo->rows($result_tipo_reserva_servicio);
            if((int)$total_tipo_reserva>0 && empty($IDTipoReserva)):
            $respuesta["message"] = "Debe seleccionar una opcion en el paso anterior, por favor verifique";
            $respuesta["success"] = false;
            $respuesta["response"] = NULL;
            return $respuesta;
            endif;

            //endif;
             */

            if (empty($Admin)) {
                $TipoConsultaDispo = "App";
            }

            //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar
            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio, $Fecha, $TipoConsultaDispo, "N");
            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                    $fecha_disponible = 1;
                endif;
            endforeach;

            if ($Agenda == "S") {
                $fecha_disponible = 1;
            }

            if ($fecha_disponible == 0 && empty($Admin)):
                //Esta fecha aÃºn no estÃ¡ disponible.
                $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada (t1)";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
                exit;
            endif;

            $response = array();
            $response_disponibilidades = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {

                $datos_servicio_configuracion = $dbo->fetchArray($qry);

                $message = $dbo->rows($qry) . " Encontrados";
                $servicio_hora["IDClub"] = $IDClub;
                $servicio_hora["IDServicio"] = $IDServicio;
                $servicio_hora["Fecha"] = $Fecha;
                //$response_disponibilidad = SIMWebService::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

                //Horas Disponibles Elemento
                $response_disponibilidad = array();

                //Si se selecciona un tipo de resrva consulto que elemntos pueden hacer esa reserva (por ejemplo una manicurista que solo hace decoracion y las otra no)
                if (!empty($IDTipoReserva)):

                    $sql_elemento_tipo_reserva = $dbo->query("Select IDServicioElemento From ServicioElementoTipoReserva Where IDServicioTipoReserva = '" . $IDTipoReserva . "'");
                    while ($row_elemento_tipo_reserva = $dbo->fetchArray($sql_elemento_tipo_reserva)):
                        $array_elementos_tipo_reserva[] = $row_elemento_tipo_reserva["IDServicioElemento"];
                    endwhile;
                    if (count($array_elementos_tipo_reserva) > 0):
                        $id_elemento_tipo_reserva = implode(",", $array_elementos_tipo_reserva);
                        $condicion_elemento = "and IDServicioElemento in (" . $id_elemento_tipo_reserva . ")";

                    endif;
                endif;

                if (!empty($IDElemento)) {
                    $condicion_elemento = " and IDServicioElemento = '" . $IDElemento . "'";
                }

                $r = $dbo->fetchArray($qry);

                $nombre_elemento_consulta = "";
                $sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " Order By Orden";
                $result_elementos_servicio = $dbo->query($sql_elementos_servicio);
                while ($r_elementos_servicio = $dbo->FetchArray($result_elementos_servicio)):
                    unset($array_hora_reservada);

                    $IDElemento = $r_elementos_servicio["IDServicioElemento"];

                    //Verifico si el elemento esta en otro servicio para traer el id y verificar disponibilidad
                    $condicion_multiple_elemento = SIMWebService::verifica_elemento_otro_servicio($IDElemento, "");

                    $nombre_elemento_consulta = $r_elementos_servicio["Nombre"];
                    //Consulto lo que  tiene reservado el elemento en la fecha indicada
                    $sql_reserva_elemento = "SELECT ReservaGeneral.* FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";
                    $qry_reserva_elemento = $dbo->query($sql_reserva_elemento);
                    $array_socio = array();

                    while ($row_reserva_elemento = $dbo->fetchArray($qry_reserva_elemento)) {
                        $tipo_reserva = "";
                        $tipo_reserva_empl = "";

                        if ($IDServicio != $row_reserva_elemento["IDServicio"]) {
                            //$total_reservas_hora_elmento++;
                            $array_reservas_por_hora[$row_reserva_elemento["Hora"]][$IDElemento]++;
                        }

                        if ($row_reserva_elemento["Tipo"] == "Automatica"):
                            //averiguo si fue automatica por una clase para mostrarlo en el nombre del socio
                            $sql_reserva_padre = "SELECT * FROM ReservaGeneral WHERE Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '" . $row_reserva_elemento["Hora"] . "' and Tipo <> 'Automatica' and IDSocio = '" . $row_reserva_elemento["IDSocio"] . "'  ORDER BY Hora Limit 1";
                            $qry_reserva_padre = $dbo->query($sql_reserva_padre);
                            $row_reserva_padre = $dbo->fetchArray($qry_reserva_padre);
                            $id_servicio_maestro_reserva = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_padre["IDServicio"] . "'");
                            $id_servicio_cancha_elemento = $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro_reserva . "'");
                            //Si la reserva es una clase agrego la palabra clase
                            if ($id_servicio_cancha_elemento > 0):
                                $tipo_reserva = "Clase ";
                            else:
                                $tipo_reserva = "";
                            endif;
                        endif;

                        //Verifico si el club/servicio se configuro para mostrar el nombre del socio o para mostrar un texto personalizado, para funcionarios si se muestra el nombre
                        $MostrarReserva = $datos_servicio_actual["MostrarReserva"];
                        $sql_club = "SELECT MostrarReserva, LabelPersonalizado FROM Club WHERE IDClub = '" . $IDClub . "' ";
                        $r_club = $dbo->query($sql_club);
                        $datos_club = $dbo->fetchArray($r_club);

                        if (empty($MostrarReserva)) {
                            $MostrarReserva = $datos_club["MostrarReserva"];
                        }

                        if ($MostrarReserva == "Pesonalizado" && empty($Agenda) && empty($Admin)):
                            $LabelPersonalizado = $datos_servicio_actual["LabelPersonalizado"];
                            if (empty($MostrarReserva)) {
                                $LabelPersonalizado = $datos_club["LabelPersonalizado"];
                            }

                            $nombre_tomo_reserva = $LabelPersonalizado;
                        else:

                            $predio_socio = "";
                            $invitados = "";
                            unset($array_aux_reserva);
                            unset($array_nombre_aux);
                            $nombres_aux = "";

                            if ($IDServicio == 2560):
                                $nombre_tomo_reserva = $row_reserva_elemento["NombreSocio"] . "PRUEBA PISCINA";
                            endif;

                            //En Puerto penalisa se debe mostrar el predio
                            if ($IDClub == 35) {
                                $predio_socio = $dbo->getFields("Socio", "Predio", "IDSocio = '" . $row_reserva_elemento["IDSocio"] . "'");
                            }

                            // Mostrar la reserva con cual auxiliar esta
                            if (!empty($row_reserva_elemento["IDAuxiliar"]) && empty($Admin)) {
                                $array_aux_reserva = explode(",", $row_reserva_elemento["IDAuxiliar"]);
                                if (count($array_aux_reserva) > 0) {
                                    foreach ($array_aux_reserva as $id_auxiliar) {
                                        if (!empty($id_auxiliar)) {
                                            $nombre_aux = $dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $id_auxiliar . "'");
                                            $array_nom_corte = explode("..", $nombre_aux);
                                            $array_nombre_aux[] = $array_nom_corte[0];
                                        }
                                    }
                                    if (count($array_nombre_aux) > 0) {
                                        $nombres_aux = implode(",", $array_nombre_aux);
                                        $predio_socio .= "(" . $nombres_aux . ")";
                                    }
                                }
                            }

                            if ($IDClub == 8 || $IDClub == 106) {
                                $sql_invitados = "SELECT Nombre FROM ReservaGeneralInvitado WHERE IDReservaGeneral  = '" . $row_reserva_elemento["IDReservaGeneral"] . "'";
                                $qry_invitado = $dbo->query($sql_invitados);
                                while ($array_invitados = $dbo->fetchArray($qry_invitado)) {
                                    $invitados .= "(" . $array_invitados["Nombre"] . ")";
                                }
                            }

                            $nombre_tomo_reserva = $row_reserva_elemento["NombreSocio"] . " " . $predio_socio . " " . $invitados;

                        endif;

                        $array_hora_reservada[] = $row_reserva_elemento["Hora"];
                        $array_socio[$row_reserva_elemento["Hora"]] = $row_reserva_elemento;
                        // Si la reserva fue tomada para algun beneficiario muestro el nombre del beneficiario
                        if ($row_reserva_elemento["IDSocioBeneficiario"]):
                            if ($MostrarReserva == "Pesonalizado" && empty($Agenda) && empty($Admin)):
                                $nombre_reserva = $LabelPersonalizado;
                            else:
                                $nombre_reserva = "Benef. " . $row_reserva_elemento["NombreBeneficiario"] . $predio_socio;
                            endif;
                        elseif ($row_reserva_elemento["IDInvitadoBeneficiario"]):
                            if ($MostrarReserva == "Pesonalizado" && empty($Agenda) && empty($Admin)):
                                $nombre_reserva = $LabelPersonalizado;
                            else:
                                $nombre_reserva = "Inv. " . $dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $row_reserva_elemento["IDInvitadoBeneficiario"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $row_reserva_elemento["IDInvitadoBeneficiario"] . "'") . " " . " " . $dbo->getFields("SocioInvitado", "Nombre", "IDSocioInvitado = '" . $row_reserva_elemento["IDInvitadoBeneficiario"] . "'") . " por " . $nombre_tomo_reserva;
                            endif;
                        else:
                            $nombre_reserva = $tipo_reserva . $nombre_tomo_reserva;
                        endif;

                        if ($row_reserva_elemento["IDEstadoReserva"] == 3):
                            $nombre_reserva = "En proceso de reserva";
                        endif;
                        $tipo_reserva_empl = "";
                        $nombre_tipo_reserva = $dbo->getFields("ServicioTipoReserva", "Nombre", "IDServicioTipoReserva = '" . $row_reserva_elemento["IDServicioTipoReserva"] . "'");

                        if ($Agenda == "S"):
                            //$tipo_reserva_empl = "";
                            //$nombre_tipo_reserva =  $dbo->getFields( "ServicioTipoReserva", "Nombre", "IDServicioTipoReserva = '" . $row_reserva_elemento[ "IDServicioTipoReserva" ] . "'" ) ;

                            if (!empty($nombre_tipo_reserva)) {
                                $tipo_reserva_empl = " / " . $nombre_tipo_reserva;
                            }

                            //Vuelvo a consultar el servicio ya que un elemento puede ser de varios servicios y se debe verificar de nuevo la reserva actual de cual servicio es
                            $id_servicio_maestro_consulta = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_elemento["IDServicio"] . "'");
                            $nombre_servicio_personalizado = $dbo->getFields("ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro_consulta . "'");
                            if (empty($nombre_servicio_personalizado)) {
                                $nombre_servicio_personalizado = $datos_servicio_mestro["Nombre"];
                            }

                            $tipo_reserva_empl .= "(" . $nombre_servicio_personalizado . ")";

                            if (!empty($row_reserva_elemento["Observaciones"])) {
                                $tipo_reserva_empl .= $row_reserva_elemento["Observaciones"];
                            }
                        endif;

                        //especial bttcc al socio canje mostrar Observacion
                        if ($row_reserva_elemento["IDSocio"] == 181191 && $Agenda != "S") {
                            $tipo_reserva_empl = $row_reserva_elemento["Observaciones"];
                        }

                        if ($Agenda == "S") {
                            //respuesta a preguntas personalizadas al reservar
                            $sql_respuesta_perso = "SELECT Valor,IDServicioCampo FROM  ReservaGeneralCampo WHERE IDReservaGeneral = '" . $row_reserva_elemento["IDReservaGeneral"] . "'";
                            $r_respuesta_perso = $dbo->query($sql_respuesta_perso);
                            while ($row_respuesta_perso = $dbo->fetchArray($r_respuesta_perso)) {
                                $pregunta_serv = $dbo->getFields("ServicioCampo", "Nombre", "IDServicioCampo = '" . $row_respuesta_perso["IDServicioCampo"] . "'");
                                $tipo_reserva_empl .= $pregunta_serv . ":" . $row_respuesta_perso["Valor"];
                            }
                        }

                        $datos_servicio_config = $dbo->fetchAll("Servicio", " IDServicio = '" . $row_reserva_elemento["IDServicio"] . "' ", "array");
                        if ($datos_servicio_config["PopInvitados"] == "N") {
                            $IDReservaPop = "";
                        } else {
                            $IDReservaPop = $row_reserva_elemento["IDReservaGeneral"];
                        }

                        //$IDReservaPop=$row_reserva_elemento[ "IDReservaGeneral" ];

                        $array_socio[$row_reserva_elemento["Hora"]]["NombreSocio"] = $nombre_reserva . $tipo_reserva_empl;
                        $array_socio[$row_reserva_elemento["Hora"]]["IDSocio"] = $row_reserva_elemento["IDSocio"];
                        $array_socio[$row_reserva_elemento["Hora"]]["ModalidadEsquiSocio"] = $dbo->getFields("TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva_elemento["IDTipoModalidadEsqui"] . "'");
                        $array_socio[$row_reserva_elemento["Hora"]]["IDReservaGeneral"] = $IDReservaPop;
                        $array_socio[$row_reserva_elemento["Hora"]]["IDSocioBeneficiario"] = $row_reserva_elemento["IDSocioBeneficiario"];
                        $array_socio[$row_reserva_elemento["Hora"]]["IDInvitadoBeneficiario"] = $row_reserva_elemento["IDInvitadoBeneficiario"];
                        $array_socio[$row_reserva_elemento["Hora"]]["Cumplida"] = $row_reserva_elemento["Cumplida"];
                        $array_socio[$row_reserva_elemento["Hora"]]["Tipo"] = $row_reserva_elemento["Tipo"];
                        $array_socio[$row_reserva_elemento["Hora"]]["TipoReserva"] = $nombre_tipo_reserva;

                    }

                    //Horas generales del servicio
                    /*
                    $horaInicial=$r["HoraDesde"];
                    $minutoAnadir=$r["IntervaloHora"];
                    $hora_final = strtotime( $r["HoraHasta"] );
                    $hora_actual = $r["HoraDesde"];
                     */

                    $dia_fecha = date('w', strtotime($Fecha));

                    if (empty($Admin)) {
                        $condicion_dispo_solo_admin = " and SoloAdmin <> 'S'";
                    }

                    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
                    $sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%|" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin . " Order by HoraDesde Limit 1";
                    $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
                    $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);
                    //$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
                    $horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera["HoraDesde"];

                    //Verifico que no tenga cierre el elemento en esta fecha
                    $verifica_abierto_servicio = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento);

                    //para bellavista los sabados nadie puede tomar reservas por el app en las horas de la maÃ±ana

                    if (empty($verifica_abierto_servicio)) {

                        //Verifico si tene disponibilidad  general el elemento

                        $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%|" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin;
                        $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);

                        if ($dbo->rows($qry_dispo_elemento_gral) > 0) {

                            $verifica_disponibilidad_general = 1;
                            while ($row_dispo_elemento_gral = $dbo->fetchArray($qry_dispo_elemento_gral)) {

                                $horaInicial = $row_dispo_elemento_gral["HoraDesde"];

                                //$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
                                $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");

                                // Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
                                if ($Fecha == date("Y-m-d")):
                                    $medicion_tiempo = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                    $valor_tiempo_anticipacion = (int) $dbo->getFields("Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                    if ($medicion_tiempo == "Horas"):
                                        $valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
                                    elseif ($medicion_tiempo == "Dias"):
                                        $valor_tiempo_anticipacion = 0;
                                    endif;
                                else:
                                    $valor_tiempo_anticipacion = 0;
                                endif;

                                //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
                                $medicion_tiempo_anticipacion = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                $valor_anticipacion_turno = (int) $dbo->getFields("Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                switch ($medicion_tiempo_anticipacion):
                            case "Dias":
                                $minutos_anticipacion_turno = (60 * 24) * $valor_anticipacion_turno;
                                break;
                            case "Horas":
                                $minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
                                break;
                            case "Minutos":
                                $minutos_anticipacion_turno = $valor_anticipacion_turno;
                                break;
                            default:
                                $minutos_anticipacion_turno = 0;
                                endswitch;

                                //Si es administrador no tiene limite de anticipacion
                                if ($Admin == "S") {
                                        $valor_tiempo_anticipacion = 0;
                                        $minutos_anticipacion_turno = 0;
                                }

                                //Consulto hace una hora para mostrar los turnos anterior segun solicitud de lagartos
                                $id_servicio_inicial = $datos_servicio_mestro["IDServicioInicial"];

                                //para psicina uruguat se debe mostrar las hotras anteriores
                                if ($IDClub == 125 && $IDServicio == 23009) {
                                    $minutoAnadir = 360;
                                }

                                //si es work place arrayanes mostrar horas pasadas
                                if ($IDClub == 11 && $IDServicio == 12854) {
                                    $MostrarTodoDia = "S";
                                }

                                //$hace_una_hora = strtotime ( '-1 hour' , strtotime ( date("Y-m-d H:i:s") ) ) ;
                                $hace_una_hora = strtotime('-' . $minutoAnadir . ' minutes', strtotime(date("Y-m-d H:i:s")));

                                if ($Fecha == date("Y-m-d")):
                                    $hora_real = date('Y-m-d H:i:s', $hace_una_hora);
                                else:
                                    $hora_real = date('Y-m-d H:i:s');
                                endif;

                                // Solo aplica lo de 1 hora antes cuando no es servicio de clases
                                if ($id_servicio_inicial == "1"):
                                    //$hora_real = date('Y-m-d H:i:s');
                                endif;

                                //Cunado se consulta desde la agenda del app de empleados muestro todo el dia
                                if ($Agenda == "S" || $MostrarTodoDia == "S"):
                                    $hora_real = date('Y-m-d 05:00:00');
                                endif;

                                if ($Agenda == "S" || $MostrarTodoDia == "S"):
                                    $hora_real = $Fecha . " " . date('05:00:00');
                                endif;

                                // Si tiene configurado el parametro de anticipacion turno no tomo en cuenta lo de dejar ala hora actual 1 hora antes
                                if ($minutos_anticipacion_turno > 0 && $Agenda != "S") {
                                    $hora_real = date('Y-m-d H:i:s');
                                }

                                $hora_empezar_reserva = strtotime('-' . $valor_tiempo_anticipacion . ' minute', strtotime($horaInicial_reserva));
                                //$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
                                $hora_actual_sistema = strtotime($hora_real);

                                $hora_final = strtotime($row_dispo_elemento_gral["HoraHasta"]);
                                $hora_actual = strtotime($row_dispo_elemento_gral["HoraDesde"]);

                                $primer_horario = 0;
                                $primer_horario_disponible = "";
                                $verifica_abierto_servicio_hora = "";

                                while ($hora_actual <= $hora_final):

                                    $hora_fecha_actual = $Fecha . " " . date('H:i:s', $hora_actual);
                                    $hora_puede_reservar = strtotime('+' . $minutos_anticipacion_turno . ' minute', strtotime($hora_real));

                                    if ($Agenda == "S"):
                                        $hora_puede_reservar = strtotime('+0 minute', strtotime($hora_real));
                                    endif;

                                    /*
                                    if($IDServicio==1116){
                                    echo "Condi " .  date("Y-m-d H:i:s",$hora_puede_reservar) ."<=".$hora_fecha_actual;
                                    echo "ANTI: " . $minutos_anticipacion_turno;
                                    if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):
                                    echo "SI:".$hora_actual;
                                    endif;
                                    }
                                     */

                                    /*****************************************************************************************************
                                    Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
                                    Valido que Ã©sta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
                                     ******************************************************************************************************/
                                    if (strtotime($hora_fecha_actual) >= strtotime($hora_real) && $hora_puede_reservar <= strtotime($hora_fecha_actual)):

                                        //valido si ya paso el tiempo limite despues de pasado el turno aun se puede reservar, ej: el de las 4 lo puedo tomar hasta las 4:10
                                        $minutoPosterior = (int) $dbo->getFields("Disponibilidad", "MinutoPosteriorTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                        $flag_hora_disponible_limite = 0;
                                        if ($minutoPosterior > 0 && $Fecha == date("Y-m-d") && (empty($Agenda) && empty($MostrarTodoDia))):
                                            $tiempo_limite_reserva = strtotime('+' . $minutoPosterior . ' minutes', strtotime($hora_fecha_actual));
                                            if (strtotime(date("Y-m-d H:i:s")) >= $tiempo_limite_reserva):
                                                $flag_hora_disponible_limite = 1;
                                            endif;
                                        endif;

                                        if ($flag_hora_disponible_limite == 0):

                                            if (strlen($horaInicial) != 8):
                                                $horaInicial .= ":00";
                                            endif;

                                            $flag_hora_disponible = 0;
                                            // Si el servicio es una clase y necesita reservar cancha verifico que exista al menos un elemento (cancha) disponible para mostrar la hora

                                            if ($id_servicio_cancha > 0):
                                                // Consulto el servicio del club asociado a este servicio maestro
                                                $IDServicioCanchaClub = $dbo->getFields("Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'");
                                                // Valido si existe una cancha disponible en el horario de la clase
                                                $IDElemento_cancha = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicioCanchaClub, $Fecha, $horaInicial, $IDElemento);
                                                if (empty($IDElemento_cancha)):
                                                    $flag_hora_disponible = 1;
                                                endif;
                                            endif;

                                            $hora_mostrar = $horaInicial;
                                            $hora["Hora"] = $horaInicial;

                                            $zonahoraria = date_default_timezone_get();
                                            $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                            $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

                                            //echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
                                            //exit;

                                            $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "' ", "array");

                                            // Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
                                            $multiples_cupos = "N";
                                            $IDElementoConsultar = $IDElemento;

                                            if ((int) $datos_disponibilidad["Cupos"] > 1) {
                                                $multiples_cupos = "S";
                                                //Consulto cuantos reservas se han tomado en esta hora para saber si ya llegÃ³ al limite de cupos
                                                $cupos_reservados = self::valida_cupos_disponibles($IDClub, $IDServicio, $IDElemento, $Fecha, $horaInicial);
                                                //Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
                                                $array_otro_elemento = explode(",", $condicion_multiple_elemento);
                                                if (count($array_otro_elemento) > 1): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
                                                    foreach ($array_otro_elemento as $id_elemento_multiple):
                                                        if ($id_elemento_multiple != $IDElemento && !empty($id_elemento_multiple)):
                                                            $sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ";
                                                            $qry_reserva_elemento_mult = $dbo->query($sql_reserva_elemento_multp);
                                                            $num_otras_reservas = $dbo->rows($qry_reserva_elemento_mult);
                                                            if ($num_otras_reservas > 0 && $CuposporHora >= 1):
                                                                $multiples_cupos = "N";
                                                            endif;
                                                        endif;
                                                    endforeach;
                                                endif;

                                                $cupo_disponibles = "";
                                                $cupos_reservados += $array_reservas_por_hora[$horaInicial][$IDElemento];
                                                //Valido si todavia existe cupo en esta hora
                                                if ($cupos_reservados < $datos_disponibilidad["Cupos"]):
                                                    $cupo_total = "N"; // aun hay cupos disponibles
                                                    $cupos_disponibles = (int) $datos_disponibilidad["Cupos"] - (int) $cupos_reservados;
                                                    $label_cupo_disponibles = "" . $cupos_disponibles . " Cupos.";
                                                else:
                                                    $cupo_total = "S"; // ya no hay cupos
                                                endif;
                                            } else {
                                                $label_cupo_disponibles = "";
                                            }

                                            //Cuando es Agenda lo muestro como si tuviera el cupo total para que en el app aparezca lo sinscritos hasta el momento
                                            if ($Agenda == "S"):
                                                $cupo_total = "S";
                                            endif;

                                            //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
                                            $hora_real_momento = strtotime(date("Y-m-d H:i:s")); //calculo de nuevo la fecha y hora real del sistema ya que pudo ser modificada con un tiempo de anticipacion anteriormente
                                            $IDAuxiliarReserva = "";

                                            // Si tiene Auxiliar y es admin mustro el auxiliar seleccionado
                                            $NombreAuxiliarReserva = "";
                                            $nombre_auxiliar = "";
                                            if (!empty($Admin)):
                                                $IDAuxiliarReserva = $dbo->getFields("ReservaGeneral", "IDAuxiliar", "IDReservaGeneral = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "'");
                                                if (!empty($IDAuxiliarReserva)):
                                                    $array_aux = explode(",", $IDAuxiliarReserva);
                                                    if (count($array_aux) > 0):
                                                        foreach ($array_aux as $id_aux):
                                                            if (!empty($id_aux)) {
                                                                $nombre_auxiliar .= $dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $id_aux . "'") . " - ";
                                                            }

                                                            ?>
																																				<?php
                                endforeach;
                                                    endif;
                                                    $NombreAuxiliarReserva = "<span style='color:#696'> / " . $nombre_auxiliar . "</span>";
                                                endif;

                                                //Si es una clase consulto el padre de la reserva
                                                $TipoReservaA = $dbo->getFields("ReservaGeneral", "Tipo", "IDReservaGeneral = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "'");

                                                if ($TipoReservaA == "Automatica"):
                                                    $IDBeneficiario = $dbo->getFields("ReservaGeneral", "IDSocioBeneficiario", "IDReservaGeneral = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "'");
                                                    /*
                                                    if(!empty($IDBeneficiario)):
                                                    $condicion_benef = " and IDBeneficiario = '".$IDBeneficiario."' ";
                                                    else:
                                                    $condicion_benef = " and IDBeneficiario = '0' ";
                                                    endif;
                                                     */
                                                    $sql_id_reserva_padre_e = "SELECT * FROM ReservaGeneralAutomatica WHERE  IDReservaGeneralAsociada = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "' Limit 1";
                                                    $qry_id_reserva_padre_e = $dbo->query($sql_id_reserva_padre_e);
                                                    $row_id_reserva_padre_e = $dbo->fetchArray($qry_id_reserva_padre_e);

                                                    //$sql_reserva_padre_e = "SELECT * FROM ReservaGeneral WHERE Fecha = '".$Fecha."' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '".$hora["Hora"]."' and Tipo <> 'Automatica' and IDSocio = '".$array_socio["$horaInicial"]["IDSocio"]."' ".$condicion_benef ." ORDER BY Hora Limit 1";
                                                    $sql_reserva_padre_e = "SELECT * FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_id_reserva_padre_e["IDReservaGeneral"] . "' Limit 1";
                                                    $qry_reserva_padre_e = $dbo->query($sql_reserva_padre_e);
                                                    $row_reserva_padre_e = $dbo->fetchArray($qry_reserva_padre_e);
                                                    $id_servicio_maestro_reserva = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_padre_e["IDServicio"] . "'");
                                                    $id_servicio_cancha_e = $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro_reserva . "'");
                                                    //Si la reserva es una clase agrego la palabra clase
                                                    if ($id_servicio_cancha_e > 0):
                                                        //Si se hizo una reserva automatica muestro el nombre del elemento reservado
                                                        $id_elemento_reservado = $dbo->getFields("ReservaGeneral", "IDServicioElemento", "IDReservaGeneral = '" . $row_reserva_padre_e["IDReservaGeneral"] . "'");
                                                        $elemento_reservado = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $id_elemento_reservado . "'");
                                                        if (!empty($elemento_reservado)):
                                                            $NombreAuxiliarReserva .= "<span style='color:#696'> / " . $elemento_reservado . "</span>";
                                                        endif;
                                                    endif;
                                                endif;

                                                //verifico si tiene una reserva automatica para mostrarla
                                                $id_reserva_automatica = $dbo->getFields("ReservaGeneralAutomatica", "IDReservaGeneralAsociada", " IDReservaGeneral = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "'");
                                                if (!empty($id_reserva_automatica)):
                                                    $detalle_reserva_auto = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $id_reserva_automatica . "' ", "array");
                                                    $NombreAuxiliarReserva .= "<span style='color:#696'> / " . $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $detalle_reserva_auto["IDServicioElemento"] . "'") . "</span>";
                                                endif;

                                            endif;

                                            if ((in_array($horaInicial, $array_hora_reservada) && $multiples_cupos == "N") || ($hora_real_momento < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {

                                                if ($Agenda == "S"):
                                                    //Si es para agenda no ponto las etiquetas html
                                                    $NombreAuxiliarReserva = strip_tags($NombreAuxiliarReserva);
                                                endif;

                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = $array_socio["$horaInicial"]["NombreSocio"] . $NombreAuxiliarReserva;
                                                $hora["IDSocio"] = $array_socio["$horaInicial"]["IDSocio"];
                                                $hora["ModalidadEsquiSocio"] = $array_socio["$horaInicial"]["ModalidadEsquiSocio"];
                                                $hora["TipoReserva"] = $array_socio["$horaInicial"]["TipoReserva"];
                                                $hora["IDReserva"] = $array_socio["$horaInicial"]["IDReservaGeneral"];
                                                $hora["IDSocioBeneficiario"] = $array_socio["$horaInicial"]["IDSocioBeneficiario"];
                                                $hora["IDInvitadoBeneficiario"] = $array_socio["$horaInicial"]["IDInvitadoBeneficiario"];
                                                $array_reserva_hora_elem[$horaInicial]++;

                                                //verifo si el elemento lo han reservado en horas anteriorees para
                                                if ($primer_horario == 0 || $primer_horario == 1 || $primer_horario == 2):
                                                    $primer_horario_disponible = "reservado_socio";
                                                endif;

                                            } else {

                                                //Verifico que no tenga fecha de cierre en esta hora
                                                $verifica_abierto_servicio_hora = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento, $horaInicial);

                                                //Validacion Especial y temporal cuando es una clase de lagartos y la hora es mayor a 8pm no se muestra las 7 8 y 9 am del dia siguiente a menos que la hora de las 7 estÃ© tomada
                                                if (($IDClub == 7 || $IDClub == 8) && ($IDServicio == 43 || $IDServicio == 41) && empty($verifica_abierto_servicio_hora)) { //Clases tenis especial
                                                    $fecha_hoy_sistema = date('Y-m-d');
                                                    $fecha_manana = strtotime('+1 day', strtotime($fecha_hoy_sistema));
                                                    $fecha_corta_manana = date('Y-m-d', $fecha_manana);

                                                    //if ( $horaInicial == "06:00:00" || $horaInicial == "07:00:00" || $horaInicial == "08:00:00" || $horaInicial == "09:00:00" ) {
                                                    if ($horaInicial == "06:00:00" || $horaInicial == "07:10:00" || $horaInicial == "08:20:00") {
                                                        //echo $Fecha."==".$fecha_corta_manana;
                                                        if ($Fecha == date("Y-m-d") || ($Fecha == $fecha_corta_manana && date("H") >= 20)) {
                                                            if ($Fecha == date("Y-m-d")) {
                                                                //verifico si ya tiene algo reservado antes de la hora si es asi no bloque los horarios
                                                                $sql_reserva_elemento_antes = "SELECT * FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora <= '" . $hora["Hora"] . "' and IDServicioElemento = '" . $IDElemento . "'  ORDER BY Hora ";
                                                                $result_reserva_elemento_antes = $dbo->query($sql_reserva_elemento_antes);
                                                                if ($dbo->rows($result_reserva_elemento_antes) > 0):
                                                                    $verifica_abierto_servicio_hora = "";
                                                                else:
                                                                    $verifica_abierto_servicio_hora = "Hora no disponible: " . $Fecha . " Motivo:No disponible.";
                                                                endif;
                                                            } elseif ($primer_horario_disponible != "reservado_socio") { // Si la primera hora estÃ¡ reservada, no bloqueo estos horarios
                                                            $verifica_abierto_servicio_hora = "Hora no disponible: " . $Fecha . " Motivo:No disponible.";
                                                        }

                                                    }
                                                }
                                            }

                                            //Especial AeroClub si un avion tiene reserva encualquier hora del dia se bloquea en los demas Servicios
                                            $flag_avion_disponible = 0;
                                            if ($IDClub == 36 && ($IDServicio == 3608 || $IDServicio == 4371)):
                                                // SI esta reservado en crucero lo bloqueo en local
                                                if ($IDServicio == 4371) { // Crucero
                                                    $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and IDServicio = '3608' Limit 1 ";
                                                } else { // Local
                                                    $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and IDServicio = '4371' Limit 1 ";
                                                }

                                                $r_reserva_elemento_avion = $dbo->query($sql_reserva_elemento_avion);
                                                if ($dbo->rows($r_reserva_elemento_avion) > 0):
                                                    $flag_avion_disponible = 1;
                                                endif;
                                            endif;

                                            if (!empty($verifica_abierto_servicio_hora)):

                                                //extraigo la razon
                                                $mensaje_cierre = explode(":", $verifica_abierto_servicio_hora);
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = $mensaje_cierre[2];
                                                $hora["IDSocio"] = "";
                                                $hora["ModalidadEsquiSocio"] = "";
                                                $hora["TipoReserva"] = "";
                                                $hora["IDReserva"] = "";
                                            elseif ($flag_hora_disponible == 1):
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = "No hay cancha disponible para clase";
                                                $hora["IDSocio"] = "";
                                                $hora["ModalidadEsquiSocio"] = "";
                                                $hora["TipoReserva"] = "";
                                                $hora["IDReserva"] = "";
                                            elseif ($flag_avion_disponible == 1):
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = "Avion ya reservado";
                                                $hora["IDSocio"] = "";
                                                $hora["ModalidadEsquiSocio"] = "";
                                                $hora["TipoReserva"] = "";
                                                $hora["IDReserva"] = "";
                                            else:

                                                //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
                                                if (!empty($IDTipoReserva)):
                                                    $datos_tipo_reserva = $dbo->fetchAll("ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array");
                                                    $cantidad_turnos = $datos_tipo_reserva["NumeroTurnos"];
                                                else:
                                                    $cantidad_turnos = 1;
                                                endif;

                                                if ($cantidad_turnos > 1):
                                                    //verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
                                                    $array_disponible = self::valida_siguiente_turno_sin_reserva($Fecha, $horaInicial, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos);
                                                endif;
                                                if (count($array_disponible) != (int) ($cantidad_turnos - 1) && $cantidad_turnos > 1):
                                                    $hora["Disponible"] = "N";
                                                    $hora["Socio"] = "No Disponible.";
                                                    $hora["IDSocio"] = "";
                                                    $hora["ModalidadEsquiSocio"] = "";
                                                    $hora["IDReserva"] = "";
                                                else:

                                                    //Si permite multiples cupos y hay cupos disponibles pongo la hora como disponible
                                                    if ($multiples_cupos == "S" && $cupo_total == "S"):
                                                        if ($Agenda == "S" || $datos_servicio_config["VerInscitosClaseApp"] == "S"):
                                                            unset($array_socio_multiple);
                                                            //Consulto nombre de socios incritos
                                                            $sql_socio_multiple = "SELECT RG.*
																									                                            FROM ReservaGeneral RG
																									                                            WHERE RG.IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' AND Fecha = '" . $Fecha . "' and IDEstadoReserva = 1 and Hora = '" . $horaInicial . "' and IDServicioElemento = '" . $IDElemento . "'";
                                                            $result_socio_multiple = $dbo->query($sql_socio_multiple);
                                                            $tipo_reserva_empl = "";
                                                            while ($row_socio_multiple = $dbo->fetchArray($result_socio_multiple)):

                                                                if ($row_socio_multiple["IDSocio"] == 181191 && $Agenda == "S") {
                                                                    $tipo_reserva_empl = $row_socio_multiple["Observaciones"];
                                                                }

                                                                if ($IDClub == 106):

                                                                    $sql_invitados = "SELECT Nombre FROM ReservaGeneralInvitado WHERE IDReservaGeneral  = '" . $row_socio_multiple["IDReservaGeneral"] . "'";
                                                                    $qry_invitado = $dbo->query($sql_invitados);

                                                                    while ($array_invitados = $dbo->fetchArray($qry_invitado)) {
                                                                        $invitados .= "(" . $array_invitados["Nombre"] . ")";
                                                                    }

                                                                    $array_socio_multiple[] = $row_socio_multiple["NombreSocio"] . $tipo_reserva_empl . " " . $invitados;

                                                                endif;

                                                                if (!empty($row_socio_multiple["NombreBeneficiario"])) {
                                                                    $array_socio_multiple[] = "Benef." . $row_socio_multiple["NombreBeneficiario"] . $tipo_reserva_empl;
                                                                } else {
                                                                    $array_socio_multiple[] = $row_socio_multiple["NombreSocio"] . $tipo_reserva_empl;
                                                                }

                                                                if ($IDClub == 35):
                                                                    $predio_socio = $dbo->getFields("Socio", "Predio", "IDSocio = '" . $row_socio_multiple["IDSocio"] . "'");
                                                                    $array_socio_multiple[] = $row_socio_multiple["NombreSocio"] . $tipo_reserva_empl . " " . $predio_socio;
                                                                endif;

                                                                $IDAuxiliarReserva .= $row_socio_multiple["IDAuxiliar"];

                                                            endwhile;
                                                            if (count($array_socio_multiple) > 0):
                                                                $mensaje_cupo_lleno = implode(" / ", $array_socio_multiple);
                                                            else:
                                                                $mensaje_cupo_lleno = "Sin inscripciones";
                                                            endif;
                                                        else:
                                                            $mensaje_cupo_lleno = "Se llego al limite de cupos ";
                                                        endif;
                                                        $hora["Disponible"] = "N";
                                                        $hora["Socio"] = $mensaje_cupo_lleno;
                                                        $hora["IDSocio"] = "";
                                                        $hora["ModalidadEsquiSocio"] = "";
                                                        $hora["IDReserva"] = "";
                                                    else:

                                                        //Valido cuantos cupos por bloque son permitidos (pj pueden haber disponibles 4 masajistas pero solo hay dos camillas entonces el limite es 2 por bloque)
                                                        if ($CuposporHora > 0):

                                                            if ($IDClub == 77) {
                                                                $condicion_tipo = " and IDServicioTipoReserva = '" . $IDTipoReserva . "' ";
                                                            }
                                                            //Consulto cuantas reservas hay en esta hora en este servicio
                                                            $sql_reserva_servicio = "SELECT ReservaGeneral.* FROM ReservaGeneral  WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' AND Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' " . $condicion_tipo;
                                                            $result_reserva_servicio = $dbo->query($sql_reserva_servicio);

                                                            //$num_otras_reservas = count($array_reserva_hora_elem[$horaInicial]);

                                                            $total_reservas_hora = (int) $dbo->rows($result_reserva_servicio) + $num_otras_reservas;
                                                            //echo $num_otras_reservas;
                                                        endif;

                                                        if ($CuposporHora > 0 && $total_reservas_hora >= $CuposporHora):
                                                            $hora["Disponible"] = "N";
                                                            $hora["Socio"] = "Se llego al maximo por hora. ";
                                                            $hora["IDSocio"] = "";
                                                            $hora["ModalidadEsquiSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        else:

                                                            $hora["Disponible"] = "S";
                                                            $hora["Socio"] = "" . $label_cupo_disponibles;
                                                            $hora["IDSocio"] = "";
                                                            $hora["ModalidadEsquiSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                            $hora["IDSocioBeneficiario"] = "";
                                                        endif;
                                                    endif;

                                                    //if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
                                                    //$hora["Disponible"] = "S";
                                                    //$hora["Socio"] = "";
                                                    //$hora["IDSocio"] = "";
                                                    //$hora["ModalidadEsquiSocio"] = "";
                                                    //$hora["IDReserva"] = "";

                                                    //else:
                                                    /*
                                                    $hora["Disponible"] = "N";
                                                    $hora["Socio"] = "Hora no disponible";
                                                    $hora["IDSocio"] = "";
                                                    $hora["IDReserva"] = "";
                                                     */
                                                    //$hora["Disponible"] = "S";
                                                    //$hora["Socio"] = "";
                                                    //$hora["IDSocio"] = "";
                                                    //$hora["IDReserva"] = "";
                                                    //endif;

                                                endif;

                                            endif;

                                        }

                                        //Averiguo el numero de dias de anticipacion
                                        $hora["MaximoPersonaTurno"] = $datos_disponibilidad["MaximoPersonaTurno"];
                                        $hora["NumeroInvitadoClub"] = $datos_disponibilidad["NumeroInvitadoClub"];
                                        $hora["NumeroInvitadoExterno"] = $datos_disponibilidad["NumeroInvitadoExterno"];

                                        //Repeticion reserva
                                        $hora["IDDisponibilidad"] = $datos_disponibilidad["IDDisponibilidad"];
                                        $hora["PermiteRepeticion"] = $datos_disponibilidad["PermiteRepeticion"];
                                        $hora["MedicionRepeticion"] = $datos_disponibilidad["MedicionRepeticion"];
                                        $hora["FechaFinRepeticion"] = $datos_disponibilidad["FechaFinRepeticion"];

                                        //Consulto los datos de georeferenciacion
                                        $datos_disponibilidad_geo = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $datos_disponibilidad["IDDisponibilidad"] . "' ", "array");
                                        $hora["Georeferenciacion"] = $datos_disponibilidad_geo["Georeferenciacion"];
                                        //Consulto los demas datos de la configuracion del servicio
                                        $datos_geo_servicio = $dbo->fetchAll("Servicio", " IDServicio = '" . $IDServicio . "' ", "array");
                                        $hora["Latitud"] = $datos_servicio_actual["Latitud"];
                                        $hora["Longitud"] = $datos_servicio_actual["Longitud"];
                                        $hora["Rango"] = $datos_servicio_actual["Rango"];
                                        $hora["MensajeFueraRango"] = $datos_servicio_actual["MensajeFueraRango"];
                                        $hora["LabelDisponible"] = "Disponible " . $label_cupo_disponibles;

                                        $hora["IDElemento"] = $IDElemento;

                                        // Consulto las modalidades que pueda tener
                                        $nom_modalidad = array();
                                        $array_modalidad_elemento = SIMWebService::get_modalidades($IDClub, "", $IDElemento);

                                        if (count($array_modalidad_elemento) > 0):
                                            foreach ($array_modalidad_elemento["response"] as $id_modalidad => $datos_modalidad):
                                                $nom_modalidad[] = $datos_modalidad["Descripcion"];
                                            endforeach;
                                            $nombre_modalidad = implode("-", $nom_modalidad);
                                        endif;

                                        // FIn Modalidades

                                        $datos_elemento = $dbo->fetchAll("ServicioElemento", " IDServicioElemento = '" . $IDElemento . "' ", "array");

                                        if ($IDClub == 72 && $IDServicio == 8649 && $hora_mostrar >= '17:00:00') {
                                            $nombre_elemento_adicional = "En este horario no hay servicio de caddies";
                                        } else {
                                            $nombre_elemento_adicional = "";
                                        }

                                        $hora["NombreElemento"] = $datos_elemento["Nombre"] . " " . $nombre_elemento_adicional;
                                        $hora["IDUsuario"] = $IDUsuario;
                                        $hora["PermiteReservarUsuario"] = $PermiteReservarUsuario;

                                        $hora["ColorLetra"] = $datos_elemento["ColorLetra"];
                                        $hora["ColorFondo"] = $datos_elemento["ColorFondo"];

                                        if (!empty($datos_elemento["Foto"])) {
                                            $FotoElemento = ELEMENTOS_ROOT . $datos_elemento["Foto"];
                                        } else {
                                            $FotoElemento = "";
                                        }

                                        $hora["Foto"] = $FotoElemento;
                                        $hora["ModalidadElemento"] = $nombre_modalidad;
                                        $hora["MaximoInvitadosSalon"] = $datos_disponibilidad["MaximoInvitadosSalon"];
                                        $hora["OrdenElemento"] = $dbo->getFields("ServicioElemento", "Orden", "IDServicioElemento = '" . $IDElemento . "'");
                                        $hora["PermiteListaEspera"] = $datos_geo_servicio["PermiteListaEspera"];
                                        $hora["LabelTituloHora"] = $datos_servicio_actual["LabelTituloHora"];

                                        //si a la reserva ya se le marco cumplida no muesro el boton
                                        $MostrarAsistencia = "S";

                                        if ($array_socio["$horaInicial"]["Cumplida"] == "S" || $array_socio["$horaInicial"]["Tipo"] == "Automatica") {
                                            $MostrarAsistencia = "N";
                                        }

                                        $hora["MostrarBotonCumplida"] = $MostrarAsistencia;
                                        $hora["IDAuxiliar"] = $IDAuxiliarReserva;

                                        $response_inscritos = array();
                                        $datos_inscrito = array();
                                        // Es una clase grupal
                                        if ($datos_disponibilidad["Cupos"] > 1) {
                                            $hora["MostrarBotonInscritos"] = $datos_servicio_configuracion["MostrarBotonInscritos"];
                                            $hora["LabelBotonInscritos"] = $datos_servicio_configuracion["LabelBotonInscritos"];
                                            $sql_inscritos_hora = "SELECT RG.IDReservageneral,RG.NombreSocio, AccionSocio, RG.NombreBeneficiario, RG.IDSocio, RG.IDSocioBeneficiario
													                                   FROM ReservaGeneral RG
													                                   WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "'
													                                   and IDEstadoReserva = 1  and Hora = '" . $horaInicial . "' and IDServicioElemento = '" . $IDElemento . "' and IDClub = '" . $IDClub . "'";

                                            $r_inscritos_hora = $dbo->query($sql_inscritos_hora);
                                            while ($row_inscritos_hora = $dbo->fetchArray($r_inscritos_hora)) {
                                                $datos_inscrito["IDReserva"] = $row_inscritos_hora["IDReservageneral"];
                                                //$datos_inscrito[ "Socio" ] = $row_inscritos_hora[ "NombreSocio" ] . "-". $row_inscritos_hora[ "AccionSocio" ];
                                                if (!empty($row_inscritos_hora["NombreBeneficiario"])) {
                                                    $datos_inscrito["IDSocio"] = $row_inscritos_hora["IDSocioBeneficiario"];
                                                    $datos_inscrito["Socio"] = "Benef. " . $row_inscritos_hora["NombreBeneficiario"];
                                                } else {
                                                    $datos_inscrito["IDSocio"] = $row_inscritos_hora["IDSocio"];
                                                    $datos_inscrito["Socio"] = $row_inscritos_hora["NombreSocio"];
                                                }

                                                array_push($response_inscritos, $datos_inscrito);

                                            }
                                            $hora["Inscritos"] = $response_inscritos;
                                        } else {
                                            $hora["MostrarBotonInscritos"] = "N";
                                            $hora["LabelBotonInscritos"] = "";
                                            $hora["Inscritos"] = array();
                                        }

                                        array_push($response_disponibilidad, $hora);

                                    endif;
                                endif;
                                $primer_horario++;
                                $array_horas_elemento[] = $horaInicial;
                                $segundos_horaInicial = strtotime($horaInicial);
                                $segundos_minutoAnadir = $minutoAnadir * 60;
                                $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                $hora_actual = strtotime($nuevaHora);
                                $horaInicial = $nuevaHora;

                            endwhile;

                        }
                    }
                }

            endwhile;

            $orden_letra = "";
            foreach ($response_disponibilidad as $id_array => $datos_array):
                $orden_letra = SIMResources::$abecedario[$datos_array["OrdenElemento"]];
                $array_ordenado_hora[$orden_letra . "_" . $datos_array["Hora"] . $datos_array["IDElemento"]] = $datos_array;
            endforeach;

            if (count($array_ordenado_hora) > 0) {
                ksort($array_ordenado_hora);
            }

            $response_array_ordenado = array();

            if (count($array_ordenado_hora) <= 0) {
                $array_ordenado_hora = array();
            }

            foreach ($array_ordenado_hora as $id_array => $datos_array):
                array_push($response_array_ordenado, $datos_array);
            endforeach;

            array_push($response_disponibilidades, $response_array_ordenado);

            // Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
            if (!empty($UnElemento)):
                $servicio_hora["Disponibilidad"] = $response_array_ordenado;
            else:
                $servicio_hora["Disponibilidad"] = $response_disponibilidades;
            endif;

            //$servicio_hora["Disponibilidad"] = $response_disponibilidades;
            $servicio_hora["name"] = $nombre_elemento_consulta;

            array_push($response, $servicio_hora);

            $respuesta["message"] = $message;
            $respuesta["success"] = true;
            $respuesta["response"] = $response;

        } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            //inserta _log
            //$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: ".$IDClub. " IDServicio:" . $IDServicio . " . Fecha: ".$Fecha." Elemento: ".$IDElemento."','".json_encode($respuesta)."')");

            return $respuesta;

        }

        public function get_hora_disponible($IDClub, $IDServicio, $Fecha, $Hora, $Admin = "")
    {
            $dbo = &SIMDB::get();

            $fecha_disponible = 0;
            $verifica_disponibilidad_especifica = 0;
            $verifica_disponibilidad_general = 0;

            // Verifico que el club y servicio este disponible en la fecha consultada
            $verificacion = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio);
            if (!empty($verificacion)):
                $respuesta["message"] = $verificacion;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            if (empty($Admin)) {
                $TipoConsultaDispo = "App";
            }

            //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar
            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio, $Fecha, $TipoConsultaDispo);

            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                    $fecha_disponible = 1;
                endif;
            endforeach;

            if ($fecha_disponible == 0):
                //Esta fecha aÃºn no estÃ¡ disponible
                $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada (t4)";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            $response = array();
            $response_disponibilidades = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {

                $message = $dbo->rows($qry) . " Encontrados";
                $servicio_hora["IDClub"] = $IDClub;
                $servicio_hora["IDServicio"] = $IDServicio;
                $servicio_hora["Fecha"] = $Fecha;
                //$response_disponibilidad = SIMWebService::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

                //Horas Disponibles Elemento
                $response_disponibilidad = array();

                $r = $dbo->fetchArray($qry);

                $sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
                $result_elementos_servicio = $dbo->query($sql_elementos_servicio);
                $total_elementos = $dbo->rows($result_elementos_servicio);

                while ($r_elementos_servicio = $dbo->FetchArray($result_elementos_servicio)):
                    unset($array_hora_reservada);
                    $IDElemento = $r_elementos_servicio["IDServicioElemento"];

                    $dia_fecha = date('w', strtotime($Fecha));

                    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
                    $sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin . " Order by HoraDesde Limit 1";
                    $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
                    $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);
                    //$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
                    $horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera["HoraDesde"];

                    //Verifico si tene disponibilidad  general el elemento
                    $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin;
                    $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);
                    if ($dbo->rows($qry_dispo_elemento_gral) > 0) {

                        $verifica_disponibilidad_general = 1;
                        while ($row_dispo_elemento_gral = $dbo->fetchArray($qry_dispo_elemento_gral)) {

                            $horaInicial = $row_dispo_elemento_gral["HoraDesde"];
                            //$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
                            $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");

                            // Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
                            if ($Fecha == date("Y-m-d")):
                                $medicion_tiempo = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                $valor_tiempo_anticipacion = (int) $dbo->getFields("Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                if ($medicion_tiempo == "Horas"):
                                    $valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
                                endif;
                            else:
                                $valor_tiempo_anticipacion = 0;
                            endif;

                            //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
                            $medicion_tiempo_anticipacion = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                            $valor_anticipacion_turno = (int) $dbo->getFields("Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                            switch ($medicion_tiempo_anticipacion):
                        case "Dias":
                            $minutos_anticipacion_turno = (60 * 24) * $valor_anticipacion_turno;
                            break;
                        case "Horas":
                            $minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
                            break;
                        case "Minutos":
                            $minutos_anticipacion_turno = $valor_anticipacion_turno;
                            break;
                        default:
                            $minutos_anticipacion_turno = 0;
                            endswitch;

                            //Si es administrador no tiene limite de anticipacion
                            if ($Admin == "S") {
                                    $valor_tiempo_anticipacion = 0;
                                    $minutos_anticipacion_turno = 0;
                            }

                            $hora_real = date('Y-m-d H:i:s');
                            $hora_empezar_reserva = strtotime('-' . $valor_tiempo_anticipacion . ' minute', strtotime($horaInicial_reserva));
                            //$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
                            $hora_actual_sistema = strtotime($hora_real);

                            $hora_final = strtotime($row_dispo_elemento_gral["HoraHasta"]);
                            $hora_actual = strtotime($row_dispo_elemento_gral["HoraDesde"]);

                            while ($hora_actual <= $hora_final):

                                $hora_fecha_actual = $Fecha . " " . date('H:i:s', $hora_actual);
                                $hora_puede_reservar = strtotime('+' . $minutos_anticipacion_turno . ' minute', strtotime($hora_real));
                                /*****************************************************************************************************
                                Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
                                Valido que Ã©sta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
                                 ******************************************************************************************************/
                                if (strtotime($hora_fecha_actual) >= strtotime($hora_real) && $hora_puede_reservar <= strtotime($hora_fecha_actual)):

                                    if (strlen($horaInicial) != 8):
                                        $horaInicial .= ":00";
                                    endif;

                                    $hora["Hora"] = $horaInicial;
                                    $zonahoraria = date_default_timezone_get();
                                    $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                    $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

                                    //echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
                                    //exit;

                                    $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "' ", "array");
                                    //Verifico que esta hora la tenga disponible algun elemento y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos

                                    // De acuerdo al numero de elementos del servicio disponibles en esta hora verifico si en esta hora ya estÃ¡ reservado
                                    $sql_reserva_hora = "SELECT * FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '" . $hora["Hora"] . "'  ORDER BY Hora ";
                                    $qry_reserva_hora = $dbo->query($sql_reserva_hora);
                                    $total_horas_reservadas = $dbo->rows($qry_reserva_hora);
                                    $total_horas_reservadas = $dbo->rows($qry_reserva_hora);

                                    $contador_elementos_disponibles = 0;
                                    // Verifico cuantos elementos tienen esta hora disponible
                                    $sql_dispo_hora = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $hora["Hora"] . "' >= HoraDesde and '" . $hora["Hora"] . "'<=HoraHasta)  and Activo <>'N' Order by HoraDesde";
                                    $qry_dispo_hora = $dbo->query($sql_dispo_hora);
                                    $row_dispo_hora = $dbo->fetchArray($qry_dispo_hora);
                                    if (!empty($row_dispo_hora["IDServicioElemento"])):
                                        $array_elementos_hora = explode("|", $row_dispo_hora["IDServicioElemento"]);
                                        foreach ($array_elementos_hora as $id_elemento_hora):
                                            if (!empty($id_elemento_hora)):
                                                $contador_elementos_disponibles++;
                                            endif;
                                        endforeach;
                                    endif;
                                    $total_elementos = $contador_elementos_disponibles;

                                    if ($total_horas_reservadas >= $total_elementos || ($hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {
                                        $hora["Disponible"] = "N";
                                        $hora["Socio"] = "Reservado";
                                    } else {
                                        $hora["Disponible"] = "S";
                                        $hora["Socio"] = "";
                                    }

                                    $hora["MaximoPersonaTurno"] = $datos_disponibilidad["MaximoPersonaTurno"];
                                    $hora["NumeroInvitadoClub"] = $datos_disponibilidad["NumeroInvitadoClub"];
                                    $hora["NumeroInvitadoExterno"] = $datos_disponibilidad["NumeroInvitadoExterno"];

                                    //Repeticion reserva
                                    $hora["IDDisponibilidad"] = $datos_disponibilidad["IDDisponibilidad"];
                                    $hora["PermiteRepeticion"] = $datos_disponibilidad["PermiteRepeticion"];
                                    $hora["MaximoRepeticion"] = $datos_disponibilidad["NumeroRepeticion"] . " " . $datos_disponibilidad["MedicionRepeticion"];

                                    //$hora["IDElemento"] = $IDElemento;
                                    //$hora["NombreElemento"] = $dbo->getFields( "ServicioElemento" , "Nombre" , "IDServicioElemento = '" . $IDElemento . "'" );
                                    array_push($response_disponibilidad, $hora);
                                endif;

                                $array_horas_elemento[] = $horaInicial;
                                $segundos_horaInicial = strtotime($horaInicial);
                                $segundos_minutoAnadir = $minutoAnadir * 60;
                                $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                $hora_actual = strtotime($nuevaHora);
                                $horaInicial = $nuevaHora;

                            endwhile;

                        }
                    }

                endwhile;

                //Ordeno el array y que aparezca solo una hora para todo elementos
                foreach ($response_disponibilidad as $id_array => $datos_array):
                    $array_ordenado_hora[$datos_array["Hora"]] = $datos_array;
                endforeach;

                ksort($array_ordenado_hora);

                $response_array_ordenado = array();
                foreach ($array_ordenado_hora as $id_array => $datos_array):
                    array_push($response_array_ordenado, $datos_array);
                endforeach;

                //array_push($response_array_ordenado, $array_ordenado_hora);

                $servicio_hora["Disponibilidad"] = $response_array_ordenado;

                //$servicio_hora["Disponibilidad"] = $response_disponibilidades;

                array_push($response, $servicio_hora);

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            //inserta _log
            //$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode( $respuesta ) . "')" );

            return $respuesta;

        }

        public function get_beneficiarios($IDClub, $IDSocio, $Fecha = "", $Hora = "", $Tipo = "")
    {
            $dbo = &SIMDB::get();
            if (!empty($IDSocio)) {
                $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'", "array");
                if (!empty($datos_socio["IDSocio"])) {
                    //Consulto el nucleo familiar
                    if (!empty($datos_socio["AccionPadre"])): // Es beneficiario
                        $condicion_nucleo = " and (AccionPadre = '" . $datos_socio["AccionPadre"] . "' or Accion = '" . $datos_socio["AccionPadre"] . "')";
                        $tipo_socio = "Beneficiario";
                    else: // es Cabeza familia
                        $condicion_nucleo = " and ( AccionPadre = '" . $datos_socio["Accion"] . "' and AccionPadre <> '' )";
                        $tipo_socio = "Socio";
                    endif;

                    if ($IDClub == 7): //Especial lagartos no mostrar suegros ni papa
                        $condicion_especial = " and  ( Parentesco IS null or (Parentesco not like '%suegr%' and Parentesco not like 'padre') )";
                    endif;

                    //Especial uruguaty los hijos de socios separados deben salir en ambos asi sean acciones distintas
                    if ($IDClub == 125 && !empty($datos_socio["ClaveSistemaExterno"])) {
                        $AccionOtro = $dbo->getFields("Socio", "Accion", "NumeroDocumento = '" . $datos_socio["ClaveSistemaExterno"] . "'");
                        if (!empty($AccionOtro)) {
                            $condicion_nucleo .= " or (AccionPadre = '" . $AccionOtro . "' and IDClub = '" . $IDClub . "')";
                        }

                    }

                    $response_beneficiario = array();
                    $sql_nucleo = "SELECT IDClub, IDSocio, Foto, Nombre, Apellido, Accion, AccionPadre, CodigoBarras FROM Socio WHERE IDClub = '" . $IDClub . "' and IDSocio <> '" . $datos_socio["IDSocio"] . "' and IDEstadoSocio <> 2 " . $condicion_nucleo . $condicion_especial;
                    $qry_nucleo = $dbo->query($sql_nucleo);
                    while ($datos_nucleo = $dbo->fetchArray($qry_nucleo)):
                        $foto_nucleo = "";
                        $foto_cod_barras_nucleo = "";

                        $socio_beneficiario[IDBeneficiario] = $datos_nucleo[IDSocio];
                        $socio_beneficiario[Nombre] = $datos_nucleo[Nombre] . " " . $datos_nucleo[Apellido];
                        $socio_beneficiario[TipoBeneficiario] = "Socio";

                        array_push($response_beneficiario, $socio_beneficiario);
                    endwhile;

                    //Consulto los invitados vigentes del socio
                    //$sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaInicio >= CURDATE() Union
                    //                SELECT IDInvitado FROM SocioAutorizacion WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaInicio >= CURDATE()";

                    /*
                    $sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaFin >= CURDATE() Union
                    SELECT IDInvitado FROM SocioAutorizacion WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaFin >= CURDATE()";

                     */

                    if (!empty($Fecha)) {
                        $condicion_fecha = " and FechaIngreso = '" . $Fecha . "' ";
                        $condicion_fecha_especial = " and FechaFin >= '" . $Fecha . "' ";
                    } else {
                        $condicion_fecha = " and FechaIngreso >= CURDATE() ";
                        $condicion_fecha_especial = " and FechaFin >= CURDATE() ";
                    }

                    $sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  " . $condicion_fecha_especial;
                    $qry_invitado = $dbo->query($sql_invitado);
                    while ($datos_invitado = $dbo->fetchArray($qry_invitado)):
                        $invitado_beneficiario["IDBeneficiario"] = $datos_invitado["IDInvitado"];
                        $invitado_beneficiario["Nombre"] = $dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $datos_invitado["IDInvitado"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $datos_invitado["IDInvitado"] . "'");
                        $invitado_beneficiario["TipoBeneficiario"] = "Invitado";
                        array_push($response_beneficiario, $invitado_beneficiario);
                    endwhile;

                    //Consulto los invitados vigentes del socio
                    $sql_invitado = "SELECT IDSocioInvitado,Nombre FROM SocioInvitado WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' " . $condicion_fecha;
                    $qry_invitado = $dbo->query($sql_invitado);
                    while ($datos_invitado = $dbo->fetchArray($qry_invitado)):
                        $invitado_beneficiario["IDBeneficiario"] = $datos_invitado["IDSocioInvitado"];
                        $invitado_beneficiario["Nombre"] = $datos_invitado["Nombre"];
                        $invitado_beneficiario["TipoBeneficiario"] = "Invitado";
                        array_push($response_beneficiario, $invitado_beneficiario);
                    endwhile;

                    if (count($response_beneficiario) <= 0) {
                        $response_beneficiario = array();
                        $invitado_beneficiario["IDBeneficiario"] = "";
                        $invitado_beneficiario["Nombre"] = "No tienes asociados beneficiarios";
                        $invitado_beneficiario["TipoBeneficiario"] = "";
                        array_push($response_beneficiario, $invitado_beneficiario);
                    }

                    $response["IDClub"] = $datos_socio["IDClub"];
                    $response["IDSocio"] = $datos_socio["IDSocio"];
                    $response["Socio"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"]);
                    $response["Beneficiarios"] = $response_beneficiario;
                    $respuesta["message"] = "ok";
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;

                } else {
                    $respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            } else {
                $respuesta["message"] = "25. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_campos($IDClub, $IDSocio, $IDServicio)
    {
            $dbo = &SIMDB::get();

            $response = array();
            $sql = "SELECT SE.* FROM ServicioElemento SE, Servicio S WHERE SE.IDServicio = S.IDServicio and SE.Publicar = 'S' and S.IDClub = '" . $IDClub . "' and SE.IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    $elemento["IDClub"] = $IDClub;
                    $elemento["IDServicio"] = $r["IDServicio"];
                    $elemento["IDCampo"] = $r["IDServicioElemento"];
                    $elemento["Nombre"] = $r["Nombre"];

                    array_push($response, $elemento);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        //Funcion para saber si en una fecha determinada existe por lo menos 1 elemento dismponible
        public function verifica_elemento_disponible($IDClub, $IDServicio, $Fecha)
    {
            $dbo = &SIMDB::get();

            $flag_disponible = 1;

            //Consulto cuantos elementos tiene el servicio
            $sql_elemento_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "'";
            $qry_elemento_servicio = $dbo->query($sql_elemento_servicio);
            $total_elemento_servicio = (int) $dbo->rows($qry_elemento_servicio);

            //Consulto si tienen fechas de cierre total
            $sql_fecha_cierre = "SELECT * FROM ServicioCierre Where IDServicio = '" . $IDServicio . "' and FechaInicio <= '" . $Fecha . "' and FechaFin >= '" . $Fecha . "' and HoraInicio='00:00:00' and HoraFin = '23:00:00'";
            $qry_fecha_cierre = $dbo->query($sql_fecha_cierre);
            $r_fecha_cierre = $dbo->fetchArray($qry_fecha_cierre);
            $array_elementos_cierre = explode("|", $r_fecha_cierre["IDServicioElemento"]);
            $total_elemento_cierre = count($array_elementos_cierre) - 2;

            //Si todos los elementos estan cerrados queiere decir que no hay ninguno disponible
            if ($total_elemento_servicio == $total_elemento_cierre):
                $flag_disponible = 0;
            endif;

            return $flag_disponible;

        }

        public function get_fecha_disponibilidad_servicio($IDClub, $IDServicio, $Fecha = "", $Tipo = "", $ValirdarDiasAdelante = "", $IDFiltro = "", $TipoFiltro = "")
    {
            $dbo = &SIMDB::get();

            $response = array();
            $BuscarAux = "N";

            if (!empty($IDServicio)) {

                $sql_servicio = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "'";
                $qry_servicio = $dbo->query($sql_servicio);
                if ($dbo->rows($qry_servicio) > 0) {
                    $message = $dbo->rows($qry_servicio) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry_servicio)) {
                        $servicio["IDServicio"] = $r["IDServicioElemento"];
                        $servicio["IDClub"] = $IDClub;
                        $servicio["IDServicio"] = $r["IDServicio"];
                        $servicio["Nombre"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");

                        //Servicios Reservas
                        $response_fechas = array();

                        $dias_adelante = $r["NumeroDiasMostrar"];

                        if ($ValirdarDiasAdelante != "N") {
                            $dias_desde = $r["NumeroDiasAdelante"];
                        } else {
                            $dias_desde = 0;
                        }

                        if ((int) $dias_adelante <= 0) {
                            $dias_adelante = 3;
                        }

                        /*
                        if ( !empty( $Fecha ) ):
                        //$fecha_actual = date('Y-m-j',$Fecha);
                        $fecha_actual = $Fecha;
                        $dias_adelante = 0;
                        elseif ( $IDClub == "25" || $IDClub == "20"): //para el gun y medellin deja fechas de todo un aÃ±o, se deb cambiar por parametro
                        $fecha_actual = date( 'Y-m-j' );
                        $dias_adelante = 460;
                        elseif ( $IDClub == "36" || $IDClub == 16 || $IDClub == 54 ): //para aeroclub 3 meses
                        $fecha_actual = date( 'Y-m-j' );
                        $dias_adelante = 90;
                        elseif ( $IDClub == "78" && ($IDServicio == "11975" || $IDServicio == "11976" || $IDServicio == "11977" || $IDServicio == "11978" || $IDServicio == "11979" || $IDServicio == "11980" ||$IDServicio == "11981") ):
                        $fecha_actual = date( 'Y-m-j' );
                        $dias_adelante = 30;
                        elseif ( $IDClub == "38" ): //para aeroclub 3 meses
                        $fecha_actual = date( 'Y-m-j' );
                        $dias_adelante = 30;
                        else :
                        $fecha_actual = date( 'Y-m-j' );
                        $dias_adelante = 15;
                        endif;

                        if ( $IDClub == "20" && $Tipo == "App" ) // Solo para app muestro 15 dias
                        $dias_adelante = 7;

                        //Para mesa de yeguas solo mosttrar dos fechas
                        if ( $IDClub == "9" && $IDServicio != "2432" && $IDServicio != "2427" )
                        $dias_adelante = 3;

                        //Para bogota tenis
                        if ( $IDClub == "72" && $IDServicio == "8511" )
                        $dias_adelante = 30;

                        //Para bogota tenis
                        if ( $IDClub == "77" && $IDServicio == "11686" )
                        $dias_adelante = 30;

                        //Para country en clase golf 30 dias
                        if ( $IDClub == "44" && ($IDServicio == "3866" || $IDServicio == "3878" || $IDServicio == "5001"))
                        $dias_adelante = 30;

                        //Para country en sala belleza
                        if ( $IDClub == "44" && ($IDServicio == "3897" || $IDServicio == "11732" || $IDServicio == "11733" || $IDServicio == "11734" || $IDServicio == "11735" || $IDServicio == "11736" || $IDServicio == "12470"))
                        $dias_adelante = 90;

                        // Para areroclub los servicios de avion local, crucero y simulador es dos dias de antelacion
                        if ( $IDClub == "36" && ($IDServicio==3608 || $IDServicio==4371 || $IDServicio==3609)){
                        $fecha_empezar = strtotime( '+2 day', strtotime( $fecha_actual ) );
                        $fecha_actual = date( 'Y-m-j', $fecha_empezar );

                        }

                        //Especial Arrayanes Colombia el ultima dia del mes se habilta todo el mes en tenis
                        if ( $IDClub == "11" && $IDServicio == 227 ):
                        //$fecha_actual = date( 'Y-m-j' );
                        //$dias_adelante = 31;
                        endif;

                         */

                        if (!empty($Fecha)) {
                            //$fecha_actual = date('Y-m-j',$Fecha);
                            $fecha_actual = $Fecha;
                            $dias_adelante = 0;
                            $dias_desde = 0;
                        } else {
                            $fecha_actual = date('Y-m-j');
                            //$dias_adelante=$r[ "NumeroDiasMostrar" ];
                        }

                        if ((int) $dias_desde > 0) {
                            $fecha_empezar = strtotime('+' . $dias_desde . ' day', strtotime($fecha_actual));
                            $fecha_actual = date('Y-m-j', $fecha_empezar);
                        }

                        //$fecha_actual = date('Y-m-j');
                        $fecha_final = strtotime('+' . $dias_adelante . ' day', strtotime($fecha_actual));
                        $fecha_final = date('Y-m-j', $fecha_final);
                        $fechaInicio = strtotime($fecha_actual);
                        $fechaFin = strtotime($fecha_final);

                        $contador = 1;
                        $primera_fecha = 1;
                        $flag_disponible_hoy = 0;

                        for ($i = $fechaInicio; $i <= $fechaFin; $i += 86400) {

                            $fecha_validar = date("Y-m-d", $i);
                            $fecha_fin_validar = date("Y-m-d", $fechaFin);

                            if (!empty($IDFiltro)) {
                                if ($TipoFiltro == "Elemento") {
                                    $condicion_filtro = " and IDServicioElemento like '%" . $IDFiltro . "|%' ";
                                    $sql_cierre = "SELECT IDServicioCierre,HoraInicio,HoraFin
	                                  							FROM  ServicioCierre
	                                  							WHERE FechaInicio <= '" . $fecha_validar . "' and FechaFin >= '" . $fecha_validar . "' and IDServicioElemento like '%|" . $IDFiltro . "|%'";
                                    $r_cierre = $dbo->query($sql_cierre);
                                    while ($row_cierre = $dbo->fetchArray($r_cierre)) {
                                        $time = strtotime($row_cierre["HoraInicio"]);
                                        $timeStop = strtotime($row_cierre["HoraFin"]);
                                        $diff = intval(($timeStop - $time) / 3600);
                                        if ($diff >= 6) {
                                            //Le pongo al id elemento en -1  para que no encuentre resultado ya que en esta fecha tiene cierre del dia
                                            $condicion_filtro = " and IDServicioElemento ='-1' ";
                                        }
                                    }
                                }
                                if ($TipoFiltro == "Auxiliar") {
                                    $BuscarAux = "S";
                                    $dia_fecha = date('w', strtotime($fecha_validar));
                                    $sql_dispo_aux_gral = "SELECT AUXD.*
																						 From AuxiliarDisponibilidadDetalle AUXD, AuxiliarDisponibilidad AD
																						 Where AUXD.IDAuxiliarDisponibilidad=AD.IDAuxiliarDisponibilidad and  AUXD.IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and AD.Activo='S' and IDAuxiliar like '" . $IDFiltro . "|%'";
                                    $qry_dispo_aux_gral = $dbo->query($sql_dispo_aux_gral);
                                    $response_auxiliar = array();
                                    $TotalAux = (int) $dbo->rows($qry_dispo_aux_gral);
                                }
                            }

                            //Consulto la disponibilidad en este dia
                            $dia_semana = date('w', strtotime($fecha_validar));
                            $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_semana . "|%' and Activo <>'N' " . $condicion_filtro . " Order By HoraDesde ASC, HoraHasta DESC Limit 1";
                            $qry_disponibilidad = $dbo->query($sql_dispo_elemento_gral);
                            $r_disponibilidad = $dbo->fetchArray($qry_disponibilidad);
                            //Consulto la hora maxima del dia para reservar
                            $sql_dispo_max = "Select HoraHasta From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_semana . "|%' and Activo <>'N' " . $condicion_filtro . " Order By HoraHasta DESC Limit 1";
                            $qry_dispo_max = $dbo->query($sql_dispo_max);
                            $r_dispo_max = $dbo->fetchArray($qry_dispo_max);
                            $HoraHastaFinal = $r_dispo_max["HoraHasta"];

                            $total_disponibilidades = (int) $dbo->rows($qry_disponibilidad);

                            // Si la fecha es hoy valido que la hora hasta todavia este disponible
                            if ($fecha_validar == date("Y-m-d")):
                                //echo strtotime(date("H:i:s")) ."<=". strtotime($r_disponibilidad["HoraHasta"]);
                                if (strtotime(date("H:i:s")) <= strtotime($HoraHastaFinal)):
                                    $flag_disponible_hoy = 0;
                                else:
                                    $flag_disponible_hoy = 1;
                                endif;
                            else:
                                $flag_disponible_hoy = 0;
                            endif;

                            if ($BuscarAux == "S" && $TotalAux <= 0) {
                                $flag_disponible_hoy = 1;
                            }

                            // si no permite reservar el mismo dias
                            //if($r[ "ReservaMismoDia" ]=="N" && $fecha_validar == date( "Y-m-d" )){
                            //$flag_disponible_hoy = 1;
                            //}

                            if ($IDClub == "11" && ($IDServicio == 12854)) {
                                $flag_disponible_hoy = 0;
                            }

                            if ($flag_disponible_hoy == 0):

                                //verifico con cuanto tiempo de anticipacion se puede reservar
                                $medicion_tiempo = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $r_disponibilidad["IDDisponibilidad"] . "'");
                                $valor_anticipacion = (int) $dbo->getFields("Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $r_disponibilidad["IDDisponibilidad"] . "'");
                                switch ($medicion_tiempo):
                            case "Dias":
                                $minutos_anticipacion = (60 * 24) * $valor_anticipacion;
                                break;
                            case "Horas":
                                $minutos_anticipacion = 60 * $valor_anticipacion;
                                break;
                            case "Minutos":
                                $minutos_anticipacion = $valor_anticipacion;
                                break;
                                endswitch;

                                //Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
                                $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'");
                                if ($id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30): //Golf
                                    $dias_antes = 8;
                                else:
                                    $dias_antes = 8;
                                endif;

                                //semana santa atc
                                //if($IDClub==26){
                                //$dias_antes = 10;
                                //}

                                //consulto si el servicio tiene configurado un dia y hora especifico en la semana para abrir reservas
                                $dias_semana_eng = array("1" => "Monday", "2" => "Tuesday", "3" => "Wednesday", "4" => "Thursday", "5" => "Friday", "6" => "Saturday", "7" => "Sunday");
                                if ($r["DiaApertura"] > 0 && $r["HoraApertura"] != '00:00:00'):
                                    $prox_apertura = strtotime('-' . $dias_antes . ' day', strtotime($fecha_validar . " " . $r["HoraApertura"]));
                                    $fecha_pro_validacion = new DateTime(date("Y-m-d", $prox_apertura));
                                    $fecha_pro_validacion->modify('next ' . $dias_semana_eng[$r["DiaApertura"]]);
                                    $hora_inicio_reserva = strtotime($fecha_pro_validacion->format('Y-m-d') . " " . $r["HoraApertura"]);
                                else:
                                    $hora_inicio_reserva = strtotime('-' . $minutos_anticipacion . ' minute', strtotime($fecha_validar . " " . $r_disponibilidad["HoraDesde"]));
                                endif;

                                if ($IDServicio == 4433) {
                                        /*
                                echo "DIA " . $dia_semana . "MIN: " . $minutos_anticipacion . " FIN";
                                echo "VALI " .  $fecha_validar . " " . $r_disponibilidad[ "HoraDesde" ] . " VALID";
                                print_r( $hora_reservar );
                                print_r($r_disponibilidad);
                                echo "RESE" . date("Y-m-d H:i:s",$hora_inicio_reserva ) . "DISPO " . $r_disponibilidad[ "IDDisponibilidad" ] ." FIN DISPO";
                                 */
                                }

                                //Especial Arrayanes Colombia el ultima dia del mes se habilta todo el mes en tenis
                                //if ( $IDClub == "11" && ( $IDServicio == 227 || $IDServicio == 115 ) ):

                                if ($IDClub == "11" && ($IDServicio == 115)):
                                    /*
                                $fecha_ultimo_dia = new DateTime();
                                $fecha_ultimo_dia->modify( 'last day of this month' );
                                $fecha_ultimo_dia->format( 'Y-m-d' );

                                if ( strtotime( $fecha_validar ) <= strtotime( $fecha_ultimo_dia->format( 'Y-m-d' ) ) ):
                                else :
                                $hora_inicio_reserva = strtotime( $fecha_ultimo_dia->format( 'Y-m-d' ) );
                                endif;
                                 */
                                endif;

                                //$hora_inicio_reserva = strtotime ($fecha_validar . " " . $r_disponibilidad["HoraDesde"]);
                                //$fechahora_actual =  strtotime ( '-'.$minutos_anticipacion.' minute' , strtotime ( date("Y-m-d H:i:s") ) ) ;

                                $fechahora_actual = strtotime(date("Y-m-d H:i:s"));

                                //echo date("Y-m-d H:i:s");
                                //exit;

                                //echo ".";exit;
                                if ($total_disponibilidades <= 0) {
                                    $fecha_reservar = "nodisponible";
                                    $hora_reservar = "nodisponible";
                                    $TiempoRestanteDias = "nodisponible";
                                    $TiempoRestanteHoras = "nodisponible";
                                    $TiempoRestanteMinutos = "nodisponible";
                                    $TiempoRestanteSegundos = "nodisponible";
                                } elseif ($hora_inicio_reserva < $fechahora_actual) {
                                $activo = "S";
                                $fecha_reservar = $fecha_validar;
                                $hora_reservar = $r_disponibilidad["HoraDesde"];
                                $TiempoRestanteDias = 0;
                                $TiempoRestanteHoras = 0;
                                $TiempoRestanteMinutos = 0;
                                $TiempoRestanteSegundos = 0;
                                $TiempoRestanteMiliSegundos = 0;

                                //Validacion Especial Medellin entre las 10pm y 5:30am no se puede reservar tenis medellin
                                $fecha_hora_actual = date("Y-m-d H:i:s");
                                $fecha_inicio_nopermitido = date("Y-m-d 22:00:00");
                                //$fecha_fin_nopermitido = strtotime ( '+450 minute' , strtotime ( $fecha_inicio_nopermitido ) ) ;
                                $fecha_fin_nopermitido = date("Y-m-d 05:30:00");

                                //if($IDClub==20 && $IDServicio==571 && strtotime($fecha_hora_actual)>=strtotime($fecha_inicio_nopermitido) &&  strtotime($fecha_hora_actual)<=$fecha_fin_nopermitido):
                                if ($IDClub == 20 && ($IDServicio == 571 || $IDServicio == 549 || $IDServicio == 551 || $IDServicio == 14898 || $IDServicio == 14899) && (strtotime($fecha_hora_actual) >= strtotime($fecha_inicio_nopermitido) || strtotime($fecha_hora_actual) <= strtotime($fecha_fin_nopermitido))):
                                    //Calculo tiempo restante para poder reservar
                                    $activo = "N";
                                    $fecha_final = $fecha_fin_nopermitido;
                                    $diff = $fecha_fin_nopermitido - strtotime($fecha_hora_actual);
                                    $dias = $diff / (60 * 60 * 24);
                                    $horas = ($dias - intval($dias)) * 24;
                                    $min = ($horas - intval($horas)) * 60;
                                    $seg = ($min - intval($min)) * 60;
                                    $miliseg = intval(round(microtime(true) * 1000));
                                    $TiempoRestanteDias = intval($dias);
                                    $TiempoRestanteHoras = intval($horas);
                                    $TiempoRestanteMinutos = intval($min);
                                    $TiempoRestanteSegundos = intval($seg);
                                    $TiempoRestanteMiliSegundos = $miliseg;
                                    $fecha_reservar = date("Y-m-d", $fecha_fin_nopermitido);
                                    $hora_reservar = date("H:i:s", $fecha_fin_nopermitido);
                                endif;
                                //Fin Validacion Especial Medellin

                                //Validacion Especial Comercio entre solo si esta entre 8am y 4pm se puede reservar
                                $fecha_hora_actual = date("Y-m-d H:i:s");
                                $fecha_inicio_sipermitido = date("Y-m-d 08:00:00");
                                //$fecha_fin_nopermitido = strtotime ( '+450 minute' , strtotime ( $fecha_inicio_nopermitido ) ) ;
                                $fecha_fin_sipermitido = date("Y-m-d 13:00:00");

                                //Validacion Especial Pradera peluqueria abre del dia 1 al 31
                                if (($IDClub == 16 && $IDServicio == 931)) {
                                    $mes_act = date("m");
                                    $fecha_mes_sig = date("Y-m-01 17:00:00");
                                    $mes_fecha_validar = date("m", $i);
                                    if ($mes_act != $mes_fecha_validar) {
                                        $fecha_fin_nopermitido = strtotime('+1 month', strtotime($fecha_mes_sig));
                                        $fecha_fin_nopermitido = strtotime('-1 day', $fecha_fin_nopermitido);

                                        $fecha_fin_nopermitido = date('Y-m-d H:i:s', $fecha_fin_nopermitido);
                                        $fecha_fin_nopermitido = strtotime($fecha_fin_nopermitido);

                                        //Calculo tiempo restante para poder reservar
                                        $activo = "N";
                                        $fecha_final = $fecha_fin_nopermitido;
                                        $diff = $fecha_fin_nopermitido - strtotime($fecha_hora_actual);
                                        $dias = $diff / (60 * 60 * 24);
                                        $horas = ($dias - intval($dias)) * 24;
                                        $min = ($horas - intval($horas)) * 60;
                                        $seg = ($min - intval($min)) * 60;
                                        $miliseg = intval(round(microtime(true) * 1000));
                                        $TiempoRestanteDias = intval($dias);
                                        $TiempoRestanteHoras = intval($horas);
                                        $TiempoRestanteMinutos = intval($min);
                                        $TiempoRestanteSegundos = intval($seg);
                                        $TiempoRestanteMiliSegundos = $miliseg;
                                        $fecha_reservar = date("Y-m-d", $fecha_fin_nopermitido);
                                        $hora_reservar = date("H:i:s", $fecha_fin_nopermitido);

                                        if ($min <= 0 && $seg <= 0 && $horas <= 0) {
                                            $activo = "S";
                                        }

                                    }
                                }
                                //Fin Validacion Especial pradera

                                //Validacion Especial country peluqueria abre del dia 1 al 31
                                if (($IDClub == 44 && $IDServicio == 3905)) {
                                    $mes_act = date("m");
                                    $fecha_mes_sig = date("Y-m-01 17:00:00");
                                    $mes_fecha_validar = date("m", $i);
                                    if ($mes_act != $mes_fecha_validar) {
                                        $fecha_fin_nopermitido = strtotime('+1 month', strtotime($fecha_mes_sig));
                                        $fecha_fin_nopermitido = strtotime('-4 day', $fecha_fin_nopermitido);

                                        $fecha_fin_nopermitido = date('Y-m-d H:i:s', $fecha_fin_nopermitido);
                                        $fecha_fin_nopermitido = strtotime($fecha_fin_nopermitido);

                                        //Calculo tiempo restante para poder reservar
                                        $activo = "N";
                                        $fecha_final = $fecha_fin_nopermitido;
                                        $diff = $fecha_fin_nopermitido - strtotime($fecha_hora_actual);
                                        $dias = $diff / (60 * 60 * 24);
                                        $horas = ($dias - intval($dias)) * 24;
                                        $min = ($horas - intval($horas)) * 60;
                                        $seg = ($min - intval($min)) * 60;
                                        $miliseg = intval(round(microtime(true) * 1000));
                                        $TiempoRestanteDias = intval($dias);
                                        $TiempoRestanteHoras = intval($horas);
                                        $TiempoRestanteMinutos = intval($min);
                                        $TiempoRestanteSegundos = intval($seg);
                                        $TiempoRestanteMiliSegundos = $miliseg;
                                        $fecha_reservar = date("Y-m-d", $fecha_fin_nopermitido);
                                        $hora_reservar = date("H:i:s", $fecha_fin_nopermitido);

                                        if ($min <= 0 && $seg <= 0 && $horas <= 0) {
                                            $activo = "S";
                                        }

                                    }
                                }
                                //Fin Validacion Especial country

                                if ($IDClub == 8 && $IDServicio == 272):
                                    $minima_fecha = date("Y-m") . "-14";
                                    $maxima_fecha = new DateTime();
                                    $maxima_fecha->modify('last day of this month');
                                    $maxima_fecha->format('Y-m-d');
                                    if ((int) date("d") <= 14 && strtotime($fecha_validar) <= strtotime($minima_fecha)):
                                        $activo = "S";
                                    elseif ((int) date("d") >= 15 && strtotime($fecha_validar) <= strtotime($maxima_fecha->format('Y-m-d'))):
                                        $activo = "S";
                                    else:

                                        if ((int) date("d") <= 14):
                                            $fecha_fin_nopermitido = date("Y-m-15");
                                        elseif ((int) date("d") >= 15):
                                            $fecha_mes_actual = date('Y-m-01');
                                            $fecha_fin_nopermitido = strtotime('+1 month', strtotime($fecha_mes_actual));
                                            $fecha_fin_nopermitido = date('Y-m-d', $fecha_fin_nopermitido);
                                        endif;

                                        $fecha_fin_nopermitido = strtotime($fecha_fin_nopermitido);

                                        //Calculo tiempo restante para poder reservar
                                        $activo = "N";
                                        $fecha_final = $fecha_fin_nopermitido;
                                        $diff = $fecha_fin_nopermitido - strtotime($fecha_hora_actual);
                                        $dias = $diff / (60 * 60 * 24);
                                        $horas = ($dias - intval($dias)) * 24;
                                        $min = ($horas - intval($horas)) * 60;
                                        $seg = ($min - intval($min)) * 60;
                                        $miliseg = intval(round(microtime(true) * 1000));
                                        $TiempoRestanteDias = intval($dias);
                                        $TiempoRestanteHoras = intval($horas);
                                        $TiempoRestanteMinutos = intval($min);
                                        $TiempoRestanteSegundos = intval($seg);
                                        $TiempoRestanteMiliSegundos = $miliseg;
                                        $fecha_reservar = date("Y-m-d", $fecha_fin_nopermitido);
                                        $hora_reservar = date("H:i:s", $fecha_fin_nopermitido);

                                    endif;
                                endif;
                                //Fin Validacion Especial Guaymaral

                                //Validacion Especial Condado el dia actual no se puede reservar en squash
                                /*
                                if ( $IDClub == 51 && $IDServicio == 7721 && $fecha_validar==date("Y-m-d")):
                                //Calculo tiempo restante para poder reservar
                                $activo = "N";
                                $TiempoRestanteDias = intval( $dias );
                                $TiempoRestanteHoras = intval( $horas );
                                $TiempoRestanteMinutos = intval( $min );
                                $TiempoRestanteSegundos = intval( $seg );
                                endif;
                                 */
                                //Fin Validacion Especial Condado

                                $elemento_disponible_dia = self::verifica_elemento_disponible($IDClub, $IDServicio, $fecha_validar);
                                if ($elemento_disponible_dia == 0):
                                    $fecha_reservar = "nodisponible";
                                    $hora_reservar = "nodisponible";
                                    $TiempoRestanteDias = "nodisponible";
                                    $TiempoRestanteHoras = "nodisponible";
                                    $TiempoRestanteMinutos = "nodisponible";
                                    $TiempoRestanteSegundos = "nodisponible";
                                endif;

                            } else {

                                $fecha_para_reservar = strtotime('-' . ($minutos_anticipacion) . ' minute', strtotime($fecha_validar));
                                $fecha_reservar = date('Y-m-j', $fecha_para_reservar);

                                $dia_semana_reservar = date('N', strtotime($fecha_reservar));

                                $activo = "N";
                                $hora_reservar = $r_disponibilidad["HoraDesde"];
                                //Calculo tiempo restante para poder reservar
                                $fecha_final = $fecha_reservar . " " . $hora_inicio_reserva;
                                $fecha_actual = date("Y-m-d H:i:s");
                                //$diff = strtotime($fechahora_actual) - strtotime($hora_inicio_reserva);

                                //consulto si el servicio tiene configurado un dia y hora especifico en la semana para abrir reservas
                                if ($r["DiaApertura"] > 0 && $r["HoraApertura"] != '00:00:00'):
                                    $primer_dia_semana = strtotime('-' . $dias_antes . ' day', strtotime($fecha_validar . " " . $r["HoraApertura"]));
                                    $fecha_pro_validacion = new DateTime(date("Y-m-d", $primer_dia_semana));
                                    $fecha_pro_validacion->modify('next ' . $dias_semana_eng[$r["DiaApertura"]]);
                                    $hora_inicio_reserva = strtotime($fecha_pro_validacion->format('Y-m-d') . " " . $r["HoraApertura"]);
                                endif;

                                $diff = $hora_inicio_reserva - $fechahora_actual;
                                $dias = $diff / (60 * 60 * 24);
                                $horas = ($dias - intval($dias)) * 24;
                                $min = ($horas - intval($horas)) * 60;
                                $seg = ($min - intval($min)) * 60;
                                $miliseg = intval(round(microtime(true) * 1000));
                                if ($fecha_validar == "2016-03-18"):
                                    //echo $tiempo_restante = "Quedan ".intval($dias)." dias ".intval($horas)."  horas ".intval($min)." minutos ".intval($seg)." segundos";
                                    //exit;
                                endif;

                                $fecha_reservar = date('Y-m-d', $hora_inicio_reserva);
                                $hora_reservar = date('H:i:s', $hora_inicio_reserva);

                                // si la fecha es pasada la marco como no disponible
                                if ($dias < 0 || $horas < 0 || $min < 0):
                                    $activo = "N";
                                    $fecha_reservar = "nodisponible";
                                    $hora_reservar = "nodisponible";
                                    $TiempoRestanteDias = "nodisponible";
                                    $TiempoRestanteHoras = "nodisponible";
                                    $TiempoRestanteMinutos = "nodisponible";
                                    $TiempoRestanteSegundos = "nodisponible";
                                else:
                                    $TiempoRestanteDias = intval($dias);
                                    $TiempoRestanteHoras = intval($horas);
                                    $TiempoRestanteMinutos = intval($min);
                                    $TiempoRestanteSegundos = intval($seg);
                                    $TiempoRestanteMiliSegundos = intval($miliseg);

                                endif;

                                $elemento_disponible_dia = self::verifica_elemento_disponible($IDClub, $IDServicio, $fecha_validar);
                                if ($elemento_disponible_dia == 0):
                                    $fecha_reservar = "nodisponible";
                                    $hora_reservar = "nodisponible";
                                    $TiempoRestanteDias = "nodisponible";
                                    $TiempoRestanteHoras = "nodisponible";
                                    $TiempoRestanteMinutos = "nodisponible";
                                    $TiempoRestanteSegundos = "nodisponible";
                                endif;

                            }

                            if ($fecha_validar == "2017-09-09" && $IDClub == "11" && ($IDServicio == 352 || $IDServicio == 517 || $IDServicio == 818 || $IDServicio == 824 || $IDServicio == 1297)):
                                $activo = "S";
                                $fecha_reservar = $fecha_validar;
                                $hora_reservar = $r_disponibilidad["HoraDesde"];
                                $TiempoRestanteDias = 0;
                                $TiempoRestanteHoras = 0;
                                $TiempoRestanteMinutos = 0;
                                $TiempoRestanteSegundos = 0;
                                $TiempoRestanteMiliSegundos = 0;
                            endif;

                            $servicio_fecha["Fecha"] = $fecha_validar;
                            $servicio_fecha["Activo"] = $activo;
                            $servicio_fecha["FechaReservar"] = $fecha_reservar;
                            $servicio_fecha["HoraReservar"] = $hora_reservar;
                            $zonahoraria = date_default_timezone_get();
                            $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                            $servicio_fecha["GMT"] = SIMWebservice::timezone_offset_string($offset);
                            $servicio_fecha["TiempoRestanteDias"] = $TiempoRestanteDias;
                            $servicio_fecha["TiempoRestanteHoras"] = $TiempoRestanteHoras;
                            $servicio_fecha["TiempoRestanteMinutos"] = $TiempoRestanteMinutos;
                            $servicio_fecha["TiempoRestanteSegundos"] = $TiempoRestanteSegundos;
                            $servicio_fecha["TiempoRestanteMiliSegundos"] = $TiempoRestanteMiliSegundos;

                            // si la fecha no esta isponible no la envio o si el servicio esta marcado solo para mostrar las disponibles
                            if ($fecha_reservar != "nodisponible"):
                                if (($r["SoloFechaDisponible"] == "S" && $activo == "S") || $r["SoloFechaDisponible"] != "S") {
                                    array_push($response_fechas, $servicio_fecha);
                                }
                            endif;

                            $contador++;
                            $primera_fecha++;
                        endif;

                    }

                    $servicio["Fechas"] = $response_fechas;

                    array_push($response, $servicio);

                } //ednw hile
                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else
            } else {
                $respuesta["message"] = "4. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            //inserta _log
            //$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_fecha_disponibilidad_servicio','IDClub: ".$IDClub. " IDServicio:" . $IDServicio . " . Fecha: ".date("Y-m-d")."','".json_encode($respuesta)."')");

            return $respuesta;

        }

        public function get_disponibilidad_fecha($IDClub, $IDCampo, $Fecha, $Hora)
    {
            $dbo = &SIMDB::get();

            $response = array();
            $sql = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDCampo . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3)  ORDER BY Hora ";
            $qry = $dbo->query($sql);

            $servicio_hora["IDClub"] = $IDClub;
            $servicio_hora["IDCampo"] = $IDCampo;
            $servicio_hora["Fecha"] = $Fecha;
            $servicio_hora["Hora"] = $Hora;

            //Si existen dos reservas es que estan reservados los dos tee de lo contrario no esta reservados o solo un tee esta reservado
            if ($dbo->rows($qry) > 1):
                //Ya esta reservado
                $servicio_hora["Disponibilidad"] = "No";
                $message = " No Disponible";
            else:
                //No esta reservado devuelkque diponible en si
                $servicio_hora["Disponibilidad"] = "Si";
                $message = "Disponible";
            endif;

            array_push($response, $servicio_hora);

            $respuesta["message"] = $message;
            $respuesta["success"] = true;
            $respuesta["response"] = $response;

            return $respuesta;

        }

        public function get_disponiblidad_fecha_hora($IDClub, $IDServicio, $Fecha, $Hora)
    {
            $dbo = &SIMDB::get();

            $Hora = SIMWebService::validar_formato_hora($Hora);

            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio);
            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                    $fecha_disponible = 1;
                endif;
            endforeach;

            if ($fecha_disponible == 0):
                //Esta fecha aÃºn no estÃ¡ disponible.
                $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada (t2)";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            $response = array();
            $sql = "SELECT * FROM ServicioElemento WHERE IDServicio = '" . $IDServicio . "'   ORDER BY IDServicio ";
            $qry = $dbo->query($sql);

            $servicio_hora["IDClub"] = $IDClub;
            $servicio_hora["IDServicio"] = $IDServicio;
            $servicio_hora["Fecha"] = $Fecha;
            $servicio_hora["Hora"] = $Hora;
            $zonahoraria = date_default_timezone_get();
            $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
            $servicio_hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

            $sql = "SELECT * FROM ServicioElemento WHERE IDServicio = '" . $IDServicio . "'   ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            $response_elemento = array();
            while ($row_elemento = $dbo->fetchArray($qry)):

                //Verifico si tiene disponibilidad  general el elemento
                $dia_fecha = date('w', strtotime($Fecha));
                $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) and IDServicioElemento like '%" . $row_elemento[IDServicioElemento] . "|%' and Activo <>'N'  Order by HoraDesde";
                $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);
                if ($dbo->rows($qry_dispo_elemento_gral) > 0):
                    $elemento[IDElemento] = $row_elemento[IDServicioElemento];
                    $elemento[Nombre] = $row_elemento[Nombre];
                    //verifico disponibilidad
                    $sql_reserva = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicioElemento = '" . $row_elemento[IDServicioElemento] . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3)  ORDER BY Hora ";
                    $qry_reserva = $dbo->query($sql_reserva);
                    if ($dbo->rows($qry_reserva) >= 1):
                        $row_datos_reserva = $dbo->fetchArray($qry_reserva);
                        $elemento[Disponible] = "N";
                        $elemento["Socio"] = utf8_encode($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_datos_reserva["IDSocio"] . "'"));
                        $elemento["IDSocio"] = $row_datos_reserva["IDSocio"];
                        $elemento["ModalidadEsquiSocio"] = $dbo->getFields("TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_datos_reserva["IDTipoModalidadEsqui"] . "'");
                    else:
                        $elemento[Disponible] = "S";
                        $elemento["Socio"] = "";
                        $elemento["IDSocio"] = "";
                        $elemento["ModalidadEsquiSocio"] = "";
                    endif;
                    array_push($response_elemento, $elemento);
                endif;
            endwhile;

            $servicio_hora["Disponibilidad"] = $response_elemento;

            $message = " Disponibilidad";

            array_push($response, $servicio_hora);

            $respuesta["message"] = $message;
            $respuesta["success"] = true;
            $respuesta["response"] = $response;

            return $respuesta;

        }

        public function validar_permiso_reserva($IDSocio,$IDServicio="")
    {
            $dbo = &SIMDB::get();
            $permiso_reserva = "S";
            $sql_socio = "SELECT IDPermisoServicio,PermiteReservar From Socio Where IDSocio = '" . $IDSocio . "' limit 1";
            $result_socio = $dbo->query($sql_socio);
            $row_socio = $dbo->fetchArray($result_socio);
            if ($row_socio["PermiteReservar"] == "N"):
                $permiso_reserva = "N";
            else:
              if((int)$row_socio["IDPermisoServicio"]>0)   {
                $sql_perm="SELECT IDServicioPermiso FROM ServicioPermiso WHERE IDServicio = '".$IDServicio."' and IDPermisoServicio = '".$row_socio["IDPermisoServicio"]."' LIMIT 1";
                $result_perm = $dbo->query($sql_perm);
                $row_perm = $dbo->fetchArray($result_perm);
                if((int)$row_perm["IDServicioPermiso"]<=0){
                  $permiso_reserva = "N";
                }
              }
            endif;
            return $permiso_reserva;
        }

        public function get_disponibilidad_campo($IDClub, $IDCampo, $Fecha, $IDServicio = "", $Admin = "", $NumeroTurnos = "", $MostrarTodoDia = "")
    {

            $dbo = &SIMDB::get();
            //Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
            $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'");
            if ($id_servicio_maestro == 15 || $id_servicio_maestro == 30 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28): // Golf con opcion de escoger grupos para reservas turnos seguidos
                $respuesta = SIMWebService::get_disponibilidad_campo_turno_seguido($IDClub, $IDCampo, $Fecha, $IDServicio, $Admin, $NumeroTurnos, $MostrarTodoDia);
                return $respuesta;
            endif;

            $fecha_disponible = 0;

            $verifica_disponibilidad_especifica = 0;
            $verifica_disponibilidad_general = 0;

            //consulto los datos del servicio
            //$IDServicio = $dbo->getFields( "ServicioElemento" , "IDServicio" , "IDServicioElemento = '" . $IDCampo . "'" );

            // Verifico que el club y servicio este disponible en la fecha consultada
            $verificacion = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio);
            if (!empty($verificacion)):
                $respuesta["message"] = $verificacion;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar

            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio);
            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                    $fecha_disponible = 1;
                endif;
            endforeach;

            if ($fecha_disponible == 0 && empty($Admin)):
                $respuesta["message"] = "la fecha selecionada aÃºn no estÃ¡ disponible.";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            $response = array();
            $response_disponibilidades = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                $servicio_hora["IDClub"] = $IDClub;
                $servicio_hora["IDServicio"] = $IDServicio;
                //$servicio_hora["IDCampo"] = $IDCampo;
                $servicio_hora["Fecha"] = $Fecha;
                //$response_disponibilidad = SIMWebService::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

                //Horas Disponibles Elemento
                $response_disponibilidad = array();

                if (!empty($IDCampo)) {
                    $condicion_elemento = " and IDServicioElemento = '" . $IDCampo . "'";
                }

                $r = $dbo->fetchArray($qry);

                $sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
                $result_elementos_servicio = $dbo->query($sql_elementos_servicio);
                $response_disponibilidad_tee = array();
                while ($r_elementos_servicio = $dbo->FetchArray($result_elementos_servicio)):

                    unset($array_hora_reservada);
                    $IDElemento = $r_elementos_servicio["IDServicioElemento"];

                    //Consulto lo que tiene reservado el elemento en la fecha indicada en tee1
                    $sql_reserva_elemento_tee1 = "SELECT ReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee1' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";

                    $qry_reserva_elemento_tee1 = $dbo->query($sql_reserva_elemento_tee1);
                    while ($row_reserva_elemento_tee1 = $dbo->fetchArray($qry_reserva_elemento_tee1)) {
                        $array_hora_reservada_tee1[$IDElemento][] = $row_reserva_elemento_tee1["Hora"];
                        $array_socio[$row_reserva_elemento_tee1["Hora"]] = $row_reserva_elemento_tee1;
                        if ($row_reserva_elemento_tee1["IDReservaGrupos"] > 0):
                            $array_socio[$row_reserva_elemento_tee1["Hora"]]["Tee1"]["NombreSocio"] = utf8_encode($dbo->getFields("ReservaGrupos", "Nombre", "IDReservaGrupos = '" . $row_reserva_elemento_tee1["IDReservaGrupos"] . "'"));
                        else:
                            $array_socio[$row_reserva_elemento_tee1["Hora"]]["Tee1"]["NombreSocio"] = $row_reserva_elemento_tee1["NombreSocio"];
                        endif;
                        $array_socio[$row_reserva_elemento_tee1["Hora"]]["IDSocio"] = $row_reserva_elemento_tee1["IDSocio"];
                        $array_socio[$row_reserva_elemento_tee1["Hora"]]["IDReservaGeneral"] = $row_reserva_elemento_tee1["IDReservaGeneral"];
                    }

                    //print_r($array_socio["06:00:00"]["Tee1"]["NombreSocio"]);

                    //Consulto lo que tiene reservado el elemento en la fecha indicada en tee10
                    $sql_reserva_elemento_tee10 = "SELECT ReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee10' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";
                    $qry_reserva_elemento_tee10 = $dbo->query($sql_reserva_elemento_tee10);
                    while ($row_reserva_elemento_tee10 = $dbo->fetchArray($qry_reserva_elemento_tee10)) {
                        $array_hora_reservada_tee10[$IDElemento][] = $row_reserva_elemento_tee10["Hora"];
                        $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]] = $row_reserva_elemento_tee10;
                        if ($row_reserva_elemento_tee10["IDReservaGrupos"] > 0):
                            $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["Tee10"]["NombreSocio"] = utf8_encode($dbo->getFields("ReservaGrupos", "Nombre", "IDReservaGrupos = '" . $row_reserva_elemento_tee10["IDReservaGrupos"] . "'"));
                        else:
                            $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["Tee10"]["NombreSocio"] = $row_reserva_elemento_tee10["NombreSocio"];
                        endif;
                        $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["IDSocio"] = $row_reserva_elemento_tee10["IDSocio"];
                        $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["IDReservaGeneral"] = $row_reserva_elemento_tee10["IDReservaGeneral"];
                    }


                    //Horas generales del servicio
                    /*
                    $horaInicial=$r["HoraDesde"];
                    $minutoAnadir=$r["IntervaloHora"];
                    $hora_final = strtotime( $r["HoraHasta"] );
                    $hora_actual = $r["HoraDesde"];
                     */

                    $dia_fecha = date('w', strtotime($Fecha));

                    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
                    $sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Limit 1";
                    $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
                    $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);
                    //$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
                    $horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera["HoraDesde"];

                    for ($i = 1; $i <= 2; $i++):

                        $verifica_abierto_servicio = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento);
                        if (empty($verifica_abierto_servicio)) {

                            //Verifico si tene disponibilidad  general el elemento
                            $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N'";
                            $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);
                            if ($dbo->rows($qry_dispo_elemento_gral) > 0) {

                                $verifica_disponibilidad_general = 1;
                                while ($row_dispo_elemento_gral = $dbo->fetchArray($qry_dispo_elemento_gral)) {

                                    $horaInicial = $row_dispo_elemento_gral["HoraDesde"];
                                    //$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
                                    $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");

                                    // Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
                                    if ($Fecha == date("Y-m-d")):
                                        $medicion_tiempo = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                        $valor_tiempo_anticipacion = (int) $dbo->getFields("Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                        if ($medicion_tiempo == "Horas"):
                                            $valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
                                        elseif ($medicion_tiempo == "Dias"):
                                            $valor_tiempo_anticipacion = 0;
                                        endif;
                                    else:
                                        $valor_tiempo_anticipacion = 0;
                                    endif;

                                    //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
                                    $medicion_tiempo_anticipacion = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                    $valor_anticipacion_turno = (int) $dbo->getFields("Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                    switch ($medicion_tiempo_anticipacion):
                                case "Dias":
                                    $minutos_anticipacion_turno = (60 * 24) * $valor_anticipacion_turno;
                                    break;
                                case "Horas":
                                    $minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
                                    break;
                                case "Minutos":
                                    $minutos_anticipacion_turno = $valor_anticipacion_turno;
                                    break;
                                default:
                                    $minutos_anticipacion_turno = 0;
                                    endswitch;

                                    //Si es administrador no tiene limite de anticipacion
                                    if ($Admin == "S") {
                                            $valor_tiempo_anticipacion = 0;
                                            $minutos_anticipacion_turno = 0;
                                    }

                                    $hora_real = date('Y-m-d H:i:s');
                                    $hora_empezar_reserva = strtotime('-' . $valor_tiempo_anticipacion . ' minute', strtotime($horaInicial_reserva));
                                    //$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
                                    $hora_actual_sistema = strtotime($hora_real);

                                    $hora_final = strtotime($row_dispo_elemento_gral["HoraHasta"]);
                                    $hora_actual = strtotime($row_dispo_elemento_gral["HoraDesde"]);

                                    while ($hora_actual <= $hora_final):

                                        $hora_fecha_actual = $Fecha . " " . date('H:i:s', $hora_actual);
                                        $hora_puede_reservar = strtotime('+' . $minutos_anticipacion_turno . ' minute', strtotime($hora_real));
                                        /*****************************************************************************************************
                                        Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
                                        Valido que Ã©sta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
                                         ******************************************************************************************************/
                                        if (strtotime($hora_fecha_actual) >= strtotime($hora_real) && $hora_puede_reservar <= strtotime($hora_fecha_actual)):

                                            //Verifico si el tee esta disponible en este horario para mostrarlo
                                            if (($row_dispo_elemento_gral["Tee1"] == "S" && $i == 1) || ($row_dispo_elemento_gral["Tee10"] == "S" && $i == 2)):

                                                if (strlen($horaInicial) != 8):
                                                    $horaInicial .= ":00";
                                                endif;

                                                $hora["Hora"] = $horaInicial;
                                                $zonahoraria = date_default_timezone_get();
                                                $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                                $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

                                                //echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
                                                //exit;

                                                $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "' ", "array");

                                                // Si el tee es 1
                                                if ($i == 1):
                                                    //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
                                                    if ((in_array($horaInicial, $array_hora_reservada_tee1[$IDElemento])) || ($hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {
                                                        $hora["Disponible"] = "N";

                                                        $hora["Socio"] = $array_socio["$horaInicial"]["Tee1"]["NombreSocio"];
                                                        $hora["IDSocio"] = $array_socio["$horaInicial"]["IDSocio"];
                                                        $hora["IDReserva"] = $array_socio["$horaInicial"]["IDReservaGeneral"];
                                                    } else {
                                                        $hora["Disponible"] = "S";
                                                        $hora["Socio"] = "";
                                                        $hora["IDSocio"] = "";
                                                        $hora["IDReserva"] = "";
                                                    }
                                                endif;

                                                // Si el tee es 10
                                                if ($i == 2):
                                                    //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
                                                    if ((in_array($horaInicial, $array_hora_reservada_tee10[$IDElemento])) || ($hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {
                                                        $hora["Disponible"] = "N";
                                                        $hora["Socio"] = $array_socio_tee10["$horaInicial"]["NombreSocio"];
                                                        $hora["Socio"] = $array_socio_tee10["$horaInicial"]["Tee10"]["NombreSocio"];
                                                        $hora["IDSocio"] = $array_socio_tee10["$horaInicial"]["IDSocio"];
                                                        $hora["IDReserva"] = $array_socio_tee10["$horaInicial"]["IDReservaGeneral"];
                                                    } else {
                                                        $hora["Disponible"] = "S";
                                                        $hora["Socio"] = "";
                                                        $hora["IDSocio"] = "";
                                                        $hora["IDReserva"] = "";
                                                    }
                                                endif;

                                                $hora["IDCampo"] = $IDCampo;

                                                if ($i == 1):
                                                    $hora["Tee"] = "Tee1";
                                                else:
                                                    $hora["Tee"] = "Tee10";
                                                endif;

                                                $hora["MaximoPersonaTurno"] = $datos_disponibilidad["MaximoPersonaTurno"];
                                                $hora["NumeroInvitadoClub"] = $datos_disponibilidad["NumeroInvitadoClub"];
                                                $hora["NumeroInvitadoExterno"] = $datos_disponibilidad["NumeroInvitadoExterno"];

                                                //Repeticion reserva
                                                $hora["IDDisponibilidad"] = $datos_disponibilidad["IDDisponibilidad"];
                                                $hora["PermiteRepeticion"] = $datos_disponibilidad["PermiteRepeticion"];
                                                $hora["MaximoRepeticion"] = $datos_disponibilidad["NumeroRepeticion"] . " " . $datos_disponibilidad["MedicionRepeticion"];

                                                $hora["IDElemento"] = $IDElemento;
                                                $hora["NombreElemento"] = $hora["Tee"] . "-" . $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'");

                                                $hora2["Hora"] = "08:00:00";
                                                $hora2["GMT"] = "-05:00";
                                                $hora2["Disponible"] = "S";
                                                $hora2["Socio"] = "";
                                                $hora2["IDSocio"] = "";
                                                $hora2["ModalidadEsquiSocio"] = "";
                                                $hora2["IDReserva"] = "";
                                                $hora2["MaximoPersonaTurno"] = "0";
                                                $hora2["NumeroInvitadoClub"] = "0";
                                                $hora2["NumeroInvitadoExterno"] = "0";
                                                $hora2["IDDisponibilidad"] = "14";
                                                $hora2["PermiteRepeticion"] = "N";
                                                $hora2["MedicionRepeticion"] = "";
                                                $hora2["FechaFinRepeticion"] = "null";
                                                $hora2["Georeferenciacion"] = "N";
                                                $hora2["Latitud"] = "4.7939569";
                                                $hora2["Longitud"] = "-74.0758342";
                                                $hora2["Rango"] = "10000";
                                                $hora2["MensajeFueraRango"] = "No estas en el club para poder hacer la reserva.";
                                                $hora2["IDElemento"] = "59";
                                                $hora2["NombreElemento"] = "Wilson";
                                                $hora2["ModalidadElemento"] = " null";
                                                $hora2["MaximoInvitadosSalon"] = "0";
                                                $hora2["OrdenElemento"] = "0";

                                                array_push($response_disponibilidad_tee, $hora);
                                            endif;
                                        endif;

                                        $array_horas_elemento[] = $horaInicial;
                                        $segundos_horaInicial = strtotime($horaInicial);
                                        $segundos_minutoAnadir = $minutoAnadir * 60;
                                        $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                        $hora_actual = strtotime($nuevaHora);
                                        $horaInicial = $nuevaHora;

                                    endwhile;

                                }
                            }

                        }
                    endfor;

                endwhile;

                //

                foreach ($response_disponibilidad_tee as $id_array => $datos_array):
                    $array_ordenado_hora[$datos_array["Hora"] . $datos_array["NombreElemento"]] = $datos_array;
                endforeach;

                ksort($array_ordenado_hora);

                $response_array_ordenado = array();
                foreach ($array_ordenado_hora as $id_array => $datos_array):
                    array_push($response_array_ordenado, $datos_array);
                endforeach;

                array_push($response_disponibilidades, $response_array_ordenado);

                // Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
                if (!empty($UnElemento)):
                    $servicio_hora["Disponibilidad"] = $response_array_ordenado;
                else:
                    $servicio_hora["Disponibilidad"] = $response_disponibilidades;
                endif;
                //$servicio_hora["Disponibilidad"] = $response_disponibilidades;
                array_push($response, $servicio_hora);

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;

            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            //inserta _log
            $sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode($respuesta) . "')");

            return $respuesta;

        }

        public function get_disponibilidad_campo_turno_seguido($IDClub, $IDCampo, $Fecha, $IDServicio = "", $Admin = "", $NumeroTurnos = "", $MostrarTodoDia = "")
    {
            $dbo = &SIMDB::get();

            if (empty($NumeroTurnos)) {
                $NumeroTurnos = 1;
            }

            $fecha_disponible = 0;

            $verifica_disponibilidad_especifica = 0;
            $verifica_disponibilidad_general = 0;

            //consulto los datos del servicio
            //$IDServicio = $dbo->getFields( "ServicioElemento" , "IDServicio" , "IDServicioElemento = '" . $IDCampo . "'" );

            // Verifico que el club y servicio este disponible en la fecha consultada
            $verificacion = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio);
            if (!empty($verificacion)):
                $respuesta["message"] = $verificacion;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            if (empty($Admin)) {
                $TipoConsultaDispo = "App";
            }

            //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar
            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio, $Fecha, $TipoConsultaDispo);
            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                    $fecha_disponible = 1;
                endif;
            endforeach;

            if ($fecha_disponible == 0 && empty($Admin)):
                //Esta fecha aÃºn no estÃ¡ disponible.
                $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada (t3)";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            $response = array();
            $response_disponibilidades = array();
            $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                $servicio_hora["IDClub"] = $IDClub;
                $servicio_hora["IDServicio"] = $IDServicio;
                //$servicio_hora["IDCampo"] = $IDCampo;
                $servicio_hora["Fecha"] = $Fecha;
                //$response_disponibilidad = SIMWebService::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

                //Horas Disponibles Elemento
                $response_disponibilidad = array();

                if (!empty($IDCampo)) {
                    $condicion_elemento = " and IDServicioElemento = '" . $IDCampo . "'";
                }

                $r = $dbo->fetchArray($qry);

                $nombre_elemento_consulta = string;
                $sql_elementos_servicio = "SELECT * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
                $result_elementos_servicio = $dbo->query($sql_elementos_servicio);
                $response_disponibilidad_tee = array();
                while ($r_elementos_servicio = $dbo->FetchArray($result_elementos_servicio)):

                    $nombre_elemento_consulta = $r_elementos_servicio["Nombre"];
                    unset($array_hora_reservada);
                    $IDElemento = $r_elementos_servicio["IDServicioElemento"];

                    //Consulto lo que tiene reservado el elemento en la fecha indicada en tee1
                    //$sql_reserva_elemento_tee1 = "SELECT ReservaGeneral.*, Socio.Accion, Socio.Nombre, Socio.Apellido, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio
                    //FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee1' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";

                    $sql_reserva_elemento_tee1 = "SELECT ReservaGeneral.*
									FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee1' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";

                    $qry_reserva_elemento_tee1 = $dbo->query($sql_reserva_elemento_tee1);
                    while ($row_reserva_elemento_tee1 = $dbo->fetchArray($qry_reserva_elemento_tee1)) {

                        if ($IDClub == 70) {
                            $agrega_datos = "(" . utf8_encode($row_reserva_elemento_tee1["AccionSocio"]) . ")";
                        }

                        if ($row_reserva_elemento_tee1["IDEstadoReserva"] == 3):
                            $nombre_reserva = "En proceso de reserva";
                        else:
                            $nombre_reserva = $row_reserva_elemento_tee1["NombreSocio"] . " " . $agrega_datos;
                        endif;

                        //Verifico si el club/servicio se configuro para mostrar el nombre del socio o para mostrar un texto personalizado, para funcionarios si se muestra el nombre
                        $MostrarReserva = $r["MostrarReserva"];
                        if ($MostrarReserva == "Pesonalizado" && empty($Agenda) && empty($Admin)) {
                            $LabelPersonalizado = $r["LabelPersonalizado"];
                            $nombre_tomo_reserva = $LabelPersonalizado;
                        } else {

                            if (!empty($row_reserva_elemento_tee1["IDSocioBeneficiario"])) {
                                $nombre_tomo_reserva = "Benef. " . $row_reserva_elemento_tee1["NombreBeneficiario"];
                            } elseif (!empty($row_reserva_elemento_tee1["IDInvitadoBeneficiario"])) {
                            $nombre_tomo_reserva = "Inv. " . $dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $row_reserva_elemento_tee1["IDInvitadoBeneficiario"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $row_reserva_elemento_tee1["IDInvitadoBeneficiario"] . "'") . " " . " " . $dbo->getFields("SocioInvitado", "Nombre", "IDSocioInvitado = '" . $row_reserva_elemento_tee1["IDInvitadoBeneficiario"] . "'");
                        } else {
                            $nombre_tomo_reserva = $nombre_reserva;
                        }
                    }

                    if ($r["PopInvitados"] == "N") {
                        $IDReservaPop = "";
                    } else {
                        $IDReservaPop = $row_reserva_elemento_tee1["IDReservaGeneral"];
                    }

                    $array_hora_reservada_tee1[$IDElemento][] = $row_reserva_elemento_tee1["Hora"];
                    $array_socio[$row_reserva_elemento_tee1["Hora"]] = $row_reserva_elemento_tee1;
                    $array_socio[$row_reserva_elemento_tee1["Hora"]]["Tee1"]["NombreSocio"] = $nombre_tomo_reserva;
                    $array_socio[$row_reserva_elemento_tee1["Hora"]]["IDSocio"] = $row_reserva_elemento_tee1["IDSocio"];
                    $array_socio[$row_reserva_elemento_tee1["Hora"]]["IDReservaGeneral"] = $IDReservaPop;
                }

                //print_r($array_socio["06:00:00"]["Tee1"]["NombreSocio"]);

                //Consulto lo que tiene reservado el elemento en la fecha indicada en tee10
                //$sql_reserva_elemento_tee10 = "SELECT ReservaGeneral.*, Socio.Accion, Socio.Nombre, Socio.Apellido, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio
                //                                                            FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee10' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";

                $sql_reserva_elemento_tee10 = "SELECT ReservaGeneral.*
																				FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee10' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";

                $qry_reserva_elemento_tee10 = $dbo->query($sql_reserva_elemento_tee10);
                while ($row_reserva_elemento_tee10 = $dbo->fetchArray($qry_reserva_elemento_tee10)) {

                    if ($IDClub == 70) {
                        $agrega_datos = "(" . utf8_encode($row_reserva_elemento_tee10["AccionSocio"]) . ")";
                    }

                    if ($row_reserva_elemento_tee10["IDEstadoReserva"] == 3):
                        $nombre_reserva_tee10 = "En proceso de reserva";
                    else:
                        $nombre_reserva_tee10 = $row_reserva_elemento_tee10["NombreSocio"] . " " . $agrega_datos;
                    endif;

                    //Verifico si el club/servicio se configuro para mostrar el nombre del socio o para mostrar un texto personalizado, para funcionarios si se muestra el nombre
                    $MostrarReserva = $r["MostrarReserva"];
                    if ($MostrarReserva == "Pesonalizado" && empty($Agenda) && empty($Admin)) {
                        $LabelPersonalizado = $r["LabelPersonalizado"];
                        $nombre_tomo_reserva_tee10 = $LabelPersonalizado;
                    } else {

                        if (!empty($row_reserva_elemento_tee10["IDSocioBeneficiario"])) {
                            $nombre_tomo_reserva_tee10 = "Benef. " . $row_reserva_elemento_tee10["NombreBeneficiario"];
                        } elseif (!empty($row_reserva_elemento_tee10["IDInvitadoBeneficiario"])) {
                        $nombre_tomo_reserva_tee10 = "Inv. " . $dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $row_reserva_elemento_tee10["IDInvitadoBeneficiario"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $row_reserva_elemento_tee10["IDInvitadoBeneficiario"] . "'") . " " . " " . $dbo->getFields("SocioInvitado", "Nombre", "IDSocioInvitado = '" . $row_reserva_elemento_tee10["IDInvitadoBeneficiario"] . "'");
                    } else {
                        $nombre_tomo_reserva_tee10 = $nombre_reserva_tee10;
                    }

                }
                if ($r["PopInvitados"] == "N") {
                    $IDReservaPopTee10 = "";
                } else {
                    $IDReservaPopTee10 = $row_reserva_elemento_tee10["IDReservaGeneral"];
                }

                $array_hora_reservada_tee10[$IDElemento][] = $row_reserva_elemento_tee10["Hora"];
                $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]] = $row_reserva_elemento_tee10;
                $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["Tee10"]["NombreSocio"] = $nombre_tomo_reserva_tee10;
                $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["IDSocio"] = $row_reserva_elemento_tee10["IDSocio"];
                $array_socio_tee10[$row_reserva_elemento_tee10["Hora"]]["IDReservaGeneral"] = $IDReservaPopTee10;
            }


            //Horas generales del servicio
            /*
            $horaInicial=$r["HoraDesde"];
            $minutoAnadir=$r["IntervaloHora"];
            $hora_final = strtotime( $r["HoraHasta"] );
            $hora_actual = $r["HoraDesde"];
             */

            $dia_fecha = date('w', strtotime($Fecha));

            if (empty($Admin)) {
                $condicion_dispo_solo_admin = " and SoloAdmin <> 'S'";
            }

            // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
            $sql_dispo_elemento_primera = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin . " Order by HoraDesde Limit 1";
            $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
            $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);
            //$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
            $horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera["HoraDesde"];

            for ($i = 1; $i <= 2; $i++):

                $verifica_abierto_servicio = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento);

                if (empty($verifica_abierto_servicio)) {

                    //Verifico si tene disponibilidad  general el elemento
                    $sql_dispo_elemento_gral = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin;
                    $qry_dispo_elemento_gral = $dbo->query($sql_dispo_elemento_gral);
                    if ($dbo->rows($qry_dispo_elemento_gral) > 0) {

                        //Para las horas con par por tee
                        //Tee1
                        $sql_dispo = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Tee1 = 'S' and Activo <>'N' " . $condicion_dispo_solo_admin;
                        $qry_dispo = $dbo->query($sql_dispo);
                        while ($row_dispo_elemento_gral_par = $dbo->fetchArray($qry_dispo)) {
                            $array_par_tee1[$row_dispo_elemento_gral_par["HoraDesde"]] = $row_dispo_elemento_gral_par["HoraPar"];
                        }
                        $sql_dispo = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Tee10 = 'S' and Activo <>'N' " . $condicion_dispo_solo_admin;
                        $qry_dispo = $dbo->query($sql_dispo);
                        while ($row_dispo_elemento_gral_par = $dbo->fetchArray($qry_dispo)) {
                            $array_par_tee10[$row_dispo_elemento_gral_par["HoraDesde"]] = $row_dispo_elemento_gral_par["HoraPar"];
                        }

                        $verifica_disponibilidad_general = 1;
                        while ($row_dispo_elemento_gral = $dbo->fetchArray($qry_dispo_elemento_gral)) {

                            $horaInicial = $row_dispo_elemento_gral["HoraDesde"];
                            //$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
                            $minutoAnadir = $dbo->getFields("Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");

                            // Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
                            if ($Fecha == date("Y-m-d")):
                                $medicion_tiempo = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                $valor_tiempo_anticipacion = (int) $dbo->getFields("Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                                if ($medicion_tiempo == "Horas"):
                                    $valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
                                elseif ($medicion_tiempo == "Dias"):
                                    $valor_tiempo_anticipacion = 0;
                                endif;
                            else:
                                $valor_tiempo_anticipacion = 0;
                            endif;

                            //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
                            $medicion_tiempo_anticipacion = $dbo->getFields("Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                            $valor_anticipacion_turno = (int) $dbo->getFields("Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "'");
                            switch ($medicion_tiempo_anticipacion):
                        case "Dias":
                            $minutos_anticipacion_turno = (60 * 24) * $valor_anticipacion_turno;
                            break;
                        case "Horas":
                            $minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
                            break;
                        case "Minutos":
                            $minutos_anticipacion_turno = $valor_anticipacion_turno;
                            break;
                        default:
                            $minutos_anticipacion_turno = 0;
                            endswitch;

                            //Si es administrador no tiene limite de anticipacion
                            if ($Admin == "S") {
                                    $valor_tiempo_anticipacion = 0;
                                    $minutos_anticipacion_turno = 0;
                            }

                            //Consulto hace una hora para mostrar los turnos anterior segun solicitud de lagartos
                            /*
                            $hace_una_hora = strtotime ( '-1 hour' , strtotime ( date("Y-m-d H:i:s") ) ) ;
                            if($Fecha==date("Y-m-d")):
                            $hora_real = date('Y-m-d H:i:s',$hace_una_hora);
                            else:
                            $hora_real = date('Y-m-d H:i:s');
                            endif;
                             */

                            $hora_real = date('Y-m-d H:i:s');

                            if ($MostrarTodoDia == "S"):
                                $hora_real = date('Y-m-d 05:00:00');
                            endif;

                            $hora_empezar_reserva = strtotime('-' . $valor_tiempo_anticipacion . ' minute', strtotime($horaInicial_reserva));
                            //$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
                            $hora_actual_sistema = strtotime($hora_real);

                            $hora_final = strtotime($row_dispo_elemento_gral["HoraHasta"]);
                            $hora_actual = strtotime($row_dispo_elemento_gral["HoraDesde"]);
                            $hora_par = $row_dispo_elemento_gral["HoraPar"];

                            while ($hora_actual <= $hora_final):

                                $hora_fecha_actual = $Fecha . " " . date('H:i:s', $hora_actual);
                                $hora_puede_reservar = strtotime('+' . $minutos_anticipacion_turno . ' minute', strtotime($hora_real));
                                /*****************************************************************************************************
                                Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
                                Valido que Ã©sta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
                                 ******************************************************************************************************/
                                if (strtotime($hora_fecha_actual) >= strtotime($hora_real) && $hora_puede_reservar <= strtotime($hora_fecha_actual)):

                                    //Verifico si el tee esta disponible en este horario para mostrarlo
                                    if (($row_dispo_elemento_gral["Tee1"] == "S" && $i == 1) || ($row_dispo_elemento_gral["Tee10"] == "S" && $i == 2)):

                                        if (strlen($horaInicial) != 8):
                                            $horaInicial .= ":00";
                                        endif;

                                        $hora["Hora"] = $horaInicial;
                                        $zonahoraria = date_default_timezone_get();
                                        $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                                        $hora["GMT"] = SIMWebservice::timezone_offset_string($offset);

                                        //echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
                                        //exit;

                                        $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "' ", "array");
                                        $total_invitados = 0;
                                        $reservado_por_socio = "";

                                        // Si el tee es 1
                                        if ($i == 1):
                                            //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
                                            if ((in_array($horaInicial, $array_hora_reservada_tee1[$IDElemento])) || ($hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = $array_socio["$horaInicial"]["Tee1"]["NombreSocio"];
                                                $hora["IDSocio"] = $array_socio["$horaInicial"]["IDSocio"];
                                                $hora["IDReserva"] = $array_socio["$horaInicial"]["IDReservaGeneral"];
                                                $reservado_por_socio = "S";
                                                //Permite a otros socios agregarse a un grupo de juego cuando quede un cupo
                                                if ($r["PermiteAgregarGrupo"] == "S"):
                                                    $sql_invitados = "SELECT IDReservaGeneralInvitado FROM ReservaGeneralInvitado WHERE IDReservaGeneral = '" . $array_socio["$horaInicial"]["IDReservaGeneral"] . "'";
                                                    $result_invitado = $dbo->query($sql_invitados);
                                                    $total_invitados = $dbo->rows($result_invitado);
                                                endif;
                                            } else {

                                                //Verifico que no tenga fecha de cierre en esta hora
                                                $verifica_abierto_servicio_hora = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento, $hora["Hora"], "Tee1");

                                                if ($IDClub == 112 && $IDServicio == 19939 && empty($Admin)) {
                                                    $verifica_abierto_servicio_hora = "Solo starter:Solo starter:Solo Starter";
                                                }

                                                if (!empty($verifica_abierto_servicio_hora)):
                                                    //extraigo la razon
                                                    $mensaje_cierre = explode(":", $verifica_abierto_servicio_hora);

                                                    $hora["Disponible"] = "N";
                                                    $hora["Socio"] = $mensaje_cierre[2];
                                                    $hora["IDSocio"] = "";
                                                    $hora["IDReserva"] = "";
                                                else:

                                                    //if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
                                                    if ($NumeroTurnos == 1):
                                                        //Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
                                                        $hora_par_disponible = self::valida_hora_con_par($array_par_tee1, $horaInicial, "Tee1", $IDElemento, $Fecha, $hora_real);

                                                        if ($hora_par_disponible == "S"):
                                                            $hora["Disponible"] = "S";
                                                            $hora["Socio"] = "";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        else:
                                                            $hora["Disponible"] = "N";
                                                            $hora["Socio"] = "No Disponible";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        endif;
                                                    else:
                                                        //verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
                                                        $array_disponible = SIMWebService::valida_siguiente_turno_disponible_golf($Fecha, $hora["Hora"], $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, "Tee1", "", $array_par_tee1);

                                                        if (count($array_disponible) == $NumeroTurnos):
                                                            //Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
                                                            $hora_par_disponible = self::valida_hora_con_par($array_par_tee1, $horaInicial, "Tee1", $IDElemento, $Fecha, $hora_real);
                                                            if ($hora_par_disponible == "S"):
                                                                $hora["Disponible"] = "S";
                                                                $hora["Socio"] = "";
                                                                $hora["IDSocio"] = "";
                                                                $hora["IDReserva"] = "";
                                                            else:
                                                                $hora["Disponible"] = "N";
                                                                $hora["Socio"] = "No Disponible";
                                                                $hora["IDSocio"] = "";
                                                                $hora["IDReserva"] = "";
                                                            endif;
                                                        else:
                                                            $hora["Disponible"] = "N";
                                                            $hora["Socio"] = "No Disponible";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        endif;
                                                    endif;
                                                    /*
                                                else:
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = "Hora no disponible";
                                                $hora["IDSocio"] = "";
                                                $hora["IDReserva"] = "";
                                                endif;
                                                 **/

                                                endif;
                                            }
                                        endif;

                                        // Si el tee es 10
                                        if ($i == 2):
                                            //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
                                            if ((in_array($horaInicial, $array_hora_reservada_tee10[$IDElemento])) || ($hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0)) {
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = $array_socio_tee10["$horaInicial"]["NombreSocio"];
                                                $hora["Socio"] = $array_socio_tee10["$horaInicial"]["Tee10"]["NombreSocio"];
                                                $hora["IDSocio"] = $array_socio_tee10["$horaInicial"]["IDSocio"];
                                                $hora["IDReserva"] = $array_socio_tee10["$horaInicial"]["IDReservaGeneral"];
                                                $reservado_por_socio = "S";
                                                //Permite a otros socios agregarse a un grupo de juego cuando quede un cupo
                                                if ($r["PermiteAgregarGrupo"] == "S"):
                                                    $sql_invitados = "SELECT IDReservaGeneralInvitado FROM ReservaGeneralInvitado WHERE IDReservaGeneral = '" . $array_socio_tee10["$horaInicial"]["IDReservaGeneral"] . "'";
                                                    $result_invitado = $dbo->query($sql_invitados);
                                                    $total_invitados = $dbo->rows($result_invitado);
                                                endif;

                                            } else {

                                                //Verifico que no tenga fecha de cierre en esta hora
                                                $verifica_abierto_servicio_hora = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento, $hora["Hora"], "Tee10");

                                                if ($IDClub == 112 && $IDServicio == 19939 && empty($Admin)) {
                                                    $verifica_abierto_servicio_hora = "Solo starter:Solo starter:Solo Starter";
                                                }

                                                if (!empty($verifica_abierto_servicio_hora)):
                                                    //extraigo la razon
                                                    $mensaje_cierre = explode(":", $verifica_abierto_servicio_hora);

                                                    $hora["Disponible"] = "N";
                                                    $hora["Socio"] = $mensaje_cierre[2];
                                                    $hora["IDSocio"] = "";
                                                    $hora["IDReserva"] = "";
                                                else:

                                                    //if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
                                                    if ($NumeroTurnos == 1):
                                                        //Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
                                                        $hora_par_disponible = self::valida_hora_con_par($array_par_tee10, $horaInicial, "Tee10", $IDElemento, $Fecha, $hora_real);
                                                        if ($hora_par_disponible == "S"):
                                                            $hora["Disponible"] = "S";
                                                            $hora["Socio"] = "";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        else:
                                                            $hora["Disponible"] = "N";
                                                            $hora["Socio"] = "No Disponible";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        endif;
                                                    else:
                                                        //verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
                                                        $array_disponible = SIMWebService::valida_siguiente_turno_disponible_golf($Fecha, $hora["Hora"], $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, "Tee10", "", $array_par_tee10);
                                                        if (count($array_disponible) == $NumeroTurnos):
                                                            //Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
                                                            $hora_par_disponible = self::valida_hora_con_par($array_par_tee10, $horaInicial, "Tee10", $IDElemento, $Fecha, $hora_real);
                                                            if ($hora_par_disponible == "S"):
                                                                $hora["Disponible"] = "S";
                                                                $hora["Socio"] = "";
                                                                $hora["IDSocio"] = "";
                                                                $hora["IDReserva"] = "";
                                                            else:
                                                                $hora["Disponible"] = "N";
                                                                $hora["Socio"] = "No Disponible";
                                                                $hora["IDSocio"] = "";
                                                                $hora["IDReserva"] = "";
                                                            endif;

                                                        else:
                                                            $hora["Disponible"] = "N";
                                                            $hora["Socio"] = "No Disponible";
                                                            $hora["IDSocio"] = "";
                                                            $hora["IDReserva"] = "";
                                                        endif;
                                                    endif;
                                                    /*
                                                else:
                                                $hora["Disponible"] = "N";
                                                $hora["Socio"] = "Hora no disponible";
                                                $hora["IDSocio"] = "";
                                                $hora["IDReserva"] = "";
                                                endif;
                                                 */
                                                endif;
                                            }
                                        endif;

                                        $hora["IDCampo"] = $IDCampo;

                                        if ($i == 1):
                                            $hora["Tee"] = "Tee1";
                                        else:
                                            $hora["Tee"] = "Tee10";
                                        endif;

                                        //Maximo y minimo deacuerso a los turnos
                                        //$minimo_invitado = ($datos_disponibilidad["NumeroInvitadoClub"] * $NumeroTurnos)-1;
                                        //$maximo_invitado = ($datos_disponibilidad["NumeroInvitadoExterno"] * $NumeroTurnos)-1;
                                        $minimo_invitado = ($datos_disponibilidad["NumeroInvitadoClub"] * $NumeroTurnos);
                                        $maximo_invitado = ($datos_disponibilidad["MaximoInvitados"] * $NumeroTurnos);

                                        $hora["MaximoPersonaTurno"] = $datos_disponibilidad["MaximoPersonaTurno"];
                                        $hora["NumeroInvitadoClub"] = "$minimo_invitado";
                                        $hora["NumeroInvitadoExterno"] = $datos_disponibilidad["NumeroInvitadoExterno"];
                                        $hora["Maximoo"] = $datos_disponibilidad["MaximoInvitados"] . "*" . $NumeroTurnos . "IN" . $total_invitados;

                                        //Permite a otros socios agregarse a un grupo de juego cuando quede un cupo

                                        if ($r["PermiteAgregarGrupo"] == "S" && $reservado_por_socio == "S"):
                                            $cupos_disponibles_grupo = (int) $maximo_invitado - (int) $total_invitados;
                                            $hora["CuposDisponibles"] = $cupos_disponibles_grupo;
                                        else:
                                            $hora["CuposDisponibles"] = 0;
                                        endif;

                                        //Repeticion reserva
                                        $hora["IDDisponibilidad"] = $datos_disponibilidad["IDDisponibilidad"];
                                        $hora["PermiteRepeticion"] = $datos_disponibilidad["PermiteRepeticion"];
                                        $hora["MaximoRepeticion"] = $datos_disponibilidad["NumeroRepeticion"] . " " . $datos_disponibilidad["MedicionRepeticion"];

                                        if ($hora["Tee"] == "Tee10" && $IDClub == 44) {
                                            $NombreDesc = " para 9 hoyos";
                                        }

                                        $hora["IDElemento"] = $IDElemento;
                                        $hora["NombreElemento"] = $hora["Tee"] . "-" . $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'");
                                        $hora["LabelDisponible"] = "Disponible." . $NombreDesc;
                                        //Consulto los datos de georeferenciacion
                                        $datos_disponibilidad_geo = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $datos_disponibilidad["IDDisponibilidad"] . "' ", "array");
                                        $hora["Georeferenciacion"] = $datos_disponibilidad_geo["Georeferenciacion"];
                                        //Consulto los demas datos de la configuracion del servicio
                                        $datos_geo_servicio = $dbo->fetchAll("Servicio", " IDServicio = '" . $IDServicio . "' ", "array");
                                        $hora["Latitud"] = $datos_geo_servicio["Latitud"];
                                        $hora["Longitud"] = $datos_geo_servicio["Longitud"];
                                        $hora["Rango"] = $datos_geo_servicio["Rango"];
                                        $hora["MensajeFueraRango"] = $datos_geo_servicio["MensajeFueraRango"];

                                        array_push($response_disponibilidad_tee, $hora);
                                    endif;
                                endif;

                                $array_horas_elemento[] = $horaInicial;
                                $segundos_horaInicial = strtotime($horaInicial);
                                $segundos_minutoAnadir = $minutoAnadir * 60;
                                $array_horas = $nuevaHora = date("H:i", $segundos_horaInicial + $segundos_minutoAnadir);
                                $hora_actual = strtotime($nuevaHora);
                                $horaInicial = $nuevaHora;

                            endwhile;

                        }
                    }

                } else {
                    $respuesta["message"] = $verifica_abierto_servicio;
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }

            endfor;

            endwhile;

            //

            foreach ($response_disponibilidad_tee as $id_array => $datos_array):
                $array_ordenado_hora[$datos_array["Hora"] . $datos_array["NombreElemento"]] = $datos_array;
            endforeach;

            ksort($array_ordenado_hora);

            $response_array_ordenado = array();
            foreach ($array_ordenado_hora as $id_array => $datos_array):
                array_push($response_array_ordenado, $datos_array);
            endforeach;

            array_push($response_disponibilidades, $response_array_ordenado);

            // Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
            if (!empty($UnElemento)):
                $servicio_hora["Disponibilidad"] = $response_array_ordenado;
            else:
                $servicio_hora["Disponibilidad"] = $response_disponibilidades;
            endif;
            //$servicio_hora["Disponibilidad"] = $response_disponibilidades;
            $servicio_hora["name"] = $nombre_elemento_consulta;

            array_push($response, $servicio_hora);

            $respuesta["message"] = $message;
            $respuesta["success"] = true;
            $respuesta["response"] = $response;

        } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            //inserta _log
            $sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode($respuesta) . "')");

            return $respuesta;

        }

        public function valida_hora_con_par($array_par, $horaInicial, $tee, $IDElemento, $Fecha, $hora_real)
    {
            $dbo = &SIMDB::get();
            $disponible = "S";
            //Valido el tee contrario
            if ($tee == "Tee1") {
                $tee = "Tee10";
            } else {
                $tee = "Tee1";
            }

            $FechaHoravalida = $Fecha . " " . $horaInicial;
            $FechaHoraPar = $Fecha . " " . $array_par[$horaInicial];

            //$hora_real = "2018-06-02 06:12:00";

            if (!empty($array_par[$horaInicial]) && $array_par[$horaInicial] != "00:00:00" && strtotime($FechaHoravalida) >= strtotime($FechaHoraPar)):
                //verifico si esta reservado y si la hora ya pasÃ³
                $hora_inicio_par = $Fecha . " " . $array_par[$horaInicial];
                //$hora_inicio_par = "2018-06-02" . " " .$array_par[$horaInicial];
                $sql_reserva_hora = "SELECT IDReservaGeneral FROM ReservaGeneral, Socio WHERE  Fecha = '" . $Fecha . "' and Hora = '" . $array_par[$horaInicial] . "' and Tee = '" . $tee . "' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub";
                $qry_reserva_hora = $dbo->query($sql_reserva_hora);

                //if($horaInicial=="10:03:00")
                //echo $sql_reserva_hora;

                if ((int) $dbo->rows($qry_reserva_hora) > 0):
                    $disponible = "N";
                elseif (strtotime($hora_real) > strtotime($hora_inicio_par)):
                    $disponible = "S";
                else:
                    $disponible = "N";
                endif;
            else:
                $disponible = "S";
            endif;

            return $disponible;
        }

        public function get_reserva_asociada($IDClub, $IDSocio, $IDReserva)
    {
            $dbo = &SIMDB::get();
            $response = array();

            $sql = "SELECT * FROM ReservaGeneral WHERE IDSocio = '" . $IDSocio . "' and IDReservaGeneral =  '" . $IDReserva . "'";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($row_reserva = $dbo->fetchArray($qry)):
                    $reserva["IDClub"] = $IDClub;
                    $reserva["IDSocio"] = $IDSocio;
                    $reserva["IDReserva"] = $row_reserva["IDReservaGeneral"];
                    $reserva["IDServicio"] = $row_reserva["IDServicio"];
                    $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva["IDServicio"] . "'");
                    $reserva["NombreServicio"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                    $reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
                    $reserva["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva["IDServicioElemento"] . "'");
                    $reserva["Fecha"] = $row_reserva["Fecha"];
                    $reserva["Tee"] = $row_reserva["Tee"];

                    $estado_reserva = $row_reserva["IDEstadoReserva"];

                    if (strlen($row_reserva["Hora"]) != 8):
                        $row_reserva["Hora"] .= ":00";
                    endif;

                    $reserva["Hora"] = $row_reserva["Hora"];

                    $zonahoraria = date_default_timezone_get();
                    $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                    $reserva["GMT"] = SIMWebservice::timezone_offset_string($offset);

                    //Reserva automaticas
                    $response_otra_reserva = array();
                    $sql_otra_reserva = $dbo->query("Select * From  ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "'");
                    while ($r_otra_reserva = $dbo->fetchArray($sql_otra_reserva)):

                        //Si la reserva es Tipo = Repetir solo muestro esta en el resumen las demas no para no generar confusion
                        if ($r_otra_reserva["Tipo"] == "Repetir"):
                            unset($response_otra_reserva);
                            $response_otra_reserva = array();
                        endif;

                        $datos_reserva = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $r_otra_reserva["IDReservaGeneralAsociada"] . "' ", "array");

                        $otra_reserva[IDReservaGeneral] = $datos_reserva["IDReservaGeneral"];
                        $otra_reserva["IDReserva"] = $datos_reserva["IDReservaGeneral"];
                        $otra_reserva["IDServicio"] = $datos_reserva["IDServicio"];
                        $id_servicio_maestro_otro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $datos_reserva["IDServicio"] . "'");

                        $nombre_servicio_personalizado = $dbo->getFields("ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro_otro . "'");
                        if (empty($nombre_servicio_personalizado)) {
                            $nombre_servicio_personalizado = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro_otro . "'");
                        }

                        $otra_reserva["NombreServicio"] = $NombreServicio;
                        $otra_reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
                        if ($estado_reserva == "3"):
                            //$otra_reserva["NombreElemento"] = "Se asignarÃ¡ elemento automaticamente de ser necesario";
                            $otra_reserva["NombreElemento"] = $nombre_servicio_personalizado;

                        else:
                            $otra_reserva["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $datos_reserva["IDServicioElemento"] . "'");
                        endif;
                        $otra_reserva["Fecha"] = $datos_reserva["Fecha"];
                        $otra_reserva["Tee"] = $datos_reserva["Tee"];
                        if (strlen($datos_reserva["Hora"]) != 8):
                            $datos_reserva["Hora"] .= ":00";
                        endif;

                        $otra_reserva["Hora"] = $datos_reserva["Hora"];
                        $zonahoraria = date_default_timezone_get();
                        $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                        $otra_reserva["GMT"] = SIMWebservice::timezone_offset_string($offset);

                        array_push($response_otra_reserva, $otra_reserva);
                    endwhile;

                    // Muestro las asociadas solo en los servicios donde se reserva otro elemnto, por ejemplo en clase de tenis se asocioa un cancha de tenis
                    $ServicioAsociado = (int) $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                    if ($ServicioAsociado > 0) {
                        $reserva["ReservaAsociada"] = $response_otra_reserva;
                    } else {
                        $reserva["ReservaAsociada"] = "";
                    }

                    array_push($response, $reserva);
                endwhile;

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function get_reservas_socio($IDClub, $IDSocio, $Limite = 0, $IDReserva = "", $IDUsuario = "")
    {
            $dbo = &SIMDB::get();

            $response = array();

            $array_id_consulta[] = $IDSocio;

            $socio_padre = $dbo->getFields("Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'");
            // Si esta en blanco quiere decir que es socio cabeza y debe consultar las reservas de sus beneficiarios
            if ($socio_padre == ""):
                $accion_padre = $dbo->getFields("Socio", "Accion", "IDSocio = '" . $IDSocio . "'");
                $sql_beneficiarios = "SELECT * FROM Socio WHERE ( AccionPadre = '" . $accion_padre . "' and AccionPadre <> '') and IDClub = '" . $IDClub . "' ORDER BY Nombre Desc ";
                $qry_beneficiarios = $dbo->query($sql_beneficiarios);
                while ($r_beneficiario = $dbo->fetchArray($qry_beneficiarios)):
                    $array_id_consulta[] = $r_beneficiario[IDSocio];
                endwhile;
            endif;

            if (count($array_id_consulta) > 0 && empty($IDReserva)):
                $where_beneficiario = "and (IDSocio in (" . implode(",", $array_id_consulta) . ") or IDSocioBeneficiario in (" . implode(",", $array_id_consulta) . ") or IDSocioReserva = '" . $IDSocio . "')";
            endif;

            if (!empty($IDReserva)) {
                $condicion_reserva = " and IDReservaGeneral = '" . $IDReserva . "' ";
            }

            if ($Limite != 0) {
                $condicion_limite = " Limit " . $Limite;
            }

            if (empty($IDUsuario)) {
                $condicion_fecha = " and Fecha >= CURDATE() ";
            } else {
                $condicion_fecha = "  ";
            }

            $sql = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva = 1  " . $condicion_fecha . $where_beneficiario . " " . $condicion_reserva . "ORDER BY Fecha ASC, Hora ASC  " . $condicion_limite;
            $qry = $dbo->query($sql);

            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";

                while ($row_reserva = $dbo->fetchArray($qry)):

                    //si es el dia actual solo muestro las que estan pendientes

                    $mostra_reserva = 1;
                    $fecha_hoy = date("Y-m-d");

                    $FechaHReserva = date("Y-m-d") . " " . $row_reserva["Hora"];
                    $NuevaFechaHoraReserva = strtotime('+30 minute', strtotime($FechaHReserva));
                    $NuevaFechaHoraReserva = date("H:i:s", $NuevaFechaHoraReserva);

                    if (($row_reserva["Fecha"] == $fecha_hoy && $NuevaFechaHoraReserva <= date("H:i:s") && empty($IDUsuario))) {
                        $mostra_reserva = 0;
                        if ($dbo->rows($qry) == 1) {
                            $reserva["IDClub"] = "";
                            $reserva["IDSocio"] = "";
                            $reserva["IDReserva"] = "";
                            $reserva["IDServicio"] = "";
                            $id_servicio_maestro = "";
                            $reserva["NombreServicio"] = "";
                            $reserva["IDElemento"] = "";
                            $reserva["NombreElemento"] = "";
                            $reserva["Fecha"] = "";
                            $reserva["Tee"] = "";
                            array_push($response, $reserva);
                            $respuesta["message"] = "No tienes reservas programadas.";
                            $respuesta["success"] = true;
                            $respuesta["response"] = $response;
                            return $respuesta;
                        }

                    }

                    //$mostra_reserva=1;

                    if ($mostra_reserva == 1) {

                        $datos_servicio = $dbo->fetchAll("Servicio", " IDServicio = '" . $row_reserva["IDServicio"] . "' ", "array");

                        // Verifico si es una reserva asociada para no mostrarla en el resultado
                        $sql_auto = "SELECT * FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAsociada = '" . $row_reserva["IDReservaGeneral"] . "' and IDEstadoReserva = 1";
                        $qry_auto = $dbo->query($sql_auto);
                        if ($dbo->rows($qry_auto) <= 0) {

                            $reserva["IDClub"] = $IDClub;
                            $reserva["IDSocio"] = $row_reserva["IDSocio"];
                            if ((int) ($row_reserva["IDSocioBeneficiario"]) <= 0) {
                                $reserva["Socio"] = $dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocio"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocio"] . "'");
                            } else {
                                $reserva["Socio"] = $dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'");
                            }

                            $reserva["IDReserva"] = $row_reserva["IDReservaGeneral"];
                            $reserva["IDServicio"] = $row_reserva["IDServicio"];
                            $id_servicio_maestro = $datos_servicio["IDServicioMaestro"];

                            $iconoservicio = $datos_servicio["Icono"];
                            $foto = "";
                            if (!empty($iconoservicio)) {
                                $foto = SERVICIO_ROOT . $iconoservicio;
                            } else {
                                $icono_maestro = $dbo->getFields("ServicioMaestro", "Icono", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                                if (!empty($icono_maestro)) {
                                    $foto = SERVICIO_ROOT . $icono_maestro;
                                }
                            }

                            $reserva["Icono"] = $foto;

                            $nombre_servicio_personalizado = $dbo->getFields("ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro . "'");
                            if (empty($nombre_servicio_personalizado)) {
                                $nombre_servicio_personalizado = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                            }

                            if ((int) $row_reserva["IDServicioTipoReserva"] > 0 && $IDClub != "9"):
                                $nombre_servicio_personalizado .= " (" . $dbo->getFields("ServicioTipoReserva", "Nombre", "IDServicioTipoReserva = '" . $row_reserva["IDServicioTipoReserva"] . "'") . ")";
                            endif;

                            $reserva["NombreServicio"] = $nombre_servicio_personalizado;
                            $reserva["NombreServicioPersonalizado"] = $nombre_servicio_personalizado;

                            //Para el polo se asigna cancha y equipo
                            if ($row_reserva["IDClub"] == "37" && $row_reserva["IDServicio"] == "3575"):
                                if (!empty($row_reserva["Cancha"]) && !empty($row_reserva["Equipo"])):
                                    $otros_datos_reserva = " Cancha " . $row_reserva["Cancha"] . " - " . $row_reserva["Equipo"];
                                else:
                                    $otros_datos_reserva = "Pendiente de asignar cancha y equipo";
                                endif;
                            endif;

                            if ((int) $row_reserva["IDSocioBeneficiario"] > 0) {
                                $socio_benef = utf8_encode($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'"));
                                $otros_datos_reserva = "(" . $socio_benef . ")";
                            } else {
                                $otros_datos_reserva = "(" . $reserva["Socio"] . ")";
                            }

                            if (!empty($datos_servicio["IdentificadorServicio"])) {
                                $otros_datos_reserva = " " . $row_reserva["IdentificadorServicio"] . "-" . $row_reserva["ConsecutivoServicio"];
                            }

                            $reserva["IDAuxiliar"] = $row_reserva["IDAuxiliar"];
                            $reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
                            $reserva["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva["IDServicioElemento"] . "'") . " " . $otros_datos_reserva;
                            $reserva["Fecha"] = $row_reserva["Fecha"];
                            $reserva["Tee"] = $row_reserva["Tee"];
                            $reserva["CantidadInvitadoSalon"] = $row_reserva["CantidadInvitadoSalon"];
                            $reserva["PagadaOnline"] = $row_reserva["Pagado"];
                            $reserva["FechaTransaccion"] = $row_reserva["FechaTransaccion"];
                            $reserva["MensajeTransaccion"] = "Mensaje transacciÃ³n: " . $row_reserva["MensajeTransaccion"];

                            $reserva["LabelElementoSocio"] = utf8_encode($datos_servicio["LabelElementoSocio"]);
                            $reserva["LabelElementoExterno"] = utf8_encode($datos_servicio["LabelElementoExterno"]);
                            $reserva["PermiteEditarAuxiliar"] = $datos_servicio["PermiteEditarAuxiliar"];
                            $reserva["PermiteEditarAdicionales"] = $datos_servicio["PermiteEditarAdicionales"];
                            $reserva["PermiteListaEsperaAuxiliar"] = $datos_servicio["PermiteListaEsperaAuxiliar"];
                            $reserva["PermiteEditarAdicionales"] = $datos_servicio["PermiteEditarAdicionales"];
                            $reserva["MultipleAuxiliar"] = $datos_servicio["MultipleAuxiliar"];
                            $reserva["LabelReconfimarBoton"] = $datos_servicio["LabelReconfimarBoton"];
                            $reserva["PermiteReconfirmar"] = $datos_servicio["PermiteReconfirmar"];
                            $reserva["LabelInvitados"] = $datos_servicio["LabelInvitados"];
                            $reserva["AdicionalesObligatorio"] = $datos_servicio["AdicionalesObligatorio"];

                            //Externos
                            $reserva["PermiteInvitadoExternoCedula"] = $datos_servicio["PermiteInvitadoExternoCedula"];
                            $reserva["PermiteInvitadoExternoCorreo"] = $datos_servicio["PermiteInvitadoExternoCorreo"];
                            $reserva["InvitadoExternoPago"] = $datos_servicio["InvitadoExternoPago"];
                            $reserva["LabelInvitadoExternoPago"] = $datos_servicio["LabelInvitadoExternoPago"];
                            $reserva["InvitadoExternoValor"] = $datos_servicio["InvitadoExternoValor"];

                            // Config Eliminar
                            $reserva["EliminarParaTodosOParaMi"] = $datos_servicio["EliminarParaTodosOParaMi"];
                            $reserva["MensajeEliminarParaTodosOParaMi"] = $datos_servicio["MensajeEliminarParaTodosOParaMi"];
                            $reserva["BotonEliminarReserva"] = $datos_servicio["BotonEliminarReserva"];
                            $reserva["LabelEliminarParaMi"] = $datos_servicio["LabelEliminarParaMi"];
                            $reserva["LabelEliminarParaTodos"] = $datos_servicio["LabelEliminarParaTodos"];

                            if (($IDClub == "112" && $datos_servicio["IDServicio"] == 19939)) {
                                $reserva["TipoBotonInvitacion"] = "Capitan";
                            } else {
                                $reserva["TipoBotonInvitacion"] = "";
                            }

                            $labelauxiliar = $dbo->getFields("Club", "LabelAuxiliar", "IDClub = '" . $IDClub . "'");
                            if (empty($labelauxiliar)) {
                                $labelauxiliar = $dbo->getFields("ServicioMaestro", "LabelAuxiliar", "IDServicioMaestro = '" . $r["IDServicioMaestro"] . "'");
                            }

                            $reserva["LabelAuxiliar"] = utf8_encode($labelauxiliar);

                            $response_auxiliar_reserva = array();
                            if (!empty($row_reserva["IDAuxiliar"])):
                                $Array_Auxiliar = explode(",", $row_reserva["IDAuxiliar"]);
                                if (count($Array_Auxiliar) > 0):
                                    foreach ($Array_Auxiliar as $id_auxiliar):
                                        if (!empty($id_auxiliar)):
                                            $array_datos_auxiliar["IDAuxiliar"] = $id_auxiliar;
                                            $array_datos_auxiliar["Nombre"] = $dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $id_auxiliar . "'");
                                            $id_tipo_auxiliar = $dbo->getFields("Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $id_auxiliar . "'");
                                            $array_datos_auxiliar["Tipo"] = $dbo->getFields("AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'");
                                            array_push($response_auxiliar_reserva, $array_datos_auxiliar);
                                        endif;
                                    endforeach;
                                endif;

                                $reserva["ListaAuxiliar"] = $response_auxiliar_reserva;

                                $reserva["IDAuxiliar"] = $row_reserva["IDAuxiliar"];
                                $reserva["Auxiliar"] = utf8_encode($dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'"));
                                $id_tipo_auxiliar = $dbo->getFields("Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'");
                                $reserva["TipoAuxiliar"] = $dbo->getFields("AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'");
                            else:
                                unset($reserva['IDAuxiliar']);
                                unset($reserva['Auxiliar']);
                                unset($reserva['TipoAuxiliar']);
                                $reserva["ListaAuxiliar"] = array();
                            endif;

                            if (!empty($row_reserva["IDTipoModalidadEsqui"])):
                                $reserva["IDTipoModalidad"] = $row_reserva["IDTipoModalidadEsqui"];
                                $reserva["Modalidad"] = $dbo->getFields("TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva["IDTipoModalidadEsqui"] . "'");
                            else:
                                unset($reserva['IDTipoModalidad']);
                                unset($reserva['Modalidad']);
                            endif;

                            if (strlen($row_reserva["Hora"]) != 8):
                                $row_reserva["Hora"] .= ":00";
                            endif;

                            $reserva["Hora"] = $row_reserva["Hora"];

                            $zonahoraria = date_default_timezone_get();
                            $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                            $reserva["GMT"] = SIMWebservice::timezone_offset_string($offset);

                            if ($row_reserva["IDDisponibilidad"] <= 0):
                                $id_disponibilidad = $dbo->getFields("ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r["IDServicio"] . "' and Activo <>'N'");
                            else:
                                $id_disponibilidad = $row_reserva["IDDisponibilidad"];
                            endif;

                            $invitadoclub = $dbo->getFields("Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                            $invitadoexterno = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");

                            if (!empty($invitadoclub)):
                                $reserva["NumeroInvitadoClub"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                            else:
                                $reserva["NumeroInvitadoClub"] = "";
                            endif;
                            if (!empty($invitadoexterno)):
                                $reserva["NumeroInvitadoExterno"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                            else:
                                $reserva["NumeroInvitadoExterno"] = "";
                            endif;

                            if ($row_reserva["IDInvitadoBeneficiario"] > 0):
                                $reserva["Beneficiario"] = utf8_encode($dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $row_reserva["IDInvitadoBeneficiario"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $row_reserva["IDInvitadoBeneficiario"] . "'"));
                            else:
                                $reserva["Beneficiario"] = "";
                            endif;
                            if ($row_reserva["IDSocioBeneficiario"] > 0):
                                $reserva["Beneficiario"] = strtoupper(utf8_encode($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'")));
                            else:
                                $reserva["Beneficiario"] = "";
                            endif;

                            //Invitados Reserva
                            $response_invitados_reserva = array();
                            $sql_invitados_reserva = $dbo->query("Select * From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_reserva["IDReservaGeneral"] . "'");
                            $total_invitado = $dbo->rows($sql_invitados_reserva);
                            while ($r_invitados_reserva = $dbo->fetchArray($sql_invitados_reserva)):
                                $id_reserva_general_invitado = $r_invitados_reserva["IDReservaGeneralInvitado"];
                                $invitado_reserva[IDReservaGeneralInvitado] = $r_invitados_reserva["IDReservaGeneralInvitado"];
                                $invitado_reserva[IDSocio] = $r_invitados_reserva["IDSocio"];
                                $invitado_reserva[NombreSocio] = strtoupper($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $r_invitados_reserva["IDSocio"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $r_invitados_reserva["IDSocio"] . "'"));
                                $invitado_reserva[NombreExterno] = $r_invitados_reserva["Nombre"];
                                $invitado_reserva[Correo] = $r_invitados_reserva["Correo"];
                                $invitado_reserva[Cedula] = $r_invitados_reserva["Cedula"];
                                $invitado_reserva["SeleccionadoGrupo"] = $r_invitados_reserva["Confirmado"];
                                if ($r_invitados_reserva["IDSocio"] == 0):
                                    $tipo_invitado = "Externo";
                                else:
                                    $tipo_invitado = "Socio";
                                endif;

                                $invitado_reserva[TipoInvitado] = $tipo_invitado;

                                //Adicionales
                                $response_adicionales_inv = array();
                                $sql_carac = "SELECT RGA.*,SP.Nombre as Categoria, SP.Nombre as Caracteristica,SP.Tipo as TipoCampo
																							FROM ReservaGeneralAdicionalInvitado RGA, ServicioPropiedad SP, ServicioAdicional SA
																							WHERE  RGA.IDServicioPropiedad = SP.IDServicioPropiedad and SA.IDServicioAdicional = RGA.IDServicioAdicional and
																										 IDReservaGeneral = '" . $row_reserva["IDReservaGeneral"] . "' and IDReservaGeneralInvitado = '" . $r_invitados_reserva["IDReservaGeneralInvitado"] . "'
																							GROUP BY IDServicioPropiedad
																							ORDER BY SP.Nombre";
                                $r_carac = $dbo->query($sql_carac);
                                while ($row_carac = $dbo->FetchArray($r_carac)) {

                                    $adicionales_inv["IDCaracteristica"] = $row_carac["IDServicioPropiedad"];
                                    $adicionales_inv["EtiquetaCampo"] = $row_carac["Caracteristica"];
                                    $adicionales_inv["TipoCampo"] = $row_carac["TipoCampo"];
                                    $adicionales_inv["Valores"] = $row_carac["Valores"];
                                    $adicionales_inv["ValoresID"] = $row_carac["Valor"];
                                    $adicionales_inv["Total"] = $row_carac["Total"];
                                    array_push($response_adicionales_inv, $adicionales_inv);
                                }

                                $invitado_reserva["Adicionales"] = $response_adicionales_inv;
                                //Fin Adicionales

                                array_push($response_invitados_reserva, $invitado_reserva);
                            endwhile;

                            /*
                            //Verifico si el servicio es golf y en invitados falta 1 agrego el socio por que pertenece a la reserva
                            if( ($id_servicio_maestro==15 || $id_servicio_maestro==27 || $id_servicio_maestro==28 || $id_servicio_maestro==30) ): //Golf
                            //Consulto cuantos invitados son minimo para saber si falta 1 y agregar el socio como invitado
                            if ($id_disponibilidad>0):
                            $minimo_invitado_reserva = (int)$dbo->getFields( "Disponibilidad" , "MinimoInvitados" , "IDDisponibilidad = '" . $id_disponibilidad . "'");
                            endif;

                            if($total_invitado<$minimo_invitado_reserva):
                            $invitado_reserva[IDReservaGeneralInvitado]=$id_reserva_general_invitado;
                            $invitado_reserva[IDSocio]=$IDSocio;
                            $invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$IDSocio."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$IDSocio."'"));
                            $tipo_invitado = "Socio";
                            $invitado_reserva[TipoInvitado]=$tipo_invitado;
                            array_push($response_invitados_reserva, $invitado_reserva);
                            endif;
                            endif;
                             */

                            $reserva["Invitados"] = $response_invitados_reserva;

                            //Reservas asociadas
                            $response_reserva_asociada = array();
                            $array_asociada = SIMWebService::get_reserva_asociada($IDClub, $IDSocio, $row_reserva["IDReservaGeneral"]);
                            foreach ($array_asociada["response"]["0"]["ReservaAsociada"] as $datos_reserva):
                                array_push($response_reserva_asociada, $datos_reserva);
                            endforeach;
                            $reserva["ReservaAsociada"] = $response_reserva_asociada;

                            //Adicionales
                            $response_adicionales = array();
                            $sql_carac = "SELECT RGA.*,SP.Nombre as Categoria, SP.Nombre as Caracteristica,SP.Tipo as TipoCampo
																				FROM ReservaGeneralAdicional RGA, ServicioPropiedad SP, ServicioAdicional SA
																				WHERE  RGA.IDServicioPropiedad = SP.IDServicioPropiedad and SA.IDServicioAdicional = RGA.IDServicioAdicional and
																							 IDReservaGeneral = '" . $row_reserva["IDReservaGeneral"] . "'
																				GROUP BY IDServicioPropiedad
																				ORDER BY SP.Nombre";
                            $r_carac = $dbo->query($sql_carac);
                            while ($row_carac = $dbo->FetchArray($r_carac)) {

                                $adicionales["IDCaracteristica"] = $row_carac["IDServicioPropiedad"];
                                $adicionales["EtiquetaCampo"] = $row_carac["Caracteristica"];
                                $adicionales["TipoCampo"] = $row_carac["TipoCampo"];
                                $adicionales["Valores"] = $row_carac["Valores"];
                                $adicionales["ValoresID"] = $row_carac["Valor"];
                                $adicionales["Total"] = $row_carac["Total"];
                                array_push($response_adicionales, $adicionales);
                            }

                            $reserva["Adicionales"] = $response_adicionales;
                            //Fin Adicionales

                            array_push($response, $reserva);
                            unset($row_reserva);
                        } // fin verificar si fue un areserva automatica
                    }

                endwhile;

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {

                if ($IDClub == 51) { //Para condado muestro false
                    $respuesta["message"] = "No tienes reservas programadas.";
                    $respuesta["success"] = false;
                    $respuesta["response"] = $response;
                } else {

                    $reserva["IDClub"] = "";
                    $reserva["IDSocio"] = "";
                    $reserva["IDReserva"] = "";
                    $reserva["IDServicio"] = "";
                    $id_servicio_maestro = "";
                    $reserva["NombreServicio"] = "";
                    $reserva["IDElemento"] = "";
                    $reserva["NombreElemento"] = "";
                    $reserva["Fecha"] = "";
                    $reserva["Tee"] = "";
                    array_push($response, $reserva);
                    $respuesta["message"] = "No tienes reservas programadas.";
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;

                }
            } //end else

            return $respuesta;

        }

        public function get_reservas_empleado($IDClub, $IDUsuario, $Limite = 0, $IDReserva = "")
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDReserva)) {
                $condicion_reserva = " and IDReservaGeneral = '" . $IDReserva . "' ";
            }

            if ($Limite != 0) {
                $condicion_limite = " Limit " . $Limite;
            }

            $sql = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva = 1 and Fecha >= CURDATE() and IDUsuarioReserva = '" . $IDUsuario . "' ORDER BY Fecha Desc  " . $condicion_limite;
            $qry = $dbo->query($sql);

            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";

                while ($row_reserva = $dbo->fetchArray($qry)):

                    // Verifico si es una reserva asociada para no mostrarla en el resultado
                    $sql_auto = "SELECT * FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAsociada = '" . $row_reserva["IDReservaGeneral"] . "' and IDEstadoReserva = 1";
                    $qry_auto = $dbo->query($sql_auto);
                    if ($dbo->rows($qry_auto) <= 0) {

                        $reserva["IDClub"] = $IDClub;
                        $reserva["IDSocio"] = $IDSocio;
                        $reserva["IDReserva"] = $row_reserva["IDReservaGeneral"];
                        $reserva["IDServicio"] = $row_reserva["IDServicio"];
                        $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva["IDServicio"] . "'");
                        $reserva["NombreServicio"] = $dbo->getFields("ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                        $reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
                        $reserva["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva["IDServicioElemento"] . "'");
                        $reserva["Fecha"] = $row_reserva["Fecha"];
                        $reserva["Tee"] = $row_reserva["Tee"];

                        if (!empty($row_reserva["IDAuxiliar"])):
                            $reserva["IDAuxiliar"] = $row_reserva["IDAuxiliar"];
                            $reserva["Auxiliar"] = $dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'");
                            $id_tipo_auxiliar = $dbo->getFields("Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'");
                            $reserva["TipoAuxiliar"] = $dbo->getFields("AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'");
                        else:
                            unset($reserva['IDAuxiliar']);
                            unset($reserva['Auxiliar']);
                            unset($reserva['TipoAuxiliar']);
                        endif;

                        if (!empty($row_reserva["IDTipoModalidadEsqui"])):
                            $reserva["IDTipoModalidad"] = $row_reserva["IDTipoModalidadEsqui"];
                            $reserva["Modalidad"] = $dbo->getFields("TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva["IDTipoModalidadEsqui"] . "'");
                        else:
                            unset($reserva['IDTipoModalidad']);
                            unset($reserva['Modalidad']);
                        endif;

                        if (strlen($row_reserva["Hora"]) != 8):
                            $row_reserva["Hora"] .= ":00";
                        endif;

                        $reserva["Hora"] = $row_reserva["Hora"];

                        $zonahoraria = date_default_timezone_get();
                        $offset = timezone_offset_get(new DateTimeZone($zonahoraria), new DateTime());
                        $reserva["GMT"] = SIMWebservice::timezone_offset_string($offset);

                        if ($row_reserva["IDDisponibilidad"] <= 0):
                            $id_disponibilidad = $dbo->getFields("ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r["IDServicio"] . "' and Activo <>'N'");
                        else:
                            $id_disponibilidad = $row_reserva["IDDisponibilidad"];
                        endif;

                        $invitadoclub = $dbo->getFields("Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        $invitadoexterno = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");

                        if (!empty($invitadoclub)):
                            $reserva["NumeroInvitadoClub"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        else:
                            $reserva["NumeroInvitadoClub"] = "";
                        endif;
                        if (!empty($invitadoexterno)):
                            $reserva["NumeroInvitadoExterno"] = $dbo->getFields("Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        else:
                            $reserva["NumeroInvitadoExterno"] = "";
                        endif;

                        if ($row_reserva["IDInvitadoBeneficiario"] > 0):
                            $reserva["Beneficiario"] = $dbo->getFields("Invitado", "Nombre", "IDInvitado = '" . $row_reserva["IDInvitadoBeneficiario"] . "'") . " " . $dbo->getFields("Invitado", "Apellido", "IDInvitado = '" . $row_reserva["IDInvitadoBeneficiario"] . "'");
                        endif;
                        if ($row_reserva["IDSocioBeneficiario"] > 0):
                            $reserva["Beneficiario"] = strtoupper($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'"));
                        endif;

                        //Invitados Reserva
                        $response_invitados_reserva = array();
                        $sql_invitados_reserva = $dbo->query("Select * From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_reserva["IDReservaGeneral"] . "'");
                        $total_invitado = $dbo->rows($sql_invitados_reserva);
                        while ($r_invitados_reserva = $dbo->fetchArray($sql_invitados_reserva)):
                            $id_reserva_general_invitado = $r_invitados_reserva["IDReservaGeneralInvitado"];
                            $invitado_reserva[IDReservaGeneralInvitado] = $r_invitados_reserva["IDReservaGeneralInvitado"];
                            $invitado_reserva[IDSocio] = $r_invitados_reserva["IDSocio"];
                            $invitado_reserva[NombreSocio] = strtoupper($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $r_invitados_reserva["IDSocio"] . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $r_invitados_reserva["IDSocio"] . "'"));
                            $invitado_reserva[NombreExterno] = strtoupper($r_invitados_reserva["Nombre"]);
                            if ($r_invitados_reserva["IDSocio"] == 0):
                                $tipo_invitado = "Externo";
                            else:
                                $tipo_invitado = "Socio";
                            endif;

                            $invitado_reserva[TipoInvitado] = $tipo_invitado;

                            array_push($response_invitados_reserva, $invitado_reserva);
                        endwhile;

                        /*
                        //Verifico si el servicio es golf y en invitados falta 1 agrego el socio por que pertenece a la reserva
                        if( ($id_servicio_maestro==15 || $id_servicio_maestro==27 || $id_servicio_maestro==28 || $id_servicio_maestro==30) ): //Golf
                        //Consulto cuantos invitados son minimo para saber si falta 1 y agregar el socio como invitado
                        if ($id_disponibilidad>0):
                        $minimo_invitado_reserva = (int)$dbo->getFields( "Disponibilidad" , "MinimoInvitados" , "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        endif;

                        if($total_invitado<$minimo_invitado_reserva):
                        $invitado_reserva[IDReservaGeneralInvitado]=$id_reserva_general_invitado;
                        $invitado_reserva[IDSocio]=$IDSocio;
                        $invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$IDSocio."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$IDSocio."'"));
                        $tipo_invitado = "Socio";
                        $invitado_reserva[TipoInvitado]=$tipo_invitado;
                        array_push($response_invitados_reserva, $invitado_reserva);
                        endif;
                        endif;
                         */

                        $reserva["Invitados"] = $response_invitados_reserva;

                        //Reservas asociadas
                        $response_reserva_asociada = array();
                        $array_asociada = SIMWebService::get_reserva_asociada($IDClub, $IDSocio, $row_reserva["IDReservaGeneral"]);
                        foreach ($array_asociada["response"]["0"]["ReservaAsociada"] as $datos_reserva):
                            array_push($response_reserva_asociada, $datos_reserva);
                        endforeach;
                        $reserva["ReservaAsociada"] = $response_reserva_asociada;

                        array_push($response, $reserva);
                    } // fin verificar si fue un areserva automatica
                endwhile;

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No tienes reservas programadas.";
                $respuesta["success"] = true;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function verificar_disponibilidad_auxiliar($IDClub, $IDServicio, $Fecha, $Hora, $IDAuxiliar)
    {
            $dbo = &SIMDB::get();
            // Consulto los auxiliares reservados en esta fecha y hora
            $sql_reserva_auxiliar = $dbo->query("Select * From AuxiliarReserva Where IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDAuxiliar = '" . $IDAuxiliar . "'");
            if ($dbo->rows($sql_reserva_auxiliar) > 0):
                return "1"; // Si esta reservado
            else:
                return "0"; // NO esta reservado
            endif;

        }

        public function get_auxiliares($IDClub, $IDServicio, $Fecha, $Hora, $VerSoloDisponibles = "S")
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDServicio) && !empty($Fecha) && !empty($Hora)) {
                $Hora = SIMWebService::validar_formato_hora($Hora);

                $dia_fecha = date('w', strtotime($Fecha));
                $sql_dispo_aux_gral = "SELECT AUXD.*
																	 From AuxiliarDisponibilidadDetalle AUXD, AuxiliarDisponibilidad AD
																	 Where AUXD.IDAuxiliarDisponibilidad=AD.IDAuxiliarDisponibilidad and  AUXD.IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and '" . $Hora . "'>=HoraDesde and '" . $Hora . "'<=HoraHasta and AD.Activo='S'";
                $qry_dispo_aux_gral = $dbo->query($sql_dispo_aux_gral);
                $response_auxiliar = array();
                if ($dbo->rows($qry_dispo_aux_gral) > 0) {
                    while ($row_dispo_aux_gral = $dbo->fetchArray($qry_dispo_aux_gral)) {
                        $array_auxiliares_disponible = explode("|", $row_dispo_aux_gral["IDAuxiliar"]);
                        if (count($array_auxiliares_disponible) > 0):
                            foreach ($array_auxiliares_disponible as $IDAuxiliar):
                                if ($IDAuxiliar != "") {
                                    //Verifico si existe el auxiliar
                                    $id_auxiliar = $dbo->getFields("Auxiliar", "IDAuxiliar", "IDAuxiliar = '" . $IDAuxiliar . "'");
                                    if (!empty($id_auxiliar)):
                                        $flag_disponible = SIMWebService::verificar_disponibilidad_auxiliar($IDClub, $IDServicio, $Fecha, $Hora, $IDAuxiliar);
                                        if ($flag_disponible == "0" && !empty($IDAuxiliar)):
                                            //verifico que el auxiliar no este asignado en alguna reserva a esta hora
                                            $id_reserva = "";

                                            //aumento 30 min mas y 30 min menos para las reservas en que la hora no es constante
                                            if ($IDClub == 12) {
                                                $fecha_hora_reserva = $Fecha . " " . $Hora;
                                                $masminutos = strtotime('+30 minute', strtotime($fecha_hora_reserva));
                                                $menosminutos = strtotime('-30 minute', strtotime($fecha_hora_reserva));
                                                $nuevahoramas = date('H:i:s', $masminutos);
                                                $nuevahoramenos = date('H:i:s', $menosminutos);
                                                $condicion_hora = "Hora >= '" . $nuevahoramenos . "' and Hora <= '" . $nuevahoramas . "'";
                                            } else {
                                                $condicion_hora = "Hora = '" . $Hora . "'";
                                            }

                                            $id_reserva = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '%" . $IDAuxiliar . ",%' and Fecha = '" . $Fecha . "' and ( " . $condicion_hora . " )");
                                            if (!in_array($IDAuxiliar, $array_id_aux)):
                                                //Valido si solo se quiere consultar solo los diponibles o mostrar todos para la lista de espera
                                                if (($VerSoloDisponibles == "S" && empty($id_reserva)) || $VerSoloDisponibles == "N") {
                                                    $auxiliar["IDAuxiliar"] = $IDAuxiliar;
                                                    $auxiliar["Nombre"] = $dbo->getFields("Auxiliar", "Nombre", "IDAuxiliar = '" . $IDAuxiliar . "'");
                                                    $Foto = $dbo->getFields("Auxiliar", "Foto", "IDAuxiliar = '" . $IDAuxiliar . "'");
                                                    $auxiliar["Foto"] = (empty($Foto)) ? "" : ELEMENTOS_ROOT . $Foto;
                                                    $auxiliar["Disponible"] = empty($id_reserva) ? "S" : "N";
                                                    $auxiliar["TextoDisponible"] = "";

                                                    if (!empty($id_reserva)) {
                                                        $auxiliar["TextoDisponible"] = "No disponible ya reservado";
                                                    }

                                                    $orden = $dbo->getFields("Auxiliar", "Orden", "IDAuxiliar = '" . $IDAuxiliar . "'");
                                                    //Si el orden esta repetido le pongo uno aleatorio por que si no lo hago y esta repetido no aparece
                                                    if (in_array($orden, $array_orden) || $orden == "") {
                                                        $orden = rand(100, 10000);
                                                    }
                                                    $array_orden[] = $orden;
                                                    $auxiliar["Orden"] = $orden;

                                                    //$tipo_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $IDAuxiliar . "'" );
                                                    //$auxiliar[ "Tipo" ] = $dbo->getFields( "AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $tipo_auxiliar . "'" );
                                                    $array_id_aux[] = $IDAuxiliar;
                                                    array_push($response_auxiliar, $auxiliar);
                                                }
                                            endif;
                                        endif;
                                    endif;
                                }
                            endforeach;
                        endif;
                    }

                    if (count($response_auxiliar) > 0):

                        foreach ($response_auxiliar as $key_aux => $value_aux) {
                            if ((int) $value_aux["Orden"] == 0) {
                                $orden_aux = rand(1, 1000);
                            } else {
                                $orden_aux = $value_aux["Orden"];
                            }

                            $array_aux_orden[$orden_aux] = $value_aux;
                        }
                        ksort($array_aux_orden);
                        unset($response_auxiliar);
                        foreach ($array_aux_orden as $key_aux => $value_aux) {
                            $response_auxiliar[] = $value_aux;
                        }

                        $auxiliar_disponible["IDClub"] = $IDClub;
                        $auxiliar_disponible["Auxiliares"] = $response_auxiliar;
                        array_push($response, $auxiliar_disponible);
                        $respuesta["message"] = count($response_auxiliar) . " Encontrados";
                        $respuesta["success"] = true;
                        $respuesta["response"] = $response;
                    else:
                        $respuesta["message"] = "No se encontraron profesores/monitores disponibles";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    endif;

                } else {
                    $respuesta["message"] = "No se encontraron profesores/monitores disponibles";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

            } else {
                $respuesta["message"] = "5. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_modalidades($IDClub, $IDTipoModalidadEsqui, $IDElemento)
    {
            $dbo = &SIMDB::get();

            $response = array();

            if (!empty($IDTipoModalidadEsqui)):
                $condicion = " and IDTipoModalidadEsqui = '" . $IDTipoModalidadEsqui . "' ";
            endif;

            if (!empty($IDElemento)):
                // consulto las modalidades del elemento
                $sql_servicio_modalidad = "SELECT * FROM  ServicioElementoModalidad Where IDServicioElemento = '" . $IDElemento . "'";
                $qry_servicio_modalidad = $dbo->query($sql_servicio_modalidad);
                while ($r_servicio_modalidad = $dbo->fetchArray($qry_servicio_modalidad)):
                    $array_servicio_modalidad[] = $r_servicio_modalidad["IDTipoModalidadEsqui"];
                endwhile;
                if (count($array_servicio_modalidad) > 0):
                    $id_modalidades = implode(",", $array_servicio_modalidad);
                else:
                    $id_modalidades = 0;
                endif;
                $condicion = " and IDTipoModalidadEsqui in (" . $id_modalidades . ")";

            endif;

            if (!empty($IDClub)) {
                $response = array();
                $sql = "SELECT TME.* FROM TipoModalidadEsqui TME " . $tabla_join . " WHERE TME.Publicar = 'S' and TME.IDClub = '" . $IDClub . "' " . $condicion . " ORDER BY TME.Nombre";
                $qry = $dbo->query($sql);
                if ($dbo->rows($qry) > 0) {
                    $message = $dbo->rows($qry) . " Encontrados";
                    while ($r = $dbo->fetchArray($qry)) {
                        $seccion["IDClub"] = $r["IDClub"];
                        $seccion["IDTipoModalidad"] = $r["IDTipoModalidadEsqui"];
                        $seccion["Modalidad"] = $r["Nombre"];
                        $seccion["Descripcion"] = $r["Descripcion"];
                        array_push($response, $seccion);

                    } //ednw hile
                    $respuesta["message"] = $message;
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } //End if
            else {
                    $respuesta["message"] = "No se encontraron registros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } //end else

            } else {
                $respuesta["message"] = "6. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function verificar_socio_grupo_fecha($IDClub, $IDSocioInvitado, $Fecha, $IDServicio)
    {

            $dbo = &SIMDB::get();

            $respuesta_valida_invitado = SIMWebService::verificar_socio_grupo($IDClub, $IDSocioInvitado, $Fecha, $IDServicio);
            if ($respuesta_valida_invitado == 1):
                $nombre_socio_invitado = $dbo->getFields("Socio", "Nombre", "IDSocio = '" . $IDSocioInvitado . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $IDSocioInvitado . "'");
                $respuesta["message"] = "El invitado: " . $nombre_socio_invitado . ", solo puede estar en un grupo por dia.";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            else:
                $respuesta["message"] = "valido";
                $respuesta["success"] = true;
                $respuesta["response"] = "";
            endif;

            return $respuesta;
        }

        public function verificar_socio_grupo($IDClub, $IDSocio, $Fecha, $IDServicio)
    {

            $dbo = &SIMDB::get();

            $flag_valido = 0;
            $validar_otra = "S";

            $id_disponibilidad = SIMWebService::obtener_disponibilidad_utilizada($IDServicio, $Fecha, $IDElemento, $Hora);
            $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array");
            $MaximoReservaSocioServicio = $datos_disponibilidad["MaximoReservaDia"];
            $PermiteReservaDespuesdeprimerturno = $datos_disponibilidad["PermiteReservaCumplirTurno"];
            $TiempoDespues = $datos_disponibilidad["TiempoDespues"];
            $MedicionTiempoDespues = $datos_disponibilidad["MedicionTiempoDespues"];
            $IntervaloTurno = $datos_disponibilidad["Intervalo"];

            //Valido si en la configuracion permite a un socio tomar otro turno dspues que cumpla el que tiene en el dia solo aplica si esta en el dia actual
            if ($PermiteReservaDespuesdeprimerturno == "S" && $Fecha == date("Y-m-d")) {
                switch ($MedicionTiempoDespues):
            case "Dias":
                $minutos_posterior_turno = (60 * 24) * $TiempoDespues;
                break;
            case "Horas":
                $minutos_posterior_turno = 60 * $TiempoDespues;
                break;
            case "Minutos":
                $minutos_posterior_turno = $TiempoDespues;
                break;
            default:
                $minutos_posterior_turno = 0;
                endswitch;

                //Le sumo el intervalo del turno para calcular la siguiente hora que puede reservar despues de finalizar el turno
                $minutos_posterior_turno += (int) $IntervaloTurno;

                //Consulto cual es la utima que reserva que tiene en el dia para calcula con esa hora
                $sql_reserva_dia_hora = "SELECT Hora From ReservaGeneral Where (IDSocio = '" . $IDSocio . "' or IDSocioBeneficiario = '" . $IDSocio . "')  and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' Order by Hora Desc Limit 1";
                $result_reserva_dia_hora = $dbo->query($sql_reserva_dia_hora);
                $row_reserva_dia_hora = $dbo->fetchArray($result_reserva_dia_hora);
                $ultimo_turno_dia = $Fecha . " " . $row_reserva_dia_hora["Hora"];
                $hora_actual_peticion = date('Y-m-d H:i:s');
                $hora_volver_reservar = strtotime('+' . $minutos_posterior_turno . ' minute', strtotime($ultimo_turno_dia));
                if (strtotime($hora_actual_peticion) >= $hora_volver_reservar):
                    $validar_otra = "N";
                else:
                    $validar_otra = "S";
                endif;

                if ($validar_otra == "N") {
                        //Consulto como invitado
                        $sql_socio_grupo = "SELECT RG.Hora
																						FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "' or RG.IDSocio='" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.IDServicio = '" . $IDServicio . "'
																						ORDER BY RG.Hora Desc Limit 1 ";
                        $result_reserva_dia_hora = $dbo->query($sql_socio_grupo);
                        $row_reserva_dia_hora = $dbo->fetchArray($result_reserva_dia_hora);
                        $ultimo_turno_dia = $Fecha . " " . $row_reserva_dia_hora["Hora"];
                        $hora_actual_peticion = date('Y-m-d H:i:s');
                        $hora_volver_reservar = strtotime('+' . $minutos_posterior_turno . ' minute', strtotime($ultimo_turno_dia));
                        if (strtotime($hora_actual_peticion) >= $hora_volver_reservar):
                            $validar_otra = "N";
                        else:
                            $validar_otra = "S";
                        endif;
                        //Fin Consulto como invitado
                }

            }
            //Fin Valida tiempo despues

            $sql_socio_grupo = "SELECT RGI.*
																FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "' or RG.IDSocio='" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.IDServicio = '" . $IDServicio . "'
																ORDER BY IDReservaGeneralInvitado Desc ";
            $qry_socio_grupo = $dbo->query($sql_socio_grupo);

            if (($MaximoReservaSocioServicio <= 1 || $dbo->rows($qry_socio_grupo) >= $MaximoReservaSocioServicio) && $validar_otra == "S") {
                //Consulto si el socio esta en otro grupo de invitados el mismo dia de la reserva o si es dueÃ±o de una reserva de tenis el mismo dia
                //$sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.IDServicio = '" . $IDServicio . "' ORDER BY IDReservaGeneralInvitado Desc ";
                if ($dbo->rows($qry_socio_grupo) > 0):
                    $flag_valido = 1;
                endif;

                //Consulto que tampoco sea dueÃ±o de una reserva
                $IDSocioOtraReserva = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", " (IDSocio = '" . $IDSocio . "' or IDSocioBeneficiario = '" . $IDSocio . "') and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' ");
                if ((int) $IDSocioOtraReserva > 0):
                    $flag_valido = 1;
                endif;

            }
            return $flag_valido;
        }

        //Funcion para traer las reservas en una fecha determinada de un elemento y un servicio determinado
        //creado por John Escobar
        //12 de Noviembre e 2015
        public function get_reservas_servicio($IDClub, $IDServicio, $Fecha = "", $IDServicioElemento = "", $IDSocio = "", $Orden = "")
    {

            $dbo = &SIMDB::get();

            if (!empty($Orden)) {
                $order = $Orden;
            } else {
                $order = " ReservaGeneral.Fecha Desc, ReservaGeneral.Hora ASC ";
            }

            $response = array();

            $where = "";
            if (!empty($Fecha)) {
                $where .= " AND ReservaGeneral.Fecha = '" . $Fecha . "' ";
            }

            if (!empty($IDServicioElemento)) {
                $where .= " AND ReservaGeneral.IDServicioElemento = '" . $IDServicioElemento . "' ";
            }

            if (!empty($IDSocio)) {
                $where .= " AND ( Accion = '" . $IDSocio . "' OR Nombre LIKE '%" . $IDSocio . "%' OR Apellido LIKE '%" . $IDSocio . "%' OR ReservaGeneral.NombreBeneficiario LIKE '%" . $IDSocio . "%' )   ";

                if (empty($Fecha)) {
                    $where .= " AND Fecha >= CURDATE()  ";
                }

                $order = " ReservaGeneral.Fecha ASC, ReservaGeneral.Hora ASC ";
            }

            $sql = "SELECT ReservaGeneral.*, Socio.Nombre, Socio.Apellido, Socio.Accion, Socio.Predio
									FROM ReservaGeneral, Socio
									WHERE ReservaGeneral.IDClub = '" . $IDClub . "' AND ReservaGeneral.IDEstadoReserva = 1
									AND ReservaGeneral.IDServicio = '" . $IDServicio . "' AND ReservaGeneral.IDSocio = Socio.IDSocio
									AND Socio.IDClub = '" . $IDClub . "' " . $where . "  ORDER BY " . $order;

            /*
            $sql = "SELECT ReservaGeneral.*
            FROM ReservaGeneral
            WHERE ReservaGeneral.IDClub = '" . $IDClub . "' AND ReservaGeneral.IDEstadoReserva = 1
            AND ReservaGeneral.IDServicio = '" . $IDServicio . "'    " . $where . "
            ORDER BY " . $order;
             */

            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($row_reserva = $dbo->fetchArray($qry)):
                    $reserva["IDClub"] = $IDClub;
                    $reserva["IDSocio"] = $row_reserva["IDSocio"];
                    $reserva["IDReserva"] = $row_reserva["IDReservaGeneral"];
                    $reserva["Socio"] = array("Nombre" => $row_reserva["Nombre"], "Apellido" => $row_reserva["Apellido"], "Accion" => $row_reserva["Accion"], "Predio" => $row_reserva["Predio"]);
                    $reserva["IDServicio"] = $row_reserva["IDServicio"];
                    $reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
                    $reserva["NombreElemento"] = $dbo->getFields("ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva["IDServicioElemento"] . "'");
                    $reserva["Fecha"] = $row_reserva["Fecha"];
                    $reserva["Tee"] = $row_reserva["Tee"];
                    $reserva["Cumplida"] = $row_reserva["Cumplida"];

                    if (strlen($row_reserva["Hora"]) != 8):
                        $row_reserva["Hora"] .= ":00";
                    endif;

                    $reserva["Hora"] = $row_reserva["Hora"];
                    array_push($response, $reserva);
                endwhile;

                $respuesta["message"] = $message;
                $respuesta["success"] = true;
                $respuesta["response"] = $response;
            } //End if
        else {
                $respuesta["message"] = "No se encontraron registros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        } //end function

        public function set_preferencias($IDClub, $IDSocio, $SeccionesContenido, $SeccionesEvento, $SeccionesGaleria, $SeccionesClasificado, $SeccionesContenido2, $SeccionesEvento2, $SeccionesContenido3, $IDUsuario)
    {

            $dbo = &SIMDB::get();
            if (!empty($IDClub) && (!empty($IDSocio) || !empty($IDUsuario))) {

                if (!empty($IDUsuario)) {
                    return SIMWebService::set_preferencias_empleado($IDClub, $IDUsuario, $SeccionesContenido, $SeccionesEvento, $SeccionesGaleria);
                    exit;
                }

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {
                    //borro las secciones asociadas al socio
                    $sql_borra_seccion = $dbo->query("Delete From SocioSeccion Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion = $dbo->query("Delete From SocioSeccion2 Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion = $dbo->query("Delete From SocioSeccion3 Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion_even = $dbo->query("Delete From SocioSeccionEvento Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion_even = $dbo->query("Delete From SocioSeccionEvento2 Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion_gal = $dbo->query("Delete From SocioSeccionGaleria Where IDSocio  = '" . $IDSocio . "'");

                    //borro las secciones asociadas al socio
                    $sql_borra_seccion_gal = $dbo->query("Delete From SocioSeccionClasificados Where IDSocio  = '" . $IDSocio . "'");

                    if (!empty($SeccionesContenido)):
                        $array_secciones_not = explode(",", $SeccionesContenido);
                        if (count($array_secciones_not) > 0):
                            foreach ($array_secciones_not as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("Seccion", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into SocioSeccion (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesContenido2)):
                        $array_secciones_not2 = explode(",", $SeccionesContenido2);
                        if (count($array_secciones_not2) > 0):
                            foreach ($array_secciones_not2 as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("Seccion2", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into SocioSeccion2 (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesContenido3)):
                        $array_secciones_not3 = explode(",", $SeccionesContenido3);
                        if (count($array_secciones_not3) > 0):
                            foreach ($array_secciones_not3 as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("Seccion3", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into SocioSeccion3 (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesEvento)):
                        $array_secciones_even = explode(",", $SeccionesEvento);
                        if (count($array_secciones_even) > 0):
                            foreach ($array_secciones_even as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionEvento", "IDSeccionEvento", "IDClub = '" . $IDClub . "' and IDSeccionEvento = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into SocioSeccionEvento (IDSocio, IDSeccionEvento) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesEvento2)):
                        $array_secciones_even = explode(",", $SeccionesEvento2);
                        if (count($array_secciones_even) > 0):
                            foreach ($array_secciones_even as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionEvento2", "IDSeccionEvento2", "IDClub = '" . $IDClub . "' and IDSeccionEvento2 = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into SocioSeccionEvento2 (IDSocio, IDSeccionEvento2) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesGaleria)):
                        $array_secciones_gal = explode(",", $SeccionesGaleria);
                        if (count($array_secciones_gal) > 0):
                            foreach ($array_secciones_gal as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionGaleria", "IDSeccionGaleria", "IDClub = '" . $IDClub . "' and IDSeccionGaleria = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_gal = $dbo->query("Insert Into SocioSeccionGaleria (IDSocio, IDSeccionGaleria) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesClasificado)):
                        $array_secciones_cla = explode(",", $SeccionesClasificado);
                        if (count($array_secciones_cla) > 0):
                            foreach ($array_secciones_cla as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionClasificados", "IDSeccionClasificados", "IDClub = '" . $IDClub . "' and IDSeccionClasificados = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_cla = $dbo->query("Insert Into SocioSeccionClasificados (IDSocio, IDSeccionClasificados) Values ('" . $IDSocio . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "7. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_preferencias_empleado($IDClub, $IDUsuario, $SeccionesContenido, $SeccionesEvento, $SeccionesGaleria)
    {
            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDUsuario)) {

                //verifico que el Usuario exista y pertenezca al club
                $id_Usuario = $dbo->getFields("Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_Usuario)) {
                    //borro las secciones asociadas al Usuario
                    $sql_borra_seccion = $dbo->query("Delete From UsuarioSeccion Where IDUsuario  = '" . $IDUsuario . "'");

                    //borro las secciones asociadas al Usuario
                    $sql_borra_seccion_even = $dbo->query("Delete From UsuarioSeccionEvento Where IDUsuario  = '" . $IDUsuario . "'");

                    //borro las secciones asociadas al Usuario
                    $sql_borra_seccion_gal = $dbo->query("Delete From UsuarioSeccionGaleria Where IDUsuario  = '" . $IDUsuario . "'");

                    if (!empty($SeccionesContenido)):
                        $array_secciones_not = explode(",", $SeccionesContenido);
                        if (count($array_secciones_not) > 0):
                            foreach ($array_secciones_not as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("Seccion", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into UsuarioSeccion (IDUsuario, IDSeccion) Values ('" . $IDUsuario . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesEvento)):
                        $array_secciones_even = explode(",", $SeccionesEvento);
                        if (count($array_secciones_even) > 0):
                            foreach ($array_secciones_even as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionEvento", "IDSeccionEvento", "IDClub = '" . $IDClub . "' and IDSeccionEvento = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_not = $dbo->query("Insert Into UsuarioSeccionEvento (IDUsuario, IDSeccionEvento) Values ('" . $IDUsuario . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    if (!empty($SeccionesGaleria)):
                        $array_secciones_gal = explode(",", $SeccionesGaleria);
                        if (count($array_secciones_gal) > 0):
                            foreach ($array_secciones_gal as $id_seccion):
                                // verifico que la seccion sea del club
                                $id_seccion = $dbo->getFields("SeccionGaleria", "IDSeccionGaleria", "IDClub = '" . $IDClub . "' and IDSeccionGaleria = '" . $id_seccion . "'");
                                if (!empty($id_seccion)):
                                    $sql_seccion_gal = $dbo->query("Insert Into UsuarioSeccionGaleria (IDUsuario, IDSeccionGaleria) Values ('" . $IDUsuario . "', '" . $id_seccion . "')");
                                endif;
                            endforeach;
                        endif;
                    endif;

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el Usuario no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "7. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_socio_favorito($IDClub, $IDSocio, $SocioFavorito, $EstadoFavorito = "")
    {

            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDSocio)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {
                    //borro los favoritos del socio
                    //$sql_borra_favorito = $dbo->query("Delete From SocioFavorito Where IDSocio  = '".$IDSocio."'");

                    if (!empty($EstadoFavorito)):
                        $array_socio_favorito_estado = explode(",", $EstadoFavorito);
                    endif;

                    if (!empty($SocioFavorito)):
                        $array_socio_favorito = explode(",", $SocioFavorito);
                    endif;

                    $contador_socio = 0;
                    if (count($array_socio_favorito) > 0):
                        foreach ($array_socio_favorito as $id_socio):
                            if ($array_socio_favorito_estado[$contador_socio] == "S" && (int) $id_socio > 0):
                                $inserta_socio_favorito = $dbo->query("Insert Into SocioFavorito (IDSocio, IDSocio2) Values ('" . $IDSocio . "', '" . $id_socio . "')");
                            elseif ($array_socio_favorito_estado[$contador_socio] == "N"):
                                $delete_socio_favorito = $dbo->query("Delete From SocioFavorito Where IDSocio = '" . $IDSocio . "' and IDSocio2 = '" . $id_socio . "'");
                            endif;
                            $contador_socio++;
                        endforeach;
                    endif;

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "8. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function elimina_reserva_general($IDClub, $IDSocio, $IDReserva, $Admin = "", $Razon = "", $EliminarParaMi="")
    {

            $dbo = &SIMDB::get();

            if (!empty($IDClub) && !empty($IDSocio) && !empty($IDReserva)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");
                $datos_reserva = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array");
                $datos_servicio = $dbo->fetchAll("Servicio", " IDServicio= '" . $datos_reserva["IDServicio"] . "' ", "array");

                //verifico si el servicio estÃ¡ configurado para preguntar algun medio de pago
                $ServicioPago="N";
                $sql_tip_pag="SELECT IDServicioTipoPago FROM ServicioTipoPago WHERE IDServicio = '".$datos_reserva["IDServicio"]."' Limit 1";
                $r_tip_pag=$dbo->query($sql_tip_pag);
                while($row_tip_pag=$dbo->fetchArray($r_tip_pag)){
                  $ServicioPago="S";
                  //Verifico si la reserva tiene alguna forma de pago si no es que le dio cancelar sin ir a la pasarela
                  if((int)$datos_reserva["IDTipoPago"]<=0 || $IDClub==88){
                    $PermiteEliminar="S";
                  }
                }

                if (!empty($id_socio)) {

                    //Verifico que este en el tiempo limite para reservar
                    $id_disponibilidad = (int) $datos_reserva["IDDisponibilidad"];

                    if ($id_disponibilidad > 0):
                        $tiempo_cancelacion = (int) $dbo->getFields("Disponibilidad", "TiempoCancelacion", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        $medicion_cancelacion = $dbo->getFields("Disponibilidad", "MedicionTiempo", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        switch ($medicion_cancelacion):
                    case "Dias":
                        $minutos_anticipacion = (60 * 24) * $tiempo_cancelacion;
                        break;
                    case "Horas":
                        $minutos_anticipacion = 60 * $tiempo_cancelacion;
                        break;
                    case "Minutos":
                        $minutos_anticipacion = $tiempo_cancelacion;
                        break;
                    default:
                        $minutos_anticipacion = 2;

                        endswitch;
                    else:
                        $tiempo_cancelacion = 2;
                        $medicion_cancelacion = "Horas";
                        $minutos_anticipacion = 120;
                    endif;

                    $fecha_reserva = $datos_reserva["Fecha"];
                    $hora_reserva = $datos_reserva["Hora"];
                    $aux_reserva = $datos_reserva["IDAuxiliar"];
                    $id_servicio = $datos_reserva["IDServicio"];

                    //Especial Country para reservas de cancha en cualquier momento si es con profesor segun configuracion
                    if (($IDClub == 44 || $IDClub == 8) && empty($aux_reserva) && $id_servicio == 3941):
                        $tiempo_cancelacion = 0;
                        $medicion_cancelacion = "minutos";
                        $minutos_anticipacion = 0;
                    endif;
                    //FIN ESPECIAL country

                    $hora_inicio_reserva = strtotime('-' . $minutos_anticipacion . ' minute', strtotime($fecha_reserva . " " . $hora_reserva));
                    $fechahora_actual = strtotime(date("Y-m-d H:i:s"));

                    //$id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $id_servicio . "'");
                    $id_servicio_maestro = $datos_servicio["IDServicioMaestro"];
                    //$envia_push_eliminacion = $dbo->getFields("Servicio", "PushEliminaReserva", "IDServicio = '" . $id_servicio . "'");
                    $envia_push_eliminacion = $datos_servicio["PushEliminaReserva"];

                    $id_servicio_cancha = $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'");

                    //$fechahora_actual =  strtotime ( "2016-03-29 07:00:00" );

                    //Verifico que la reserva exista
                    $id_reservada_existe = $datos_reserva["IDReservaGeneral"];
                    if (empty($id_reservada_existe)):
                        $respuesta["message"] = "La reserva ya fue eliminada";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    endif;

                    //Especial atc se puede borrar pero si es antes de 3 horas le sale un mensaje
                    if ($IDClub == 26):
                        $mensaje_eliminacion = "";
                        $id_servicio = $datos_reserva["IDServicio"];
                        $hora_inicio_reserva_esp = strtotime('-180 minute', strtotime($fecha_reserva . " " . $hora_reserva));
                        if ($fechahora_actual > $hora_inicio_reserva_esp && empty($Admin)):
                            switch ($id_servicio):
                        case "1490":
                            $mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelaciÃ³n ha sido fuera del tiempo lÃ­mite, en caso de que el turno de coliseo no sea utilizado se le cobrarÃ¡ el costo de coliseo.";
                            break;
                        case "2106":
                            $mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelaciÃ³n ha sido fuera del tiempo lÃ­mite, en caso de que Ã©l profesor no sea utilizado en ese horario se le cobrarÃ¡ el costo de la clase.";
                            break;

                        case "1446":
                        case "1484":
                        case "2109":
                        case "2110":
                        case "3450":
                        case "4350":
                        case "5035":
                        case "5039":
                        case "7973":
                        case "3941":
                            $mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelaciÃ³n ha sido fuera del tiempo lÃ­mite, en caso de que el turno no sea utilizado en ese horario se le cobrarÃ¡ el costo del turno.";
                            break;
                            endswitch;
                        endif;
                    endif;
                    //FIN Especial atc se puede borrar pero si es antes de 3 horas le sale un mensaje

                    //Especial BTCC si elimina antes de 12 horas prof o minitor sale mensaje
                    if ($IDClub == 72 && !empty($aux_reserva) && $id_servicio == 8649):
                        $hora_inicio_reserva_esp = strtotime('-720 minute', strtotime($fecha_reserva . " " . $hora_reserva));
                        if ($fechahora_actual > $hora_inicio_reserva_esp && empty($Admin)):
                            $mensaje_eliminacion = "Debido a que la cancelaciÃ³n ha sido fuera del tiempo lÃ­mite (12 horas), debe dirigirse al caddie master para cancelar el valor del servicio de caddie y monitor.";
                        endif;
                    endif;

                    //Especial BTCC si elimina antes de 12 horas prof o minitor sale mensaje
                    if ($IDClub == 72 && $id_servicio == 8539):
                        $hora_inicio_reserva_esp = strtotime('-720 minute', strtotime($fecha_reserva . " " . $hora_reserva));
                        if ($fechahora_actual > $hora_inicio_reserva_esp && empty($Admin)):
                            $mensaje_eliminacion = "Debido a que la cancelaciÃ³n ha sido fuera del tiempo lÃ­mite (12 horas), debe dirigirse al caddie master para cancelar el valor del servicio de caddie y profesor.";
                        endif;
                    endif;
                    //Especial BTCC si elimina antes de 1 horas prof o minitor sale mensaje
                    if ($IDClub == 72 && $id_servicio == 8649 && empty($aux_reserva)):
                        $hora_inicio_reserva_esp = strtotime('-60 minute', strtotime($fecha_reserva . " " . $hora_reserva));
                        if ($fechahora_actual > $hora_inicio_reserva_esp && empty($Admin)):
                            $mensaje_eliminacion = "Debido a que la cancelaciÃ³n ha sido fuera del tiempo lÃ­mite (1 hora), debe dirigirse al caddie master para cancelar el valor del servicio de caddie.";
                        endif;
                    endif;
                    //FIN Especial BTCC

                    //Especial Country para reservas de 6am y 7am  solo hasta las 8pm del dia anterior cuando tiene profesor
                    if (($IDClub == 44 || $IDClub == 8) && empty($Admin)):
                        $dia_manana = date('Y-m-d', time() + 84600);
                        $fecha_hoy_v = date("Y-m-d");
                        if (((date("H:i:s") >= "20:00:00" && $dia_manana == $fecha_reserva) || $fecha_hoy_v == $fecha_reserva) && ($id_servicio == "3861" || $id_servicio == "36") && ($hora_reserva == '06:00:00' || $hora_reserva == '07:00:00' || $hora_reserva == '08:00:00')):
                            $respuesta["message"] = "Lo sentimos solo se permite eliminar la reserva con profesor/monitor hasta antes de las 8pm para turnos de 6am y 7am ";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    endif;

                    if (($IDClub == 8 && $id_servicio == 32) || ($IDClub == 44 && $id_servicio == 11242 && empty($Admin))):
                        $dia_manana = date('Y-m-d', time() + 84600);
                        $fecha_hoy_v = date("Y-m-d");
                        if (((date("H:i:s") >= "23:59:59" && $dia_manana == $fecha_reserva) || $fecha_hoy_v == $fecha_reserva)):
                            $respuesta["message"] = "Lo sentimos solo se permite eliminar la reserva antes de las 12 Pm del dia anterior ";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    endif;

                    //Especial Arrayanes en golf solo pemite eleiminar hasta las 7pm del dia anterior
                    if (($IDClub == 11) && $id_servicio == 122 && empty($Admin)):
                        $dia_manana = date('Y-m-d', time() + 84600);
                        $fecha_hoy_v = date("Y-m-d");
                        if (((date("H:i:s") >= "19:00:00" && $dia_manana == $fecha_reserva) || $fecha_hoy_v == $fecha_reserva)):
                            $respuesta["message"] = "Lo sentimos solo se permite eliminar la reserva con antes de las 7pm del dia anterior ";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    endif;

                    // especial country solo se puede hasta las 7pm del dia anterior en las reservas del fin de semana.
                    $dia_reserva = date("w", strtotime($fecha_reserva));
                    if (($IDClub == 44) && empty($Admin) && ($dia_reserva == 6 || $dia_reserva == 0) && ($id_servicio == 3889 || $id_servicio == 3888)):
                        $dia_manana = date('Y-m-d', time() + 84600);
                        $fecha_hoy_v = date("Y-m-d");
                        if (((date("H:i:s") >= "19:00:00" && $dia_manana == $fecha_reserva) || $fecha_hoy_v == $fecha_reserva)):
                            $mensaje_eliminacion = "Su Reserva estÃ¡ siendo eliminada fuera del horario permitido de cancelaciÃ³n, en caso de no cubrirse este turno se aplicarÃ¡ el Reglamento Vigente.";
                            $EliminadaFueraTiempo = S;
                            $Admin = 1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
                        endif;
                    endif;


                    //Especial La sabana la reserva no se puede eliminar si existen otras personas en el grupo de golf se asigna a otro miembro del grupo
                    if (($IDClub == 95 && $id_servicio == 15964) || ($IDClub == 8 && $id_servicio == 31) || ($IDClub == 32 && $id_servicio == 2062) || ($IDClub == 47 && $id_servicio == 4270) || ($IDClub == 44 && $id_servicio == 3889) || ($IDClub == 44 && $id_servicio == 3888) || ( $IDClub == 110 && $id_servicio == 19454 && ($EliminarParaMi == "S" || empty($EliminarParaMi) )) || ($IDClub == 112 && $id_servicio == 19939) || $EliminarParaMi == "S" ) {
                            $permite_reasignar = "S";

                            if ($IDClub == 44 || $IDClub == 95 || $IDClub == 110 || $IDClub == 125) {
                                $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $datos_reserva["IDDisponibilidad"] . "' ", "array");
                                //quito 1 al dueÃ±o de la reserva
                                $MinimoPersonasTurno = $datos_disponibilidad["MinimoInvitados"];
                                $sql_invi_tot = "SELECT count(IDReservaGeneralInvitado) as TotalInv FROM ReservaGeneralInvitado Where IDReservaGeneral  = '" . $IDReserva . "' ";
                                $r_invi_tot = $dbo->query($sql_invi_tot);
                                $row_invi_tot = $dbo->fetchArray($r_invi_tot);
                                $TotInv = (int) $row_invi_tot["TotalInv"] - 1;
                                if ($MinimoPersonasTurno > 1 && $TotInv < ((int) $MinimoPersonasTurno - 1)) {
                                    // no se puede eliminar no cumple con la cantidad mimima de personas para tener la reserva en ese caso no se reasigna se elimina
                                    $permite_reasignar = "N";
                                }
                            }

                            $sql_invi = "SELECT IDSocio FROM ReservaGeneralInvitado Where IDReservaGeneral  = '" . $IDReserva . "' and IDSocio>0 Limit 1";
                            $r_invi = $dbo->query($sql_invi);
                            if ($dbo->rows($r_invi) > 0 && $permite_reasignar == "S") {
                                $row_invi = $dbo->fetchArray($r_invi);
                                $datos_socio_nuevo = "SELECT Nombre,Apellido FROM Socio WHERE IDSocio = '" . $row_invi["IDSocio"] . "' Limit 1";
                                $r_socio_nuevo = $dbo->query($datos_socio_nuevo);
                                $row_socio_nuevo = $dbo->fetchArray($r_socio_nuevo);
                                $NombreNuevoSocio = $row_socio_nuevo["Nombre"] . " " . $row_socio_nuevo["Apellido"];
                                $AccionNuevoSocio = $row_socio_nuevo["Accion"];

                                $sql_reasigna = "UPDATE ReservaGeneral Set IDSocio = '" . $row_invi["IDSocio"] . "', IDSocioReserva = '" . $row_invi["IDSocio"] . "',CodigoRespuesta = 'La intenta eliminar socio " . $IDSocio . " y se reasigna a socio " . $row_invi["IDSocio"] . "',NombreSocio='" . $NombreNuevoSocio . "',AccionSocio='" . $AccionNuevoSocio . "' WHERE IDReservaGeneral = '" . $IDReserva . "' ";
                                $dbo->query($sql_reasigna);
                                //borro al nuevo dueÃ±o de los invitados
                                $sql_borra_reserva_inv = "DELETE FROM ReservaGeneralInvitado Where IDReservaGeneral  = '" . $IDReserva . "' and IDSocio = '" . $row_invi["IDSocio"] . "'";
                                $dbo->query($sql_borra_reserva_inv);
                                //Envio notificacion al socio nuevo dueÃ±o de la reserva
                                SIMUtil::notificar_nueva_reserva($IDReserva, $IDTipoReserva);
                                $MensajeReasignacion = "Ha sido asignado como dueÃ±o de una reserva en la que era invitado Fecha: " . $datos_reserva["Fecha"] . " " . $datos_reserva["Hora"];
                                SIMUtil::push_notifica_reserva_socio($IDClub, $row_invi["IDSocio"], $MensajeReasignacion);

                                //reasigno la reserva pero no la elimino
                                $respuesta["message"] = "La reserva fue reasignada a otro miembro del grupo correctamente";
                                $respuesta["success"] = true;
                                $respuesta["response"] = null;
                                return $respuesta;
                            }
                    }
                    //Fin La Sabana

                    //Especial campestre pereira solo cancela 2 de martesa a viernes y 2 de sabado a lunes

                    if ($IDClub == 15 && empty($Admin) && $id_servicio == 305) {
                        $fecha_hoy_semana = date("Y-m-d");
                        $year = date('Y', strtotime($fecha_hoy_semana));
                        $week = date('W', strtotime($fecha_hoy_semana));
                        $dia_reserva = date("w", strtotime($fecha_hoy_semana));

                        $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . $week));

                        if ((int) $dia_reserva >= 2 && (int) $dia_reserva <= 5) {
                            $fecha_inicio_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' +1 day')); //MARTES
                            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' +4 day')); //Viernes
                            $mensaje = "entre martes y viernes";
                        } else {
                            $fecha_inicio_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' +5 day')); //Sabado
                            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' +7 day')); //Lunes
                            $mensaje = "entre sabado y lunes";
                        }

                        $fechaInicio = $fecha_inicio_valida . " 00:00:00";
                        $fechaFin = $fecha_fin_valida . " 00:00:00";

                        $sqlValida = "SELECT COUNT(IDReservaGeneral) AS Cantidad FROM `ReservaGeneralEliminada` WHERE `IDSocio` = " . $IDSocio . " AND `FechaTrCr` > '" . $fechaInicio . "' AND FechaTrCr < '" . $fechaFin . "' ORDER BY `IDReservaGeneral` DESC";
                        $qryValida = $dbo->query($sqlValida);
                        $dato = $dbo->fetchArray($qryValida);

                        if ($dato["Cantidad"] >= 2) {
                            $respuesta["message"] = "Lo sentimos solo puedes cancelar 2 reservas " . $mensaje;
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                            return $respuesta;
                        }

                    }

                    $EliminadaFueraTiempo = "N";
                    //Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
                    if ($fechahora_actual > $hora_inicio_reserva && empty($Admin) && $IDClub == 44 && ($id_servicio == 3901 || $id_servicio == 3902 || $id_servicio == 8169 || $id_servicio == 3866 || $id_servicio == 3878 || $id_servicio == 5001 || $id_servicio == 3843)) {
                        $mensaje_eliminacion = "Su reserva esta siendo cancelada fuera de las horas permitidas de cancelaciÃ³n, recuerde que se cobrarÃ¡ el total en caso de no cubrir este turno.";
                        $EliminadaFueraTiempo = S;
                        $Admin = 1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
                    }

                    //Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
                    if ($fechahora_actual > $hora_inicio_reserva && empty($Admin) && $IDClub == 44 && ($id_servicio == 3905)) {
                        //$mensaje_eliminacion = "Recuerde que puede cancelar su reserva hasta 12 horas antes, de lo contrario serÃ¡ facturado el 50% del valor total del servicio a menos que este sea tomado por otro socio";
                        //$EliminadaFueraTiempo=S;
                        //$Admin=1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
                    }

                    //PARA LOS SERVICIOS QUE SE PUEDEN CANCELAR ANTES DE TIEMPO SEGUN CONFIGURACIÃN
                    $sqlServicio = "SELECT ValidaEliminacionFueraHora, MensajeEliminacionFueraHora FROM Servicio WHERE IDServicio = " . $id_servicio;
                    $qryServicio = $dbo->query($sqlServicio);
                    $datos = $dbo->fetchArray($qryServicio);
                    if ($fechahora_actual > $hora_inicio_reserva && empty($Admin) && $datos["ValidaEliminacionFueraHora"]) {
                        $EliminadaFueraTiempo = S;
                        $Admin = 1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar

                        if (empty($datos["MensajeEliminacionFueraHora"])) {
                            $mensaje_eliminacion = "Recuerde que puede cancelar su reserva hasta 12 horas antes, de lo contrario serÃ¡ facturado el 50% del valor total del servicio a menos que este sea tomado por otro socio";
                        } else {
                            $mensaje_eliminacion = $datos["MensajeEliminacionFueraHora"];
                        }

                    }

                    //Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
                    if ($fechahora_actual > $hora_inicio_reserva && empty($Admin) && $IDClub == 72 && ($id_servicio != 8649 && $id_servicio != 8539)) {
                        $mensaje_eliminacion = "Su reserva esta siendo cancelada fuera de las horas permitidas de cancelaciÃ³n. Recuerde que deberÃ¡ pagar el total del servicio, a menos que otro socio use el turno.";
                        $EliminadaFueraTiempo = S;
                        $Admin = 1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
                    }

                    if ($tiempo_cancelacion == 1) {
                        $medicion_cancelacion = str_replace("s", "", $medicion_cancelacion);
                    }

                    if ($fechahora_actual > $hora_inicio_reserva && empty($Admin) && empty($PermiteEliminar)):
                        $respuesta["message"] = "No se puede eliminar la reserva debe ser minimo: " . $tiempo_cancelacion . " " . $medicion_cancelacion . " antes";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;

                    else:

                        $datos_reserva_eli = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array");
                        if ( ($datos_reserva_eli["IDTipoPago"] == 1 && $datos_reserva_eli["EstadoTransaccion"] != "A" && empty($Admin)) || ($datos_reserva_eli["IDTipoPago"] == 12 && $datos_reserva_eli["EstadoTransaccion"] != "A" && empty($Admin)) && $IDClub!=88 ): //Para pagos con payu no dejo que se elimine cuando se devuelva solo hata confirmar el estado del pago
                            $respuesta["message"] = "Esperando respuesta de la transaccion";
                            //$respuesta["message"] = "Delete From ReservaGeneral Where IDReservaGeneral  = '".$row_reserva_auto["IDReservaGeneral"]."'";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;

                        //verifico en la disponibilidad si la reserva permite la eliminaciÃ³n cuando fue creada por el starter
                        $permite_eliminar_reserva_creada_starter = $dbo->getFields("Disponibilidad", "PermiteEliminarCreadaStarter", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        //verifico que la reserva haya sido creada por el socio si fue por el starter verifico en la disponibilidad si se puede eliminar por el socio
                        $reservada_creada_por = $dbo->getFields("ReservaGeneral", "UsuarioTrCr", "IDReservaGeneral = '" . $IDReserva . "'");
                        if ($reservada_creada_por == "Starter" && empty($Admin) && $permite_eliminar_reserva_creada_starter == "N"):
                            $respuesta["message"] = "No se puede eliminar la reserva fue creada por el Starter y solo el starter puede eliminarla";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        else:
                            $borra_automatica = 0;
                            //Copio Reserva
                            /*
                            $sql_copia_reserva = $dbo->query("INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, IDServicioTipoReserva, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
                            Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, IDServicioTipoReserva, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '".$Razon."', NOW(), NOW()
                            From ReservaGeneral
                            Where IDReservaGeneral  = '".$IDReserva."'");
                             */
                            $sql_copia_reserva = $dbo->query("
															INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral,IDClub,IDSocio,IDSocioReserva,IDUsuarioReserva,IDServicio,IDServicioElemento,IDEstadoReserva	,IDDisponibilidad,IDAuxiliar,IDTipoModalidadEsqui,IDServicioTipoReserva,IDReservaGrupos,IDInvitadoBeneficiario,IDSocioBeneficiario,IDUsuarioCumplida,IDTipoPago,Cumplida,CumplidaCabeza,FechaCumplida,ObservacionCumplida,CantidadInvitadoSalon,Fecha,Hora	,Tee,Observaciones,Tipo,Notificado,NumeroInscripcion,CodigoPago,EstadoTransaccion,FechaTransaccion,CodigoRespuesta,MedioPago,TipoMedioPago,Pagado,PagoPayu,UsuarioTrCr,FechaTrCr,Razon,MensajeEliminacion,EliminadaFueraTiempo,UsuarioTrEd,FechaTrEd)
															Select IDReservaGeneral,IDClub,IDSocio,IDSocioReserva,IDUsuarioReserva,IDServicio,IDServicioElemento,IDEstadoReserva	,IDDisponibilidad,IDAuxiliar,IDTipoModalidadEsqui,IDServicioTipoReserva,IDReservaGrupos,IDInvitadoBeneficiario,IDSocioBeneficiario,IDUsuarioCumplida,IDTipoPago,Cumplida,CumplidaCabeza,FechaCumplida,ObservacionCumplida,CantidadInvitadoSalon,Fecha,Hora	,Tee,Observaciones,Tipo,Notificado,NumeroInscripcion,CodigoPago,EstadoTransaccion,FechaTransaccion,CodigoRespuesta,MedioPago,TipoMedioPago,Pagado,PagoPayu,UsuarioTrCr,FechaTrCr,'" . $Razon . "','" . $mensaje_eliminacion . "','" . $EliminadaFueraTiempo . "',NOW(),NOW()
															From ReservaGeneral
															Where IDReservaGeneral  = '" . $IDReserva . "'");

                            //borro reserva
                            $sql_borra_reserva = $dbo->query("Delete From ReservaGeneral Where IDReservaGeneral  = '" . $IDReserva . "'");
                            //borro invitados a esa reserva
                            $sql_borra_reserva_invitados = $dbo->query("Delete From ReservaGeneralInvitado Where IDReservaGeneral  = '" . $IDReserva . "'");

                            //Verifico si tiene una reserva asociada para borrarla tambien
                            //$sql_asociada = "Select * From ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "' and IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and Fecha = '" . $fecha_reserva . "'";
                            $sql_asociada = "Select * From ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "' and IDClub = '" . $IDClub . "' and Fecha = '" . $fecha_reserva . "'";
                            $result_asociada = $dbo->query($sql_asociada);
                            while ($row_asociada = $dbo->fetchArray($result_asociada)):
                                $sql_copia_reserva = $dbo->query("INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
																			Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '" . $Razon . "', NOW(), NOW()
																			From ReservaGeneral
																			Where IDReservaGeneral  = '" . $row_asociada["IDReservaGeneralAsociada"] . "'");
                                //borro reserva
                                $sql_borra_reserva = $dbo->query("Delete From ReservaGeneral Where IDReservaGeneral  = '" . $row_asociada["IDReservaGeneralAsociada"] . "'");
                                //borro invitados a esa reserva
                                $sql_borra_reserva_invitados = $dbo->query("Delete From ReservaGeneralInvitado Where IDReservaGeneral  = '" . $row_asociada["IDReservaGeneralAsociada"] . "'");
                                $borra_automatica = 1;
                            endwhile;

                            //Si la reserva es una clase elimino la cancha que se reservÃ³ con la clase

                            if ($id_servicio_cancha > 0 && $borra_automatica == 0):
                                // Consulto el servicio del club asociado a este servicio maestro
                                $IDServicioCanchaClub = $dbo->getFields("Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'");

                                // Borro la cancha asociada
                                //Copio Reserva
                                $sql_reserva_auto = "Select * FRom ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicio = '" . $IDServicioCanchaClub . "' and IDEstadoReserva = 1 and Fecha = '" . $fecha_reserva . "' and Hora = '" . $hora_reserva . "' and Tipo = 'Automatica' limit 1";
                                $result_reserva_auto = $dbo->query($sql_reserva_auto);
                                $row_reserva_auto = $dbo->fetchArray($result_reserva_auto);

                                $sql_copia_reserva_auto = $dbo->query("INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
																				Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '" . $Razon . "', NOW(), NOW()
																				From ReservaGeneral
																				Where IDReservaGeneral  = '" . $row_reserva_auto["IDReservaGeneral"] . "'");
                                //borro reserva
                                $sql_borra_reserva_auto = $dbo->query("Delete From ReservaGeneral Where IDReservaGeneral  = '" . $row_reserva_auto["IDReservaGeneral"] . "'");

                            endif;

                            SIMUtil::notificar_elimina_reserva($IDReserva, $IDTipoReserva);

                            //Si el elemento reservado es una persona (profesor, peluquero, masajista, etc) y esta creado como empleado en app empleados envio notificacion push
                            SIMUtil::push_notifica_reserva_elimina($IDClub, $IDReserva, "Empleado");

                            if ($envia_push_eliminacion == "S"):
                                SIMUtil::push_notifica_reserva_elimina_socio($IDClub, $IDReserva, $Razon);
                            endif;

                            //Envio mensaje a lista de espera
                            //SIMUtil::push_notifica_libera_reserva($IDClub,$IDReserva);

                            $codigo_canje = SIMUtil::push_notifica_codigo_pago($IDReserva);
                            if (!empty($codigo_canje)):
                                $msg_respuesta = " Se genero el siguiente codigo para que lo pueda utilizar en su proxima reserva: " . $codigo_canje . " Lo puede consultar tambien en el modulo de Notificaciones";
                            endif;

                            $respuesta["message"] = "Reserva eliminada correctamente. " . $msg_respuesta . $mensaje_eliminacion;
                            //$respuesta["message"] = "Delete From ReservaGeneral Where IDReservaGeneral  = '".$row_reserva_auto["IDReservaGeneral"]."'";
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                        endif;
                    endif;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "9. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_contacto($IDClub, $IDSocio, $Telefono, $Ciudad, $Direccion, $Email, $Comentario, $Nombre)
    {
            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($Email) && !empty($Comentario)) {

                $sql_seccion_not = $dbo->query("INSERT INTO Contacto (IDClub, IDSocio, Telefono, Ciudad, Direccion, Email, Comentario, Nombre, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $Telefono . "','" . $Ciudad . "','" . $Direccion . "','" . $Email . "','" . $Comentario . "','" . $Nombre . "',WebService',NOW())");
                SIMUtil::notificar_contactenos($IDClub, $IDSocio, $Telefono, $Ciudad, $Direccion, $Email, $Comentario, $Nombre);
                $respuesta["message"] = "Guardado";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "10. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_pqr($IDClub, $IDArea, $IDSocio, $TipoPqr, $Asunto, $Comentario, $Archivo, $File = "", $IDTipoPqr = "", $NombreColaborador, $ApellidoColaborador)
    {

            //Valido el pseo del archivo
            $tamano_archivo = $File["Archivo"]["size"];
            if ($tamano_archivo >= 6000000) {
                $respuesta["message"] = "El archivo supera el limite de peso permitido de 6 megas, por favor verifique";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDArea) && !empty($IDSocio) && !empty($Comentario)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    //UPLOAD de imagenes

                    if (isset($File)) {

                        $files = SIMFile::upload($File["Archivo"], PQR_DIR, "IMAGE");
                        if (empty($files) && !empty($File["Archivo"]["name"])):
                            $respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                        $Archivo = $files[0]["innername"];

                    } //end if

                    //Consulto el siguiente consecutivo del pqr
                    $sql_max_numero = "Select MAX(Numero) as NumeroMaximo From Pqr Where IDClub = '" . $IDClub . "'";
                    $result_numero = $dbo->query($sql_max_numero);
                    $row_numero = $dbo->fetchArray($result_numero);
                    $siguiente_consecutivo = (int) $row_numero["NumeroMaximo"] + 1;

                    if ($IDClub == 99) {
                        $IDEstadoPqr = 7;
                    } else {
                        $IDEstadoPqr = 1;
                    }

                    //Valido que el pqr no exista por que en algunos casos quedÃ³ repetido
                    $sql_pqr_existe = "Select *
										   From Pqr
										   Where IDTipoPqr = '" . $IDTipoPqr . "' and IDArea = '" . $IDArea . "' and IDSocio = '" . $IDSocio . "' and Tipo = '" . $TipoPqr . "' and Asunto = '" . $Asunto . "' and Descripcion='" . $Comentario . "'";
                    $result_pqr_existe = $dbo->query($sql_pqr_existe);
                    if ($dbo->rows($result_pqr_existe) <= 0):
                        $sql_pqr = $dbo->query("
											Insert Into Pqr (IDClub, Numero, IDTipoPqr, IDArea, IDSocio, IDPqrEstado, Tipo, Asunto, Descripcion, Archivo1, Fecha,  NombreColaborador,ApellidoColaborador, UsuarioTrCr, FechaTrCr)
											Values ('" . $IDClub . "','" . $siguiente_consecutivo . "','" . $IDTipoPqr . "','" . $IDArea . "','" . $IDSocio . "', '" . $IDEstadoPqr . "','" . $TipoPqr . "','" . $Asunto . "','" . $Comentario . "',
											'" . $Archivo . "',NOW(),'" . $NombreColaborador . "','" . $ApellidoColaborador . "','WebService',NOW())");
                        $id_pqr = $dbo->lastID();
                        SIMUtil::noticar_nuevo_pqr($id_pqr);
                        SIMUtil::noticar_respuesta_aut_pqr($id_pqr);
                    endif;

                    //Espcial pqr a ws
                    if ($IDClub == 99) {
                        $datos_tipo_pqr = $dbo->fetchAll("TipoPqr", " IDTipoPqr = '" . $IDTipoPqr . "' ", "array");
                        $MensajeWS = $datos_tipo_pqr["Descripcion"];

                        $respuesta_ws = SIMWebServiceApp::crear_pqr_ws($IDClub, $id_pqr);
                        $resp = json_decode($respuesta_ws);
                        if ($resp->code != 0) {
                            $respuesta["message"] = "Hubo un problema al guardar la solicitud:" . $resp->description;
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        } else {
                            $respuesta["message"] = $MensajeWS;
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                            return $respuesta;
                        }
                    }

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "11. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_pqr_respuesta($IDClub, $IDSocio, $IDPqr, $Comentario, $IDPqrEstado, $Archivo = "", $File = "")
    {
            $dbo = &SIMDB::get();

            //Valido el pseo del archivo
            $tamano_archivo = $File["Archivo"]["size"];
            if ($tamano_archivo >= 6000000) {
                $respuesta["message"] = "El archivo supera el limite de peso permitido de 6 megas, por favor verifique";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if (!empty($IDClub) && !empty($IDPqr) && !empty($IDSocio) && !empty($Comentario)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    if (isset($File)) {

                        $files = SIMFile::upload($File["Archivo"], PQR_DIR, "IMAGE");
                        if (empty($files) && !empty($File["Archivo"]["name"])):
                            $respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                        $Archivo = $files[0]["innername"];

                    } //end if

                    $sql_pqr = $dbo->query("INSERT INTO Detalle_Pqr (IDPqr, IDSocio, Fecha, Respuesta, Archivo, UsuarioTrCr, FechaTrCr)
												Values ('" . $IDPqr . "','" . $IDSocio . "',NOW(), '" . $Comentario . "','" . $Archivo . "','WebService',NOW())");

                    if (!empty($IDPqrEstado)) {
                        $sql_estado = "UPDATE Pqr Set Estado = '" . $IDPqrEstado . "' WHERE IDPqr='" . $IDPqr . "'";
                        $dbo->query($sql_estado);
                    }

                    SIMUtil::noticar_respuesta_pqr($IDPqr, $Comentario);

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "12. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_foto_socio($IDClub, $IDSocio, $Archivo, $File = "")
    {
            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDSocio)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    //UPLOAD de imagenes

                    if (isset($File)) {

                        $files = SIMFile::upload($File["Archivo"], SOCIO_DIR, "IMAGE");
                        if (empty($files) && !empty($File["Archivo"]["name"])):
                            $respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                        $Archivo = $files[0]["innername"];

                    } //end if

                    $datos_club = $dbo->fetchAll("Club", " IDClub = '" . $IDClub . "' ", "array");
                    if ($datos_club["PermiteCambioFotoPerfil"] == "S") {
                        $FotoActualizar = "S";
                    } else {
                        $FotoActualizar = "N";
                    }

                    $sql_actualiza_foto = $dbo->query("Update Socio Set Foto = '" . $Archivo . "', FotoActualizadaSocio = '" . $FotoActualizar . "', FechaActualizacionFoto = NOW() Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");
                    $respuesta["message"] = "Tu foto ha sido guardada con exito";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "13. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_foto_empleado($IDClub, $IDUsuario, $Archivo, $File = "")
    {
            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDUsuario)) {

                //verifico que el socio exista y pertenezca al club
                $id_usuario = $dbo->getFields("Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_usuario)) {

                    if (isset($File)) {

                        $files = SIMFile::upload($File["Archivo"], USUARIO_DIR, "IMAGE");
                        if (empty($files) && !empty($File["Archivo"]["name"])):
                            $respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                        $Archivo = $files[0]["innername"];

                    } //end if

                    $sql_actualiza_foto = $dbo->query("Update Usuario Set Foto = '" . $Archivo . "', FotoActualizadaEmpleado = 'N', FechaActualizacionFoto = NOW() Where IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'");
                    $respuesta["message"] = "foto guardada";
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "13. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function get_actualizar_foto_socio($IDClub, $IDSocio)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM Socio WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' ORDER BY RAND()";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    if ($r["FotoActualizadaSocio"] == "N"):
                        $respuesta["message"] = "Lo sentimos la foto ya fue actualizada";
                        $respuesta["success"] = false;
                        $respuesta["response"] = $response;
                    else:
                        $respuesta["message"] = "ok, puede actualizar foto";
                        $respuesta["success"] = true;
                        $respuesta["response"] = $response;
                    endif;
                } //ednw hile

            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado socio";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function get_actualizar_foto_empleado($IDClub, $IDUsuario)
    {
            $dbo = &SIMDB::get();
            $response = array();
            $sql = "SELECT * FROM Usuario WHERE IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "' ORDER BY RAND()";
            $qry = $dbo->query($sql);
            if ($dbo->rows($qry) > 0) {
                $message = $dbo->rows($qry) . " Encontrados";
                while ($r = $dbo->fetchArray($qry)) {
                    if ($r["FotoActualizadaEmpleado"] == "N"):
                        $respuesta["message"] = "Lo sentimos la foto ya fue actualizada";
                        $respuesta["success"] = false;
                        $respuesta["response"] = $response;
                    else:
                        $respuesta["message"] = "ok, puede actualizar foto";
                        $respuesta["success"] = true;
                        $respuesta["response"] = $response;
                    endif;
                } //ednw hile

            } //End if
        else {
                $respuesta["message"] = "No se ha encontrado usuario";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } //end else

            return $respuesta;

        }

        public function valida_quilla($NumeroDocumento, $ValoresFormulario, $IDSocio, $Nombre)
    {
            $dbo = &SIMDB::get();
            $params = array(
                "Cedula" => $NumeroDocumento,
            );
            $client = new SoapClient(URLBQUILLA . "webserviceappcountry/Service1.asmx?WSDL");
            $response = $client->__soapCall("GetVisitanteValidador", array($params));
            $xml = $response->GetVisitanteValidadorResult;
            $xmlf = simplexml_load_string($xml);
            foreach ($xmlf as $idx => $datos) {
                $resultado = $datos->RESULTADO;
            }

            if ($resultado != "OK") {
                $respuesta["message"] = utf8_encode($resultado);
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            } else {
                $ConsecutivoArea = "";
                //Consulto el id del area
                $params = array(
                    "GetAreaVisitante" => "GetAreaVisitante",
                );
                $client = new SoapClient(URLBQUILLA . "webserviceappcountry/Service1.asmx?WSDL");
                $response = $client->__soapCall("GetAreaVisitante", array($params));
                $xml = $response->GetAreaVisitanteResult;
                $xmlf = simplexml_load_string($xml);

                $datos_formulario = json_decode($ValoresFormulario, true);
                if (count($datos_formulario) > 0):
                    foreach ($datos_formulario as $detalle_datos):
                        if ($detalle_datos["IDCampoFormularioInvitado"] == 25) {
                            $Nombrerea = $detalle_datos["Valor"];
                        }

                    endforeach;
                endif;
                foreach ($xmlf as $idx => $datos) {
                    if ($Nombrerea == $datos->NomArea) {
                        $ConsecutivoArea = $datos->Consc;
                    }
                }

                if (empty($ConsecutivoArea)) {
                    $respuesta["message"] = "No se encuentra el area, por favor verifique";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                } else {
                    $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
                    //Envio la invitacion
                    $params = array(
                        "Idunico" => $datos_socio["IdentificadorExterno"],
                        "Invitado" => $Nombre,
                        "Cedula" => $NumeroDocumento,
                        "Area" => $ConsecutivoArea,
                    );
                    $client = new SoapClient(URLBQUILLA . "webserviceappcountry/Service1.asmx?WSDL");
                    $response = $client->__soapCall("InsertVisitanteIngreso", array($params));
                    $xml = $response->InsertVisitanteIngresoResult;
                    if ($xml != "exito") {
                        $respuesta["message"] = "No fue posible enviar la invitacion, por favor intente mas tarde";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    } else {
                        $respuesta["message"] = "";
                        $respuesta["success"] = true;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }

                }
            }
            return $respuesta;
        }

        public function set_invitado($IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso, $ValoresFormulario, $IDUsuario = "")
    {
            $dbo = &SIMDB::get();

            $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
            $IDFestivo = $dbo->getFields("Festivos", "IDFestivo", "Fecha = '" . $FechaIngreso . "' and IDPais = 1");

            if ($datos_socio["IDEstadoSocio"] != "1") {
                $respuesta["message"] = "Lo sentimos, tiene un estado diferente a activo, no puede crear invitaciones";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            /*
            if(($IDClub==72) && ( date('w', strtotime($FechaIngreso))==0 || date('w', strtotime($FechaIngreso))==6 || date('w', strtotime($FechaIngreso))==1  )  ){
            $respuesta[ "message" ] = "Lo sentimos, no es posible invitar los fines de semana";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            }
             */

            if (($IDClub == 7 ) && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaIngreso)) == 100 || !empty($IDFestivo))) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar en el dia seleccionado";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if ($IDClub == 44 && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaIngreso)) == 5 || !empty($IDFestivo)) ) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar en el dia seleccionado";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            //Especial bquilla se valida por cedula primero
            if ($IDClub == 110) {

                if ($datos_socio["TipoSocio"] != "PRINCIPAL" && $datos_socio["TipoSocio"] != "CONYUGUE") {
                    $respuesta["message"] = "Lo sentimos solo los socios principales pueden realizar invitaciones";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }

                $resp_valida = self::valida_quilla($NumeroDocumento, $ValoresFormulario, $IDSocio, $Nombre);
                if (!$resp_valida["success"]) {
                    $respuesta["message"] = $resp_valida["message"];
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    //return $respuesta;
                }

            }

            if ($IDClub == 44) {
                $datos_formulario = json_decode($ValoresFormulario, true);

                foreach ($datos_formulario as $detalle_datos):

                    if ($detalle_datos["IDCampoFormularioInvitado"] != '36') {
                        if ($detalle_datos["Valor"] == "Si") {
                            $respuesta["message"] = "No es posible el registro del invitado, debe reportarse con su mÃ©dico";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;

                            return $respuesta;
                        }
                    }
                endforeach;
            }

            //Especial bquilla se valida por cedula primero

            if (empty($IDUsuario)) {
                $IDUsuario = "Socio";
            }

            if ($NumeroDocumento == 0) {
                $respuesta["message"] = "El numero de documento del invitado no es valido";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } else {

                if (!empty($NumeroDocumento) && !empty($Nombre) && !empty($FechaIngreso)) {
                    $bloqueado = $dbo->getFields("ListaNegraApp", "NumeroDocumento", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "'");

                    if (empty($bloqueado)) {

                        $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                        $NumeroDocumento = trim(str_replace(",", "", $NumeroDocumento));

                        $hoy = date("Y-m-d");

                        if (strtotime($FechaIngreso) >= strtotime($hoy)) {

                            //verifico que el socio exista y pertenezca al club
                            $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                            if (!empty($id_socio)) {

                                // CAMBIO Sep 12 2016: Se consulta las invitaciones que puede hacer el socio Titular
                                // Consulto las invitaciones que puede hacer el socio
                                $numero_invitados_dia_permitido_socio = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'");

                                if (!empty($datos_socio["AccionPadre"])): // es un beneficiario
                                    $id_socio_titular = $dbo->getFields("Socio", "IDSocio", "Accion = '" . $datos_socio["AccionPadre"] . "'");
                                    $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $id_socio . "'");

                                    if (empty($numero_invitados_dia_permitido) || $numero_invitados_dia_permitido == 0) {
                                        $numero_invitados_dia_permitido = $numero_invitados_dia_permitido_socio;
                                    }

                                    //Consulto los id socio de mi vinculo
                                    $sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio["AccionPadre"] . "' or Accion = '" . $datos_socio["AccionPadre"] . "' and IDClub = '" . $IDClub . "'";
                                    $qry_socio_vinculo = $dbo->query($sql_socio_vinculo);
                                    while ($row_socio_vinculo = $dbo->fetchArray($qry_socio_vinculo)):
                                        $array_socio_vinculo[] = $row_socio_vinculo["IDSocio"];
                                    endwhile;
                                    if (count($array_socio_vinculo) > 0):
                                        $id_otro_socio = implode(",", $array_socio_vinculo);
                                        $condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
                                    endif;
                                else:
                                    $id_socio_titular = $IDSocio;
                                    $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'");
                                    //Consulto los id socio de mi vinculo
                                    $sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio["Accion"] . "' and IDClub = '" . $IDClub . "'";
                                    $qry_socio_vinculo = $dbo->query($sql_socio_vinculo);
                                    while ($row_socio_vinculo = $dbo->fetchArray($qry_socio_vinculo)):
                                        $array_socio_vinculo[] = $row_socio_vinculo["IDSocio"];
                                    endwhile;
                                    if (count($array_socio_vinculo) > 0):
                                        $id_otro_socio = implode(",", $array_socio_vinculo);
                                        $condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
                                    endif;
                                endif;

                                // Consulto si el dia de la reserva esta asignado como fecha especial para no tomar en cuenta invitaciones
                                $id_fecha_Especial = $dbo->getFields("FechaEspecialInvitado", "IDFechaEspecialInvitado", "Fecha = '" . $FechaIngreso . "' and IDClub = '" . $IDClub . "'");
                                if (!empty($id_fecha_Especial)):
                                    // Dejo los parametros ilimitados
                                    $numero_invitados_dia_permitido = 100;
                                    $numero_invitados_dia_permitido_socio = 100;
                                endif;

                                //Consulto cuantas veces la persona ha sido invitada en el mes
                                $mes_invitacion = substr($FechaIngreso, 5, 2);
                                $year_invitacion = substr($FechaIngreso, 0, 4);
                                $dia_invitacion = substr($FechaIngreso, 8, 2);

                                //Consulto cuantos invitadoa ha hecho para el dia
                                $sql_invitados_dia_soc = $dbo->query("Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "') and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                                $numero_invitaciones_soc = $dbo->rows($sql_invitados_dia_soc);
                                if (($numero_invitaciones_soc) >= $numero_invitados_dia_permitido_socio):
                                    $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia permitido";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                endif;

                                $valida_regla = self::valida_regla_invitacion_v1($IDClub, $IDSocio, $NumeroDocumento, $FechaIngreso);

                                if ($valida_regla != "ok") {
                                    $respuesta["message"] = $valida_regla;
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                }

                                if ((int) $numero_invitados_dia_permitido > 0 && $numero_invitados_dia_permitido_socio > 0) {

                                    $sql_numero_invitacion = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                                    $numero_invitaciones = $dbo->rows($sql_numero_invitacion);

                                    //Consulto cuantas personas ha invitado el socio en el mes
                                    $sql_invitados_mes = $dbo->query("Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                                    $numero_invitados_mes = $dbo->rows($sql_invitados_mes);

                                    //Cambio Sep 12: Se suma el total de invitados por accion padre
                                    //Consulto cuantas personas ha invitado el socio en el dia
                                    //$sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where IDSocio = '".$IDSocio."' and YEAR(FechaIngreso) = '".$year_invitacion."' and MONTH(FechaIngreso) = '".$mes_invitacion."' and DAY(FechaIngreso) = '".$dia_invitacion."' and IDClub = '".$IDClub."' and Estado = 'I'");
                                    //$numero_invitados_dia = $dbo->rows($sql_invitados_dia);
                                    $sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "' " . $condicion_otro_socio . ") and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                                    $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                                    $numero_invitados_dia_permitido_accion = 100;
                                    $numero_invitados_mes_permitido = 5000;
                                    $numero_mismo_invitado_mes = "3000";
                                    $cumplimiento_obligatorio_limite = "S";

                                    if ($IDClub == 11) {
                                        $numero_mismo_invitado_mes = "2";
                                    }

                                    // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                                    //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                                    if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido_accion || $cumplimiento_obligatorio_limite == "N") {

                                        if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                            if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {

                                                //Verifico que el invitado no este invitado mas de una vez el mismo dia
                                                $sql_invitacion_dia = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "' and IDClub = '" . $IDClub . "'");
                                                $numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);

                                                if ((int) $numero_invitaciones_dia <= 0) {

                                                    //Lo creo como invitado
                                                    $id_invitado_creado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "'");
                                                    if ((int) $id_invitado_creado <= 0) {
                                                        $sql_invitado = $dbo->query("INSERT INTO Invitado (IDClub,NumeroDocumento,Nombre) Values ('" . $IDClub . "', '" . $NumeroDocumento . "', '" . $Nombre . "','WebService',NOW())");
                                                        $id_invitado_creado = $dbo->lastID();
                                                    }

                                                    $sql_datos_invitacion = "SELECT IDSocioInvitado FROM SocioInvitado WHERE NumeroDocumento = '" . $NumeroDocumento . "' Order by IDSocioInvitado DESC LIMIT 1";
                                                    $r_datos_invitacion = $dbo->query($sql_datos_invitacion);
                                                    $row_datos_invitacion_ant = $dbo->fetchArray($r_datos_invitacion);

                                                    $sql_seccion_not = $dbo->query("INSERT INTO SocioInvitado (IDClub, IDInvitado,IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $id_invitado_creado . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', '" . $IDUsuario . "',NOW())");
                                                    $id_solicitud = $dbo->lastID();

                                                    ///Guardo el invitado en la base general de invitados , para guardar la demas informacion
                                                    $IDInvitadoGral = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub='" . $IDClub . "'");
                                                    if ((int) $IDInvitadoGral <= 0) {
                                                        $inserta_invitado = "INSERT INTO Invitado (IDClub,NumeroDocumento, Nombre, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
																							VALUES('" . $IDClub . "', '" . trim($NumeroDocumento) . "','" . strtoupper($Nombre) . "','1','Socio . " . $IDSocio . "',NOW())";
                                                        $dbo->query($inserta_invitado);
                                                        $id_nvo_invitado = $dbo->lastID();
                                                        //Actualizo el dato de la invitacion con el id generado
                                                        $actualiza_inv = "UPDATE SocioInvitado SET IDInvitado = '" . $id_nvo_invitado . "'WHERE IDSocioInvitado = '" . $id_solicitud . "'";
                                                        $dbo->query($actualiza_inv);
                                                    }

                                                    //Guardo los datos de los campos
                                                    $datos_formulario = json_decode($ValoresFormulario, true);
                                                    if (count($datos_formulario) > 0) {
                                                        foreach ($datos_formulario as $detalle_datos):
                                                            $sql_datos_form = $dbo->query("Insert Into InvitadosOtrosDatos (IDInvitacion, IDCampoFormularioInvitado, Valor) Values ('" . $id_solicitud . "','" . $detalle_datos["IDCampoFormularioInvitado"] . "','" . $detalle_datos["Valor"] . "')");
                                                            $OtrosDatosFormulario .= " " . $detalle_datos["Valor"];

                                                            if (filter_var(trim($detalle_datos["Valor"]), FILTER_VALIDATE_EMAIL)) {
                                                                $parametros_codigo_qr = $NumeroDocumento;
                                                                SIMUtil::enviar_codigo_qr_invitado($id_solicitud, $parametros_codigo_qr, "Invitado", trim($detalle_datos["Valor"]));
                                                            }

                                                        endforeach;
                                                    } else {

                                                        //Verifico si antes tenia otros datos para copiarlo
                                                        if ((int) $row_datos_invitacion_ant["IDSocioInvitado"] > 0) {
                                                            $sql_otros = "SELECT * FROM InvitadosOtrosDatos WHERE IDInvitacion = '" . $row_datos_invitacion_ant["IDSocioInvitado"] . "'";
                                                            $r_otros = $dbo->query($sql_otros);
                                                            while ($row_otros = $dbo->fetchArray($r_otros)) {
                                                                $sql_otros_datos = "INSERT INTO InvitadosOtrosDatos (IDInvitacion, IDCampoFormularioInvitado, Valor) VALUES ('" . $id_solicitud . "','" . $row_otros["IDCampoFormularioInvitado"] . "','" . $row_otros["Valor"] . "')";
                                                                $dbo->query($sql_otros_datos);
                                                                if (filter_var(trim($row_otros["Valor"]), FILTER_VALIDATE_EMAIL)) {
                                                                    $parametros_codigo_qr = $NumeroDocumento;
                                                                    SIMUtil::enviar_codigo_qr_invitado($id_solicitud, $parametros_codigo_qr, "Invitado", trim($row_otros["Valor"]));
                                                                }
                                                            }
                                                        }
                                                    }

                                                    $respuesta["message"] = "Guardado";
                                                    $respuesta["success"] = true;
                                                    $respuesta["response"] = null;

                                                    //envio notificacion
                                                    SIMUtil::notificar_nuevo_invitado($IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso, $id_solicitud);

                                                } else {
                                                    $respuesta["message"] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                                    $respuesta["success"] = false;
                                                    $respuesta["response"] = null;
                                                }
                                            } else {
                                                $respuesta["message"] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                            }
                                        } else {
                                            if ($IDClub == 11) {
                                                $respuesta["message"] = "El invitado que esta seleccionando, supera el mÃ¡ximo de ingresos en el mes.";
                                            } else {
                                                $respuesta["message"] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                            }

                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                        }
                                    } else {
                                        $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia.";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                    }
                                } else {
                                    $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }

                            } else {
                                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }

                        } else {
                            $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }
                    } else {
                        $respuesta["message"] = "Lo sentimos, este invitado esta bloqueado por el club y no puede ingresar";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "14. Atencion faltan parametros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            }

            return $respuesta;

        }

        public function verifica_bloqueo_invitado($NumeroDocumento, $IDClub = "")
    {
            $dbo = &SIMDB::get();
            $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub='" . $IDClub . "'");
            $sql_observacion_bloqueo = "Select * From ObservacionInvitado Where IDInvitado = '" . $id_invitado . "' and FechaInicioBloqueo <= CURDATE() AND FechaFinBloqueo >= CURDATE() Order by IDObservacionInvitado Desc";
            $result_observacion_bloqueo = $dbo->query($sql_observacion_bloqueo);
            $total_bloqueo = $dbo->rows($result_observacion_bloqueo);
            if ((int) $total_bloqueo > 0) {
                $bloqueo = "S";
            } else {
                $bloqueo = "N";
            }

            return $bloqueo;

        }

        public function set_autorizacion_contratista($IDClub, $IDSocio, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa, $Admin = "", $HoraInicio = "", $HoraSalida = "", $Observaciones = "", $IDUsuario = "", $Telefono = "", $FechaNacimiento = "", $TipoSangre = "", $Predio = "", $Arl = "", $Eps = "", $VencimientoArl = "", $VencimientoEps = "", $ObservacionSocio = "", $ValoresFormulario = "")
    {
            $dbo = &SIMDB::get();

            $bloque_administrativo = self::verifica_bloqueo_invitado($NumeroDocumento, $IDClub);
            if ($bloque_administrativo == "S"):
                $respuesta["message"] = "Lo sentimos el contratista tiene un bloqueo por parte del club, no es posible realizar la autorizacion";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            if ($NumeroDocumento == 0) {
                $respuesta["message"] = "El numero de documento del invitado no es valido";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } else {

                if (!empty($FechaIngreso) && !empty($FechaSalida) && !empty($TipoAutorizacion) && !empty($TipoDocumento) && !empty($NumeroDocumento) && !empty($Nombre) && !empty($Apellido)) {

                    $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                    $NumeroDocumento = str_replace(",", "", $NumeroDocumento);

                    $hoy = date("Y-m-d");

                    $bloqueado = $dbo->getFields("ListaNegraApp", "NumeroDocumento", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "'");

                    if (empty($bloqueado)) {
                        if (strtotime($FechaIngreso) >= strtotime($hoy) && strtotime($FechaSalida) >= strtotime($FechaIngreso)) {

                            if (!empty($IDSocio)) {

                                // Consulto las invitaciones que puede hacer el socio
                                $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'");

                                if ((int) $numero_invitados_dia_permitido > 0) {

                                    //Consulto cuantas veces la persona ha sido invitada en el mes
                                    $mes_invitacion = substr($FechaIngreso, 5, 2);
                                    $year_invitacion = substr($FechaIngreso, 0, 4);
                                    $dia_invitacion = substr($FechaIngreso, 8, 2);

                                    //verifico si el invitado ya esta creado

                                    $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . trim($NumeroDocumento) . "' AND IDClub = '" . $IDClub . "'");

                                    //Si el invitado no existe en la tabla maestra lo creo
                                    if (empty($id_invitado) || (int) $id_invitado == 0):

                                        //Para MY el estado debe ser bloqueado para que puedan completar informacion
                                        /*
                                        if($IDClub==9)
                                        $IDEstadoInvitado = 3;
                                        else
                                        $IDEstadoInvitado = 1;
                                         */
                                        $IDEstadoInvitado = 1;

                                        $inserta_invitado = "INSERT INTO Invitado (IDClub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, ObservacionGeneral, Telefono, FechaNacimiento, TipoSangre, Predio, ARL, EPS, FechaVencimientoArl, FechaVencimientoEps, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
																						VALUES('" . $IDClub . "', '" . $TipoDocumento . "','" . trim($NumeroDocumento) . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $Observaciones . "','" . $Telefono . "','" . $FechaNacimiento . "','" . $TipoSangre . "','" . $Predio . "','" . $Arl . "','" . $Eps . "','" . $VencimientoArl . "','" . $VencimientoEps . "','" . $IDEstadoInvitado . "','App',NOW())";

                                        $dbo->query($inserta_invitado);
                                        $id_invitado = $dbo->lastID();
                                    else:
                                        //Actualizo las observaciones y predio unicamente
                                        if (!empty($Observaciones)) {
                                            $CampoObservacion = " ,ObservacionGeneral = '" . $Observaciones . "'";
                                        }

                                        //if(!empty($ObservacionSocio))
                                        //$CampoObservacion = " ,ObservacionGeneral = '" . $ObservacionSocio . "'";

                                        if (!empty($FechaNacimiento) && $FechaNacimiento != "0000-00-00") {
                                            $CampoObservacion .= " ,FechaNacimiento = '" . $FechaNacimiento . "'";
                                        }

                                        if (!empty($TipoSangre)) {
                                            $CampoObservacion .= " , TipoSangre = '" . $TipoSangre . "'";
                                        }

                                        if (!empty($Telefono)) {
                                            $CampoObservacion .= " , Telefono = '" . $Telefono . "'";
                                        }

                                        if (!empty($Predio)) {
                                            $CampoObservacion .= " , Predio = '" . $Predio . "'";
                                        }

                                        if (!empty($Arl)) {
                                            $CampoObservacion .= " , ARL = '" . $Arl . "'";
                                        }

                                        if (!empty($Eps)) {
                                            $CampoObservacion .= " , EPS = '" . $Eps . "'";
                                        }

                                        if (!empty($Arl)) {
                                            $CampoObservacion .= " , FechaVencimientoArl = '" . $VencimientoArl . "'";
                                        }

                                        if (!empty($Eps)) {
                                            $CampoObservacion .= " , FechaVencimientoEps = '" . $VencimientoEps . "'";
                                        }

                                        if (!empty($Email)) {
                                            $CampoObservacion .= " , Email = '" . $Email . "'";
                                        }

                                        $sql_edit_invitado = "UPDATE Invitado Set Nombre = '" . strtoupper($Nombre) . "', Apellido  = '" . strtoupper($Apellido) . "', Email='" . $Email . "'
																									" . $CampoObservacion . "  Where IDInvitado = '" . $id_invitado . "'";

                                        $dbo->query($sql_edit_invitado);
                                    endif;

                                    //Si es cabeza de familia guardo el id del Socio
                                    if ($CabezaInvitacion == "S"):
                                        $IDPadre = $id_invitado;
                                    endif;

                                    $sql_numero_invitacion = $dbo->query("Select IDSocioAutorizacion From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                                    $numero_invitaciones = $dbo->rows($sql_numero_invitacion);
                                    //Consulto cuantas personas ha invitado el socio en el mes
                                    $sql_invitados_mes = $dbo->query("Select IDSocioAutorizacion From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                                    $numero_invitados_mes = $dbo->rows($sql_invitados_mes);
                                    //Consulto cuantas personas ha invitado el socio en el dia
                                    $sql_invitados_dia = $dbo->query("Select IDSocioAutorizacion From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                                    $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                                    $numero_invitados_mes_permitido = 50000;
                                    $numero_mismo_invitado_mes = "30000";
                                    $cumplimiento_obligatorio_limite = "S";

                                    // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                                    //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                                    if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N") {
                                        if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                            if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {
                                                //Verifico que el invitado no este invitado mas de una vez el mismo dia
                                                //echo "Select * From SocioAutorizacion Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'";
                                                //exit;

                                                //$sql_invitacion_dia = $dbo->query("Select * From SocioAutorizacion Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'");
                                                //$numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);

                                                // lo dejo en 0 para que pueda invitar mas de una vez la misma persona ya que un empleado puede entrara a varias predios en MY
                                                $numero_invitaciones_dia = 0;

                                                if ((int) $numero_invitaciones_dia <= 0) {

                                                    //verifico si el vehiculo ya esta creado
                                                    if (!empty($Placa)):
                                                        $id_vehiculo = $dbo->getFields("Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'");
                                                        //Si el vehiculo no existe en la tabla maestra lo creo
                                                        if (empty($id_vehiculo) || (int) $id_vehiculo == 0):
                                                            $inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																															Values('" . $id_invitado . "','" . $Placa . "')";
                                                            $dbo->query($inserta_vehiculo);
                                                            $id_vehiculo = $dbo->lastID();
                                                        endif;
                                                    endif;

                                                    //genero el codigo de autorizacion
                                                    $CodigoAutorizacion = SIMUtil::genera_codigo_autorizacion("C");
                                                    $CodigoAutorizacion = trim($TipoSangre);

                                                    if (!empty($IDUsuario)) {
                                                        $creado_por = $IDUsuario;
                                                    } else {
                                                        $creado_por = "Socio";
                                                    }

                                                    //Inserto invitacion
                                                    $sql_inserta_inv = $dbo->query(
                                                        "Insert Into SocioAutorizacion (IDClub, IDSocio, IDInvitado, IDVehiculo, TipoAutorizacion, FechaInicio, HoraInicio, FechaFin, HoraFin, CodigoAutorizacion, Predio, ObservacionSocio, UsuarioTrCr, FechaTrCr)
															Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $id_vehiculo . "', '" . $TipoAutorizacion . "', '" . $FechaIngreso . "',
															'" . $HoraInicio . "','" . $FechaSalida . "', '" . $HoraSalida . "', '" . $CodigoAutorizacion . "','" . $Predio . "', '" . $ObservacionSocio . "','" . $creado_por . "',NOW())");
                                                    $id_invitado_inserta = $dbo->lastID();

                                                    //Guardo los datos de los campos
                                                    $ValoresFormulario = trim(preg_replace('/\s+/', ' ', $ValoresFormulario));
                                                    $datos_formulario = json_decode($ValoresFormulario, true);
                                                    if (count($datos_formulario) > 0):
                                                        foreach ($datos_formulario as $detalle_datos):
                                                            $sql_datos_form = $dbo->query("Insert Into SocioAutorizacionOtrosDatos (IDSocioAutorizacion, IDCampoFormularioContratista, Valor) Values ('" . $id_invitado_inserta . "','" . $detalle_datos["IDCampoFormularioContratista"] . "','" . $detalle_datos["Valor"] . "')");
                                                            $OtrosDatosFormulario .= " " . $detalle_datos["Valor"];

                                                            if ($IDClub == 35) {
                                                                $ObservacionSocio = $detalle_datos["Valor"];
                                                                $actualizo = " UPDATE SocioAutorizacion SET ObservacionSocio = '" . $ObservacionSocio . "' WHERE IDSocioAutorizacion = '" . $id_invitado_inserta . "'";
                                                                $ejecuta = $dbo->query($actualizo);
                                                            }
                                                        endforeach;
                                                    endif;

                                                    //Guardo el padre de la invitacion
                                                    if (!empty($id_invitado_inserta)):
                                                        //Generar Codigo QR
                                                        //$parametros_codigo_qr = URLROOT . "plataform/invitadosespeciales.php?IDInvitacion=".$id_invitado_inserta."&Placa=".$Placa;
                                                        $parametros_codigo_qr = $NumeroDocumento . "\r\n";
                                                        if (empty($Admin) && $IDClub != 34):
                                                            SIMUtil::enviar_codigo_qr($id_invitado_inserta, $parametros_codigo_qr, "Contratista");
                                                        endif;
                                                    endif;

                                                    $respuesta["message"] = "guardado.";
                                                    $respuesta["success"] = true;
                                                    $respuesta["response"] = null;

                                                } else {
                                                    $respuesta["message"] = "Lo sentimos " . $Nombre . " " . $Apellido . " ya tiene una invitacion para el dia seleccionado.";
                                                    $respuesta["success"] = false;
                                                    $respuesta["response"] = null;
                                                }
                                            } else {
                                                $respuesta["message"] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                            }
                                        } else {
                                            $respuesta["message"] = "Lo sentimos, " . $Nombre . " " . $Apellido . "  ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                        }
                                    } else {
                                        $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                    }

                                } else {
                                    $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }

                            } else {
                                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }

                        } else {
                            $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas o la fecha inicio no puede ser menor a la fecha fin " . "Inicio " . $FechaIngreso . "FIN:" . $FechaSalida . "HOY " . date("Y-m-d");
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } else {
                        $respuesta["message"] = "Lo sentimos, este contratista esta bloqueado por el club y no puede ingresar";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Inv. Atencion faltan parametros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            }

            return $respuesta;

        }

        public function set_contratista_update_autorizacion($IDClub, $IDSocio, $IDInvitacion, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa, $Admin = "", $HoraInicio = "", $HoraSalida = "", $Observaciones = "", $IDUsuario = "", $Telefono = "", $FechaNacimiento = "", $TipoSangre = "", $Predio = "", $Arl = "", $Eps = "", $VencimientoArl = "", $VencimientoEps = "", $ObservacionSocio, $ValoresFormulario = "", $CodigoAutorizacion = "")
    {
            $dbo = &SIMDB::get();

            $bloque_administrativo = self::verifica_bloqueo_invitado($NumeroDocumento, $IDClub);
            if ($bloque_administrativo == "S"):
                $respuesta["message"] = "Lo sentimos el contratista tiene un bloqueo por parte del club, no es posible realizar la autorizacion:" . $NumeroDocumento;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            if (!empty($IDInvitacion) && !empty($FechaIngreso) && !empty($FechaSalida) && !empty($TipoAutorizacion) && !empty($TipoDocumento) && !empty($NumeroDocumento) && !empty($Nombre) && !empty($Apellido)) {

                $hoy = date("Y-m-d");
                if (strtotime($FechaIngreso) >= strtotime($hoy) && strtotime($FechaSalida) >= strtotime($FechaIngreso)) {

                    $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                    $NumeroDocumento = trim(str_replace(",", "", $NumeroDocumento));

                    //verifico que el socio exista y pertenezca al club
                    $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                    if (!empty($id_socio)) {

                        // Consulto las invitaciones que puede hacer el socio
                        $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'");

                        if ((int) $numero_invitados_dia_permitido > 0) {

                            //Consulto cuantas veces la persona ha sido invitada en el mes
                            $mes_invitacion = substr($FechaIngreso, 5, 2);
                            $year_invitacion = substr($FechaIngreso, 0, 4);
                            $dia_invitacion = substr($FechaIngreso, 8, 2);

                            //verifico si el invitado ya esta creado
                            $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "' ");
                            //Si el invitado no existe en la tabla maestra lo creo
                            if (empty($id_invitado) || (int) $id_invitado == 0):
                                $inserta_invitado = "Insert Into Invitado (IDClub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, Telefono, FechaNacimiento, TipoSangre, Predio, UsuarioTrCr, FechaTrCr)
																					 Values('" . $IDClub . "','" . $IDTipoDocumento . "','" . (int) $NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $Telefono . "','" . $FechaNacimiento . "'
																					 ,'" . $TipoSangre . "','" . $Predio . "','App',NOW())";
                                $dbo->query($inserta_invitado);
                                $id_invitado = $dbo->lastID();
                            else:

                                $CampoObservacion = "";

                                if (!empty($Observaciones)) {
                                    $CampoObservacion = " ,ObservacionGeneral = '" . $Observaciones . "'";
                                }

                                if (!empty($FechaNacimiento) && $FechaNacimiento != "0000-00-00") {
                                    $CampoObservacion .= " ,FechaNacimiento = '" . $FechaNacimiento . "'";
                                }

                                if (!empty($TipoSangre)) {
                                    $CampoObservacion .= " , TipoSangre = '" . $TipoSangre . "'";
                                }

                                if (!empty($Telefono)) {
                                    $CampoObservacion .= " , Telefono = '" . $Telefono . "'";
                                }

                                if (!empty($Predio)) {
                                    $CampoObservacion .= " , Predio = '" . $Predio . "'";
                                }

                                if (!empty($Arl)) {
                                    $CampoObservacion .= " , ARL = '" . $Arl . "'";
                                }

                                if (!empty($Eps)) {
                                    $CampoObservacion .= " , EPS = '" . $Eps . "'";
                                }

                                if (!empty($VencimientoArl)) {
                                    $CampoObservacion .= " , FechaVencimientoArl = '" . $VencimientoArl . "'";
                                }

                                if (!empty($VencimientoEps)) {
                                    $CampoObservacion .= " , FechaVencimientoEps = '" . $VencimientoEps . "'";
                                }

                                if (!empty($Email)) {
                                    $CampoObservacion .= " , Email = '" . $Email . "'";
                                }

                                $sql_invitado_update = $dbo->query("UPDATE Invitado
																				   SET IDTipoDocumento = '" . $TipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "',
																				   Apellido = '" . strtoupper($Apellido) . "', Email='" . $Email . "' " . $CampoObservacion . "
																				   Where IDInvitado = '" . $id_invitado . "'");
                            endif;

                            $sql_numero_invitacion = $dbo->query("Select * From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                            $numero_invitaciones = $dbo->rows($sql_numero_invitacion);
                            //Consulto cuantas personas ha invitado el socio en el mes
                            $sql_invitados_mes = $dbo->query("Select * From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                            $numero_invitados_mes = $dbo->rows($sql_invitados_mes);
                            //Consulto cuantas personas ha invitado el socio en el dia
                            $sql_invitados_dia = $dbo->query("Select * From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                            $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                            $numero_invitados_mes_permitido = 50000;
                            $numero_mismo_invitado_mes = "30000";
                            $cumplimiento_obligatorio_limite = "S";

                            // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                            //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                            if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N") {
                                if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                    if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {
                                        //Verifico que el invitado no este invitado mas de una vez el mismo dia

                                        $sql_invitacion_dia = $dbo->query("Select * From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and FechaInicio = '" . $FechaIngreso . "'");
                                        $numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);
                                        if ((int) $numero_invitaciones_dia <= 100) {

                                            //verifico si el vehiculo ya esta creado
                                            if (!empty($Placa)):
                                                $id_vehiculo = $dbo->getFields("Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'");
                                                //Si el vehiculo no existe en la tabla maestra lo creo
                                                if (empty($id_vehiculo) || (int) $id_vehiculo == 0):
                                                    $inserta_vehiculo = "INSERT INTO Vehiculo (IDInvitado, Placa)
																														 Values('" . $id_invitado . "','" . $Placa . "')";
                                                    $dbo->query($inserta_vehiculo);
                                                    $id_vehiculo = $dbo->lastID();
                                                endif;
                                            endif;

                                            if (!empty($IDUsuario)) {
                                                $creado_por = $IDUsuario;
                                            } else {
                                                $creado_por = "Socio";
                                            }

                                            //Actualizo invitacion
                                            $sql_inserta_inv = $dbo->query("UPDATE SocioAutorizacion set  IDVehiculo = '" . $id_vehiculo . "', TipoAutorizacion = '" . $TipoAutorizacion . "', FechaInicio = '" . $FechaIngreso . "', FechaFin = '" . $FechaSalida . "', Predio = '" . $Predio . "', ObservacionSocio = '" . $ObservacionSocio . "', CodigoAutorizacion = '" . $CodigoAutorizacion . "', UsuarioTrEd = '" . $creado_por . "', FechaTrEd = NOW() Where IDSocioAutorizacion = '" . $IDInvitacion . "'");
                                            $respuesta["message"] = "actualizado";
                                            $respuesta["success"] = true;
                                            $respuesta["response"] = null;

                                        } else {
                                            $respuesta["message"] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                        }
                                    } else {
                                        $respuesta["message"] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                    }
                                } else {
                                    $respuesta["message"] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }
                            } else {
                                $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }

                        } else {
                            $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } else {
                        $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "SA. Atencion faltan parametros.";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_invitadoV1($IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso)
    {
            $dbo = &SIMDB::get();

            if (!empty($NumeroDocumento) && !empty($Nombre) && !empty($FechaIngreso)) {

                $hoy = date("Y-m-d");
                if (strtotime($FechaIngreso) >= strtotime($hoy) && strtotime($FechaSalida) >= strtotime($FechaIngreso)) {

                    //verifico que el socio exista y pertenezca al club
                    $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                    if (!empty($id_socio)) {

                        // Consulto las reglas que aplica al socio para invitaciones
                        $array_datos_regla = SIMUtil::consulta_regla_invitacion($IDSocio, $IDClub);

                        if ((int) $array_datos_regla["IDRegla"] > 0) {

                            //Consulto cuantas veces la persona ha sido invitada en el mes
                            $mes_invitacion = substr($FechaIngreso, 5, 2);
                            $year_invitacion = substr($FechaIngreso, 0, 4);
                            $dia_invitacion = substr($FechaIngreso, 8, 2);
                            $sql_numero_invitacion = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                            $numero_invitaciones = $dbo->rows($sql_numero_invitacion);
                            //Consulto cuantas personas ha invitado el socio en el mes
                            $sql_invitados_mes = $dbo->query("Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                            $numero_invitados_mes = $dbo->rows($sql_invitados_mes);
                            //Consulto cuantas personas ha invitado el socio en el dia
                            $sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                            $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                            //$numero_invitados_mes_permitido = $dbo->getFields( "Club" , "MaximoInvitadoSocio" , "IDClub = '".$IDClub."'" );
                            //$numero_mismo_invitado_mes = $dbo->getFields( "Club" , "MaximoRepeticionInvitado" , "IDClub = '".$IDClub."'" );

                            $numero_invitados_mes_permitido = $array_datos_regla["MaximoInvitadoSocio"];
                            $numero_mismo_invitado_mes = $array_datos_regla["MaximoRepeticionInvitado"];
                            $numero_invitados_dia_permitido = $array_datos_regla["MaximoInvitadoDia"];
                            $cumplimiento_obligatorio_limite = $array_datos_regla["CumplimientoInvitados"];

                            // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                            //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                            if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N") {

                                if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                    if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {

                                        //Verifico que el invitado no este invitado mas de una vez el mismo dia
                                        $sql_invitacion_dia = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "'");
                                        $numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);
                                        // lo dejo en 0 para que pueda invitar mas de una vez la misma persona ya que un empleado puede entrara a varias predios en MY
                                        $numero_invitaciones_dia = 0;

                                        if ((int) $numero_invitaciones_dia <= 0) {
                                            $sql_seccion_not = $dbo->query("Insert Into SocioInvitado (IDClub, IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', 'WebService',NOW())");
                                            $respuesta["message"] = "Guardado";
                                            $respuesta["success"] = true;
                                            $respuesta["response"] = null;
                                        } else {
                                            $respuesta["message"] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                        }
                                    } else {
                                        $respuesta["message"] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                    }
                                } else {
                                    $respuesta["message"] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }
                            } else {
                                $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }
                        } else {
                            $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } else {
                        $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "15. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_invitado_update($IDClub, $IDSocio, $IDInvitado, $NumeroDocumento, $Nombre, $FechaIngreso)
    {
            $dbo = &SIMDB::get();

            $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");

            if ($datos_socio["IDEstadoSocio"] != "1") {
                $respuesta["message"] = "Lo sentimos, tiene un estado diferente a activo, no puede crear invitaciones";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            /*
            if( ($IDClub==72)  && ( date('w', strtotime($FechaIngreso))==0 || date('w', strtotime($FechaIngreso))==6 || date('w', strtotime($FechaIngreso))==1  )  ){
            $respuesta[ "message" ] = "Lo sentimos, no es posible invitar los fines de semana";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            }
             */

            if (($IDClub == 7 || $IDClub == 44) && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaIngreso)) == 100)) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar los fines de semana";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if (!empty($NumeroDocumento) && !empty($Nombre) && !empty($FechaIngreso)) {

                $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                $NumeroDocumento = trim(str_replace(",", "", $NumeroDocumento));

                //Especial bquilla se valida por cedula primero
                if ($IDClub == 110) {

                    if ($datos_socio["TipoSocio"] != "PRINCIPAL" && $datos_socio["TipoSocio"] != "CONYUGUE") {
                        $respuesta["message"] = "Lo sentimos solo los socios principales pueden realizar invitaciones";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }

                    $resp_valida = self::valida_quilla($NumeroDocumento, $ValoresFormulario, $IDSocio, $Nombre);
                    if (!$resp_valida["success"]) {
                        $respuesta["message"] = $resp_valida["message"];
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        //return $respuesta;
                    }

                }
                //Especial bquilla se valida por cedula primero

                $hoy = date("Y-m-d");

                if (strtotime($FechaIngreso) >= strtotime($hoy)) {

                    //verifico que el socio exista y pertenezca al club
                    $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                    if (!empty($id_socio)) {

                        // CAMBIO Sep 12 2016: Se consulta las invitaciones que puede hacer el socio Titular
                        // Consulto las invitaciones que puede hacer el socio
                        $numero_invitados_dia_permitido_socio = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'");
                        //$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );

                        if (!empty($datos_socio["AccionPadre"])): // es un beneficiario
                            $id_socio_titular = $dbo->getFields("Socio", "IDSocio", "Accion = '" . $datos_socio["AccionPadre"] . "'");
                            $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $id_socio . "'");

                            if (empty($numero_invitados_dia_permitido) || $numero_invitados_dia_permitido == 0) {
                                $numero_invitados_dia_permitido = $numero_invitados_dia_permitido_socio;
                            }

                            //Consulto los id socio de mi vinculo
                            $sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio["AccionPadre"] . "' or Accion = '" . $datos_socio["AccionPadre"] . "' and IDClub = '" . $IDClub . "'";
                            $qry_socio_vinculo = $dbo->query($sql_socio_vinculo);
                            while ($row_socio_vinculo = $dbo->fetchArray($qry_socio_vinculo)):
                                $array_socio_vinculo[] = $row_socio_vinculo["IDSocio"];
                            endwhile;
                            if (count($array_socio_vinculo) > 0):
                                $id_otro_socio = implode(",", $array_socio_vinculo);
                                $condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
                            endif;
                        else:
                            $id_socio_titular = $IDSocio;
                            $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'");
                            //Consulto los id socio de mi vinculo
                            $sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio["Accion"] . "' and IDClub = '" . $IDClub . "'";
                            $qry_socio_vinculo = $dbo->query($sql_socio_vinculo);
                            while ($row_socio_vinculo = $dbo->fetchArray($qry_socio_vinculo)):
                                $array_socio_vinculo[] = $row_socio_vinculo["IDSocio"];
                            endwhile;
                            if (count($array_socio_vinculo) > 0):
                                $id_otro_socio = implode(",", $array_socio_vinculo);
                                $condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
                            endif;
                        endif;

                        // Consulto si el dia de la reserva esta asignado como fecha especial para no tomar en cuenta invitaciones
                        $id_fecha_Especial = $dbo->getFields("FechaEspecialInvitado", "IDFechaEspecialInvitado", "Fecha = '" . $FechaIngreso . "' and IDClub = '" . $IDClub . "'");
                        if (!empty($id_fecha_Especial)):
                            // Dejo los parametros ilimitados
                            $numero_invitados_dia_permitido = 100;
                            $numero_invitados_dia_permitido_socio = 100;
                        endif;

                        //Consulto cuantas veces la persona ha sido invitada en el mes
                        $mes_invitacion = substr($FechaIngreso, 5, 2);
                        $year_invitacion = substr($FechaIngreso, 0, 4);
                        $dia_invitacion = substr($FechaIngreso, 8, 2);

                        //Consulto cuantos invitadoa ha hecho para el dia
                        $sql_invitados_dia_soc = $dbo->query("Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "') and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                        $numero_invitaciones_soc = $dbo->rows($sql_invitados_dia_soc);
                        if (($numero_invitaciones_soc) >= $numero_invitados_dia_permitido_socio):
                            $respuesta["message"] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia permitido";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;

                        if ((int) $numero_invitados_dia_permitido > 0 && $numero_invitados_dia_permitido_socio > 0) {

                            $sql_numero_invitacion = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                            $numero_invitaciones = $dbo->rows($sql_numero_invitacion);

                            //Consulto cuantas personas ha invitado el socio en el mes
                            $sql_invitados_mes = $dbo->query("Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'");
                            $numero_invitados_mes = $dbo->rows($sql_invitados_mes);

                            //Cambio Sep 12: Se suma el total de invitados por accion padre
                            //Consulto cuantas personas ha invitado el socio en el dia
                            //$sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where IDSocio = '".$IDSocio."' and YEAR(FechaIngreso) = '".$year_invitacion."' and MONTH(FechaIngreso) = '".$mes_invitacion."' and DAY(FechaIngreso) = '".$dia_invitacion."' and IDClub = '".$IDClub."' and Estado = 'I'");
                            //$numero_invitados_dia = $dbo->rows($sql_invitados_dia);
                            $sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "' " . $condicion_otro_socio . ") and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                            $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                            $numero_invitados_dia_permitido_accion = 200;
                            $numero_invitados_mes_permitido = 5000;
                            $numero_mismo_invitado_mes = "3000";
                            $cumplimiento_obligatorio_limite = "S";

                            // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                            //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                            if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido_accion || $cumplimiento_obligatorio_limite == "N") {

                                if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                    if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {

                                        //Verifico que el invitado no este invitado mas de una vez el mismo dia
                                        $sql_invitacion_dia = $dbo->query("Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "'");
                                        $numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);

                                        if ((int) $numero_invitaciones_dia <= 0) {
                                            $sql_seccion_not = $dbo->query("Insert Into SocioInvitado (IDClub, IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', 'WebService',NOW())");
                                            $id_nueva_inv = $dbo->lastID();
                                            $respuesta["message"] = "Guardado";
                                            $respuesta["success"] = true;
                                            $respuesta["response"] = null;

                                            //envio notificacion
                                            SIMUtil::notificar_nuevo_invitado($IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso);

                                        } else {
                                            $respuesta["message"] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                        }
                                    } else {
                                        $respuesta["message"] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                    }
                                } else {
                                    $respuesta["message"] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }
                            } else {
                                $respuesta["message"] = "Lo sentimos, supera el numero maximo de: " . $numero_invitados_dia_permitido . " invitaciones por dia.";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }
                        } else {
                            $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } else {
                        $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "14. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_contratista_update($IDClub, $IDSocio, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa)
    {
            $dbo = &SIMDB::get();

            if (!empty($NumeroDocumento) && !empty($Nombre) && !empty($Apellido)) {

                $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                $NumeroDocumento = trim(str_replace(",", "", $NumeroDocumento));

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "'");
                    if (!empty($id_invitado)) {

                        if (!empty($Email)) {
                            $CampoObservacion .= " , Email = '" . $Email . "'";
                        }

                        $sql_invitado_update = $dbo->query("Update Invitado
																	   Set IDTipoDocumento = '" . $TipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "',
																	   Apellido = '" . strtoupper($Apellido) . "', Email = '" . $Email . "' " . $CampoObservacion . "
																	   Where IDInvitado = '" . $id_invitado . "'");
                        //verifico si el vehiculo ya esta creado
                        if (!empty($Placa)):
                            $id_vehiculo = $dbo->getFields("Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'");
                            //Si el vehiculo no existe en la tabla maestra lo creo
                            if (empty($id_vehiculo) || (int) $id_vehiculo == 0):
                                $inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																						 Values('" . $id_invitado . "','" . $Placa . "')";
                                $dbo->query($inserta_vehiculo);
                                $id_vehiculo = $dbo->lastID();
                            endif;
                        endif;

                        $respuesta["message"] = "Guardado";
                        $respuesta["success"] = true;
                        $respuesta["response"] = null;
                    } else {
                        $respuesta["message"] = "El contratista no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "16. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function cancela_invitacion_bquilla($IDClub, $IdentificadorExterno, $NumeroDocumento)
    {
            $dbo = &SIMDB::get();

            $params = array(
                "idunico" => $IdentificadorExterno,
            );
            $client = new SoapClient(URLBQUILLA . "webserviceappcountry/Service1.asmx?WSDL");
            $response = $client->__soapCall("GetVisitantePendiente", array($params));
            $xml = $response->GetVisitantePendienteResult;
            $xmlf = simplexml_load_string($xml);
            foreach ($xmlf as $idx => $datos) {
                if ($datos->Cedula == $NumeroDocumento) {
                    $consec = $datos->Consc;
                }
            }
            if (empty($consec)) {
                $respuesta["message"] = "Invitacion no encontrada, intente mas tarde";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } else {
                ///Elimino la reserva
                $params = array(
                    "Consc" => $consec,
                );
                $client = new SoapClient(URLBQUILLA . "webserviceappcountry/Service1.asmx?WSDL");
                $response = $client->__soapCall("UpdateVisitanteCancelar", array($params));
                $xml = $response->UpdateVisitanteCancelarResult;
                if ($xml != "exito") {
                    $respuesta["message"] = "No se pudo cancelar la invitacion, por favor intente mas tarde";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                } else {
                    $respuesta["message"] = $consec;
                    $respuesta["success"] = true;
                    $respuesta["response"] = null;
                }
            }
            return $respuesta;
        }

        public function cancela_invitacion($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $datos_tipo_reserva = $dbo->fetchAll("SocioInvitado", " IDSocioInvitado = '" . $IDInvitacion . "' ", "array");

                    //Especial b/quilla
                    if ($IDClub == 110) {
                        $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
                        $resp_b = self::cancela_invitacion_bquilla($IDClub, $datos_socio["IdentificadorExterno"], $datos_tipo_reserva["NumeroDocumento"]);
                        if (!$resp_b["success"]) {
                            $respuesta["message"] = $resp_b["message"];
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            //return $respuesta;
                        }
                    }
                    //fin Especial b/quilla

                    if (!empty($datos_tipo_reserva["IDSocioInvitado"])) {
                        if ($datos_tipo_reserva["Estado"] != "I") {
                            $sql_cancela_invitacion = $dbo->query("delete  From SocioInvitado Where IDSocioInvitado = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1");
                            $respuesta["message"] = "invitacion cancelada";
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                        } else {
                            $respuesta["message"] = "Lo sentimos, no se puede cancelar la invitacion, el invitado ya ingreso";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }
                    } else {
                        $respuesta["message"] = "Lo sentimos, la invitacion no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "17. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function cancela_autorizacion_invitado($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $datos_tipo_reserva = $dbo->fetchAll("SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array");
                    if (!empty($datos_tipo_reserva["IDSocioInvitadoEspecial"])) {
                        if ($datos_tipo_reserva["Ingreso"] != "S") {
                            //$mensajecancelacion= "delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '".$IDInvitacion."' and IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."'  Limit 1";
                            $sql_cancela_invitacion = $dbo->query("delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1");
                            // Si es cabeza de grupo borro las invitaciones asociadas al cabeza de grupo
                            if ($datos_tipo_reserva["CabezaInvitacion"] == "S"):
                                //$sql_cancela_invitacion_hijos = $dbo->query("delete From SocioInvitadoEspecial Where IDPadre = '".$datos_tipo_reserva["IDInvitado"]."' and IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and FechaInicio = '".$datos_tipo_reserva["FechaInicio"]."' and FechaFin = '".$datos_tipo_reserva["FechaFin"]."'");
                            endif;

                            $respuesta["message"] = "invitacion cancelada.";
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                        } else {
                            $respuesta["message"] = "Lo sentimos, no se puede cancelar la invitacion, el invitado ya ingreso";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }
                    } else {
                        $respuesta["message"] = "Lo sentimos, la invitacion no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "17. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function valida_segunda_clave($IDClub, $IDSocio, $Clave)
    {
            $dbo = &SIMDB::get();
            if (!empty($IDSocio)) {

                $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and SegundaClave = '" . sha1($Clave) . "' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 )", "array");
                if (!empty($datos_socio["IDSocio"]) && $datos_socio["TipoSocio"] != "Estudiante") {
                    $response["IDClub"] = $datos_socio["IDClub"];
                    $response["IDSocio"] = $datos_socio["IDSocio"];
                    $response["Socio"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"]);
                    $respuesta["message"] = "ok";
                    $respuesta["success"] = true;
                    $respuesta["response"] = $response;
                } else {
                    $respuesta["message"] = "Segunda Clave Incorrecta";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            } else {
                $respuesta["message"] = "25. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_presalida($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $datos_tipo_reserva = $dbo->fetchAll("SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array");
                    if (!empty($datos_tipo_reserva["IDSocioInvitadoEspecial"])) {

                        $sql_presalida = $dbo->query("Update  SocioInvitadoEspecial Set IDSocioPresalida = '" . $IDSocio . "', Presalida = 'S', FehaPresalida = NOW() Where IDSocioInvitadoEspecial = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1");
                        $respuesta["message"] = "Presalida realizada con exito";
                        $respuesta["success"] = true;
                        $respuesta["response"] = "";
                    } else {
                        $respuesta["message"] = "Lo sentimos, la invitacion no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "17. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_presalida_contratista($IDClub, $IDSocio, $IDInvitacion)
    {
            $dbo = &SIMDB::get();

            if (!empty($IDSocio) && !empty($IDInvitacion)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $datos_tipo_reserva = $dbo->fetchAll("SocioAutorizacion", " IDSocioAutorizacion = '" . $IDInvitacion . "' ", "array");
                    if (!empty($datos_tipo_reserva["IDSocioAutorizacion"])) {

                        $sql_presalida = $dbo->query("Update  SocioAutorizacion Set IDSocioPresalida = '" . $IDSocio . "', Presalida = 'S', FehaPresalida = NOW() Where IDSocioAutorizacion = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1");
                        $respuesta["message"] = "Presalida realizada con exito";
                        $respuesta["success"] = true;
                        $respuesta["response"] = "";
                    } else {
                        $respuesta["message"] = "Lo sentimos, la invitacion no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "17. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function cancela_autorizacion_contratista($IDClub, $IDSocio, $IDAutorizacion)
    {
            $dbo = &SIMDB::get();

            if (!empty($IDSocio) && !empty($IDAutorizacion)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    $datos_tipo_reserva = $dbo->fetchAll("SocioAutorizacion", " IDSocioAutorizacion = '" . $IDAutorizacion . "' ", "array");
                    if (!empty($datos_tipo_reserva["IDSocioAutorizacion"])) {
                        if ($datos_tipo_reserva["Ingreso"] != "S") {
                            $sql_cancela_invitacion = $dbo->query("delete  From SocioAutorizacion Where IDSocioAutorizacion = '" . $IDAutorizacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1");
                            $respuesta["message"] = "autorizacion cancelada";
                            $respuesta["success"] = true;
                            $respuesta["response"] = null;
                        } else {
                            $respuesta["message"] = "Lo sentimos, no se puede cancelar la autorizacion, el invitado ya ingreso";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }
                    } else {
                        $respuesta["message"] = "Lo sentimos, la autorizacion no existe";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "17. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function valida_regla_invitacion_acceso($IDClub, $IDSocio, $IDInvitado, $FechaIngreso)
    {
            $dbo = &SIMDB::get();
            $mes_invitacion = substr($FechaIngreso, 5, 2);
            $year_invitacion = substr($FechaIngreso, 0, 4);
            $dia_invitacion = substr($FechaIngreso, 8, 2);
            $resultado = "ok";
            if ($IDClub == 70) {
                $datos_socio = $dbo->fetchAll("Socio", " IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' ", "array");
                //Consulto regla invitacion por categoria de socio
                //$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' ", "array" );

                $sql_regla = "Select * From Regla Where IDClub = '" . $IDClub . "' and (IDCategoria like '%|" . $datos_socio["IDCategoria"] . "|%' or IDCategoria = '" . $datos_socio["IDCategoria"] . "') ";
                $qry_regla = $dbo->query($sql_regla);
                $datos_regla = $dbo->fetchArray($qry_regla);

                if (empty($datos_regla["IDRegla"])):
                    //Consulto regla invitacion por parentesco de socio
                    //$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDParentesco like '%".$datos_socio["IDParentesco"]."|%' ", "array" );
                endif;
                if ($datos_regla["IDRegla"] > 0) {

                    if ($datos_regla["MaximoInvitadoDia"] >= 0) {
                        //Consulto que el socio no supere el maximo de invitaciones que tiene en el dia
                        $sql_inv = "SELECT count(IDSocioInvitadoEspecial) as TotalDia FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and FechaInicio = '" . $FechaIngreso . "'";
                        $result_inv = $dbo->query($sql_inv);
                        $row_inv_dia = $dbo->fetchArray($result_inv);
                        if ($row_inv_dia["TotalDia"] > $datos_regla["MaximoInvitadoDia"]) {
                            $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoDia"] . " invitaciones permitidas por dia";
                        }

                    }
                    if ($datos_regla["MaximoRepeticionInvitado"] >= 0) {
                        //Consulto cuantas veces el invitado ha sido invitado por el socio en el mes
                        $sql_inv = "SELECT count(IDSocioInvitadoEspecial) as TotalMesInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and  MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDInvitado = '" . $IDInvitado . "'";
                        $result_inv = $dbo->query($sql_inv);
                        $row_inv_dia = $dbo->fetchArray($result_inv);
                        if ($row_inv_dia["TotalMesInvitado"] >= $datos_regla["MaximoRepeticionInvitado"]) {
                            $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoRepeticionInvitado"] . " invitaciones permitidas por mes para el mismo invitado";
                        }
                    }
                    if ($datos_regla["MaximoInvitadoSocio"] >= 0) {
                        //Consulto cuantas invitaciones el socio ha realizado al mes
                        $sql_inv = "SELECT count(IDSocioInvitadoEspecial) as TotalInvitacionesMes FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and  MONTH(FechaInicio) = '" . $mes_invitacion . "'";
                        $result_inv = $dbo->query($sql_inv);
                        $row_inv_dia = $dbo->fetchArray($result_inv);
                        if ($row_inv_dia["TotalInvitacionesMes"] > $datos_regla["MaximoInvitadoSocio"]) {
                            $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoSocio"] . " invitaciones permitidas por mes";
                        }
                    }
                }
            } else {
                $resultado = "ok";
            }

            return $resultado;

        }

        public function valida_regla_invitacion_v1($IDClub, $IDSocio, $NumeroDocumento, $FechaIngreso)
    {
            $dbo = &SIMDB::get();
            $mes_invitacion = substr($FechaIngreso, 5, 2);
            $year_invitacion = substr($FechaIngreso, 0, 4);
            $dia_invitacion = substr($FechaIngreso, 8, 2);
            $hoy = date("Y-m-d");
            $resultado = "ok";

            $datos_socio = $dbo->fetchAll("Socio", " IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' ", "array");
            //Consulto regla invitacion por categoria de socio
            //$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' ", "array" );

            if ($IDClub == 44 || $IDClub == 110) {
                $sql_regla = "Select * From Regla Where IDClub = '" . $IDClub . "'";

            } else {
                $sql_regla = "Select * From Regla Where IDClub = '" . $IDClub . "' and (IDCategoria like '%|" . $datos_socio["IDCategoria"] . "|%' or IDCategoria = '" . $datos_socio["IDCategoria"] . "') ";
            }
            $qry_regla = $dbo->query($sql_regla);
            $datos_regla = $dbo->fetchArray($qry_regla);

            if (empty($datos_regla["IDRegla"])):
                //Consulto regla invitacion por parentesco de socio
                //$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDParentesco like '%".$datos_socio["IDParentesco"]."|%' ", "array" );
            endif;

            if ($datos_regla["IDRegla"] > 0) {

                if ($datos_regla["MaximoInvitadoDia"] >= 0) {
                    //Consulto que el socio no supere el maximo de invitaciones que tiene en el dia
                    $sql_inv = "SELECT count(IDSocioInvitado) as TotalDia FROM SocioInvitado WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and FechaIngreso = '" . $FechaIngreso . "'";
                    $result_inv = $dbo->query($sql_inv);
                    $row_inv_dia = $dbo->fetchArray($result_inv);
                    if ($row_inv_dia["TotalDia"] > $datos_regla["MaximoInvitadoDia"]) {
                        $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoDia"] . " invitaciones permitidas por dia";
                    }

                }
                if ($datos_regla["MaximoRepeticionInvitado"] >= 0) {
                    //Consulto cuantas veces el invitado ha sido invitado por el socio en el mes
                    if ($IDClub == 44 || $IDClub == 7) {
                        $sql_inv = "SELECT count(IDSocioInvitado) as TotalMesInvitado FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' AND NumeroDocumento = '" . $NumeroDocumento . "' AND MONTH(FechaIngreso) = '" . $mes_invitacion . "' AND ((FechaIngreso > '" . $hoy . "'  AND Estado = 'P') OR (FechaIngreso < '" . $hoy . "' AND Estado = 'I'))";
                    } else {
                        $sql_inv = "SELECT count(IDSocioInvitado) as TotalMesInvitado FROM SocioInvitado WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and  MONTH(FechaIngreso) = '" . $mes_invitacion . "' and NumeroDocumento = '" . $NumeroDocumento . "'";
                    }
                    $result_inv = $dbo->query($sql_inv);
                    $row_inv_dia = $dbo->fetchArray($result_inv);
                    if ($row_inv_dia["TotalMesInvitado"] >= $datos_regla["MaximoRepeticionInvitado"]) {
                        $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoRepeticionInvitado"] . " invitaciones permitidas por mes para el mismo invitado";
                    }
                }
                if ($datos_regla["MaximoInvitadoSocio"] >= 0) {
                    //Consulto cuantas invitaciones el socio ha realizado al mes
                    $sql_inv = "SELECT count(IDSocioInvitado) as TotalInvitacionesMes FROM SocioInvitado WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' and  MONTH(FechaIngreso) = '" . $mes_invitacion . "'";
                    $result_inv = $dbo->query($sql_inv);
                    $row_inv_dia = $dbo->fetchArray($result_inv);
                    if ($row_inv_dia["TotalInvitacionesMes"] > $datos_regla["MaximoInvitadoSocio"]) {
                        $resultado = "Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoSocio"] . " invitaciones permitidas por mes";
                    }
                }
            }

            return $resultado;

        }

        public function set_autorizacion_invitado($IDClub, $IDSocio, $FechaIngreso, $FechaSalida, $DatosInvitado, $IDUsuario = "", $ValoresFormulario = "", $Masivo = "")
    {

            $dbo = &SIMDB::get();

            if ($IDClub == 1600 && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaSalida)) == 0 || date('w', strtotime($FechaSalida)) == 6)) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar los fines de semana";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if (($IDClub == 7 || $IDClub == 44 ) && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaIngreso)) == 100)) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar en el dia seleccionado";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            $datos_invitado = json_decode($DatosInvitado, true);
            if ($datos_invitado[0]["NumeroDocumento"] == 0) {
                $respuesta["message"] = "El numero de documento del invitado no es valido";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } else {
                if (!empty($FechaIngreso) && !empty($FechaSalida) && count($datos_invitado) > 0) {

                    $bloqueado = $dbo->getFields("ListaNegraApp", "NumeroDocumento", "NumeroDocumento = '" . $datos_invitado[0]["NumeroDocumento"] . "' and IDClub = '" . $IDClub . "'");

                    if (empty($bloqueado)) {

                        $hoy = date("Y-m-d");

                        if (strtotime($FechaIngreso) >= strtotime($hoy) && strtotime($FechaSalida) >= strtotime($FechaIngreso)) {

                            //verifico que el socio exista y pertenezca al club
                            $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                            if (!empty($id_socio)) {

                                // Consulto las invitaciones que puede hacer el socio
                                $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'");

                                if ((int) $numero_invitados_dia_permitido > 0) {

                                    //Consulto cuantas veces la persona ha sido invitada en el mes
                                    $mes_invitacion = substr($FechaIngreso, 5, 2);
                                    $year_invitacion = substr($FechaIngreso, 0, 4);
                                    $dia_invitacion = substr($FechaIngreso, 8, 2);

                                    //Recorro los datos de los invitados
                                    if (count($datos_invitado) > 0):

                                        //genero el codigo de autorizacion
                                        $CodigoAutorizacion = SIMUtil::genera_codigo_autorizacion("I");

                                        foreach ($datos_invitado as $detalle_datos):
                                            $IDTipoDocumento = $detalle_datos["IDTipoDocumento"];
                                            $NumeroDocumento = $detalle_datos["NumeroDocumento"];
                                            $Nombre = $detalle_datos["Nombre"];
                                            $Apellido = $detalle_datos["Apellido"];
                                            $Email = $detalle_datos["Email"];
                                            $TipoInvitado = $detalle_datos["TipoInvitado"];
                                            $Placa = $detalle_datos["Placa"];
                                            $CabezaInvitacion = $detalle_datos["CabezaInvitacion"];
                                            $MenorEdad = $detalle_datos["MenorEdad"];

                                            $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                                            $NumeroDocumento = str_replace(",", "", $NumeroDocumento);

                                            /*
                                            if($IDClub==9 && (empty($Email) || !filter_var($Email, FILTER_VALIDATE_EMAIL))) {
                                            $respuesta[ "message" ] = "El Email del invitado es obligatorio, por favor verifique";
                                            $respuesta[ "success" ] = false;
                                            $respuesta[ "response" ] = NULL;
                                            return $respuesta;
                                            }
                                             */

                                            if (empty($Email)) {
                                                $Email = "sin mail";
                                            }

                                            if (empty($Placa)) {
                                                $Placa = "sin placa";
                                            }

                                            $bloque_administrativo = self::verifica_bloqueo_invitado($NumeroDocumento, $IDClub);
                                            if ($bloque_administrativo == "S"):
                                                $respuesta["message"] = "Lo sentimos el invitado tiene un bloqueo por parte del club, no es posible realizar la invitacion";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            endif;

                                            if ($MenorEdad == "S" || (empty($IDTipoDocumento) && empty($NumeroDocumento) && empty($Email))):
                                                $NumeroDocumento = "MenorEdad" . $IDClub . rand(1, 1000000000);
                                                $IDTipoDocumento = 1;
                                            else:
                                                $NumeroDocumento = (int) $NumeroDocumento;
                                            endif;

                                            //verifico si el invitado ya esta creado
                                            $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "' ");

                                            if (!empty($IDUsuario)) {
                                                $UsuarioCrea = $IDUsuario . " " . $dbo->getFields("Usuario", "Nombre", "IDUsuario = '" . $IDUsuario . "'");
                                            } else {
                                                $UsuarioCrea = "Socio";
                                            }

                                            //Para MY el estado debe ser bloqueado para que puedan completar informacion
                                            /*
                                            if($IDClub==9)
                                            $IDEstadoInvitado = 3;
                                            else
                                            $IDEstadoInvitado = 1;
                                             */

                                            $IDEstadoInvitado = 1;

                                            //Si el invitado no existe en la tabla maestra lo creo
                                            if (empty($id_invitado) || (int) $id_invitado == 0):
                                                $inserta_invitado = "INSERT INTO Invitado (IDCLub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, MenorEdad, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
																												Values('" . $IDClub . "', '" . $IDTipoDocumento . "','" . $NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $MenorEdad . "','" . $IDEstadoInvitado . "','" . $UsuarioCrea . "',NOW())";

                                                $dbo->query($inserta_invitado);
                                                $id_invitado = $dbo->lastID();
                                            else:

                                                if (!empty($Email)) {
                                                    $CampoObservacion .= " , Email = '" . $Email . "'";
                                                }

                                                // Si ya existe actualizo los datos basicos
                                                $sql_actualizao_datos_invitado = "UPDATE Invitado Set Nombre='" . strtoupper($Nombre) . "',Apellido='" . strtoupper($Apellido) . "', Email = '" . $Email . "' " . $CampoObservacion . " Where IDInvitado = '" . $id_invitado . "'";
                                                $dbo->query($sql_actualizao_datos_invitado);
                                            endif;

                                            //Si es cabeza de familia guardo el id del Socio
                                            if ($CabezaInvitacion == "S"):
                                                $IDPadre = $id_invitado;
                                            endif;

                                            $valida_regla = self::valida_regla_invitacion_acceso($IDClub, $IDSocio, $id_invitado, $FechaIngreso);
                                            if ($valida_regla != "ok") {
                                                $respuesta["message"] = $valida_regla;
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            }

                                            //$sql_numero_invitacion = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '".$id_invitado."' and MONTH(FechaInicio) = '".$mes_invitacion."' and IDClub = '".$IDClub."'");
                                            //$numero_invitaciones = $dbo->rows($sql_numero_invitacion);
                                            //Consulto cuantas personas ha invitado el socio en el mes
                                            //$sql_invitados_mes = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '".$IDSocio."' and YEAR(FechaInicio) = '".$year_invitacion."' and MONTH(FechaInicio) = '".$mes_invitacion."' and IDClub = '".$IDClub."'");
                                            //$numero_invitados_mes = $dbo->rows($sql_invitados_mes);
                                            //Consulto cuantas personas ha invitado el socio en el dia
                                            //$sql_invitados_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '".$IDSocio."' and YEAR(FechaInicio) = '".$year_invitacion."' and MONTH(FechaInicio) = '".$mes_invitacion."' and DAY(FechaInicio) = '".$dia_invitacion."' and IDClub = '".$IDClub."'");
                                            //$numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                                            $numero_invitaciones = 0;
                                            $numero_invitados_mes = 0;

                                            $numero_invitados_mes_permitido = 500;
                                            $numero_mismo_invitado_mes = "100";
                                            $cumplimiento_obligatorio_limite = "S";

                                            // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                                            //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                                            //if ((int)$numero_invitados_dia<(int)$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite=="N"){
                                            //if ((int)$numero_invitaciones<(int)$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite=="N"){
                                            //if ((int)$numero_invitados_mes_permitido>(int)$numero_invitados_mes || $cumplimiento_obligatorio_limite=="N"){
                                            //Verifico que el invitado no este invitado mas de una vez el mismo dia

                                            //$sql_invitacion_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'");
                                            //$numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);
                                            $numero_invitaciones_dia = 0;
                                            //if((int)$numero_invitaciones_dia<=100){

                                            //Inserto invitacion
                                            $sql_inserta_inv = $dbo->query("INSERT INTO SocioInvitadoEspecial (IDClub, IDSocio, IDInvitado, IDPadre, IDPadreInvitacion, IDVehiculo, CodigoAutorizacion, CabezaInvitacion,  TipoInvitacion, FechaInicio, FechaFin, UsuarioTrCr, FechaTrCr)
																																Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $IDPadre . "','" . $IDInvitacionGenerada . "', '" . $id_vehiculo . "', '" . $CodigoAutorizacion . "','" . $CabezaInvitacion . "',
																																	'" . $TipoInvitado . "', '" . $FechaIngreso . "', '" . $FechaSalida . "', '" . $UsuarioCrea . "',NOW())");
                                            $id_invitado_inserta = $dbo->lastID();
                                            $nombre_enviar = $Nombre . " " . $Apellido;

                                            SIMUtil::notificar_nuevo_invitado($IDClub, $IDSocio, $NumeroDocumento, $nombre_enviar, $FechaIngreso, $id_invitado_inserta);

                                            //Guardo los datos de los campos
                                            $datos_formulario = json_decode($ValoresFormulario, true);
                                            if (count($datos_formulario) > 0):
                                                foreach ($datos_formulario as $detalle_datos):
                                                    $sql_datos_form = $dbo->query("Insert Into SocioInvitadoEspecialOtrosDatos (IDSocioInvitadoEspecial, IDCampoFormularioInvitado, Valor) Values ('" . $id_invitado_inserta . "','" . $detalle_datos["IDCampoFormularioInvitado"] . "','" . $detalle_datos["Valor"] . "')");
                                                    $OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
                                                endforeach;
                                            endif;

                                            //Inserto el vehiculo de la invitacion
                                            if (!empty($Placa)):
                                                $inserta_vehiculo_inv = "Insert Into VehiculoInvitacion (IDSocioInvitadoEspecial, IDVehiculo, Placa)
																																			Values('" . $id_invitado_inserta . "','" . $id_vehiculo . "','" . $Placa . "')";
                                                $dbo->query($inserta_vehiculo_inv);
                                            endif;

                                            //verifico si el vehiculo ya esta creado
                                            if (!empty($Placa)):
                                                $id_vehiculo = $dbo->getFields("Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'");
                                                //Si el vehiculo no existe en la tabla maestra lo creo
                                                if (empty($id_vehiculo) || (int) $id_vehiculo == 0):
                                                    $inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																																					Values('" . $id_invitado . "','" . $Placa . "')";
                                                    $dbo->query($inserta_vehiculo);
                                                    $id_vehiculo = $dbo->lastID();
                                                endif;
                                            endif;

                                            //Guardo el padre de la invitacion
                                            if (($CabezaInvitacion == "S" || count($datos_invitado) == 1) && empty($IDInvitacionGenerada)):
                                                //Generar Codigo QR
                                                //$parametros_codigo_qr = URLROOT . "plataform/invitadosespeciales.php?IDInvitacion=".$id_invitado_inserta."&Placa=".$Placa;
                                                $parametros_codigo_qr = $NumeroDocumento . "\r\n";

                                                if ($Masivo != "S" && $Email != "sin mail") {
                                                    SIMUtil::enviar_codigo_qr($id_invitado_inserta, $parametros_codigo_qr, "Invitado", $Email);
                                                }

                                                if ($CabezaInvitacion == "S" && empty($IDInvitacionGenerada)):
                                                    $IDInvitacionGenerada = $id_invitado_inserta;
                                                endif;
                                            endif;

                                            //}
                                            //else{
                                            //$array_errorres[] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                            //}
                                            //}
                                            //else{
                                            //$array_errorres[] = "Lo sentimos supera el numero maximo de ".$numero_invitados_mes_permitido." invitaciones por mes";
                                            //}
                                            //}
                                            //else{
                                            //$array_errorres[] = "Lo sentimos, esta persona ha sido invitadas mas de ".$numero_mismo_invitado_mes." veces en este mes.";
                                            //}
                                            //}
                                            //else{
                                            //$array_errorres[] = "Lo sentimos, supera el numero maximo de ".$numero_invitados_dia_permitido." invitaciones por dia";
                                            //}
                                        endforeach;
                                    endif;

                                    if (count($array_errorres) > 0):
                                        $otros_mensajes = implode(",", $array_errorres);
                                    endif;

                                    $respuesta["message"] = "guardado " . $otros_mensajes;
                                    $respuesta["success"] = true;
                                    $respuesta["response"] = null;

                                } else {
                                    $respuesta["message"] = "Lo sentimos, socio no tiene permisos suficientes para realizar invitaciones";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                }

                            } else {
                                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }

                        } else {
                            $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } //fin if de validacion en lista negra

                else {
                        $respuesta["message"] = "Lo sentimos, este invitado esta bloqueado por el club y no puede ingresar";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Inv acceso. Atencion faltan parametros.";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            }

            return $respuesta;

        }

        public function set_autorizacion_invitado_update($IDClub, $IDSocio, $IDInvitacion, $FechaIngreso, $FechaSalida, $DatosInvitado, $ValoresFormulario)
    {

            $dbo = &SIMDB::get();

            $datos_invitado = json_decode($DatosInvitado, true);

            if (($IDClub == 7 || $IDClub == 44 ) && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaIngreso)) == 100)) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar en el dia seleccionado";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if ($IDClub == 16000 && (date('w', strtotime($FechaIngreso)) == 0 || date('w', strtotime($FechaIngreso)) == 6 || date('w', strtotime($FechaSalida)) == 0 || date('w', strtotime($FechaSalida)) == 6)) {
                $respuesta["message"] = "Lo sentimos, no es posible invitar los fines de semana";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            if ($datos_invitado[0]["NumeroDocumento"] == 0) {
                $respuesta["message"] = "El numero de documento del invitado no es valido";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            } else {

                if (!empty($FechaIngreso) && !empty($FechaSalida) && !empty($IDInvitacion) && count($datos_invitado) > 0) {

                    $hoy = date("Y-m-d");
                    if (strtotime($FechaIngreso) >= strtotime($hoy) && strtotime($FechaSalida) >= strtotime($FechaIngreso)) {

                        //verifico que el socio exista y pertenezca al club
                        $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                        if (!empty($id_socio)) {

                            // Consulto las invitaciones que puede hacer el socio
                            $numero_invitados_dia_permitido = $dbo->getFields("Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'");

                            if ((int) $numero_invitados_dia_permitido > 0) {

                                //Consulto cuantas veces la persona ha sido invitada en el mes
                                $mes_invitacion = substr($FechaIngreso, 5, 2);
                                $year_invitacion = substr($FechaIngreso, 0, 4);
                                $dia_invitacion = substr($FechaIngreso, 8, 2);

                                //Recorro los datos de los invitados
                                if (count($datos_invitado) > 0):
                                    //Borro las invitaciones para volverlas a crear
                                    $datos_invitacion_especial = $dbo->fetchAll("SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array");
                                    //$sql_borra_inv = $dbo->query("Delete From SocioInvitadoEspecial Where IDPadre = '".$datos_invitacion_especial["IDInvitado"]."'");
                                    //$sql_borra_inv = $dbo->query("Delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '".$IDInvitacion."'");

                                    foreach ($datos_invitado as $detalle_datos):
                                        //$IDInvitacion = $detalle_datos["IDInvitacion"];
                                        $IDTipoDocumento = $detalle_datos["IDTipoDocumento"];
                                        $NumeroDocumento = $detalle_datos["NumeroDocumento"];
                                        $Nombre = $detalle_datos["Nombre"];
                                        $Apellido = $detalle_datos["Apellido"];
                                        $Email = $detalle_datos["Email"];
                                        $TipoInvitado = $detalle_datos["TipoInvitado"];
                                        $Placa = $detalle_datos["Placa"];
                                        $CabezaInvitacion = $detalle_datos["CabezaInvitacion"];
                                        $MenorEdad = $detalle_datos["MenorEdad"];

                                        $NumeroDocumento = str_replace(".", "", $NumeroDocumento);
                                        $NumeroDocumento = str_replace(",", "", $NumeroDocumento);

                                        if ($MenorEdad == "S" || (empty($IDTipoDocumento) && empty($NumeroDocumento) && empty($Email))):
                                            $NumeroDocumento = "MenorEdad" . $IDClub . rand(1, 1000000000);
                                            $IDTipoDocumento = 1;
                                        else:
                                            $NumeroDocumento = (int) $NumeroDocumento;
                                        endif;

                                        //verifico si el invitado ya esta creado
                                        $id_invitado = $dbo->getFields("Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '" . $IDClub . "' ");
                                        //Si el invitado no existe en la tabla maestra lo creo
                                        if (empty($id_invitado) || (int) $id_invitado == 0):
                                            $inserta_invitado = "Insert Into Invitado (IDCLub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, MenorEdad, UsuarioTrCr, FechaTrCr)
																											 Values('" . $IDClub . "','" . $IDTipoDocumento . "','" . $NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $MenorEdad . "','App',NOW())";
                                            $dbo->query($inserta_invitado);
                                            $id_invitado = $dbo->lastID();
                                        else:

                                            if (!empty($Email)) {
                                                $CampoObservacion .= " , Email = '" . $Email . "'";
                                            }

                                            $actualiza_invitado = "Update Invitado set IDTipoDocumento = '" . $IDTipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "', Apellido = '" . strtoupper($Apellido) . "', Email='" . $Email . "', UsuarioTrEd = 'App', FechaTrEd = NOW() " . $CampoObservacion . " Where IDInvitado = '" . $id_invitado . "'";
                                            $dbo->query($actualiza_invitado);
                                        endif;

                                        //Si es cabeza de familia guardo el id del Socio
                                        if ($CabezaInvitacion == "S"):
                                            $IDPadre = $id_invitado;
                                        endif;

                                        $sql_numero_invitacion = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                                        $numero_invitaciones = $dbo->rows($sql_numero_invitacion);
                                        //Consulto cuantas personas ha invitado el socio en el mes
                                        $sql_invitados_mes = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'");
                                        $numero_invitados_mes = $dbo->rows($sql_invitados_mes);
                                        //Consulto cuantas personas ha invitado el socio en el dia
                                        $sql_invitados_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'");
                                        $numero_invitados_dia = $dbo->rows($sql_invitados_dia);

                                        $numero_invitados_mes_permitido = 500;
                                        $numero_mismo_invitado_mes = "300";
                                        $cumplimiento_obligatorio_limite = "S";

                                        // Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
                                        //$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

                                        if ((int) $numero_invitados_dia < (int) $numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N") {
                                            if ((int) $numero_invitaciones < (int) $numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N") {
                                                if ((int) $numero_invitados_mes_permitido > (int) $numero_invitados_mes || $cumplimiento_obligatorio_limite == "N") {
                                                    //Verifico que el invitado no este invitado mas de una vez el mismo dia

                                                    $sql_invitacion_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '" . $id_invitado . "' and FechaInicio = '" . $FechaIngreso . "'");
                                                    $numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);
                                                    if ((int) $numero_invitaciones_dia <= 1) {

                                                        //verifico si el vehiculo ya esta creado
                                                        if (!empty($Placa)):
                                                            $id_vehiculo = $dbo->getFields("Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'");
                                                            //Si el vehiculo no existe en la tabla maestra lo creo
                                                            if (empty($id_vehiculo) || (int) $id_vehiculo == 0):
                                                                $inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																																				 Values('" . $id_invitado . "','" . $Placa . "')";
                                                                $dbo->query($inserta_vehiculo);
                                                                $id_vehiculo = $dbo->lastID();
                                                            endif;
                                                        endif;

                                                        if (empty($id_invitado) || (int) $id_invitado == 0):
                                                            //Inserto invitacion
                                                            $sql_inserta_inv = $dbo->query("INSERT INTO SocioInvitadoEspecial (IDClub, IDSocio, IDInvitado, IDPadre, IDVehiculo, CabezaInvitacion, TipoInvitacion, FechaInicio, FechaFin, UsuarioTrCr, FechaTrCr)
																								 Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $IDPadre . "', '" . $id_vehiculo . "', '" . $CabezaInvitacion . "', '" . $TipoInvitado . "', '" . $FechaIngreso . "', '" . $FechaSalida . "', 'WebService',NOW())");
                                                            $id_invitacion_update = $dbo->lastID();
                                                            $nombre_enviar = $Nombre . " " . $Apellido;
                                                        else:

                                                            if (!empty($Email)) {
                                                                $CampoObservacion .= " , Email = '" . $Email . "'";
                                                            }

                                                            //Actualizo invitacion
                                                            $sql_actualiza_inv = $dbo->query("Update SocioInvitadoEspecial Set IDClub = '" . $IDClub . "', IDSocio = '" . $IDSocio . "', IDInvitado = '" . $id_invitado . "', IDPadre = '" . $IDPadre . "', IDVehiculo = '" . $id_vehiculo . "', CabezaInvitacion = '" . $CabezaInvitacion . "', TipoInvitacion = '" . $TipoInvitado . "', FechaInicio = '" . $FechaIngreso . "', FechaFin = '" . $FechaSalida . "', UsuarioTrEd = 'WebService', FechaTrEd = NOW() Where IDSocioInvitadoEspecial = '" . $IDInvitacion . "'");

                                                        endif;

                                                        //SIMUtil::notificar_nuevo_invitado( $IDClub, $IDSocio, $NumeroDocumento, $nombre_enviar , $FechaIngreso );

                                                        //Guardo los datos de los campos
                                                        $datos_formulario = json_decode($ValoresFormulario, true);
                                                        if (count($datos_formulario) > 0):
                                                            foreach ($datos_formulario as $detalle_datos):
                                                                $sql_datos_form = $dbo->query("Insert Into SocioInvitadoEspecialOtrosDatos (IDSocioInvitadoEspecial, IDCampoFormularioInvitado, Valor) Values ('" . $id_invitacion_update . "','" . $detalle_datos["IDCampoFormularioInvitado"] . "','" . $detalle_datos["Valor"] . "')");
                                                                $OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
                                                            endforeach;
                                                        endif;

                                                        //Inserto el vehiculo de la invitacion
                                                        if (!empty($Placa)):
                                                            $inserta_vehiculo_inv = "Insert Into VehiculoInvitacion (IDSocioInvitadoEspecial, IDVehiculo, Placa)
																																		 Values('" . $id_invitado_inserta . "','" . $id_vehiculo . "','" . $Placa . "')";
                                                            $dbo->query($inserta_vehiculo_inv);
                                                        endif;

                                                    } else {
                                                        $array_errorres[] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
                                                    }
                                                } else {
                                                    $array_errorres[] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
                                                }
                                            } else {
                                                $array_errorres[] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
                                            }
                                        } else {
                                            $array_errorres[] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
                                        }
                                    endforeach;
                                endif;

                                if (count($array_errorres) > 0):
                                    $otros_mensajes = implode(",", $array_errorres);
                                endif;

                                $respuesta["message"] = "guardado " . $otros_mensajes;
                                $respuesta["success"] = true;
                                $respuesta["response"] = null;

                            } else {
                                $respuesta["message"] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            }

                        } else {
                            $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        }

                    } else {
                        $respuesta["message"] = "Lo sentimos, no se permite fechas antiguas";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = "Invitado: Atencion faltan parametros";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }
            }

            return $respuesta;

        }

        public function buscar_elemento_disponible($IDClub, $IDServicio, $Fecha, $Hora, $IDElementoPadre = "", $IDTipoReserva = "", $EdadSocio = "")
    {

            $dbo = &SIMDB::get();
            $IDElemento = "";
            $elemento_encontrado = 0;
            $validar_campo_aut = "S";
            $datos_elemento_padre = $dbo->fetchAll("ServicioElemento", " IDServicioElemento = '" . $IDElementoPadre . "' ", "array");
            // Verifico cuantos elementos tienen esta hora disponible
            $dia_fecha = date('w', strtotime($Fecha));
            $sql_dispo_hora = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) and Activo <>'N' Order by HoraDesde";
            $qry_dispo_hora = $dbo->query($sql_dispo_hora);
            while ($row_dispo_hora = $dbo->fetchArray($qry_dispo_hora)):
                if (!empty($row_dispo_hora["IDServicioElemento"])):
                    $array_elementos_hora = explode("|", $row_dispo_hora["IDServicioElemento"]);

                    if (count($array_elementos_hora) > 0):
                        foreach ($array_elementos_hora as $id_elemento_hora):
                            if (!empty($id_elemento_hora)):
                                $array_id_elemento[] = $id_elemento_hora;
                            endif;
                        endforeach;
                        $id_elemento_permitido = implode(",", $array_id_elemento);

                        /*
                        Especial para Lagartos en donde unos profesores se les asigna unas canchas que no pueden ser reservadas automaticamente
                        pero a ellos si se les asigna solo en el horario de la maÃ±ana los fines de semana
                         */
                        if ($IDClub == 7 && ($IDServicio == 43 || $IDServicio == 221)) {

                            //revisar si esta en corea o lago y tiene cancha asignada
                            $sql_elemento_asociado = "Select * From ServicioElementoAsociado Where IDServicioElementoPrincipal = '" . $IDElementoPadre . "' limit 1";
                            $result_elemento_asociado = $dbo->query($sql_elemento_asociado);
                            if ($dbo->rows($result_elemento_asociado) > 0):
                                $row_elemento_asociado_cancha = $dbo->fetchArray($result_elemento_asociado);
                                $id_elemento_hora_cancha = $row_elemento_asociado_cancha["IDServicioElementoSecundario"];
                            endif;

                            $id_elemento_corea = "193,194,195,196,197,198,199"; //Canchas de corea
                            $array_elemento_corea = array("193", "194", "195", "196", "197", "198", "199");
                            //$id_elemento_corea="197,198,199"; //Canchas de corea
                            $id_elemento_lago = "200,201,202,203,204,205,206,207,208,209,210,7458,8571,8572,8573"; //Canchas de lago
                            $array_elemento_lago = array("200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210"); //Canchas de lago
                            if (($dia_fecha == 30 || $dia_fecha == 36)) {
                                if (($Hora == "06:00:00" || $Hora == "07:00:00" || $Hora == "08:00:00")) {
                                    //if(( $Hora >= "06:00:00")){
                                    switch ($datos_elemento_padre["FinSemanaCancha"]) {
                                        case "Corea":
                                            $id_elemento_permitido = $id_elemento_corea;
                                            if (in_array($id_elemento_hora_cancha, $array_elemento_corea)) {
                                                $validaciones = "S";
                                            } else {
                                                $validaciones = "N";
                                            }

                                            break;
                                        case "Lago":
                                            $id_elemento_permitido = $id_elemento_lago;
                                            if (in_array($id_elemento_hora_cancha, $array_elemento_lago)) {
                                                $validaciones = "S";
                                            } else {
                                                $validaciones = "N";
                                            }

                                            break;
                                        default:
                                            $id_elemento_permitido = $id_elemento_lago;
                                    }
                                } else {
                                    $id_elemento_permitido = $id_elemento_lago;
                                    $validaciones = "N";
                                }

                            } else {
                                $validaciones = "N";
                                $id_elemento_corea = "193,194,195,196,197,198,199"; //Canchas de corea
                                //$id_elemento_corea="197,198,199"; //Canchas de corea
                                switch ($datos_elemento_padre["EntreSemanaCancha"]) {
                                    case "Corea":
                                        $id_elemento_permitido = $id_elemento_corea;
                                        if (in_array($id_elemento_hora_cancha, $array_elemento_corea)) {
                                            $validaciones = "S";
                                        } else {
                                            $validaciones = "N";
                                        }

                                        break;
                                    case "Lago":
                                        $id_elemento_permitido = $id_elemento_lago;
                                        if (in_array($id_elemento_hora_cancha, $array_elemento_lago)) {
                                            $validaciones = "S";
                                        } else {
                                            $validaciones = "N";
                                        }

                                        break;
                                    default:
                                        $id_elemento_permitido = $id_elemento_lago;
                                }
                            }

                            if ($IDClub == 7 && (int) $EdadSocio > 0 && (int) $EdadSocio <= 6 && $IDServicio == 221) {
                                if ($IDElementoPadre == 3320 || $IDElementoPadre == 8687) {
                                    $id_elemento_permitido = "7458,7459";
                                    $validaciones = "N";
                                } else {
                                    $id_elemento_permitido = "8572,8573";
                                    $validaciones = "N";
                                }
                            }

                        }

                        unset($array_elementos_hora);
                        //ordeno el array por el orden definido a tomar en cuenta para reservar, ejemplo: primero reservar la cancha 18 y no la 1
                        $sql_elemento_servicio = "Select IDServicioElemento,OrdenReserva From ServicioElemento Where IDServicioElemento in (" . $id_elemento_permitido . ") Order by OrdenReserva ASC";
                        $result_elemento_servicio = $dbo->query($sql_elemento_servicio);
                        while ($row_elemento_servicio = $dbo->fetchArray($result_elemento_servicio)):
                            $array_elementos_hora[] = $row_elemento_servicio["IDServicioElemento"];
                        endwhile;
                    endif;
                    ksort($array_elementos_hora);
                    $contador_elemento = 0;
                    foreach ($array_elementos_hora as $id_elemento_hora):
                        $contador_elemento++;
                        //verifo que el elemento pueda ser reservado automaticamente por otro servicio (por ejemplo cancha al tomar una clase)
                        $permite_reserva_automatica = $dbo->getFields("ServicioElemento", "PermiteReservaAutomatica", "IDServicioElemento = '" . $id_elemento_hora . "'");

                        if ($validaciones == "N") {
                            $permite_reserva_automatica = "S";
                            $validar_campo_aut = "S";
                        }

                        //Si se configura un elemento con otro fijo (por ejemplo un profesor de tenis con una cancha fija) se da prioridad para reservar esa cancha asi este configurada como reserva automatica en no
                        if ($contador_elemento == 1 && $validar_campo_aut == "S" && $validaciones != "N"):
                            $sql_elemento_asociado = "Select * From ServicioElementoAsociado Where IDServicioElementoPrincipal = '" . $IDElementoPadre . "' limit 1";
                            $result_elemento_asociado = $dbo->query($sql_elemento_asociado);
                            if ($dbo->rows($result_elemento_asociado) > 0):
                                $row_elemento_asociado = $dbo->fetchArray($result_elemento_asociado);
                                $id_elemento_hora = $row_elemento_asociado["IDServicioElementoSecundario"];
                                $permite_reserva_automatica = "S";
                            endif;
                        endif;

                        //Validacion especial para Mesa de yeguas donde si se escoje cancha niÃ±o debe solo reservar las canchas de niÃ±os

                        if ($IDClub == 9 && $IDTipoReserva == 112):
                            //Canchas de minitenis
                            if ($id_elemento_hora == "642" || $id_elemento_hora == "643" || $id_elemento_hora == "644" || $id_elemento_hora == "645"):
                                $permite_reserva_automatica = "S";
                            else:
                                $permite_reserva_automatica = "N";
                            endif;
                        endif;

                        //FIN Validacion especial para Mesa de yeguas

                        if (!empty($id_elemento_hora) && $permite_reserva_automatica != "N"):
                            // verifico que no este reservado
                            $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $id_elemento_hora . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'");
                            if (empty($id_reserva_disponible)):
                                //verifico que no tenga cierre a esa hora
                                $verifica_abierto_servicio_hora = SIMWebservice::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $id_elemento_hora, $Hora);
                                if (empty($verifica_abierto_servicio_hora)):
                                    $elemento_encontrado = 1;
                                    return $id_elemento_hora;
                                endif;
                            endif;
                        endif;
                    endforeach;
                endif;
            endwhile;
            return $IDElemento;
        }

        public function set_separa_reserva($IDClub, $IDSocio, $IDElemento, $IDServicio, $Tee, $Fecha, $Hora, $IDTipoReserva = '', $NumeroTurnos = "")
    {
            $dbo = &SIMDB::get();
            $flag_reserva_cancha_clase = 0;

            if (empty($NumeroTurnos)) {
                $NumeroTurnos = 1;
            }

            //if ( ($IDClub == 7 && ($IDServicio==22 || $IDServicio==19563) && $Hora>="06:00:00" && $Hora<="11:00:00" && (date("H:i:s")<'05:00:00' || date("Y-m-d")!=$Fecha)  )   ):
            if (($IDClub == 7 && ($IDServicio == 22 || $IDServicio == 19563) && $Hora >= "06:00:00" && $Hora <= "08:45:00" && (date("H:i:s") < '05:15:00' || date("Y-m-d") != $Fecha))):
                $respuesta["message"] = "Lo sentimos los turnos entre las 6am y 8:15 am solo los puede reservar despues de las 5:15am del mismo dia ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            //Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
            if ($IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517"):
                $RepetirFechaFinal = strtotime('+1 week', strtotime($Fecha));
                $minima_fecha = date("Y-m") . "-14";
                $maxima_fecha = new DateTime();
                $maxima_fecha->modify('last day of this month');
                $maxima_fecha->format('Y-m-d');
                if ((int) date("d") <= 14 && (int) date("d", $RepetirFechaFinal) <= 14):
                    $permite_repetir = "S";
                elseif ((int) date("d") >= 15 && $RepetirFechaFinal <= strtotime($maxima_fecha->format('Y-m-d'))):
                    $permite_repetir = "S";
                else:
                    $permite_repetir = "N";
                endif;
                if ($permite_repetir == "S"):
                    $mensaje_especial_repetir = " Se realizara una reserva automatica para el dÃ­a " . date("Y-m-d", $RepetirFechaFinal);
                    $Repetir = "S";
                else:
                    $mensaje_especial_repetir = " No se puede realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
                endif;
            endif;
            //Fin validaciÃ³n especial

            $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'");
            // Si el servicio es una clase y necesita reservar cancha
            $id_servicio_cancha = $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
            if ($id_servicio_cancha > 0):
                // Consulto el servicio del club asociado a este servicio maestro
                $IDServicioCanchaClub = $dbo->getFields("Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'");
                // Valido si existe una cancha disponible en el horario de la clase
                $IDElemento_cancha = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicioCanchaClub, $Fecha, $Hora, $IDElemento);
                if (empty($IDElemento_cancha)):
                    $respuesta["message"] = "Lo sentimos no existe una cancha disponible para tomar la clase en este horario.";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                else:
                    $flag_reserva_cancha_clase = 1;
                endif;
            endif;

            //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
            if (!empty($IDTipoReserva)):
                $datos_tipo_reserva = $dbo->fetchAll("ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array");
                $cantidad_turnos = $datos_tipo_reserva["NumeroTurnos"];

                if (((int) $cantidad_turnos > 1)):
                    //$cantidad_turnos-=1; // Quito uno para que no cuente la reserva primera

                    // Separo las reservas
                    $array_hora_siguiente_turno_diponible = SIMWebService::valida_siguiente_turno_sin_reserva($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos);

                    if (count($array_hora_siguiente_turno_diponible) != (int) ($cantidad_turnos - 1) || !is_array($array_hora_siguiente_turno_diponible)):
                        $respuesta["message"] = "Se necesitan: " . $cantidad_turnos . " turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion.";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    else:
                        $flag_separa_siguiente_turno = 1;
                    endif;
                endif;
            endif;

            //Si turnos es mayor a 1  verifico que los siguientes turnos esten disponibles y los separo
            if ((int) $NumeroTurnos > 1):
                if ($id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30): //Golf
                    $array_disponible = SIMWebService::valida_siguiente_turno_disponible_golf($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, $Tee, "", "");
                else:
                    $array_disponible = SIMWebService::valida_siguiente_turno_sin_reserva($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos);
                endif;

                if (count($array_disponible) != $NumeroTurnos):
                    $respuesta["message"] = "Se necesitan " . $NumeroTurnos . " turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                else:
                    // separo todos los turnos necesarios
                    foreach ($array_disponible as $key_hora => $dato_hora):
                        $sql_inserta_reserva = $dbo->query("Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, UsuarioTrCr, FechaTrCr)
																										Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $Fecha . "', '" . $dato_hora . "','" . $Tee . "', 'WebService',NOW())");
                        $id_reserva_general = $dbo->lastID();

                    endforeach;
                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = $id_reserva_general;
                    return $respuesta;
                endif;
            endif;

            // Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
            if (empty($IDElemento)):
                $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'");
                $id_servicio_inicial = $dbo->getFields("ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                if ($id_servicio_inicial == 5): // 5 = get_reserva_aleatoria
                    $IDElemento = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicio, $Fecha, $Hora, $IDElemento);
                endif;
            endif;

            $Hora = SIMWebService::validar_formato_hora($Hora);

            if (!empty($IDClub) && !empty($IDSocio) && !empty($IDElemento) && !empty($IDServicio) && !empty($Fecha) && !empty($Hora)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    // verifico que todavia este disponible la reserva
                    if (!empty($Tee)):
                        $condicion_tee = " and Tee = '" . $Tee . "'";
                    endif;

                    //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
                    /*
                    $suma_rand = rand(0,2);
                    $rand_seg = rand(1,3)+$suma_rand;
                    sleep($rand_seg);
                     */

                    $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee");

                    if (($id_servicio_maestro == "15" || $id_servicio_maestro == "27" || $id_servicio_maestro == "28") && empty($Tee) && !empty($id_reserva_disponible)):
                        $Tee = "Tee10";
                        $condicion_tee = " and Tee = '" . $Tee . "'";
                        $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee");
                        if (!empty($id_disponible_tee)):
                            $Tee = "Tee1";
                            $condicion_tee = " and Tee = '" . $Tee . "'";
                            $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee");
                        endif;
                    endif;

                    // Obtener la disponibilidad utilizada al consultar la reserva
                    $id_disponibilidad = SIMWebService::obtener_disponibilidad_utilizada($IDServicio, $Fecha, $IDElemento, $Hora);
                    $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array");
                    // Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
                    $cupo_total = "S"; // ya no hay cupos
                    $cupos_disponibilidad = $dbo->getFields("Disponibilidad", "Cupos", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    if ((int) $cupos_disponibilidad > 1):
                        //Consulto cuantos reservas se han tomado en esta hora para saber si ya llegÃ³ al limite de cupos
                        $cupos_reservados = self::valida_cupos_disponibles($IDClub, $IDServicio, $IDElemento, $Fecha, $Hora);
                        //Valido si todavia existe cupo en esta hora
                        if ($cupos_reservados <= $datos_disponibilidad["Cupos"]):
                            $cupo_total = "N"; // aun hay cupos disponibles
                        endif;
                        $numero_inscripcion = rand(0, 999999);
                    else:
                        $numero_inscripcion = 0;
                    endif;

                    if (empty($id_reserva_disponible) || $cupo_total == "N"):
                        //Guardo la reserva
                        $sql_inserta_reserva = $dbo->query("Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, NumeroInscripcion, UsuarioTrCr, FechaTrCr)
																			Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $Fecha . "', '" . $Hora . "','" . $Tee . "', '" . $numero_inscripcion . "','WebService Separa',NOW())");

                        if (!$sql_inserta_reserva):
                            $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;

                        endif;

                        $id_reserva_general = $dbo->lastID();

                        //Valido que no haya quedado dos separaciones
                        if ($cupos_disponibilidad <= 1):
                            /*
                            $suma_rand = rand(0,2);
                            $rand_seg = rand(0,3)+$suma_rand;
                            sleep($rand_seg);
                             */
                            $sql_duplicada = "Select * From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee";
                            $result_duplicada = $dbo->query($sql_duplicada);
                            if ($dbo->rows($result_duplicada) > 1):
                                $respuesta["message"] = "Lo sentimos la reserva ya fue o esta siendo tomada!";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                            endif;
                        endif;

                        //Verifico que el elemnto no hay sido reservado a esta misma hora en otro servicio
                        $condicion_multiple_elemento = SIMWebService::verifica_elemento_otro_servicio($IDElemento, "");
                        //Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
                        $array_otro_elemento = explode(",", $condicion_multiple_elemento);
                        //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
                        //$suma_rand = rand(0,1);
                        //$rand_seg = rand(1,1)+$suma_rand;
                        //sleep($rand_seg);
                        if (count($array_otro_elemento) > 1): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
                            foreach ($array_otro_elemento as $id_elemento_multiple):
                                if ($id_elemento_multiple != $IDElemento && !empty($id_elemento_multiple)):
                                    $sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva = 3 ) and Hora = '" . $Hora . "' ";
                                    $qry_reserva_elemento_mult = $dbo->query($sql_reserva_elemento_multp);
                                    if ($dbo->rows($qry_reserva_elemento_mult) > 0):
                                        $respuesta["message"] = "Lo sentimos la reserva ya fue o esta siendo tomada!!";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;
                                endif;
                            endforeach;
                        endif;

                        // SI el servicio es una clase y se solicta reservar una cancha realizo la reserva temporal
                        if ($flag_reserva_cancha_clase == 1):
                            // Obtener la disponibilidad utilizada al consultar la reserva
                            $id_disponibilidad_cancha = SIMWebService::obtener_disponibilidad_utilizada($IDServicioCanchaClub, $Fecha, $IDElemento_cancha);
                            $sql_inserta_reserva_cancha = $dbo->query("INSERT INTO ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, Tipo, UsuarioTrCr, FechaTrCr)
														Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicioCanchaClub . "','" . $IDElemento_cancha . "', '3','" . $id_disponibilidad . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "',
																		'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','Automatica','WebService',NOW())");
                            $id_reserva_cancha = $dbo->lastID();
                            //Agrego la relacion de servicio padre (Clase)y servicios hijos (canchas) reservados
                            $sql_reserva_automatica = $dbo->query("INSERT INTO ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva )
																							   Values ('" . $id_reserva_general . "','" . $id_reserva_cancha . "','" . $IDClub . ".','" . $IDSocio . "','" . $IDElemento_cancha . "','" . $Fecha . "','" . $Hora . "','3')");
                        endif;

                        // Si se va a reservas mas turnos seguidos y la validacion fue exitosa borro las separacion hechas
                        if ($flag_separa_siguiente_turno == 1 && count($array_hora_siguiente_turno_diponible) > 0):
                            foreach ($array_hora_siguiente_turno_diponible as $Hora_siguiente):
                                // Borro la reserva separada
                                $sql_inserta_reserva = $dbo->query("Select * From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3");
                                while ($row_turno_siguiente = $dbo->fetchArray($sql_inserta_reserva)):
                                    $sql_reserva_automatica = $dbo->query("Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																																  Values ('" . $id_reserva_general . "','" . $row_turno_siguiente["IDReservaGeneral"] . "','" . $IDClub . "','" . $IDSocio . "','" . $row_turno_siguiente["IDServicioElemento"] . "','" . $Fecha . "','" . $Hora_siguiente . "','3')");
                                endwhile;
                            endforeach;
                        endif;

                        //Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
                        if ($IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517"):
                            $RepetirFechaFinal = strtotime('+1 week', strtotime($Fecha));
                            $minima_fecha = date("Y-m") . "-14";
                            $maxima_fecha = new DateTime();
                            $maxima_fecha->modify('last day of this month');
                            $maxima_fecha->format('Y-m-d');
                            if ((int) date("d") <= 14 && (int) date("d", $RepetirFechaFinal) <= 14):
                                $permite_repetir = "S";
                            elseif ((int) date("d") >= 15 && $RepetirFechaFinal <= strtotime($maxima_fecha->format('Y-m-d'))):
                                $permite_repetir = "S";
                            else:
                                $permite_repetir = "N";
                            endif;
                            if ($permite_repetir == "S"):
                                $mensaje_especial_repetir = " Se realizÃ³ un reserva automatica para el dÃ­a " . date("Y-m-d", $RepetirFechaFinal);
                                $Repetir = "S";
                                $Periodo = "Semana";
                                $RepetirFechaFinal = date("Y-m-d", $RepetirFechaFinal);
                                $sql_inserta_reserva_prox = $dbo->query("Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, NumeroInscripcion, Tipo, UsuarioTrCr, FechaTrCr)
																									Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $RepetirFechaFinal . "', '" . $Hora . "','" . $Tee . "', '" . $numero_inscripcion . "','Automatica','WebService',NOW())");
                                $id_reserva_aut = $dbo->lastID();
                                $sql_reserva_automatica = $dbo->query("Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva,Tipo )
																										   Values ('" . $id_reserva_general . "','" . $id_reserva_aut . "','" . $IDClub . ".','" . $IDSocio . "','" . $IDElemento . "','" . $Fecha . "','" . $Hora . "','3','Repetir')");
                                if (!$sql_inserta_reserva_prox):
                                    //Agrego la relacion de servicio padre (Clase)y servicios hijos (canchas) reservados
                                    $respuesta["message"] = "La reserva automatica de la proxima semana ya fue o esta siendo tomada";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                endif;

                            else:
                                $mensaje_especial_repetir = " No se pudo realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
                            endif;
                        endif;
                        //Fin validaciÃ³n especial

                        $respuesta["message"] = "Guardado";
                        $respuesta["success"] = true;
                        $respuesta["response"] = $id_reserva_general;

                    else:
                        $respuesta["message"] = "Lo sentimos la reserva ya fue o esta siendo tomada " . $Tee . " " . $cupos_reservados;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;

                    endif;

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "18. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function set_libera_reserva($IDClub, $IDSocio, $IDElemento, $IDServicio, $Tee, $Fecha, $Hora)
    {
            $dbo = &SIMDB::get();
            if (!empty($IDClub) && !empty($IDSocio) && !empty($IDElemento) && !empty($IDServicio) && !empty($Fecha) && !empty($Hora)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    // Consulto la reserva
                    $sql_reserva_general = $dbo->query("Select * From ReservaGeneral Where  IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva = 3 and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'");
                    $row_reserva_general = $dbo->fetchArray($sql_reserva_general);
                    //Elimino la reserva
                    //$sql_libera_reserva = $dbo->query("DELETE FROM ReservaGeneral WHERE IDClub = '".$IDClub."' and IDSocio = '".$IDSocio."' and IDServicio = '".$IDServicio."' and IDServicioElemento = '".$IDElemento."' and IDEstadoReserva = 3 and Fecha = '".$Fecha."' and Hora = '".$Hora."'");
                    $sql_libera_reserva = $dbo->query("DELETE FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_reserva_general["IDReservaGeneral"] . "' ");
                    //Elimino las relacionadas
                    $sql_reserva_auto = $dbo->query("Select * From ReservaGeneralAutomatica Where  IDReservaGeneral = '" . $row_reserva_general["IDReservaGeneral"] . "'");
                    while ($row_reserva_auto = $dbo->fetchArray($sql_reserva_auto)):
                        $sql_libera_reserva = $dbo->query("DELETE FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAutomatica = '" . $row_reserva_auto["IDReservaGeneralAutomatica"] . "'");
                        $sql_libera_reserva = $dbo->query("DELETE FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_reserva_auto["IDReservaGeneralAsociada"] . "'");
                    endwhile;

                    $respuesta["message"] = "Guardado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = "reserva eliminada";

                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "19. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function validar_turnos_seguidos($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDBeneficiario = "", $TipoBeneficiario = "", $PermiteReservaSeguidaNucleo)
    {
            $dbo = &SIMDB::get();
            $flag_turno_seguido = 0;
            $array_confirmado = array();
            // Consulto los turnos reservados y confirmados del socio para no tomar los separados
            if (!empty($IDBeneficiario)):
                $condicion_beneficiario = " and  (IDSocioBeneficiario = '" . $IDBeneficiario . "' or IDInvitadoBeneficiario = '" . $IDBeneficiario . "' or IDInvitadoBeneficiario = '0')";
            else:
                $condicion_beneficiario = " and  IDSocioBeneficiario = '0' and IDInvitadoBeneficiario = '0'";
            endif;

            // Valido tambien para que los de la misma acciÃ³n no puedan tomar turnos seguidos
            //Si en la configuracion esta marcada como "No" de lo contrario se permite turnos seguios asi sean de la misma accion
            if ($PermiteReservaSeguidaNucleo == "N"):
                $accion_padre = $dbo->getFields("Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'");
                $accion_socio = $dbo->getFields("Socio", "Accion", "IDSocio = '" . $IDSocio . "'");
                if (empty($accion_padre)): // Es titular
                    $array_socio[] = $IDSocio;
                    $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                    $result_nucleo = $dbo->query($sql_nucleo);
                    while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                        $array_socio[] = $row_nucleo["IDSocio"];
                    endwhile;
                else:
                    $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
                    $result_nucleo = $dbo->query($sql_nucleo);
                    while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                        $array_socio[] = $row_nucleo["IDSocio"];
                    endwhile;
                endif;
                if (count($array_socio) > 0):
                    $id_socio_nucleo = implode(",", $array_socio);
                endif;
            else:
                $id_socio_nucleo = $IDSocio;
            endif;

            //$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva    = 1 " . $condicion_beneficiario;
            $sql_confirmado = "Select * From  ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ")  and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1 " . $condicion_beneficiario;
            $qry_confirmado = $dbo->query($sql_confirmado);
            while ($r_confirmado = $dbo->fetchArray($qry_confirmado)):
                $array_confirmado[] = $r_confirmado["Hora"];
            endwhile;

            $array_horarios = SIMWebService::get_disponiblidad_elemento_servicio($IDClub, $IDServicio, $Fecha, "", "");
            foreach ($array_horarios["response"][0]["Disponibilidad"][0] as $id_horario => $datos_horario):
                if (in_array($IDSocio, $array_socio) && in_array($datos_horario["Hora"], $array_confirmado)):
                    $id_socio_turno = $IDSocio;
                elseif (empty($array_turnos_dia[$datos_horario["Hora"]])):
                    $id_socio_turno = "";
                endif;
                if (empty($array_turnos_dia[$datos_horario["Hora"]])):
                    $array_turnos_dia[$datos_horario["Hora"]] = $id_socio_turno;
                endif;
            endforeach;

            for ($i = 1; $i <= count($array_turnos_dia); $i++):
                current($array_turnos_dia);
                //Primer Posicion
                if ($i == 1 && key($array_turnos_dia) == $Hora && current($array_turnos_dia) == $IDSocio): // Es el primer horario y lo valido
                    $flag_turno_seguido = 1;
                endif;
                if (key($array_turnos_dia) == $Hora):
                    // me devuelvo al turno anterior
                    prev($array_turnos_dia);
                    if (current($array_turnos_dia) == $IDSocio):
                        $flag_turno_seguido = 2;
                    endif;
                    //Adelanto dos turnos, si es el final solo uno
                    next($array_turnos_dia);
                    if (current($array_turnos_dia) == $IDSocio):
                        $flag_turno_seguido = 3;
                    endif;
                    if ($i != count($array_turnos_dia)):
                        next($array_turnos_dia);
                    endif;
                    if (current($array_turnos_dia) == $IDSocio):
                        $flag_turno_seguido = 4;
                    endif;
                endif;
                next($array_turnos_dia);
            endfor;

            return $flag_turno_seguido;

        }

        public function validar_regla_turnos($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva)
    {
            $dbo = &SIMDB::get();
            $regla_no_cumplida = 0;
            $turno_automatico = 0;
            $turno_tomado = 0;
            $datos_tipo_reserva = $dbo->fetchAll("ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array");

            // Valido tambien para que los de la misma acciÃ³n no puedan tomar turnos seguidos
            $accion_padre = $dbo->getFields("Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'");
            $accion_socio = $dbo->getFields("Socio", "Accion", "IDSocio = '" . $IDSocio . "'");
            if (empty($accion_padre)): // Es titular
                $array_socio[] = $IDSocio;
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            else:
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            endif;
            if (count($array_socio) > 0):
                $id_socio_nucleo = implode(",", $array_socio);
            endif;

            // Consulto los turnos reservados automaticos y confirmados del socio para no tomar los separados
            //$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva    = 1";
            $sql_confirmado = "Select * From  ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1";
            $qry_confirmado = $dbo->query($sql_confirmado);
            $turno_tomado = $dbo->rows($qry_confirmado);
            while ($row_confirmado = $dbo->fetchArray($qry_confirmado)):
                if ($row_confirmado["Tipo"] == "Automatica"):
                    $turno_automatico++;
                endif;
            endwhile;

            if ($turno_automatico > 0):
                $regla_no_cumplida = 1; // 1 = Ya tomo un turno con la opcion de 2, 3, etc  tuernos seguidos
            endif;

            //Valido si ya tiene una reserva en el dia no pueda reservar ninguna de turnos seguidos
            if ((int) $turno_tomado > 0 && (int) $datos_tipo_reserva["NumeroTurnos"] > 1 && $regla_no_cumplida == 0):
                $regla_no_cumplida = 2; // 2 = Ya tomo un turno ya no puede tomar uno en bloque
            endif;

            return $regla_no_cumplida;
        }

        public function validar_regla_turnos_tenis($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva)
    {
            $dbo = &SIMDB::get();
            $regla_no_cumplida = 0;
            $turno_dia = 0;
            $turno_tomado = 0;

            // Valido tambien para que los de la misma acciÃ³n no puedan tomar mas de 2 turnos al dia por ejemplo
            $accion_padre = $dbo->getFields("Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'");
            $accion_socio = $dbo->getFields("Socio", "Accion", "IDSocio = '" . $IDSocio . "'");
            if (empty($accion_padre)): // Es titular
                $array_socio[] = $IDSocio;
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            else:
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            endif;
            if (count($array_socio) > 0):
                $id_socio_nucleo = implode(",", $array_socio);
            endif;

            // Consulto los turnos reservados confirmados del socio y su nucleo
            //$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva    = 1";
            $sql_confirmado = "Select * From  ReservaGeneral Where ( IDSocio in (" . $id_socio_nucleo . ") or IDSocioBeneficiario in (" . $id_socio_nucleo . ") )  and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1";
            $qry_confirmado = $dbo->query($sql_confirmado);
            $turno_tomado = $dbo->rows($qry_confirmado);
            while ($row_confirmado = $dbo->fetchArray($qry_confirmado)):
                $turno_dia++;
            endwhile;

            if ($turno_dia >= 2):
                $regla_no_cumplida = 1; // 1 = Ya tomo un turno con la opcion de 2, 3, etc  tuernos seguidos
            endif;

            return $regla_no_cumplida;
        }

        public function valida_siguiente_turno_disponible($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos)
    {
            $dbo = &SIMDB::get();
            $hora_turno_siguiente = "";
            $flag_turno_disponible = 0;
            $contador_turnos = 1;
            $array_horarios = SIMWebService::get_disponiblidad_elemento_servicio($IDClub, $IDServicio, $Fecha, $IDElemento, "");

            foreach ($array_horarios["response"][0]["Disponibilidad"][0] as $id_horario => $datos_horario):
                if ($flag_turno_siguiente == 1):
                    $respuesta = SIMWebService::set_separa_reserva($IDClub, $IDSocio, $IDElemento, $IDServicio, "", $Fecha, $datos_horario["Hora"], "", $cantidad_turnos);
                    if ($respuesta == true):
                        $hora_turno_siguiente[] = $datos_horario["Hora"]; // Si se pudo separar
                        $contador_turnos++;
                        if ($contador_turnos <= $cantidad_turnos):
                            $Hora = $datos_horario["Hora"];
                        endif;
                    else:
                        unset($hora_turno_siguiente); // No se pudo separar
                    endif;
                endif;

                if ($datos_horario["Hora"] == $Hora):
                    $flag_turno_siguiente = 1;
                else:
                    $flag_turno_siguiente = 0;
                endif;
            endforeach;

            //Valido que se hayan podido separado los mismos turnos que se solicitaron
            if (count($hora_turno_siguiente) != $cantidad_turnos):
                unset($hora_turno_siguiente);
                //echo "no se pudieron tomar todos";
            endif;

            return $hora_turno_siguiente;

        }

        public function valida_siguiente_turno_sin_reserva($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos)
    {
            global $array_horas_elemento, $minutoAnadir, $PermiteReservaNoSeguida, $condicion_multiple_elemento, $array_hora_cerrada, $datos_reserva, $array_elemento_validar, $cupos, $array_reserva_hora, $CupoMaximoBloque, $array_elemento_servicio;
            $dbo = &SIMDB::get();
            $hora_turno_siguiente = array();
            $flag_turno_disponible = 0;
            $contador_turnos = 1;
            // Quito 1 turno por que necesito validar los siguientes
            $cantidad_turnos--;
            $dia_fecha = date('w', strtotime($Fecha));
            //if ( count( $array_horarios[ $IDElemento ] ) <= 0 ):
            //$array_horarios[ $IDElemento ] = SIMWebService::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "" );

            if (count($array_horas_elemento) <= 0) {
                $sql_serv = "SELECT PermiteReservaTurnosNoSeguidos,CupoMaximoBloque FROM Servicio WHERE IDServicio = '" . $IDServicio . "' ";
                $r_serv = $dbo->query($sql_serv);
                $datos_serv = $dbo->fetchArray($r_serv);
                $PermiteReservaNoSeguida = $datos_serv["PermiteReservaTurnosNoSeguidos"];
                $CupoMaximoBloque = $datos_serv["CupoMaximoBloque"];

                //Consulto los elemntos del servicio

                $sql_ele = "SELECT IDServicioElemento,IdentificadorElemento FROM ServicioElemento WHERE IDServicio = '" . $IDServicio . "'";
                $r_ele = $dbo->query($sql_ele);
                while ($row_ele = $dbo->fetchArray($r_ele)) {
                    $array_ele[] = $row_ele["IDServicioElemento"];
                    $array_elemento_servicio[] = $row_ele["IDServicioElemento"];
                    $array_elemento_validar[$row_ele["IDServicioElemento"]][] = $row_ele["IDServicioElemento"];
                    if ((int) $row_ele["IdentificadorElemento"] > 100000) {
                        $sql_multiple_elemento = "SELECT IDServicioElemento FROM ServicioElemento WHERE IdentificadorElemento = '" . $row_ele["IdentificadorElemento"] . "' and IDServicioElemento <> '" . $row_ele["IDServicioElemento"] . "'";
                        $r_multiple_elemento = $dbo->query($sql_multiple_elemento);
                        while ($row_multiple_elemento = $dbo->fetchArray($r_multiple_elemento)) {
                            $array_ele[] = $row_multiple_elemento["IDServicioElemento"];
                            $array_elemento_validar[$row_ele["IDServicioElemento"]][] = $row_multiple_elemento["IDServicioElemento"];
                        }
                    }
                }

                if (count($array_ele) > 0):
                    $id_elementos = implode(",", $array_ele);
                endif;

                ///Consulto de una vez todos lo reservado en el servicio
                //$sql_reserva_gral="SELECT IDReservaGeneral,IDServicioElemento,Hora FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and IDSocio <> '".$IDSocio."' and IDServicio = '".$IDServicio."'";
                $sql_reserva_gral = "SELECT IDReservaGeneral,IDServicioElemento,Hora FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and IDSocio <> '" . $IDSocio . "' and IDServicioElemento in (" . $id_elementos . ") ";
                $r_reser = $dbo->query($sql_reserva_gral);
                while ($row_reser = $dbo->fetchArray($r_reser)) {
                    $datos_reserva[$row_reser["IDServicioElemento"]][$row_reser["Hora"]] = $row_reser["IDReservaGeneral"];
                    $datos_reserva_hora[$row_reser["IDServicioElemento"]][$row_reser["Hora"]]++;
                    $array_reserva_hora[$row_reser["Hora"]]++;
                }

                // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
                $sql_dispo_elemento_primera = "Select IDDisponibilidad,HoraDesde From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Limit 1";
                $qry_dispo_elemento_primera = $dbo->query($sql_dispo_elemento_primera);
                $row_dispo_elemento_primera = $dbo->fetchArray($qry_dispo_elemento_primera);
                $HoraDesde = $row_dispo_elemento_primera["HoraDesde"];

                $sql_dispo = "SELECT Intervalo,Cupos From Disponibilidad Where IDDisponibilidad = '" . $row_dispo_elemento_primera["IDDisponibilidad"] . "'";
                $qry_dispo = $dbo->query($sql_dispo);
                $row_dispo = $dbo->fetchArray($qry_dispo);
                $minutoAnadir = $row_dispo["Intervalo"];
                $cupos = $row_dispo["Cupos"];

                //endif;
            }

            //$sql_disponibilidad_dia = "SELECT HoraDesde,HoraHasta From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Asc";
            $sql_disponibilidad_dia = "SELECT HoraDesde,HoraHasta From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Asc";
            $qry_disponibilidad_dia = $dbo->query($sql_disponibilidad_dia);
            $array_horas_elemento = array();
            while ($row_disponibilidad_dia = $dbo->fetchArray($qry_disponibilidad_dia)) {
                $HoraDesde = $row_disponibilidad_dia["HoraDesde"];
                $HoraHasta = $row_disponibilidad_dia["HoraHasta"];
                while ($HoraDesde <= $HoraHasta) {
                    //$array_horas_elemento[]=$HoraDesde.":00";
                    $array_horas_elemento[$HoraDesde] = $HoraDesde;
                    $NuevaHora = strtotime('+' . $minutoAnadir . ' minutes', strtotime($HoraDesde));
                    $HoraDesde = date("H:i:s", $NuevaHora);
                }
            }

            //$array_horarios = SIMWebService::get_disponiblidad_elemento_servicio($IDClub,$IDServicio,$Fecha,$IDElemento,"");

            //foreach ( $array_horarios[ $IDElemento ][ "response" ][ 0 ][ "Disponibilidad" ][ 0 ] as $id_horario => $datos_horario ):
            $contador_horas = 0;
            $contador_horas_disponibilidad = 1;
            ksort($array_horas_elemento);

            foreach ($array_horas_elemento as $id_horario => $datos_horario["Hora"]):

                //Verifico el intervalo para saber si el siguiente turno es seguido y no tomar el de una hora despues de un intervalo ej hora de almuerzo
                if ($contador_horas == 0) {
                    //Guardo array con las horas siguientes esperadas
                    $hora_real = $Fecha . " " . $Hora;
                    for ($i = 1; $i <= $cantidad_turnos; $i++) {
                        $hora_real = strtotime('+' . $minutoAnadir . ' minute', strtotime($hora_real));
                        $hora_real = date('H:i:s', $hora_real);
                        $array_hora_esperada[$i] = $hora_real;
                    }
                }

                if ($flag_turno_siguiente == 1):
                    //Hago esta validacion menos para simulador de areoclub que si permite horas no continuas
                    // Con este dato $PermiteReservaNoSeguida valido tambien si el servicio se configuro con horas no seguidas pero debe permitir separar los turnos dobles sin importr que haya un intervalo
                    if ($datos_horario["Hora"] == $array_hora_esperada[$contador_horas_disponibilidad] || $IDServicio == 3609 || $PermiteReservaNoSeguida == "S") {
                        // verifico si esta disponible la reserva
                        //$id_reserva_disponible = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDClub = '".$IDClub."' and IDServicio = '".$IDServicio."' and IDServicioElemento = '".$IDElemento."' and IDEstadoReserva in (1) and Fecha = '".$Fecha."' and Hora = '".$datos_horario["Hora"]."'" );
                        if ($IDClub == 36): // para aero club no verifico hora ya que el avion puede ser reservado todo el dia
                            $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "'  " . $condicion_elemento);
                        else:
                            /*
                            $sql_reserva_gral="SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $datos_horario[ "Hora" ] . "' and IDSocio <> '".$IDSocio."' " . $condicion_elemento . "Limit 1";
                            $r_reser=$dbo->query($sql_reserva_gral);
                            $row_reser=$dbo->fetchArray($r_reser);
                            $id_reserva_disponible=$row_reser["IDReservaGeneral"];
                             */
                            //$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $datos_horario[ "Hora" ] . "' and IDSocio <> '".$IDSocio."' " . $condicion_elemento );
                            $con_reserva_hora = "N";
                            if (count($array_elemento_validar[$IDElemento]) > 0) {
                                foreach ($array_elemento_validar[$IDElemento] as $key_elem => $value_elem) {
                                    $id_reserva_disponible = $datos_reserva[$value_elem][$datos_horario["Hora"]];
                                    if ((int) $cupos > 1 && (count($datos_reserva_hora[$value_elem][$datos_horario["Hora"]]) <= $cupos)) {
                                        $id_reserva_disponible = "";
                                    }
                                    if (!empty($id_reserva_disponible)) {
                                        $con_reserva_hora = "S";
                                    }

                                }
                            }
                        endif;

                        //Verifico que no haya fecha/hora de cierre en el turno siguiente
                        //$hora_cerrada[$datos_horario[ "Hora" ]] = self::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $datos_horario[ "Hora" ] );
                        if (count($array_hora_cerrada[$datos_horario["Hora"]][$IDElemento]) <= 0) {
                            $validacierre = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento, $datos_horario["Hora"]);
                            if (!empty($validacierre)) {
                                $array_hora_cerrada[$datos_horario["Hora"]][$IDElemento] = "S";
                            } else {
                                $array_hora_cerrada[$datos_horario["Hora"]][$IDElemento] = "N";
                            }
                        }

                        if ($con_reserva_hora == "N" && $array_hora_cerrada[$datos_horario["Hora"]][$IDElemento] == "N"):
                            //$respuesta = SIMWebService::set_separa_reserva( $IDClub, $IDSocio, $IDElemento, $IDServicio, "", $Fecha, $datos_horario[ "Hora" ], "", "" );
                            $respuesta = true;
                        else:
                            $respuesta = false;
                        endif;

                        if ((int) $CupoMaximoBloque > 0 && $respuesta == true) {
                            $contador_reserva_bloque = 0;
                            foreach ($array_elemento_servicio as $id_elemento_serv) {
                                $datos_reserva_hora[$row_reser["IDServicioElemento"]][$row_reser["Hora"]]++;
                                if ($datos_reserva_hora[$id_elemento_serv][$datos_horario["Hora"]]) {
                                    $contador_reserva_bloque++;
                                }
                            }
                            if ($contador_reserva_bloque < (int) $CupoMaximoBloque) {
                                $respuesta = true;
                            } else {
                                $respuesta = false;
                            }
                        }

                        if ($respuesta == true):
                            $hora_turno_siguiente[] = $datos_horario["Hora"]; // Si se pudo separar
                            $contador_turnos++;
                            if ($contador_turnos <= $cantidad_turnos):
                                $Hora = $datos_horario["Hora"];
                            endif;
                        else:
                            unset($hora_turno_siguiente); // No se pudo separar
                        endif;
                    }
                    $contador_horas_disponibilidad++;
                endif;

                //echo "<br>" . $datos_horario[ "Hora" ] ."==". $Hora;
                if ($datos_horario["Hora"] == $Hora):
                    $flag_turno_siguiente = 1;
                else:
                    $flag_turno_siguiente = 0;
                endif;

                $contador_horas++;
            endforeach;

            //Valido que se hayan podido separado los mismos turnos que se solicitaron
            if (count($hora_turno_siguiente) != $cantidad_turnos):
                unset($hora_turno_siguiente);
                //echo "no se pudieron tomar todos";
            endif;

            //echo "TOTAL " .count($hora_turno_siguiente);

            return $hora_turno_siguiente;

        }

        public function valida_siguiente_turno_disponible_golf($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos, $Tee, $TipoReserva = "", $array_tee)
    {

            global $array_horarios_servicio;
            $dbo = &SIMDB::get();
            $hora_verify = $Hora;
            $hora_turno_siguiente = array();
            $flag_turno_disponible = 0;
            $contador_turnos = 1;
            if (count($array_horarios_servicio) <= 0):
                //$array_horarios_servicio = SIMWebService::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "","","","","","","" );
                $array_horarios_servicio = SIMWebService::get_disponiblidad_elemento_servicio($IDClub, $IDServicio, $Fecha, $IDElemento, "", "", "", "", "", "", "");
            endif;
            //print_r($array_horarios);

            foreach ($array_horarios_servicio["response"][0]["Disponibilidad"][0] as $id_horario => $datos_horario):
                // valido solo las horas mayores a la que solicita para mejorar rendimiento
                $hora_disponible = strtotime($datos_horario["Hora"]);
                $hora_consultada = strtotime($Hora);

                if ($datos_horario["Tee"] == $Tee && $hora_disponible >= $hora_consultada): // Solo verifico el tee que recibe
                    if ($contador_turnos <= $cantidad_turnos):

                        //Si el tipo de reserva viene vacio es que se estÃ¡ separando o verificando, si es reserva no tengo en cuenta las separadas
                        if ($TipoReserva == "Reserva"):
                            $id_tipo_reserva = "1";
                        else:
                            $id_tipo_reserva = "1,3";
                        endif;
                        // verifico si esta disponible la reserva
                        $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (" . $id_tipo_reserva . ") and Fecha = '" . $Fecha . "' and Hora = '" . $datos_horario["Hora"] . "' and Tee = '" . $Tee . "'");
                        $hora_real = date('Y-m-d H:i:s');

                        //Verifico que no haya fecha/hora de cierre en el turno siguiente
                        $hora_cerrada = self::verifica_club_servicio_abierto($IDClub, $Fecha, $IDServicio, $IDElemento, $datos_horario["Hora"], $Tee);

                        $hora_par_disponible = self::valida_hora_con_par($array_tee, $datos_horario["Hora"], $Tee, $IDElemento, $Fecha, $hora_real);

                        if (empty($id_reserva_disponible) && $hora_par_disponible == "S" && $hora_cerrada == ""):
                            $hora_turno_siguiente[] = $datos_horario["Hora"]; // Si se pudo separar
                            $Hora = $datos_horario["Hora"];
                        else:
                            unset($hora_turno_siguiente); // No se pudo separar
                        endif;
                        $contador_turnos++;
                    endif;
                endif;
            endforeach;

            //Valido que se hayan podido separado los mismos turnos que se solicitaron
            if (count($hora_turno_siguiente) != $cantidad_turnos):
                unset($hora_turno_siguiente);
                //echo "no se pudieron tomar todos";
            endif;

            return $hora_turno_siguiente;

        }

        public function set_reserva_general($IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Observaciones = "", $Admin = "", $Tee = "", $IDDisponibilidad = "", $PermiteRepeticion = "")
    {

            $dbo = &SIMDB::get();

            // Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
            if (empty($IDElemento)):
                $id_servicio_maestro = $dbo->getFields("Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'");
                $id_servicio_inicial = $dbo->getFields("ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                if ($id_servicio_inicial == 5): // 5 = get_reserva_aleatoria
                    $IDElemento = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicio, $Fecha, $Hora, $IDElemento);
                endif;
            endif;

            if (!empty($IDClub) && !empty($IDSocio) && !empty($IDElemento) && !empty($IDServicio) && !empty($Fecha) && !empty($Hora)) {

                //verifico que el socio exista y pertenezca al club
                $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

                if (!empty($id_socio)) {

                    //verifico la disponibilidad que se utilizo
                    $dia_fecha = date('w', strtotime($Fecha));
                    $sql_disponibilidad = $dbo->query("Select IDDisponibilidad From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Limit 1");
                    $row_disponibilidad = $dbo->fetchArray($sql_disponibilidad);
                    $id_disponibilidad = $row_disponibilidad["IDDisponibilidad"];

                    //Valido que no se pueda tomar varios turnos seguidos
                    $flag_turno_seguido = SIMWebService::validar_turnos_seguidos($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub);

                    // Si es Admin si puede reservas turnos seguidos
                    if (!empty($Admin)):
                        $flag_turno_seguido = 0;
                    endif;

                    if ($flag_turno_seguido == 0):

                        $fecha_disponible = 0;

                        //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar
                        $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio);
                        foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                            if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                                $fecha_disponible = 1;
                            endif;
                        endforeach;

                        if ($fecha_disponible == 1):

                            //Verifico que el socio no tenga mas de tres reservas en el mismo dia
                            $sql_reservas_dia = $dbo->query("Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "'");
                            $total_reserva_socio = (int) $dbo->rows($sql_reservas_dia);

                            // Si es Admin si puede reservar mas de un turno por dia
                            if (!empty($Admin)):
                                $total_reserva_socio = 1;
                                $UsuarioCreacion = "Starter";
                            else:
                                $UsuarioCreacion = "SocioV2";
                            endif;

                            if ($total_reserva_socio <= 1):

                                // verifico que todavia este disponible la reserva
                                $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'");
                                if (empty($id_reserva_disponible)):

                                    // Borro la reserva separada
                                    $sql_inserta_reserva = $dbo->query("DELETE FROM ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3");

                                    //Guardo la reserva
                                    $sql_inserta_reserva = $dbo->query("INSERT INTO ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, Fecha, Hora, Observaciones, Tee, UsuarioTrCr, FechaTrCr)
																																		Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $UsuarioCreacion . "',NOW())");

                                    $id_reserva_general = $dbo->lastID();

                                    $array_Invitados = $Invitados;
                                    if (count($array_Invitados) > 0):
                                        foreach ($array_Invitados as $id_valor => $valor):
                                            // Guardo los invitados socios o externos
                                            $sql_inserta_invitado = $dbo->query("INSERT INTO ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
																																										Values ('" . $id_reserva_general . "','" . $valor["IDSocioInvitado"] . "', '" . $valor["NombreInvitado"] . "')");
                                        endforeach;
                                    endif;

                                    $array_Campos = $Campos;
                                    if (count($array_Campos) > 0):
                                        foreach ($array_Campos as $id_valor_campo => $valor_campo):
                                            // Guardo los campos personalizados
                                            $sql_inserta_campo = $dbo->query("INSERT INTO ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
																																										Values ('" . $id_reserva_general . "','" . $valor_campo["IDServicioCampo"] . "', '" . $valor_campo["Valor"] . "')");
                                        endforeach;
                                    endif;

                                    $respuesta["message"] = "Guardado";
                                    $respuesta["success"] = true;
                                    $respuesta["response"] = "Guardado";
                                else:
                                    $respuesta["message"] = "Lo sentimos la reserva ya fue tomada";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;

                                endif;

                            else:
                                $respuesta["message"] = "Lo sentimos solo se permiten 1 reserva por dia";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                            endif;

                        else:
                            $respuesta["message"] = "Lo sentimos fecha no disponible.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                        endif;
                    else:
                        $respuesta["message"] = "Lo sentimos no se puede reservar turnos seguidos ";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;

                    endif;
                } else {
                    $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "20. Atencion faltan parametros";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

            return $respuesta;

        }

        public function validar_formato_hora($Hora)
    {
            $hora_militar = "";
            if (strlen($Hora) > 8):
                $cadena = strtotime($Hora);
                $cadena = date("H:i:s", $cadena);
                $hora_militar = $cadena;
            else:
                $hora_militar = $Hora;
            endif;

            return $hora_militar;
        }

        public function obtener_disponibilidad_utilizada($IDServicio, $Fecha, $IDElemento, $Hora = "")
    {
            $dbo = &SIMDB::get();
            //verifico la disponibilidad que se utilizo
            if (!empty($Hora)):
                $condicion_hora = " and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) ";
            endif;
            $dia_fecha = date('w', strtotime($Fecha));
            $sql_disponibilidad = $dbo->query("Select IDDisponibilidad From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_hora . " Limit 1");
            $row_disponibilidad = $dbo->fetchArray($sql_disponibilidad);
            $id_disponibilidad = $row_disponibilidad["IDDisponibilidad"];
            return $id_disponibilidad;
        }

        public function busca_cabeza_grupo($Invitados, $NumeroTurnos, $IDSocio)
    {
            //Resto un turno ya que el primero debe ser el socio que realiza la reserva
            $NumeroTurnos -= 1;
            $array_cabeza_grupo = array();
            $total_cabeza = 1;
            $datos_invitado_turno = json_decode($Invitados, true);
            foreach ($datos_invitado_turno as $detalle_datos_turno):
                $IDSocioInvitadoTurno = $detalle_datos_turno["IDSocio"];
                $NombreSocioInvitadoTurno = $detalle_datos_turno["Nombre"];
                if (!empty($IDSocioInvitadoTurno) && $total_cabeza <= $NumeroTurnos):
                    $array_cabeza_grupo[] = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
                    $total_cabeza++;
                endif;
            endforeach;

            //Verifico que los invitados sean socio para ponerlos como cabeza ya que si son externos el cabeza debe ser el socio que realiza la reserva
            if (count($array_cabeza_grupo) < $NumeroTurnos):
                for ($i_cabeza = 0; $i_cabeza <= $NumeroTurnos; $i_cabeza++):
                    if (empty($array_cabeza_grupo[$i_cabeza])):
                        $array_cabeza_grupo[$i_cabeza] = $IDSocio;
                    endif;
                endfor;
            endif;

            return $array_cabeza_grupo;
        }

        public function set_reserva_generalV2($IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Observaciones = "", $Admin = "", $Tee = "", $IDDisponibilidad = "", $Repetir = "", $Periodo = "", $RepetirFechaFinal = "", $IDTipoModalidadEsqui = "", $IDAuxiliar = "", $IDTipoReserva = "", $NumeroTurnos = "", $IDReservaGrupos, $IDBeneficiario = "", $TipoBeneficiario = "", $IDUsuarioReserva = "", $CantidadInvitadoSalon = "", $ListaAuxiliar = "", $Altitud = "", $Longitud = "", $AdicionalesSocio = "")
    {
            $dbo = &SIMDB::get();
            require LIBDIR . "SIMServicioReserva.inc.php";

            $FechaHoraSistemaActual = date("Y-m-d H:i:s");

            $datos_servicio = $dbo->fetchAll("Servicio", " IDServicio= '" . $IDServicio . "' ", "array");
            $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
            $datos_tipo_reserva = $dbo->fetchAll("ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array");

            $permiteConLista = $datos_servicio["permisoReserva"];
            $permiteConTipo = $datos_servicio["PermisoReservaTipo"];
            $permiteHorario = $datos_servicio["horarioPermiso"];
            $documentoSocio = $datos_socio["NumeroDocumento"];

            $horaInicio = $datos_servicio["horaInicioPermiso"];
            $horaFin = $datos_servicio["horaFinPermiso"];
            $fechaInicio = $datos_servicio["fechaInicioPermiso"];
            $fechaFin = $datos_servicio["fechaFinPermiso"];

            if ($permiteConLista == 'S') {
                if ($permiteConTipo == 'S') {
                    $socioConPermiso = "SELECT * FROM SocioPermisoReserva WHERE IDClub = '" . $IDClub . "' AND IDServicio = '" . $IDServicio . "' AND NumeroDocumento = '" . $documentoSocio . "' AND IDTipoReserva = '" . $IDTipoReserva . "'";
                    $resultado = $dbo->query($socioConPermiso);
                    $datos = $dbo->fetchArray($resultado);

                    if (($Fecha >= $fechaInicio && $Fecha <= $fechaFin) && ($Hora >= $horaInicio && $Hora <= $horaFin) && empty($datos)) {
                        $respuesta["message"] = "Lo sentimos, no tiene permiso para tomar las reservas de este tipo.";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                } else {
                    $socioConPermiso = "SELECT * FROM SocioPermisoReserva WHERE IDClub = '" . $IDClub . "' AND IDServicio = '" . $IDServicio . "' AND NumeroDocumento = '" . $documentoSocio . "'";
                    $resultado = $dbo->query($socioConPermiso);
                    $datos = $dbo->fetchArray($resultado);

                    if (($Fecha >= $fechaInicio && $Fecha <= $fechaFin) && ($Hora >= $horaInicio && $Hora <= $horaFin) && empty($datos)) {
                        $respuesta["message"] = "Lo sentimos, no tiene permiso para tomar las reservas.";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }

            }

            if ($datos_servicio["ValidarReservasActivas"] == "S") {
                $ValidaSeman = $datos_servicio["ValidaReservasActivasSemana"];
                $ValidaFin = $datos_servicio["ValidaReservasActivasFin"];
                $NumeroSeman = $datos_servicio["NumeroReservasActivasSemana"];
                $NumeroFin = $datos_servicio["NumeroReservasActivasFin"];

                $validar = SIMServicioReserva::valida_reservas_activas($IDServicio, $Fecha, $Hora, $IDSocio, $IDBeneficiario, $ValidaSeman, $ValidaFin, $NumeroSeman, $NumeroFin);

                if ($validar["success"] == false) {
                    return $validar;
                }
            }

            $IP = SIMUtil::get_IP();

            //Consulto el siguiente consecutivo
            if (!empty($datos_servicio["IdentificadorServicio"])) {
                $sql_max_numero = "Select MAX(ConsecutivoServicio) as NumeroMaximo From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "'";
                $result_numero = $dbo->query($sql_max_numero);
                $row_numero = $dbo->fetchArray($result_numero);
                $siguiente_consecutivo = (int) $row_numero["NumeroMaximo"] + 1;
                $IdentificadorServicio = $datos_servicio["IdentificadorServicio"];
                $ConsecutivoServicio = $siguiente_consecutivo;
            }

            //valido si esta en horario permitido para reservar
            if ($datos_servicio["ValidarHorario"] == "S" && empty($Admin) && (date("H:i:s") < $datos_servicio["HoraInicio"] || date("H:i:s") > $datos_servicio["HoraFin"])) {
                $respuesta["message"] = "Lo sentimos, el horario para reserva es de " . $datos_servicio["HoraInicio"] . " " . $datos_servicio["HoraFin"];
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            //valido si se puede reservar para el mismo dia
            if ($datos_servicio["ReservaMismoDia"] == "N" && $Fecha == date("Y-m-d") && empty($Admin)) {
                $respuesta["message"] = "Lo sentimos, no es posible realizar reservas para el mismo dÃ­a";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

            //Valido si el tipo de reserva solo permite cierta cantidad de boleadores/profesores
            if (!empty($IDTipoReserva)) {
                $datos_auxiliares_reser = json_decode($ListaAuxiliar, true);
                if (count($datos_auxiliares_reser) > 0 && count($datos_auxiliares_reser) > (int) $datos_tipo_reserva["MaximoBoleador"]) {
                    $respuesta["message"] = " Supera el maximo de profesores/boleadores permitido para este tipo de reserva";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
                if (count($datos_auxiliares_reser) < (int) $datos_tipo_reserva["MinimoBoleador"]) {
                    $respuesta["message"] = " Debe agregar por lo menos  " . $datos_tipo_reserva["MinimoBoleador"] . "  profesor/boleador para este tipo de reserva";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

            $NombreSocioReserva = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
            $AccionSocioReserva = $datos_socio["Accion"];

            if (!empty($IDBeneficiario)) {
                $datos_beneficiario = $dbo->fetchAll("Socio", " IDSocio = '" . $IDBeneficiario . "' ", "array");
                $NombreBenefReserva = $datos_beneficiario["Nombre"] . " " . $datos_beneficiario["Apellido"];
                $AccionBenefReserva = $datos_beneficiario["Accion"];
            }

            $respuesta_sesion = SIMWebServiceApp::valida_cierre_sesion($IDSocio);
            if ($respuesta_sesion == 1 && empty($Admin)):
                //borro el id para no mostrar mas este mensaje
                $delete_cerrar_sesion = "delete from CierreSesionSocio Where IDSocio = '" . $IDSocio . "' Limit 1";
                $dbo->query($delete_cerrar_sesion);
                $nom_socio_validar = $NombreSocioReserva;
                $respuesta["message"] = "Es usted " . $nom_socio_validar . "?  Si no es " . $nom_socio_validar . " por favor cierre sesion y vuelva a ingresar con su usuario y clave para poder tomar la reserva";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            if (!empty($IDUsuarioReserva)):
                //verifico si el usuario tienen permiso para hacer reservas
                $permite_funcionario_reserva = $dbo->getFields("Usuario", "PermiteReservar", "IDUsuario = '" . $IDUsuarioReserva . "'");
                if ($permite_funcionario_reserva == "N"):
                    $respuesta["message"] = "Lo sentimos, no tiene permiso para realizar reservas para socios";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            endif;

            $id_servicio_maestro = $datos_servicio["IDServicioMaestro"];
            // Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
            if (empty($IDElemento)):
                $id_servicio_inicial = $dbo->getFields("ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                if ($id_servicio_inicial == 5): // 5 = get_reserva_aleatoria
                    $IDElemento = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicio, $Fecha, $Hora, $IDElemento);
                endif;
            endif;

            if (($id_servicio_maestro == "15" || $id_servicio_maestro == "27" || $id_servicio_maestro == "28") && empty($Tee)):
                $respuesta["message"] = "Para poder reservar debe actualizar la app a la ultima version";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            //Valido si el invitado ha superado el maximo de ingresos a area deportiva
            $datos_invitado = json_decode($Invitados, true);
            if (count($datos_invitado) > 0):
                foreach ($datos_invitado as $detalle_datos):

                    $IDSocioInvitado = $detalle_datos["IDSocio"];
                    $NombreInvitado = $detalle_datos["Nombre"];
                    $CedulaInvitado = $detalle_datos["Cedula"];

                    if ($IDSocioInvitado == 0) {
                        $validacion = SIMServicioReserva::validarReservaAreaDeportiva($IDClub, $IDServicio, $NombreInvitado, $CedulaInvitado);

                        if ($validacion["response"] == "N"):
                            $respuesta["message"] = $validacion["message"];
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    }

                endforeach;
            endif;

            //Valido si el socio puede reservar
            $permiso_reserva = SIMWebService::validar_permiso_reserva($IDSocio,$IDServicio);
            if ($permiso_reserva == "N" || $datos_socio["IDEstadoSocio"] == 2 || $datos_socio["IDEstadoSocio"] == 3 || $datos_socio["IDEstadoSocio"] == 4):
                $respuesta["message"] = "Lo sentimos no tiene permiso para realizar reservas";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            //Valido si solo permite reservar por edades
            if ($datos_servicio["ValidarEdad"] == "S") {
                if ((int) $IDBeneficiario > 0) {
                    $fecha_nacimiento = $datos_beneficiario["FechaNacimiento"];
                } else {
                    $fecha_nacimiento = $datos_socio["FechaNacimiento"];
                }
                //$fecha_nacimiento = $datos_socio["FechaNacimiento"];
                $dia_actual = date("Y-m-d");
                $edad_diff = date_diff(date_create($fecha_nacimiento), date_create($dia_actual));
                $EdadSocio = $edad_diff->format('%y');
                if ($EdadSocio >= $datos_servicio["EdadMinima"] && $EdadSocio <= $datos_servicio["EdadMaxima"]) {
                    $edadpermitida == "S";
                } else {
                    $respuesta["message"] = "Lo sentimos no tiene la edad permitida para realizar la reserva";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

            //Lagartos siempre verifico la edad
            if ($IDClub == 7 && empty($EdadSocio)) {
                if ((int) $IDBeneficiario > 0) {
                    $fecha_nacimiento = $datos_beneficiario["FechaNacimiento"];
                } else {
                    $fecha_nacimiento = $datos_socio["FechaNacimiento"];
                }
                //$fecha_nacimiento = $datos_socio["FechaNacimiento"];
                $dia_actual = date("Y-m-d");
                $edad_diff = date_diff(date_create($fecha_nacimiento), date_create($dia_actual));
                $EdadSocio = $edad_diff->format('%y');
            }

            //Espeial country el beneficiario debe tener menos de 5 aÃ±os
            /*
            if($IDServicio=="12507" && $IDClub=44){
            if((int)$IDBeneficiario<=0){
            $respuesta[ "message" ] = "Lo sentimos la reserva debe ser a nombre de un beneficiario menor de 5 aÃ±os";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            }
            else{
            $fecha_nacimiento = $datos_beneficiario["FechaNacimiento"];
            $dia_actual = date("Y-m-d");
            $edad_diff = date_diff(date_create($fecha_nacimiento), date_create($dia_actual));
            $EdadSocio=$edad_diff->format('%y');
            if($EdadSocio>5 ){
            $respuesta[ "message" ] = "Lo sentimos el invitado: ".$nombre_socio_sancion." debe tener 5 aÃ±os o menos";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            }
            }
            }
             */

            //Valido si el Beneficiario puede reservar
            if ((int) $IDBeneficiario > 0) {
                $permiso_reserva = SIMWebService::validar_permiso_reserva($IDBeneficiario,$IDServicio);
                if ($permiso_reserva == "N"):
                    $respuesta["message"] = "Lo sentimos no tiene permiso para realizar reservas";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            }

            //Valido si el socio puede reservar    si es un canje o invitado
            $permiso_reserva = self::validar_canje_activo($IDSocio);
            if ($permiso_reserva == "1"):
                $respuesta["message"] = "Lo sentimos no tiene permiso para realizar reservas, las fechas estan vencidas";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            // Verifico si tiene sanciones
            $sancion = SIMWebServiceApp::verifica_sancion_socio($IDClub, $IDSocio, $IDServicio, $Fecha);
            //if ( $sancion && ( $IDClub == "8" || $IDClub == "15" ) ):
            if ($sancion):
                $respuesta["message"] = "Lo sentimos tiene una sanciÃ³n vigente por incumplimiento de una reserva";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;

            // Si tiene invitados verifico que los invitados no tengan sanciones
            $datos_invitado = json_decode($Invitados, true);
            if (count($datos_invitado) > 0):
                foreach ($datos_invitado as $detalle_datos):
                    $IDSocioInvitado = $detalle_datos["IDSocio"];
                    if (!empty($IDSocioInvitado)):
                        $datos_invitado_reserva = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocioInvitado . "' ", "array");
                        $nombre_socio_sancion = $datos_invitado_reserva["Nombre"] . " " . $datos_invitado_reserva["Apellido"];
                        $sancion = SIMWebServiceApp::verifica_sancion_socio($IDClub, $IDSocioInvitado, $IDServicio, $Fecha);
                        if ($sancion && $IDClub == "8"):
                            $respuesta["message"] = "Lo sentimos  el invitado " . $nombre_socio_sancion . " tiene una sancion vigente, la reserva no puede ser tomada";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                        //edad

                        if ($datos_invitado_reserva["PermiteReservar"] == "N") {
                            $respuesta["message"] = $nombre_socio_sancion . " socio inactivo";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        }

                        if ($datos_servicio["ValidarEdad"] == "S") {
                            $fecha_nacimiento_invitado = $dbo->getFields("Socio", "FechaNacimiento", "IDSocio = '" . $IDSocioInvitado . "' and IDClub = '" . $IDClub . "'");
                            $dia_actual = date("Y-m-d");
                            $edad_diff = date_diff(date_create($fecha_nacimiento_invitado), date_create($dia_actual));
                            $EdadSocioInvitado = $edad_diff->format('%y');
                            if ($EdadSocioInvitado >= $datos_servicio["EdadMinima"] && $EdadSocioInvitado <= $datos_servicio["EdadMaxima"]) {
                                $edadpermitida == "S";
                            } else {
                                $respuesta["message"] = "Lo sentimos el invitado: " . $nombre_socio_sancion . " no tiene la edad permitida";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                            }
                        }
                        //fin edad
                        if ((int) $CantidadInvitadoSalon <= 0) {
                            $CantidadInvitadoSalon = count($datos_invitado) - 1;
                        }

                    endif;
                endforeach;
            endif;

            //Si es admin valido si el auxiliar boleador esta disponible de nuevo
            if (!empty($Admin) && !empty($IDAuxiliar)):
                $flag_aux_disp = 0;
                $response_dispo_aux = self::get_auxiliares($IDClub, $IDServicio, $Fecha, $Hora);
                $response_dispo_aux["success"];
                if ($response_dispo_aux["success"] == 0):
                    $flag_aux_disp = 1;
                else:
                    $flag_aux_disp = 1;
                    foreach ($response_dispo_aux["response"] as $datos_conf_aux):
                        foreach ($datos_conf_aux["Auxiliares"] as $datos_aux):
                            if ($IDAuxiliar == $datos_aux["IDAuxiliar"]):
                                $flag_aux_disp = 0;
                            endif;
                        endforeach;
                    endforeach;
                endif;

                if ($flag_aux_disp == 1):
                    $respuesta["message"] = "Lo sentimos, el auxiliar no esta disponible en ese horario";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            endif;

            //Verifico de nuevo que la lista de auxiliares seleccionados esten disponibles
            if (!empty($ListaAuxiliar)):
                $datos_auxiliares_revisar = json_decode($ListaAuxiliar, true);
                $response_dispo_aux = self::get_auxiliares($IDClub, $IDServicio, $Fecha, $Hora);
                foreach ($response_dispo_aux["response"] as $datos_conf_aux):
                    foreach ($datos_conf_aux["Auxiliares"] as $datos_aux):
                        $array_aux_disponibles[] = $datos_aux["IDAuxiliar"];
                    endforeach;
                endforeach;

                if (count($datos_auxiliares_revisar) > 0):
                    foreach ($datos_auxiliares_revisar as $key_aux => $auxiliar_seleccionado):
                        if (!in_array($auxiliar_seleccionado["IDAuxiliar"], $array_aux_disponibles)):
                            $respuesta["message"] = "El auxiliar " . $auxiliar_seleccionado["Nombre"] . " no esta disponible en ese horario";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    endforeach;
                endif;
            endif;

            //Especial Pereira restaurante 40 por dia sin importar la hora
            if ($IDServicio == 5609 && $IDClub == 15) {
                //Verifico cuantas personas estan inscritas
                $LimiteCuposServicio = 40;
                $sql_invitados = "SELECT SUM(CantidadInvitadoSalon) as TotalInvitado FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and IDClub='" . $IDClub . "' and Fecha = '" . $Fecha . "'";
                $result_invitado = $dbo->query($sql_invitados);
                $row_invitado_servicio = $dbo->fetchArray($result_invitado);
                if ((int) $row_invitado_servicio["TotalInvitado"] > $LimiteCuposServicio) {
                    $respuesta["message"] = "Lo sentimos se llegÃ³ al mÃ¡ximo permitido de " . $LimiteCuposServicio . " personas al dia";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                } else {
                    //Verifico que los seleccionados no superen el permitido
                    $TotalNuevoInvitado = (int) $CantidadInvitadoSalon + (int) $row_invitado_servicio["TotalInvitado"];
                    if ($TotalNuevoInvitado > $LimiteCuposServicio) {
                        $CuposRestantes = (int) $LimiteCuposServicio - (int) $row_invitado_servicio["TotalInvitado"];
                        $respuesta["message"] = "Lo sentimos solo quedan " . $CuposRestantes . " cupos";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }
            }

            //Validacion especial para Pradera en Esqui en la cual no se permite al grupo familiar tomar una reserva si alguein de su grupo eliminÃ³ una previamente
            $MinutosRestriccion = $datos_servicio["BloquearMinutosGrupo"];
            //if( ($IDClub==16) && $IDServicio==327):
            if ((int) $MinutosRestriccion > 0):

                //if($IDClub==8):
                //$minutos_restriccion = 60;
                $minutos_restriccion = (int) $MinutosRestriccion;
                //verifico si alguien del grupo ha eliminado reserva
                if ($IDServicio != "327") { // Para pradera solo verifica el que la tomÃ³
                    $grupo_familiar = self::get_beneficiarios($IDClub, $IDSocio);
                    if (count($grupo_familiar["response"]["Beneficiarios"]) > 0):
                        foreach ($grupo_familiar["response"]["Beneficiarios"] as $datos_nucleo):
                            if ($datos_nucleo["TipoBeneficiario"] == "Socio"):
                                $array_id_benef[] = $datos_nucleo["IDBeneficiario"];
                            endif;
                        endforeach;
                    endif;
                    if (count($array_id_benef) > 0):
                        $condicion_benef = " or IDSocio in (" . implode(",", $array_id_benef) . ") ";
                    endif;
                } else {
                    $condicion_benef = " and IDBeneficiario = '" . $IDBeneficiario . "' ";
                }

                $sql_eliminada = "Select * From ReservaGeneralEliminada Where (IDSocio = '" . $IDSocio . "' " . $condicion_benef . ")  and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' order by IDReservaGeneral Desc limit 1";
                $result_eliminada = $dbo->query($sql_eliminada);
                if ($dbo->rows($result_eliminada) > 0):
                    //verifico si ya cumplio el tiempo limite para poder intentar reservar
                    $row_reserva_eliminada = $dbo->fetchArray($result_eliminada);
                    $FechaHoraEliminacion = strtotime('+' . $minutos_restriccion . ' minute', strtotime($row_reserva_eliminada["FechaTrEd"]));
                    $FechaHoraActual = strtotime(date("Y-m-d H:i:s"));
                    if ($FechaHoraActual <= $FechaHoraEliminacion):
                        $respuesta["message"] = "La reserva no puede ser tomada ya que alguien de su grupo familiar hizo una reserva y la eliminÃ³ para esta fecha, puede volver a intentar a las: " . date("H:i:s", $FechaHoraEliminacion);
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                endif;
            endif;

            //Especial para atc solo dos turnos por semana
            if ($IDClub == 26 && empty($Admin)):
                if ($IDServicio == "1490" || $IDServicio == "2106" || $IDServicio == "2109" || $IDServicio == "2110"
            || $IDServicio == "4350" || $IDServicio == "1484" || $IDServicio == "5035" || $IDServicio == "5039"
            || $IDServicio == "7973" || $IDServicio == "2719" || $IDServicio == "17286" || $IDServicio == "1434"): // tenis y clase tenis hasta 2
                    $ReservasPermitidaSemana = 3;
                    $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                elseif ($IDServicio == "1462"): // masajes manicure hasta 3
                    $ReservasPermitidaSemana = 3;
                    $condicion_reserva_verif = "";
                elseif ($IDServicio == "2720"): // coliseos
                    $ReservasPermitidaSemana = 2;
                    $condicion_reserva_verif = "";
                else: // las demas
                    $ReservasPermitidaSemana = 100;
                    $condicion_reserva_verif = "";
                endif;

                $fecha_hoy_semana = date("Y-m-d");
                $hora_hoy_semana = date("H:i:s");
                $year = date('Y', strtotime($Fecha));
                $week = date('W', strtotime($Fecha));
                $dia_reserva_atc = date("w", strtotime($Fecha));
                $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                $fecha_lunes = $fechaInicioSemana; //Lunes
                $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                // Valido tambien los de la misma acciÃ³n
                //$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
                //$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
                $accion_padre = $datos_socio["AccionPadre"];
                $accion_socio = $datos_socio["Accion"];

                if (empty($accion_padre)): // Es titular
                    $array_socio[] = $IDSocio;
                    $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                    $result_nucleo = $dbo->query($sql_nucleo);
                    while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                        $array_socio[] = $row_nucleo["IDSocio"];
                    endwhile;
                else:
                    $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
                    $result_nucleo = $dbo->query($sql_nucleo);
                    while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                        $array_socio[] = $row_nucleo["IDSocio"];
                    endwhile;
                endif;
                if (count($array_socio) > 0):
                    $id_socio_nucleo = implode(",", $array_socio);
                endif;

                if ((int) $dia_reserva_atc >= 1 && (int) $dia_reserva_atc <= 5) {
                    $fecha_inicio_valida = $fechaInicioSemana; //Lunes
                    $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 4 day')); //Viernes
                    $mensaje_reserva = " entre semana";
                } else {
                    $proximo_sabado = strtotime('next Saturday');
                    $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
                    $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                    $mensaje_reserva = " los fines de semana";
                }

                //Consulto las de hoy pasada la hora actual
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                $total_reservas_semana = $dbo->rows($sql_reservas_sem);

                //Consulto la de maÃ±ana en adelante
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                    $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por semana por accion ";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            endif;

            //Especial country 2 entre semana 1 fin semana para clase de golf
            /*
            if ( $IDClub == 44  && $IDServicio == "3866"  && empty( $Admin ) ):

            $condicion_reserva_verif = " and Tipo <> 'Automatica'";
            $fecha_hoy_semana = date( "Y-m-d" );
            $hora_hoy_semana = date( "H:i:s" );
            $year = date( 'Y', strtotime( $Fecha ) );
            $week = date( 'W', strtotime( $Fecha ) );
            $dia_reserva_atc = date("w",strtotime($Fecha)) ;
            $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo

            if( (int)$dia_reserva_atc>=1 && (int)$dia_reserva_atc<=5){
            $ReservasPermitidaSemana = 2;
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 4 day' ) ); //Viernes
            $mensaje_reserva=" entre semana";
            }
            else{
            $ReservasPermitidaSemana = 1;
            $proximo_sabado = strtotime('next Saturday');
            $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
            $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
            $mensaje_reserva=" los fines de semana";
            }

            if((int)$IDBeneficiario>0){
            $sql_valida="SELECT * FROM ReservaGeneral Where ( (IDSocio = '".$IDBeneficiario."'  and IDSocioBeneficiario=0 ) or IDSocioBeneficiario = '".$IDBeneficiario."' )  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif;
            }
            else{
            $sql_valida="SELECT * FROM ReservaGeneral Where ( (IDSocio = '".$IDSocio."' and IDSocioBeneficiario=0  ) or IDSocioBeneficiario = '".$IDSocio."' )  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif;
            }

            $sql_reservas_sem = $dbo->query( $sql_valida );
            $total_reservas_semana = $dbo->rows( $sql_reservas_sem );

            if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
            $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas " . $mensaje_reserva;
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            endif;
            endif;
             */

            //Especial Serrezuela 2 fin semana
            if ($IDClub == 113 && $IDServicio == "20199" && empty($Admin)):

                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                $fecha_hoy_semana = date("Y-m-d");
                $hora_hoy_semana = date("H:i:s");
                $year = date('Y', strtotime($Fecha));
                $week = date('W', strtotime($Fecha));
                $dia_reserva_atc = date("w", strtotime($Fecha));
                $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                $fecha_lunes = $fechaInicioSemana; //Lunes
                $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo

                if ((int) $dia_reserva_atc >= 1 && (int) $dia_reserva_atc <= 5) {
                    // Entre semana por ahora no hay restriccion
                } else {
                    $ReservasPermitidaSemana = 2;
                    $proximo_sabado = strtotime('next Saturday');
                    $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
                    $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                    $mensaje_reserva = " los fines de semana";

                    if ($fecha_hoy_semana == $Fecha) {
                        if (!empty($IDBeneficiario)) {
                            $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . $Fecha . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                        } else {
                            $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . $Fecha . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                        }
                        $total_reservas_semana = $dbo->rows($sql_reservas_sem);
                        $condicion_otras = ">";
                    } else {
                        $condicion_otras = ">=";
                    }

                    //Consulto la de maÃ±ana en adelante
                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha " . $condicion_otras . " '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha " . $condicion_otras . " '" . $fecha_inicio_valida . "'  and Fecha <= '" . $fecha_fin_valida . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    }

                    $sql_reservas_sem = $dbo->query($sql_valida);
                    $total_reservas_semana = $dbo->rows($sql_reservas_sem);

                    if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                        $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas " . $mensaje_reserva;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;

                }

            endif;
            //FIN Serrezuela 2 fin semana

            //Especial cerro de los alpes solo permitir reservas dia por medio si reservo el martes la proxima solo piede ser el jueves en adelante
            if ($IDClub == 81 && empty($Admin) && ($IDServicio == "11580")) {
                $hoy_val=date("Y-m-d");
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                //Consulto la ultima reserva
                $sql_ult = "SELECT IDReservaGeneral,Fecha FROM ReservaGeneral WHERE IDSocio = '" . $IDSocio . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva=1 ORDER BY Fecha DESC LIMIT 1";
                $r_ult = $dbo->query($sql_ult);
                $row_ult = $dbo->fetchArray($r_ult);


                if (!empty($row_ult["Fecha"])) {

                  if ($row_ult["Fecha"] >= $hoy_val) {
                      $respuesta["message"] = "Lo sentimos solo puede reservar despues de pasada la meda noche de su reserva activa";
                      $respuesta["success"] = false;
                      $respuesta["response"] = null;
                      return $respuesta;

                  }

                    /*
                    // le sumo un dia a la fecha de la ultima reserva
                    $DiaSiguienteUltima = strtotime('+1 day', strtotime($row_ult["Fecha"]));
                    $FechaDiaSiguiente = date("Y-m-d", $DiaSiguienteUltima);
                    if ($FechaDiaSiguiente == $Fecha) {
                        $respuesta["message"] = "Lo sentimos solo puede reservar dia por medio";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;

                    }
                    */
                }

            }
            //Fin especial cerro alpes

            /*
            //Especial para Arrayanes ecuador solo 3 turnos por semana stalin
            if ( $IDClub == 23 && empty( $Admin ) && ($IDServicio == "5681")):
            $ReservasPermitidaSemana = 3;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date( "Y-m-d" );
            $hora_hoy_semana = date( "H:i:s" );
            $year = date( 'Y', strtotime( $Fecha ) );
            $week = date( 'W', strtotime( $Fecha ) );
            $dia_reserva_atc = date("w",strtotime($Fecha)) ;
            $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
            $mensaje_reserva=" por semana";
            //Consulto la de maÃ±ana en adelante
            $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where (IDSocio = '".$IDSocio."' or IDSocioBeneficiario = '".$IDSocio."' )  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

            if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
            $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por semana ";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            endif;
            endif;
            //Fin especial arrayanes ecuador
             */

            //Especial medellin psicina solo puede dos reservas al dia pero si es a la miam hora
            if ($IDClub == 20 && empty($Admin) && ($IDServicio == "21732")) {
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                if (!empty($IDBeneficiario)) {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . $Fecha . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif . " Limit 1	 ");
                } else {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . $Fecha . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif . " Limit 1 ");
                }
                $total_reservas_semana_p = (int) $dbo->rows($sql_reservas_sem);
                if ((int) $total_reservas_semana_p >= 1) {
                    $row_datos_r = $dbo->fetchArray($sql_reservas_sem);
                    if ($row_datos_r["Hora"] != $Hora) {
                        $respuesta["message"] = "Lo sentimos solo puede hacer una segunda reserva en el mismo dÃ­a solo si es a la misma hora ";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }
            }
            //FIN ESPECIAL MEDELLIN PISCINA

            //Especial para country barranquilla 1 por semana en tenis
            if ($IDClub == 110 && empty($Admin) && ($IDServicio == "19540")):
                $ReservasPermitidaSemana = 1;
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";

                $fecha_hoy_semana = date("Y-m-d");
                $hora_hoy_semana = date("H:i:s");
                $year = date('Y', strtotime($Fecha));
                $week = date('W', strtotime($Fecha));
                $dia_reserva_atc = date("w", strtotime($Fecha));
                $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                $fecha_lunes = $fechaInicioSemana; //Lunes
                $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                $fecha_inicio_valida = $fechaInicioSemana; //Lunes
                $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                $mensaje_reserva = " por semana";

                if (!empty($IDBeneficiario)) {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                } else {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                }

                $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                //Consulto la de maÃ±ana en adelante

                if (!empty($IDBeneficiario)) {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                } else {
                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                }

                //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
                $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                    $respuesta["message"] = "B1. Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reserva activa ";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            endif;
            //Fin especial B/quilla

            if($IDClub == 125)
              date_default_timezone_set('America/Montevideo');

            //Especial para uruguay 2 activas en piscinas o tenis
            if ($IDClub == 125 && empty($Admin) && ($IDServicio == "23009" || $IDServicio == "23067" || $IDServicio == "23010" || $IDServicio == "23030" || $IDServicio == "23027" || $IDServicio == "23059" || $IDServicio == "23054")):
                date_default_timezone_set('America/Montevideo');
                $mifecha = date('Y-m-d H:i:s');
                if($Hora<="10:00:00"){
                  $NuevaFecha = strtotime('+1 hour', strtotime($mifecha));
                }
                else{
                  $NuevaFecha = strtotime('+5 hour', strtotime($mifecha));
                }
                $FechaHoraValU = strtotime($Fecha . " " . $Hora);
                if ($FechaHoraValU >= $NuevaFecha) {

                    if ($IDServicio == "23009" || $IDServicio == "23027") {
                        $ReservasPermitidaSemana = 2;
                    } else {
                        $ReservasPermitidaSemana = 1;
                    }

                    if ($IDServicio == "23059" || $IDServicio == "23054") {
                        $ServiciosValidar = "23059,23054";
                        $ReservasPermitidaSemana = 2;
                    } else {
                        $ServiciosValidar = $IDServicio;
                    }

                    $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                    $hora_hoy_semana = date("H:i:s");
                    $year = date('Y', strtotime($Fecha));
                    $week = date('W', strtotime($Fecha));
                    $dia_reserva_atc = date("w", strtotime($Fecha));
                    $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                    $fecha_lunes = $fechaInicioSemana; //Lunes
                    $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 15 day')); //Domingo
                    $fecha_inicio_valida = $fechaInicioSemana; //Lunes
                    $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 15 day')); //Domingo
                    $mensaje_reserva = " por semana";
                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    }

                    //Consulto las de hoy pasada la hora actual
                    //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
                    $total_reservas_semana = $dbo->rows($sql_reservas_sem);

                    //Consulto la de maÃ±ana en adelante

                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "' and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    }

                    //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
                    $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                    //Consulto donde sea invitado
                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem = $dbo->query("Select RG.* From ReservaGeneral RG,ReservaGeneralInvitado RGI Where RG.IDReservageneral=RGI.IDReservageneral and ( RGI.IDSocio = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem = $dbo->query("Select RG.* From ReservaGeneral RG,ReservaGeneralInvitado RGI Where RG.IDReservageneral=RGI.IDReservageneral and ( RGI.IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    }
                    $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem = $dbo->query("Select RG.* From ReservaGeneral RG,ReservaGeneralInvitado RGI Where RG.IDReservageneral=RGI.IDReservageneral and  ( RGI.IDSocio = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "' and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem = $dbo->query("Select RG.* From ReservaGeneral RG,ReservaGeneralInvitado RGI Where  RG.IDReservageneral=RGI.IDReservageneral and ( RGI.IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                    }
                    $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);
                    // Consulto los invitados de esta reserva que no tenga otras reservas

                    //Consulto que los invitados no tengan en la misma hora reserva
                    $datos_invitado = json_decode($Invitados, true);
                    if (count($datos_invitado) > 0) {
                        foreach ($datos_invitado as $detalle_datos) {
                            $total_reservas_semana_inv = 0;
                            $total_reservas_dia_hora = 0;
                            $IDSocioInvitado = $detalle_datos["IDSocio"];
                            if (!empty($IDSocioInvitado)) {

                                //Consulto cuantas reservas tiene es invitado
                                $sql_reservas_sem_inv = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocioInvitado . ") ) and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                                $total_reservas_semana_inv += (int) $dbo->rows($sql_reservas_sem_inv);

                                $sql_reservas_sem_inv = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocioInvitado . ") ) and  Fecha > '" . date("Y-m-d") . "' and IDServicio in ( " . $ServiciosValidar . " ) and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                                $total_reservas_semana_inv += (int) $dbo->rows($sql_reservas_sem_inv);

                                ///Consulto donde sea invitado
                                $sql_invitado_hora = "SELECT RGI.*
																													FROM ReservaGeneralInvitado RGI, ReservaGeneral RG
																													WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocioInvitado . "') and
																													RG.IDClub = '" . $IDClub . "' and RG.Fecha >= '" . date("Y-m-d") . "' and
																													RG.IDServicio in ($IDServicio)
																													ORDER BY IDReservaGeneralInvitado Desc ";

                                $qry_invitado_hora = $dbo->query($sql_invitado_hora);
                                $total_reservas_semana_inv += $dbo->rows($qry_invitado_hora);

                                if ((int) $total_reservas_semana_inv >= $ReservasPermitidaSemana) {
                                    $respuesta["message"] = "Lo sentimos el invitado ya tiene " . $ReservasPermitidaSemana . " reservas activas";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                }
                            }
                        }
                    }
                    //Fin Validar

                    /*
                    if($IDServicio==23009 && ($Fecha=="2021-02-26" || $Fecha=="2021-02-27") && $IDSocio !=393090){
                    $respuesta[ "message" ] = "Fecha no disponible";
                    $respuesta[ "success" ] = false;
                    $respuesta[ "response" ] = NULL;
                    return $respuesta;
                    }
                     */

                    if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                        $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas activa ";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                }
            endif;

            //URUGUAY
            // Para Clase adulto depende el tipo de reserva
            if ($IDClub == 125 && empty($Admin) && ($IDServicio == "22900" || $IDServicio == "23029" || $IDServicio == "23028" || $IDServicio == "23067" || $IDServicio == "23034" || $IDServicio == "23034"
            || $IDServicio == "23035" || $IDServicio == "23032" || $IDServicio == "23036" || $IDServicio == "23033" || $IDServicio == "23034")):

                date_default_timezone_set('America/Montevideo');
                $mifecha = date('Y-m-d H:i:s');
                if($Hora<="10:00:00"){
                  $NuevaFecha = strtotime('+1 hour', strtotime($mifecha));
                }
                else{
                  $NuevaFecha = strtotime('+5 hour', strtotime($mifecha));
                }

                $FechaHoraValU = strtotime($Fecha . " " . $Hora);
                if ($FechaHoraValU >= $NuevaFecha) {

                    $ReservasPermitidaSemana = 1;
                    $sql_serv_ele = "SELECT IDServicioTipoReserva FROM ServicioElementoTipoReserva WHERE IDServicioElemento = '$IDElemento' ";
                    $r_serv_ele = $dbo->query($sql_serv_ele);
                    while ($row_serv_ele = $dbo->fetchArray($r_serv_ele)) {
                        $sql_serv_ele_asoc = "SELECT IDServicioElemento FROM ServicioElementoTipoReserva WHERE IDServicioTipoReserva = '" . $row_serv_ele["IDServicioTipoReserva"] . "' ";
                        $r_serv_ele_asoc = $dbo->query($sql_serv_ele_asoc);
                        while ($row_serv_ele_asoc = $dbo->fetchArray($r_serv_ele_asoc)) {
                            $array_ele_asoc[] = $row_serv_ele_asoc["IDServicioElemento"];
                        }
                    }

                    if (count($array_ele_asoc) > 0) {
                        $id_elem_aso = implode(",", $array_ele_asoc);
                    } else {
                        $id_elem_aso = $IDElemento;
                    }

                    $ReservasPermitidaSemana = 1;
                    $condicion_reserva_verif = " and Tipo <> 'Automatica'";

                    $fecha_hoy_semana = date("Y-m-d");
                    $hora_hoy_semana = date("H:i:s");
                    $year = date('Y', strtotime($Fecha));
                    $week = date('W', strtotime($Fecha));
                    $dia_reserva_atc = date("w", strtotime($Fecha));
                    $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                    $fecha_lunes = $fechaInicioSemana; //Lunes
                    $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 20 day')); //Domingo
                    $fecha_inicio_valida = $fechaInicioSemana; //Lunes
                    $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 20 day')); //Domingo
                    $mensaje_reserva = " por semana";

                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem2 = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha = '" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' )  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in (" . $id_elem_aso . ") " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem2 = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "'  and Hora >= '" . date("H:i:s") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in (" . $id_elem_aso . ") ");
                    }

                    $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem2);

                    if (!empty($IDBeneficiario)) {
                        $sql_reservas_sem2 = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha> '" . date("Y-m-d") . "'  )  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in (" . $id_elem_aso . ") " . $condicion_reserva_verif);
                    } else {
                        $sql_reservas_sem2 = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha>'" . date("Y-m-d") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in (" . $id_elem_aso . ") ");
                    }
                    $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem2);

                    //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
                    //$total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem2 );

                    if ((int) $total_reservas_semana >= 1):
                        $respuesta["message"] = "Lo sentimos solo se permiten 1 activa o por dia por esta clase de reserva";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                }
            endif;

            //Fin especial Uruguay

            // Para Calse adulto depende el tipo de reserva
            /*
            if ( $IDClub == 125 && empty( $Admin ) && ($IDServicio == "22900")):

            $ReservasPermitidaSemana = 1;
            $sql_serv_ele="SELECT IDServicioTipoReserva FROM ServicioElementoTipoReserva WHERE IDServicioElemento = '$IDElemento' ";
            $r_serv_ele=$dbo->query($sql_serv_ele);
            while($row_serv_ele=$dbo->fetchArray($r_serv_ele)){
            $sql_serv_ele_asoc="SELECT IDServicioElemento FROM ServicioElementoTipoReserva WHERE IDServicioTipoReserva = '".$row_serv_ele["IDServicioTipoReserva"]."' ";
            $r_serv_ele_asoc=$dbo->query($sql_serv_ele_asoc);
            while($row_serv_ele_asoc=$dbo->fetchArray($r_serv_ele_asoc)){
            $array_ele_asoc[]=$row_serv_ele_asoc["IDServicioElemento"];
            }
            }

            if(count($array_ele_asoc)>0){
            $id_elem_aso =implode(",",$array_ele_asoc);
            }
            else{
            $id_elem_aso = $IDElemento;
            }

            $ReservasPermitidaSemana = 1;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date( "Y-m-d" );
            $hora_hoy_semana = date( "H:i:s" );
            $year = date( 'Y', strtotime( $Fecha ) );
            $week = date( 'W', strtotime( $Fecha ) );
            $dia_reserva_atc = date("w",strtotime($Fecha)) ;
            $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
            $mensaje_reserva=" por semana";

            if(!empty($IDBeneficiario)){
            $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where ( IDSocioBeneficiario = '".$IDBeneficiario."') and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' )  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in ('".$id_elem_aso."') " . $condicion_reserva_verif );
            }
            else{
            $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in ('".$id_elem_aso."') " . $condicion_reserva_verif );
            }

            //Consulto las de hoy pasada la hora actual
            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            //$total_reservas_semana = $dbo->rows( $sql_reservas_sem );

            //Consulto la de maÃ±ana en adelante

            if(!empty($IDBeneficiario)){
            $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where ( IDSocioBeneficiario = '".$IDBeneficiario."') and  Fecha > '" . date( "Y-m-d" ) . "'  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDElemento in ('".$id_elem_aso."') " . $condicion_reserva_verif );
            }
            else{
            $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and  Fecha > '" . date( "Y-m-d" ) . "'  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento in ('".$id_elem_aso."') " . $condicion_reserva_verif );
            }

            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

            if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
            $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reserva activa ";
            $respuesta[ "success" ] = false;
            $respuesta[ "response" ] = NULL;
            return $respuesta;
            endif;
            endif;
             */
            //Fin especial Uruguay

            //Especial para Lagartos natacion 3 por semana
            if ($IDClub == 7 && empty($Admin) && ($IDServicio == "37" || $IDServicio == "622")):
                if ($IDServicio == "37") {
                    $ReservasPermitidaSemana = 3;
                } elseif ($IDServicio == "622") {
                $ReservasPermitidaSemana = 6;
            } else {
                $ReservasPermitidaSemana = 3;
            }

            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date("Y-m-d");

            if ($fecha_hoy_semana == $Fecha) {
                $condicion_hora = " and Hora >= '" . date("H:i:s") . "' ";
            }

            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva_atc = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 15 day')); //Domingo
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 15 day')); //Domingo
            $mensaje_reserva = " por semana";

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //Consulto las de hoy pasada la hora actual
            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana = $dbo->rows($sql_reservas_sem);

            //Consulto la de maÃ±ana en adelante

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reserva activas ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;
        //Fin especial lagartos

        //Distrital Y nadesba clase obligar a poner profesor
        if (($IDClub == 52 && $IDServicio == "5186" && $IDTipoReserva == 3127) || ($IDClub == 106 && $IDServicio == "18686")) {
            $datos_auxiliares_val = json_decode($ListaAuxiliar, true);
            if (count($datos_auxiliares_val) > 0) {
                $respuesta["message"] = "RESERVA No realizada. En este tipo de reserva no es posible seleccionar un profesor, por favor verifique. ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }
        }
        $datos_invitado_clase = json_decode($Invitados, true);
        if ($IDClub == 52 && $IDServicio == "5186" && $IDTipoReserva == 3129 && count($datos_invitado_clase) > 0) {
            $respuesta["message"] = "RESERVA No realizada. En este tipo de reserva no es posible seleccionar un invitado, por favor verifique. ";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
            return $respuesta;
        }
        //Fin Distrital

        //Arsa en sencillos y dobles no permitir seleccionar profesor
        if ($IDClub == 40 && $IDServicio == "3295" && $IDTipoReserva == 2366 && (empty($ListaAuxiliar) || $ListaAuxiliar == "[]")) {
            $respuesta["message"] = "No fue posible realizar la reserva, debe seleccionar un profesor. ";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
            return $respuesta;
        }
        //Fin Arsa

        //Especial para PeÃ±alisa solo 3 turnos por semana por accion

        if ($IDClub == 35 && empty($Admin) && ($IDServicio == "2536" || $IDServicio == "19114")):
            $ReservasPermitidaSemana = 3;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva_atc = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            // Valido tambien los de la misma acciÃ³n
            //$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
            //$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
            $accion_padre = $datos_socio["AccionPadre"];
            $accion_socio = $datos_socio["Accion"];

            if (empty($accion_padre)): // Es titular
                $array_socio[] = $IDSocio;
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            else:
                $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            endif;
            if (count($array_socio) > 0):
                $id_socio_nucleo = implode(",", $array_socio);
            endif;
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $mensaje_reserva = " por semana";
            //Consulto la de maÃ±ana en adelante
            $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ")  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por semana por accion ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        //Fin especial puerto peÃ±alisa

        //Especial para Campin solo 2 turnos por semana por accion
        /*
        if ( $IDClub == 96 && empty( $Admin ) && ($IDServicio == "15722")):
        $ReservasPermitidaSemana = 2;
        $condicion_reserva_verif = " and Tipo <> 'Automatica'";

        $fecha_hoy_semana = date( "Y-m-d" );
        $hora_hoy_semana = date( "H:i:s" );
        $year = date( 'Y', strtotime( $Fecha ) );
        $week = date( 'W', strtotime( $Fecha ) );
        $dia_reserva_atc = date("w",strtotime($Fecha)) ;
        $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
        $fecha_lunes = $fechaInicioSemana; //Lunes
        $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
        // Valido tambien los de la misma acciÃ³n
        //$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
        //$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
        $accion_padre = $datos_socio["AccionPadre"];
        $accion_socio = $datos_socio["Accion"];

        if ( empty( $accion_padre ) ): // Es titular
        $array_socio[] = $IDSocio;
        $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
        $result_nucleo = $dbo->query( $sql_nucleo );
        while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
        $array_socio[] = $row_nucleo[ "IDSocio" ];
        endwhile;
        else :
        $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
        $result_nucleo = $dbo->query( $sql_nucleo );
        while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
        $array_socio[] = $row_nucleo[ "IDSocio" ];
        endwhile;
        endif;

        $datos_invitado = json_decode( $Invitados, true );
        if ( count( $datos_invitado ) > 0 ){
        foreach ( $datos_invitado as $detalle_datos ){
        $IDSocioInvitado = $detalle_datos[ "IDSocio" ];
        if ( !empty( $IDSocioInvitado ) ){
        $array_socio[] = $IDSocioInvitado;
        }
        }
        }

        if ( count( $array_socio ) > 0 ):
        $id_socio_nucleo = implode( ",", $array_socio );
        endif;
        $fecha_inicio_valida = $fechaInicioSemana; //Lunes
        $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
        $mensaje_reserva=" por semana";
        //Consulto la de maÃ±ana en adelante
        $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ")  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
        $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

        if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
        $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por semana por accion y para sus invitados ";
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        endif;
        endif;
         */
        //Fin campin

        //Especial para sabana solo dos turnos por fin semana
        /*
        if ( $IDClub == 95 && empty( $Admin ) ):

        if ( $IDServicio == "15964" || $IDServicio == "16047" ): // tenis y clase tenis hasta 2

        $condicion_reserva_verif = " and Tipo <> 'Automatica'";
        $fecha_hoy_semana = date( "Y-m-d" );
        $hora_hoy_semana = date( "H:i:s" );
        $year = date( 'Y', strtotime( $Fecha ) );
        $week = date( 'W', strtotime( $Fecha ) );
        $dia_reserva_atc = date("w",strtotime($Fecha)) ;
        $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
        $fecha_lunes = $fechaInicioSemana; //Lunes
        $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
        $accion_padre = $datos_socio["AccionPadre"];
        $accion_socio = $datos_socio["Accion"];

        if ( empty( $accion_padre ) ): // Es titular
        $array_socio[] = $IDSocio;
        $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
        $result_nucleo = $dbo->query( $sql_nucleo );
        while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
        $array_socio[] = $row_nucleo[ "IDSocio" ];
        endwhile;
        else :
        $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
        $result_nucleo = $dbo->query( $sql_nucleo );
        while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
        $array_socio[] = $row_nucleo[ "IDSocio" ];
        endwhile;
        endif;

        if ( count( $array_socio ) > 0 ):
        $id_socio_nucleo = implode( ",", $array_socio );
        endif;

        if( (int)$dia_reserva_atc>=1 && (int)$dia_reserva_atc<=5){
        $fecha_inicio_valida = $fechaInicioSemana; //Lunes
        $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 4 day' ) ); //Viernes
        $mensaje_reserva=" entre semana";
        $ReservasPermitidaSemana = 20;

        }
        else{
        $ReservasPermitidaSemana=1;
        if($dia_reserva_atc==0){
        $fecha_inicio_valida = date("Y-m-d",strtotime($Fecha."- 1 days"));
        }
        $fecha_fin_valida = $Fecha; //Domingo
        $mensaje_reserva=" los fines de semana";
        }

        //Consulto la de maÃ±ana en adelante
        $sql_revisar="Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif;
        $sql_reservas_sem = $dbo->query( $sql_revisar );
        $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

        if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
        $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas " . $mensaje_reserva;
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        endif;

        endif;
        endif;
         */

        /*
        ///Especial atc no puede tener dos turnos el mismo dia
        if ( $IDClub == 26 && empty( $Admin )) {
        if ( $IDServicio == "1490" || $IDServicio == "2109" || $IDServicio == "2110" ){
        $sql_reserva_otro="";
        $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (1490,2109,2110) and IDEstadoReserva=1 ";
        $mensaje_cruce="Ya tiene otra reserva en el mismo dia";
        if(!empty($sql_reserva_otro)){
        $r_reserva_otro=$dbo->query($sql_reserva_otro);
        if($dbo->rows($r_reserva_otro)>=1){
        $respuesta[ "message" ] = $mensaje_cruce;
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        }
        }
        }
        }
        ///FIN Especial atc no puede tener dos turnos el mismo dia
         */

        ///Especial atc si reserva clase ya debe tener una cancha
        if ($IDClub == 26 && empty($Admin)) {
            if ($IDServicio == "1434") {
                if (!empty($IDBeneficiario)) {
                    $sql_reserva_otro = "SELECT IDReservaGeneral From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "' or IDSocio = '" . $IDBeneficiario . "' ) and (Fecha='" . $Fecha . "' and Hora = '" . $Hora . "' ) and IDServicio in (2719,2720)  and IDEstadoReserva = '1' ";
                } else {
                    $sql_reserva_otro = "SELECT IDReservaGeneral From ReservaGeneral Where ( (IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "') or IDSocioBeneficiario='" . $IDSocio . "' ) and (Fecha='" . $Fecha . "' and Hora = '" . $Hora . "' ) and IDServicio in (2719,2720) and IDEstadoReserva = '1' ";
                }
                $mensaje_cruce = "Primero debe tener una reserva de cancha antes de hacer la reserva de clase";
                $r_reserva_otro = $dbo->query($sql_reserva_otro);
                if ($dbo->rows($r_reserva_otro) <= 0) {
                    $respuesta["message"] = $mensaje_cruce;
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

            if ($IDServicio == "5039" || $IDServicio == "2719") {
                if (!empty($IDBeneficiario)) {
                    $sql_reserva_otro = "SELECT IDReservaGeneral From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "' or IDSocio = '" . $IDBeneficiario . "' ) and (Fecha='" . $Fecha . "' ) and IDServicio in (5039,2719)  and IDEstadoReserva = '1' ";
                } else {
                    $sql_reserva_otro = "SELECT IDReservaGeneral From ReservaGeneral Where ( (IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "') or IDSocioBeneficiario='" . $IDSocio . "' ) and (Fecha='" . $Fecha . "'  ) and IDServicio in (5039,2719) and IDEstadoReserva = '1' ";
                }
                $mensaje_cruce = "Lo sentimos ya tiene una reserva en dobles o campos";
                $r_reserva_otro = $dbo->query($sql_reserva_otro);
                if ($dbo->rows($r_reserva_otro) > 0) {
                    $respuesta["message"] = $mensaje_cruce;
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

        }
        ///Especial atc si reserva clase ya debe tener una cancha

        /*
        ///Especial atc si reserva clase o cancha no debe tener escuela
        if ( $IDClub == 26 && empty( $Admin )) {
        if ( $IDServicio == "1484" || $IDServicio == "1490" || $IDServicio == "2106" || $IDServicio == "2109" || $IDServicio == "2110" || $IDServicio == "4350" || $IDServicio == "5035"
        || $IDServicio == "2106" || $IDServicio == "5039" || $IDServicio == "7973"){
        $sql_reserva_otro="";
        $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."'  and IDServicio in (1446) and IDEstadoReserva=1 ";
        $mensaje_cruce="Ya tienen una reserva de cancha o clase, no puede inscribirse a una escuela";
        if(!empty($sql_reserva_otro)){
        $r_reserva_otro=$dbo->query($sql_reserva_otro);
        if($dbo->rows($r_reserva_otro)>0){
        $respuesta[ "message" ] = $mensaje_cruce;
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        }
        }
        }
        elseif($IDServicio == "1446"){
        $sql_reserva_otro="";
        $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and IDServicio in (1484,1490,2106,2109,2110,5035,2106,5039,7973) and IDEstadoReserva=1 ";
        $mensaje_cruce="Ya tienen una reserva de escuela, no puede reservar una cancha o clase";
        if(!empty($sql_reserva_otro)){
        $r_reserva_otro=$dbo->query($sql_reserva_otro);
        if($dbo->rows($r_reserva_otro)>0){
        $respuesta[ "message" ] = $mensaje_cruce;
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        }
        }

        }
        }
        ///Especial atc si reserva clase ya debe tener una cancha
         */

        //Especial comercio pereira el lunes puede hacer la reserva de maximo 3 turnos por accion con un mismo Profesor despues del lunes si puede hacer las que quiera
        $dia_actual_app = date("N");
        if ($IDClub == 48 && empty($Admin) && $dia_actual_app == 1) {
            if ($IDServicio == "4433" || $IDServicio == "4514" || $IDServicio == "7768" || $IDServicio == "4434" || $IDServicio == "4499") { // tenis y clase tenis hasta 3
                $ReservasPermitidaSemana = 6;
            } else {
                $ReservasPermitidaSemana = 100;
            }

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva_atc = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            // Valido tambien los de la misma acciÃ³n
            $accion_padre = $datos_socio["AccionPadre"];
            $accion_socio = $datos_socio["Accion"];
            if (empty($accion_padre)): // Es titular
                $array_socio[] = $IDSocio;
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            else:
                $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            endif;
            if (count($array_socio) > 0):
                $id_socio_nucleo = implode(",", $array_socio);
            endif;

            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $mensaje_reserva = " semana";

            //Consulto las de hoy pasada la hora actual
            $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento = '" . $IDElemento . "' " . $condicion_reserva_verif);
            $total_reservas_semana = $dbo->rows($sql_reservas_sem);

            //Consulto la de maÃ±ana en adelante
            $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento = '" . $IDElemento . "' " . $condicion_reserva_verif);
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permite crear el dia de hoy: " . $ReservasPermitidaSemana . " reservas por accion ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        }

        //verificar del country si el socio es tipo invitado o caje y reserva cuando no puede no lo deje.
        if ($IDClub == 44) {
            $FechaInicoInvitado = $datos_socio["FechaInicioInvitado"];
            $FechaFinInivtado = $datos_socio["FechaFinInvitado"];
            $FechaInicoCanje = $datos_socio["FechaInicioCanje"];
            $FechaFinCanje = $datos_socio["FechaFinCanje"];

            if ($datos_socio['TipoSocio'] == "Invitado" && ($Fecha < $FechaInicoInvitado || $Fecha > $FechaFinInivtado)) {
                $respuesta["message"] = "Lo sentimos las fechas para tomar reservas son de: " . $FechaInicioInvitado . " hasta " . $FechaFinInivtado;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }
            if ($datos_socio['TipoSocio'] == "Canje" && ($Fecha < $FechaInicoCanje || $Fecha > $FechaFinCanje)) {
                $respuesta["message"] = "Lo sentimos las fechas para tomar reservas son de: " . $FechaInicoCanje . " hasta " . $FechaFinCanje;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

        }

        //Especial para Country solo dos turnos entre semana y 2 fin de semana
        if ($IDClub == 44 && empty($Admin) && ($IDServicio == "3908" || $IDServicio == "18257")):

            $ReservasPermitidaSemana = 5;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo

            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = $fecha_domingo;
            $mensaje_reserva = " entre semana";

            //Consulto las de hoy pasada la hora actual ENTRE SEMANA
            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") ) and (Fecha= '" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            $total_reservas_semana = $dbo->rows($sql_reservas_sem);
            //Consulto la de maÃ±ana en adelante
            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("SELECT * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("SELECT * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") ) and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //$sql_reservas_sem = $dbo->query( "SELECT * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas activas  " . $mensaje_reserva;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        //Especial para Country solo dos turnos entre semana y 2 fin de semana
        if ($IDClub == 44 && empty($Admin)):
            if ($IDServicio == "3941" || $IDServicio == "3861"): // tenis y clase tenis hasta 2
                $ReservasPermitidaSemana = 2;
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
            elseif ($IDServicio == "9965" && $IDElemento == "8032"): //GISMASIO
                $ReservasPermitidaSemana = 10000;
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
            elseif ($IDServicio == "3905"): //SALON DE BELLEZA
                $ReservasPermitidaSemana = 10000;
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";
            else: // las demas
                $ReservasPermitidaSemana = 100;
                $condicion_reserva_verif = "";
            endif;

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));

            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            if ((int) $dia_reserva >= 2 && (int) $dia_reserva <= 5) {
                $fecha_inicio_valida = $fechaInicioSemana; //Lunes
                $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 4 day')); //Viernes
                //$fecha_fin_valida = "2019-03-08";
                //$fecha_inicio_valida = "2019-03-04";
                $mensaje_reserva = " entre semana";
            } else {
                $proximo_sabado = strtotime('next Saturday');
                $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
                $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                $mensaje_reserva = " los fines de semana";

                //si el proximo Lunes es festivo se permite 3 reservas el fin de semana
                $proximo_Lunes = strtotime('next Monday');
                $fecha_prox_lunes = date('Y-m-d', $proximo_Lunes);
                $IDFestivo = $dbo->getFields("Festivos", "IDFestivo", "Fecha = '" . $fecha_prox_lunes . "' and IDPais = 1");

                if (!empty($IDFestivo)) {
                    $ReservasPermitidaSemana = 3;
                    $sabado_pasado = strtotime('last Saturday');
                    $fecha_inicio_valida = date('Y-m-d', $sabado_pasado);
                    $fecha_fin_valida = $fecha_prox_lunes;
                }

            }

            //Consulto las de hoy pasada la hora actual ENTRE SEMANA
            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = 0 ) and (Fecha= '" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            $total_reservas_semana = $dbo->rows($sql_reservas_sem);
            //Consulto la de maÃ±ana en adelante
            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("SELECT * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("SELECT * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = 0 ) and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //$sql_reservas_sem = $dbo->query( "SELECT * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas activas  " . $mensaje_reserva;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        //Especial country si reserva en un campo de golf ya no puede reservar en el otro
        if ($IDClub == 44 && ($IDServicio == "3888" || $IDServicio == "3889")) {
            $IDServValidar = "3888,3889";
            if (!empty($IDBeneficiario)) {
                $sql_reservas_rep = $dbo->query("SELECT * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and Fecha='" . $Fecha . "' and IDServicio in (" . $IDServValidar . ") and IDEstadoReserva = '1' ");
            } else {
                $sql_reservas_rep = $dbo->query("Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "') and Fecha='" . $Fecha . "' and IDServicio in (" . $IDServValidar . ") and IDEstadoReserva = '1' ");
            }
            $total_reservas_rep += (int) $dbo->rows($sql_reservas_rep);
            if ((int) $total_reservas_rep >= 1):
                $respuesta["message"] = "Lo sentimos ya tiene una reserva por otro campo en la misma fecha";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        }

        //Especial atc para Iluminados y Exteriores los sabados, Domingos solo se puede reservar por app hasta las 7am
        if ($IDClub == 26 && empty($Admin)):
            $dia_semana_reserva = date("w", strtotime($Fecha));
            if (date("H:i:s") >= "07:00:00" && ((($IDServicio == "1490" || $IDServicio == "2109") && ($dia_semana_reserva == "6" || $dia_semana_reserva == "0")))):
                //$respuesta[ "message" ] = "Lo sentimos solo se permiten reservar por el app hasta las 7am para este dia ";
                //$respuesta[ "success" ] = false;
                //$respuesta[ "response" ] = NULL;
                //return $respuesta;
            endif;
        endif;
        //FIN ESPECIAL atc

        if ( /* ($IDClub == 8  && $IDServicio == 12023) ||  */($IDClub == 44 && $IDServicio == 11242)):
            $dia_semana_reserva = date("w", strtotime($Fecha));
            $dia = date("w");
            $hora_dia = date("H:i:s");
            if ($dia_semana_reserva >= 2 && $dia_semana_reserva <= 5) {
                if ($dia_semana_reserva == $dia) {
                    if (($hora_dia >= "12:00:00")) {
                        $respuesta["message"] = "Lo sentimos, solo puede reservar hasta antes de las 12 m";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }
            }
        endif;

        //especual country solo 1 por semana en 3 a 6 aÃ±os equitacion
        if ( /* ($IDClub == 8  && $IDServicio == 31) ||  */($IDClub == 44 && $IDServicio == 11242 && $IDTipoReserva == 2394)):
            $ReservasPermitidaSemana = 1;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva_atc = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $mensaje_reserva = " por semana";

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where  IDSocio = '" . $IDSocio . "'  and (Fecha= '" . date("Y-m-d") . ") and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDServicioTipoReserva= '" . $IDTipoReserva . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //Consulto las de hoy pasada la hora actual
            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            //$total_reservas_semana = $dbo->rows( $sql_reservas_sem );

            //Consulto la de maÃ±ana en adelante

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where  IDSocio = '" . $IDSocio . "'  and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDServicioTipoReserva = '" . $IDTipoReserva . "'and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reserva activa ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        if ( /* ($IDClub == 8  && $IDServicio == 31) ||  */($IDClub == 44 && $IDServicio == 11242 && $IDTipoReserva == 2401)):
            $ReservasPermitidaSemana = 2;
            $condicion_reserva_verif = " and Tipo <> 'Automatica'";

            $fecha_hoy_semana = date("Y-m-d");
            $hora_hoy_semana = date("H:i:s");
            $year = date('Y', strtotime($Fecha));
            $week = date('W', strtotime($Fecha));
            $dia_reserva_atc = date("w", strtotime($Fecha));
            $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
            $fecha_lunes = $fechaInicioSemana; //Lunes
            $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $fecha_inicio_valida = $fechaInicioSemana; //Lunes
            $fecha_fin_valida = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
            $mensaje_reserva = " por semana";

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where  IDSocio = '" . $IDSocio . "'  and (Fecha= '" . date("Y-m-d") . ") and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDServicioTipoReserva= '" . $IDTipoReserva . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //Consulto las de hoy pasada la hora actual
            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            //$total_reservas_semana = $dbo->rows( $sql_reservas_sem );

            //Consulto la de maÃ±ana en adelante

            if (!empty($IDBeneficiario)) {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "') and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            } else {
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where  IDSocio = '" . $IDSocio . "'  and  (Fecha > '" . date("Y-m-d") . "' OR Fecha < '" . date("Y-m-d") . "')  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDServicioTipoReserva = '" . $IDTipoReserva . "'and IDEstadoReserva = '1' " . $condicion_reserva_verif);
            }

            //$sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $IDSocio . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
            $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

            if (((int) $total_reservas_semana - 1) >= (int) $ReservasPermitidaSemana):
                $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reserva activa ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        //Especial Country para reservas de 6am y 7am  solo hasta las 8pm del dia anterior
        if (($IDClub == 44 || $IDClub == 8) && empty($Admin)):
            $dia_manana = date('Y-m-d', time() + 84600);
            $fecha_hoy_v = date("Y-m-d");
            if (((date("H:i:s") >= "20:00:00" && $dia_manana == $Fecha) || $fecha_hoy_v == $Fecha) && ($IDServicio == "3941" || $IDServicio == "36") && ($Hora == '06:00:00' || $Hora == '07:00:00') && (!empty($ListaAuxiliar) && $ListaAuxiliar != "[]")):
                $respuesta["message"] = "Lo sentimos solo se permiten reservar con profesor/monitor por el app hasta antes de las 8pm para turnos de 6am y 7am " . $ListaAuxiliar;
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            endif;
        endif;

        $dia_reserva_lagartos = date("w", strtotime($Fecha));
        if (($IDClub == 7 && $IDServicio == 629) && empty($Admin) && ($dia_reserva_lagartos >= 2 || $dia_reserva_lagartos <= 2)):
            $dia_manana = date('Y-m-d', time() + 84600);
            if (((date("H:i:s") >= "20:00:00" && $dia_manana == $Fecha))):
              //verifico si ya tiene algo reservado antes de la hora si es asi no bloque los horarios
              $sql_reserva_man = "SELECT * FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1)";
              $result_reserva_man = $dbo->query($sql_reserva_man);
              if ($dbo->rows($result_reserva_man) <= 0){
                $respuesta["message"] = "Lo sentimos solo se permite reservar hasta las 8pm";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
              }
            endif;
        endif;
        //FIN ESPECIAL country

        //Especial Country Sala belleza servicios que no se pueden cruzar
        if (($IDClub == 44) && empty($Admin)):
            $sql_reserva_otro = "";
            switch ($IDServicio) {
                case "11734": //maquillaje
                    //no se puede tener otra reserva en el mismo horario
                    $sql_reserva_otro = "SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='" . $IDSocio . "' and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio in (3897,11732,11733,11736,12470) and IDEstadoReserva = 1";
                    $mensaje_cruce = "Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar maquillaje a la misma hora";
                    break;
                case "11736": //tratamientos quimicos
                    $sql_reserva_otro = "SELECT IDReservageneral FROM ReservaGeneral WHERE IDSocio ='" . $IDSocio . "' and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio in (11732,11733,11734,11736,12470) and IDEstadoReserva = 1";
                    $mensaje_cruce = "Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar tratamiento quimicos a la misma hora";
                    break;
                case "11733": // corte
                case "11732": // cepillado
                    $sql_reserva_otro = "SELECT IDReservageneral FROM ReservaGeneral WHERE IDSocio ='" . $IDSocio . "' and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio in (11736,11734) and IDEstadoReserva = 1 ";
                    $mensaje_cruce = "Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar peinado/corte/cepillado a la misma hora";
                    break;
            }

            if (!empty($sql_reserva_otro)) {
                $r_reserva_otro = $dbo->query($sql_reserva_otro);
                if ($dbo->rows($r_reserva_otro) >= 1) {
                    $respuesta["message"] = $mensaje_cruce;
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }
        endif;
        //FIN ESPECIAL country

        //Especial Country Sala belleza Keratina y antifrizz se reserva turno a otras personas
        if (($IDClub == 44) && $IDServicio == 11736 && ($IDTipoReserva == "1482" || $IDTipoReserva == "1483" || $IDTipoReserva == "1484")) {

        }

        //FIN ESPECIAL country

        //Especial Comercio pereira cuando se selecciona auxiliar solo permite cuando es 1 hora
        /*
        if ( ($IDClub == 48 ) ){
        if($ListaAuxiliar=="null")
        $ListaAuxiliar="";

        if ( ($IDServicio == "4514") && $IDTipoReserva != 881){
        if( (!empty( $ListaAuxiliar ) && $ListaAuxiliar!="[]")   ):
        $con_aux="S";
        elseif($IDAuxiliar!=""):
        $con_aux="S";
        endif;

        if($con_aux=="S"){
        $respuesta[ "message" ] = "Para reservas con monitor solo se pemite 1 hora no 2 horas. ";
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        }
        }
        }
         */
        //FIN COMERCIO

        //Especial Lagartos la cancha nocturnas solo se puede hasta las 5:30pm
        if (($IDClub == 7 && $IDServicio == 221 && date("Y-m-d") == $Fecha && $Hora >= "18:00:00" && date("H:i:s") >= '17:30:00') && empty($Admin)):
            $respuesta["message"] = "Lo sentimos solo se permiten reservar estas canchas antes de las 5:30pm";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
            return $respuesta;
        endif;

        //if ( ($IDClub == 7 && $IDServicio==22 && $Hora>="05:00:00" && $Hora<="11:00:00" && date("H:i:s")<='04:59:00' ) && empty( $Admin ) ):
        if (($IDClub == 7 && ($IDServicio == 22 || $IDServicio == 19563) && $Hora >= "06:00:00" && $Hora <= "08:45:00" && (date("H:i:s") < '05:15:00' || date("Y-m-d") != $Fecha))):
            $respuesta["message"] = "Lo sentimos los turnos entre las 6am y 8:15 am solo los puede reservar despues de las 5:15am del mismo dia ";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
            return $respuesta;
        endif;

        //Especial lagartos y rincon valido que solo tenga 1 turno en clase o cancha
        //if($IDClub == 7 && ($IDServicio==221 || $IDServicio==43 || $IDServicio==2321 || $IDServicio==12014 || $IDServicio==12015 || $IDServicio==12016 || $IDServicio==12017 || $IDServicio==12018 || $IDServicio==12019 || $IDServicio==12020 ) ){
        if (($IDClub == 7 || $IDClub == 10) && ($IDServicio == 221 || $IDServicio == 43 || $IDServicio == 4960 || $IDServicio == 84 || $IDServicio == 225)) {

            if ($IDClub == 7) {
                $IDServVal = "221,43";
            } elseif ($IDClub == 10) {
                $IDServVal = "84,225";
            }

            if ($Fecha == date("Y-m-d")) {
                $condicion_hora_un = " and Hora >= '" . date("H:i:s") . "' ";
            } else {
                $condicion_hora_un = "";
            }

            if ((int) $IDBeneficiario > 0) {
                $sql_valida_un = "SELECT * FROM ReservaGeneral Where ( (IDSocio = '" . $IDBeneficiario . "'  and IDSocioBeneficiario=0 ) or IDSocioBeneficiario = '" . $IDBeneficiario . "' )  and Fecha= '" . $Fecha . "' and IDServicio in (" . $IDServVal . ")  and IDEstadoReserva = '1' " . $condicion_hora_un;
            } else {
                $sql_valida_un = "SELECT * FROM ReservaGeneral Where ( (IDSocio = '" . $IDSocio . "' and IDSocioBeneficiario=0  ) or IDSocioBeneficiario = '" . $IDSocio . "' )  and Fecha= '" . $Fecha . "' and IDServicio in (" . $IDServVal . ") and IDEstadoReserva = '1' " . $condicion_hora_un;
            }
            $sql_reservas_un = $dbo->query($sql_valida_un);
            $total_reservas_dia_hora_un = $dbo->rows($sql_reservas_un);
            if ((int) $total_reservas_dia_hora_un > 0) {
                $respuesta["message"] = "LT. Lo sentimos solo puede tener una reserva activa en tenis al dia ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }
        }
        //FIN ESPECIAL Lagartos

        // Especial lagartos si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis
        if ($IDServicio == 43 || $IDServicio == 221 || $IDServicio == 629 || $IDServicio == 1072 || $IDServicio == 12014 || $IDServicio == 12015 || $IDServicio == 12016 || $IDServicio == 12017 || $IDServicio == 12018 || $IDServicio == 12019 || $IDServicio == 12020) {
            $bloqueo_incumplida = "N";
            $Hace8dias = strtotime('-7 day', strtotime($Fecha));
            $Hace8dias = date('Y-m-d', $Hace8dias);
            if ($IDServicio == 43 || $IDServicio == 221 || $IDServicio == 629 || $IDServicio == 1072) {
                $sql_inc = "SELECT IDReservaGeneral,IDSocioBeneficiario,IDSocio FROM ReservaGeneral WHERE Fecha='" . $Hace8dias . "' and (Cumplida = 'N' or Cumplida = 'P' ) and (IDSocio = '" . $IDSocio . "' or IDSocioBeneficiario = '" . $IDSocio . "') and IDServicio in (43, 221, 629,1072)";
            } else {
                $sql_inc = "SELECT IDReservaGeneral,IDSocioBeneficiario,IDSocio FROM ReservaGeneral WHERE Fecha='" . $Hace8dias . "' and (Cumplida = 'N' or Cumplida = 'P' ) and (IDSocio = '" . $IDSocio . "' or IDSocioBeneficiario = '" . $IDSocio . "') and IDServicio in ($IDServicio)";
            }

            $result_incumplidat = $dbo->query($sql_inc);
            if ($dbo->rows($result_incumplidat) > 0) {
                while($row_datos_reserva_inc = $dbo->fetchArray($result_incumplidat)){


                if ($row_datos_reserva_inc["IDSocioBeneficiario"] > 0 && ($row_datos_reserva_inc["IDSocioBeneficiario"] == $IDSocio || $row_datos_reserva_inc["IDSocioBeneficiario"] == $IDBeneficiario)) {
                    $bloqueo_incumplida = "S";
                } elseif ($row_datos_reserva_inc["IDSocioBeneficiario"] <= 0 && $row_datos_reserva_inc["IDSocio"] == $IDSocio) {
                    $bloqueo_incumplida = "S";
                }

                if ($bloqueo_incumplida == "S") {
                    $respuesta["message"] = "Lo sentimos, el dia " . $Hace8dias . " tiene una reserva incumplida, no puede tomar reservas el dia de hoy para tenis";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
              }
            }
        }

        // FIN Especial lagartos si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis$Fecha = "2019-04-11";

        // Especial bogotatenis  si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis$Fecha = "2019-04-11";
        if ($IDServicio == 8539 || $IDServicio == 8649) {

            $bloqueo_incumplida = "N";
            $Hace8dias = strtotime('-7 day', strtotime($Fecha));
            $Hace8dias = date('Y-m-d', $Hace8dias);

            $accion_padre = $datos_socio["AccionPadre"];
            $accion_socio = $datos_socio["Accion"];
            if (empty($accion_padre)): // Es titular
                $array_socio[] = $IDSocio;
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            else:
                $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query($sql_nucleo);
                while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                    $array_socio[] = $row_nucleo["IDSocio"];
                endwhile;
            endif;
            if (count($array_socio) > 0):
                $id_socio_nucleo = implode(",", $array_socio);
            endif;

            $sql_inc = "SELECT IDReservaGeneral,IDSocioBeneficiario,IDSocio FROM ReservaGeneral WHERE Fecha='" . $Hace8dias . "' and (Cumplida = 'N' or Cumplida = 'P' ) and (IDSocio in ($id_socio_nucleo) or IDSocioBeneficiario in ('" . $id_socio_nucleo . "')) and IDServicio in (8539, 8649)";
            $result_incumplidat = $dbo->query($sql_inc);
            if ($dbo->rows($result_incumplidat) > 0) {
                $row_datos_reserva_inc = $dbo->fetchArray($result_incumplidat);
                if ($row_datos_reserva_inc["IDSocioBeneficiario"] > 0 && ($row_datos_reserva_inc["IDSocioBeneficiario"] == $IDSocio || $row_datos_reserva_inc["IDSocioBeneficiario"] == $IDBeneficiario)) {
                    $bloqueo_incumplida = "S";
                } elseif ($row_datos_reserva_inc["IDSocioBeneficiario"] <= 0 && $row_datos_reserva_inc["IDSocio"] == $IDSocio) {
                    $bloqueo_incumplida = "S";
                }

                $bloqueo_incumplida = "S";
                if ($bloqueo_incumplida == "S") {
                    $respuesta["message"] = "Lo sentimos, el dia " . $Hace8dias . " usted o un miembro de su familia no cumpliÃ³ con alguna norma de los turnos de tenis.";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }
        }
        // FIN Especial lagartos si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis$Fecha = "2019-04-11";

        //Especial para atc solo dos turnos por semana
        if ($IDClub == 7 && empty($Admin)) {
            if ($IDServicio == "2209"): // Retos lagartos
                $ReservasPermitidaSemana = 1;
                $condicion_reserva_verif = " and Tipo <> 'Automatica'";

                $fecha_hoy_semana = date("Y-m-d");
                $hora_hoy_semana = date("H:i:s");
                $year = date('Y', strtotime($Fecha));
                $week = date('W', strtotime($Fecha));
                $fechaInicioSemana = date('Y-m-d', strtotime($year . 'W' . str_pad($week, 2, '0', STR_PAD_LEFT)));
                $fecha_lunes = $fechaInicioSemana; //Lunes
                $fecha_domingo = date('Y-m-d', strtotime($fechaInicioSemana . ' 6 day')); //Domingo
                // Valido tambien los de la misma acciÃ³n
                $accion_padre = $datos_socio["AccionPadre"];
                $accion_socio = $datos_socio["Accion"];

                if (empty($accion_padre)): // Es titular
                    $array_socio[] = $IDSocio;
                    /*
                $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                $result_nucleo = $dbo->query( $sql_nucleo );
                while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
                $array_socio[] = $row_nucleo[ "IDSocio" ];
                endwhile;
                 */
                endif;
                if (count($array_socio) > 0):
                    $id_socio_nucleo = implode(",", $array_socio);
                endif;

                //Consulto las de hoy pasada la hora actual
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "' and (Fecha='" . date("Y-m-d") . "' and Hora >= '" . date("H:i:s") . "' ) and (Fecha >= '" . $fecha_lunes . "' and Fecha <= '" . $fecha_domingo . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                $total_reservas_semana = $dbo->rows($sql_reservas_sem);

                //Consulto la de maÃ±ana en adelante
                $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDSocioBeneficiario = '" . $IDBeneficiario . "' and  Fecha > '" . date("Y-m-d") . "'  and (Fecha >= '" . $fecha_lunes . "' and Fecha <= '" . $fecha_domingo . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                $total_reservas_semana += (int) $dbo->rows($sql_reservas_sem);

                if ((int) $total_reservas_semana >= (int) $ReservasPermitidaSemana):
                    $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por fin de semana ";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;
            endif;
        }

        //Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
        if ($IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517"):
            $RepetirFechaFinal = strtotime('+1 week', strtotime($Fecha));
            $minima_fecha = date("Y-m") . "-14";
            $maxima_fecha = new DateTime();
            $maxima_fecha->modify('last day of this month');
            $maxima_fecha->format('Y-m-d');
            if ((int) date("d") <= 14 && (int) date("d", $RepetirFechaFinal) <= 14):
                $permite_repetir = "S";
            elseif ((int) date("d") >= 15 && $RepetirFechaFinal <= strtotime($maxima_fecha->format('Y-m-d'))):
                $permite_repetir = "S";
            else:
                $permite_repetir = "N";
            endif;
            if ($permite_repetir == "S"):
                $mensaje_especial_repetir = " Se realizÃ³ un reserva automatica para el dÃ­a " . date("Y-m-d", $RepetirFechaFinal);
                $Repetir = "S";
                $Periodo = "Semana";
                $RepetirFechaFinal = strtotime('+8 day', strtotime($Fecha));
                $RepetirFechaFinal = date("Y-m-d", $RepetirFechaFinal);
            else:
                $mensaje_especial_repetir = " No se pudo realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
            endif;
        endif;
        //Fin validaciÃ³n especial

        //Especial Aeroclub cuando es crucero separa varios dÃ­as
        //if ( $IDClub == 36 && $IDServicio == 3608 && ( $IDTipoReserva == 718 || $IDTipoReserva == 745 || $IDTipoReserva == 746 || $IDTipoReserva == 747 || $IDTipoReserva == 748 ) ):
        if ($IDClub == 36 && $IDServicio == 4371 && ($IDTipoReserva == 787 || $IDTipoReserva == 788 || $IDTipoReserva == 789 || $IDTipoReserva == 790 || $IDTipoReserva == 791)):

            $cantidad_dias_agregar = $datos_tipo_reserva["NumeroDias"];
            if ((int) $datos_tipo_reserva["NumeroDias"] > 1):
                //$IDTipoReserva = "";
                $Repetir = "S";
                $Periodo = "Dia";
                $HastaFechaFinal = strtotime('+' . $cantidad_dias_agregar . ' day', strtotime($Fecha));
                $RepetirFechaFinal = date("Y-m-d", $HastaFechaFinal);
                // de una vez valido que el avion no haya sido reservado en los siguientes dias
                $fechaInicioVal = strtotime($Fecha);
                $fechaFin = strtotime($RepetirFechaFinal);
                $condicion_multiple_elemento_av = SIMWebService::verifica_elemento_otro_servicio($IDElemento, "");
                $cuentafecha = 0;
                for ($contador_fecha = $fechaInicioVal; $contador_fecha <= $fechaFin; $contador_fecha += 86400):

                    if ($cuentafecha > 0): // valido desde la segunda fecha en adelante
                        $fecha_validar .= "S" . $cuentafecha;
                        $fecha_validar_avion = date("Y-m-d", $contador_fecha);
                        $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento_av . ") and Fecha = '" . $fecha_validar_avion . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) Limit 1 ";
                        $r_reserva_elemento_avion = $dbo->query($sql_reserva_elemento_avion);
                        if ($dbo->rows($r_reserva_elemento_avion) > 0):
                            $respuesta["message"] = "Lo sentimos el avion ya esta reservado el " . $fecha_validar_avion;
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;
                    endif;
                    $cuentafecha++;
                endfor;
            endif;
        endif;
        //Fin validaciÃ³n especial

        $fecha = date('Y-m-d', strtotime($Fecha));
        $festivo = $dbo->getFields("Festivos", "IDFestivo", "Fecha = '" . $fecha . "' and IDPais = 1");

        //Especial Arrayanes Colombia para golf fines de semana solo permite reservas de socios con handicap
        if ($IDClub == 11 && $IDServicio == 122 && (date("w", strtotime($Fecha)) == 0 || date("w", strtotime($Fecha)) == 6 || (date("w", strtotime($Fecha)) == 1 && !empty($festivo))) && $Hora <= "11:00:00"):
            $datos_socio_valida_per = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
            $id_socio_permiso = $dbo->getFields("SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per["NumeroDocumento"] . "' and IDClub = '" . $IDClub . "'");
            if (empty($id_socio_permiso)):
                $respuesta["message"] = "Lo sentimos no tiene permisos para reservar los fines de semana ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            else:
                // verifico que los invitados tambien tengan handicap
                $nuevacadena_hand = str_replace('Optional("', "", $Invitados);
                $nuevacadena_hand = str_replace('")', "", $nuevacadena_hand);
                $Invitados_hand = $nuevacadena_hand;
                $datos_invitado_hand = json_decode($Invitados_hand, true);

                if (count($datos_invitado_hand) > 0):
                    foreach ($datos_invitado_hand as $detalle_datos):
                        $IDSocioInvitadoHand = $detalle_datos["IDSocio"];
                        if (!empty($IDSocioInvitadoHand)):
                            $datos_socio_valida_per_hand = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocioInvitadoHand . "' ", "array");
                            $id_socio_permiso = $dbo->getFields("SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per_hand["NumeroDocumento"] . "' and IDClub = '" . $IDClub . "'");
                            if (empty($id_socio_permiso)):
                                $respuesta["message"] = "Lo sentimos su invitado " . $datos_socio_valida_per_hand["Nombre"] . " " . $datos_socio_valida_per_hand["Apellido"] . " " . "no tiene permisos para reservar los fines de semana";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                            endif;
                        endif;
                    endforeach;
                endif;
            endif;
        endif;
        //Fin validaciÃ³n especial

        //Especial Rancho Colombia para golf fines de semana solo permite reservas de socios con handicap
        if ($IDClub == 12 && $IDServicio == 144 && (date("w", strtotime($Fecha)) == 0 || date("w", strtotime($Fecha)) == 6) && $Hora < "11:00:00"):

            $sumaHandicap = 0;
            $id_socio_permiso = $dbo->getFields("SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio["NumeroDocumento"] . "' and IDClub = '" . $IDClub . "'");
            /* //suma handicap del socio
            $handicap = $dbo->getFields( "SocioPermisoReserva", "Handicap", "NumeroDocumento = '" . $datos_socio[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
            $sumaHandicap += $handicap;

             */

            if (empty($id_socio_permiso)):
                $respuesta["message"] = "Lo sentimos no tiene permisos para reservar los fines de semana ";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            else:
                // verifico que los invitados tambien tengan handicap
                $nuevacadena_hand = str_replace('Optional("', "", $Invitados);
                $nuevacadena_hand = str_replace('")', "", $nuevacadena_hand);
                $Invitados_hand = $nuevacadena_hand;
                $datos_invitado_hand = json_decode($Invitados_hand, true);

                if (count($datos_invitado_hand) > 0):
                    foreach ($datos_invitado_hand as $detalle_datos):
                        $IDSocioInvitadoHand = $detalle_datos["IDSocio"];
                        if (!empty($IDSocioInvitadoHand)):
                            $datos_socio_valida_per_hand = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocioInvitadoHand . "' ", "array");
                            $id_socio_permiso = $dbo->getFields("SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per_hand["NumeroDocumento"] . "' and IDClub = '" . $IDClub . "'");

                            /* $handicapInvitado = $dbo->getFields( "SocioPermisoReserva", "Handicap", "NumeroDocumento = '" . $datos_socio_valida_per_hand[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
                            $sumaHandicap += $handicapInvitado; */

                            if (empty($id_socio_permiso)):
                                $respuesta["message"] = "Lo sentimos su invitado " . utf8_decode($datos_socio_valida_per_hand["Nombre"] . " " . $datos_socio_valida_per_hand["Apellido"]) . " " . "no tiene permisos para reservar los fines de semana";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                            endif;
                        endif;
                    endforeach;
                    /* if($sumaHandicap > -20):
                $respuesta[ "message" ] = "Lo sentimos tu handicap y el de tus invitados no alcanza para reservar los fines de semana";
                $respuesta[ "success" ] = false;
                $respuesta[ "response" ] = NULL;
                return $respuesta;
                endif;
                else:
                if($sumaHandicap > -20):
                $respuesta[ "message" ] = "Lo sentimos tu handicap no alcanza para reservar los fines de semana";
                $respuesta[ "success" ] = false;
                $respuesta[ "response" ] = NULL;
                return $respuesta;
                endif; */
                endif;
            endif;
        endif;
        //Fin validaciÃ³n especial

        //Validacion especial Polo solo 1 turno por elemento en practicas
        if ($IDClub == 37 && $IDServicio == "3575") {
            $id_reserva_general_soc = (int) $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDSocio = '" . IDSocio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 1 and IDServicioElemento = '" . $IDElemento . "'");
            if ($id_reserva_general_soc > 0) {
                $respuesta["message"] = "Ya tiene una reserva en esta hora por favor verifique Mis Reservas";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                return $respuesta;
            }

        }

        //Especial para cuando el campo de repetir se pregunta en la reserva
        $array_Campos = $Campos;
        $array_Campos = json_decode($Campos, true);
        if (count($array_Campos) > 0):
            foreach ($array_Campos as $id_valor_campo => $valor_campo):
                if ($valor_campo["IDCampo"] == 31 && (int) $valor_campo["Valor"] > 0) {
                    $Repetir = "S";
                    $Periodo = "Dia";
                    $dias_repetir = $valor_campo["Valor"] - 1;
                    $RepetirFechaFinal = strtotime('+' . $dias_repetir . ' day', strtotime($Fecha));
                    $RepetirFechaFinal = date("Y-m-d", $RepetirFechaFinal);
                }
            endforeach;

            if ($Repetir == "S") {
                $FechasDisponibles = "S";
                $FechaIniVal = strtotime($Fecha);
                $FechaFinVal = strtotime($RepetirFechaFinal);
                for ($contador_fecha = $FechaIniVal; $contador_fecha <= $FechaFinVal; $contador_fecha += 86400) {
                    $FechaVal = date("Y-m-d", $contador_fecha);
                    $sql_val_reser = "SELECT IDReservaGeneral From ReservaGeneral Where Fecha = '" . $FechaVal . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento = '" . $IDElemento . "' LIMIT 1";
                    $sql_reserva_dia_val = $dbo->query($sql_val_reser);
                    $row_reser_dia = $dbo->fetchArray($sql_reserva_dia_val);
                    if ((int) $row_reser_dia["IDReservaGeneral"] > 0) {
                        $FechasDisponibles = "N";
                        $fechan = $FechaVal;
                    }
                }
                if ($FechasDisponibles == "N") {
                    $respuesta["message"] = "No es posible realizar la reserva, El dia " . $fechan . " ya esta reservado";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                }
            }

        endif;

        //Validacion especial Farallones solo se puede 1 depilaciÃ³n por hora
        /*
        if($IDClub==29 && $IDServicio=="1772"){
        $id_reserva_general_soc=(int)$dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 1 and IDServicioTipoReserva = '618' " );
        if($id_reserva_general_soc>0){
        $respuesta[ "message" ] = "Lo sentimos ya existe una reserva de depilacion a esta hora y solo es posible 1 por hora, intente con otra hora";
        $respuesta[ "success" ] = false;
        $respuesta[ "response" ] = NULL;
        return $respuesta;
        }
        }
         */

        //Valido si la reserva pide un tipo (sencillo, doble, 2 turnos, etc) y si esta vacio le asigno alguno
        $tipo_reserva_servicio = "Select * From ServicioTipoReserva Where IDServicio = '" . $IDServicio . "' and Activo = 'S' Order by Orden Desc";
        $result_reserva_servicio = $dbo->query($tipo_reserva_servicio);
        if (count($dbo->rows($result_reserva_servicio) > 0) && empty($IDTipoReserva)):
            //le asigno algun tipo ya que es obligatorio
            while ($row_reserva_servicio = $dbo->fetchArray($result_reserva_servicio)):
                $IDTipoReserva = $row_reserva_servicio["IDServicioTipoReserva"];
            endwhile;
        endif;

        //Validacion del formato de hora, el app puede enviar con a.m o p.m
        $Hora = SIMWebService::validar_formato_hora($Hora);

        //if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) && $Hora != "00:00:00" ) {
        if (!empty($IDClub) && !empty($IDSocio) && !empty($IDElemento) && !empty($IDServicio) && !empty($Fecha) && !empty($Hora)) {

            //verifico que el socio exista y pertenezca al club
            $id_socio = $datos_socio["IDSocio"];

            if (!empty($id_socio)) {

                // Obtener la disponibilidad utilizada al consultar la reserva
                $id_disponibilidad = SIMWebService::obtener_disponibilidad_utilizada($IDServicio, $Fecha, $IDElemento, $Hora);

                //Valido que no se pueda tomar varios turnos seguidos
                $PermiteReservaSeguida = $dbo->getFields("Disponibilidad", "PermiteReservaSeguida", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                $PermiteReservaSeguidaNucleo = $dbo->getFields("Disponibilidad", "PermiteReservaSeguidaNucleo", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                if ($PermiteReservaSeguida != "S") {
                    $flag_turno_seguido = SIMWebService::validar_turnos_seguidos($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDBeneficiario, $TipoBeneficiario, $PermiteReservaSeguidaNucleo);
                } else {
                    $flag_turno_seguido = 0;
                }

                //Especial para medellin dobles no se permite los sabados
                if ($IDClub == 20 && (date("N", strtotime($Fecha)) == "6") && ($IDTipoReserva == 96 || $IDTipoReserva == 94)):
                    $respuesta["message"] = "Lo sentimos dobles no se puede los Sabados";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                endif;

                //Validar solo una reserva por hora
                if ($datos_servicio["PermiteReservaMismaHora"] == "N") {
                    //Consulto los servicios del club
                    $sql_serv_club = "SELECT IDServicio FROM Servicio WHERE IDClub = '" . $IDClub . "' ";
                    $r_serv_club = $dbo->query($sql_serv_club);
                    while ($row_serv_club = $dbo->fetchArray($r_serv_club)) {
                        $array_serv_club[] = $row_serv_club["IDServicio"];
                    }
                    if (count($array_serv_club) > 0) {
                        $IDServicioValidar = implode(",", $array_serv_club);
                    }

                    $HORA = substr($Hora, 0, 2);
                    $HORADESPUES = (int) $HORA + 1;
                    $HoraMinima = $HORA . ":00:00";

                    if ($HORADESPUES < 10) {
                        $HoraMaxima = "0" . $HORADESPUES . ":00:00";
                    } else {
                        $HoraMaxima = $HORADESPUES . ":00:00";
                    }

                    if ((int) $IDBeneficiario > 0) {
                        $sql_valida = "SELECT * FROM ReservaGeneral Where ( (IDSocio = '" . $IDBeneficiario . "'  and IDSocioBeneficiario=0 ) or IDSocioBeneficiario = '" . $IDBeneficiario . "' )  and Fecha= '" . $Fecha . "' and Hora >= '" . $HoraMinima . "' and Hora < '" . $HoraMaxima . "' and IDServicio in ($IDServicioValidar)  and IDEstadoReserva = '1' ";
                    } else {
                        $sql_valida = "SELECT * FROM ReservaGeneral Where ( (IDSocio = '" . $IDSocio . "' and IDSocioBeneficiario=0  ) or IDSocioBeneficiario = '" . $IDSocio . "' )  and Fecha= '" . $Fecha . "' and Hora >= '" . $HoraMinima . "' and Hora < '" . $HoraMaxima . "' and IDServicio in ($IDServicioValidar) and IDEstadoReserva = '1' ";
                    }

                    $sql_reservas_sem = $dbo->query($sql_valida);
                    $total_reservas_dia_hora = $dbo->rows($sql_reservas_sem);

                    ///Consulto donde sea invitado
                    $sql_invitado_hora = "SELECT RGI.*
		                                        FROM ReservaGeneralInvitado RGI, ReservaGeneral RG
		                                        WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and
		                                        RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.Hora ='" . $Hora . "' and
		                                        RG.IDServicio in ($IDServicioValidar)
		                                        ORDER BY IDReservaGeneralInvitado Desc ";
                    $qry_invitado_hora = $dbo->query($sql_invitado_hora);
                    $total_reservas_dia_hora += $dbo->rows($qry_invitado_hora);

                    if ((int) $total_reservas_dia_hora >= 1):
                        $respuesta["message"] = "Lo sentimos solo se permite 1 reserva en la misma hora en el mismo dia, ya tiene otra reserva a la misma hora";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;

                    //Consulto que los invitados no tengan en la misma hora reserva
                    $datos_invitado = json_decode($Invitados, true);
                    if (count($datos_invitado) > 0) {
                        foreach ($datos_invitado as $detalle_datos) {
                            $total_reservas_dia_hora = 0;
                            $IDSocioInvitado = $detalle_datos["IDSocio"];
                            if (!empty($IDSocioInvitado)) {

                                $sql_valida = "SELECT * FROM ReservaGeneral Where ( (IDSocio = '" . $IDSocioInvitado . "' and IDSocioBeneficiario=0  ) or IDSocioBeneficiario = '" . $IDSocioInvitado . "' )  and Fecha= '" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio in ( $IDServicioValidar )  and IDEstadoReserva = '1' ";
                                $sql_reservas_diahora = $dbo->query($sql_valida);
                                $total_reservas_dia_hora = $dbo->rows($sql_reservas_diahora);

                                ///Consulto donde sea invitado
                                $sql_invitado_hora = "SELECT RGI.*
		                                              FROM ReservaGeneralInvitado RGI, ReservaGeneral RG
		                                              WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocioInvitado . "') and
		                                              RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.Hora ='" . $Hora . "' and
		                                              RG.IDServicio in ($IDServicioValidar)
		                                              ORDER BY IDReservaGeneralInvitado Desc ";
                                $qry_invitado_hora = $dbo->query($sql_invitado_hora);
                                $total_reservas_dia_hora += $dbo->rows($qry_invitado_hora);

                                if ((int) $total_reservas_dia_hora >= 1):
                                    $respuesta["message"] = "Lo sentimos el invitado ya tiene una reserva en esta misma fecha y hora";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                endif;
                            }
                        }
                    }
                    //Fin Consulta
                }
                //Fin Validar

                if (($IDClub == "9" || $IDClub == "8") && empty($Admin) && $IDServicio == "89"):
                    //Valido regla especial en Esqui si tiene dos turnos seguidos no permite reservar mas si no solo deja las configuradas (Caso especial Mesa de Yeguas)
                    $regla_no_cumplida = SIMWebService::validar_regla_turnos($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva);
                    if ($regla_no_cumplida > 0):
                        switch ($regla_no_cumplida):
                    case "1":
                        $mensaje_regla_no_cumplida = "Lo sentimos, ya tomo dos turnos seguidos, no puede reservas mas turnos en este dia ";
                        break;
                    case "2":
                        $mensaje_regla_no_cumplida = "Lo sentimos, ya reservo un turno, no puede tomar turnos seguidos en este dia";
                        break;
                        endswitch;
                        $respuesta["message"] = $mensaje_regla_no_cumplida;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                endif;

                if (
                    (($IDClub == "900" || $IDClub == "800") && empty($Admin) && ($IDServicio == "240" || $IDServicio == "479" || $IDServicio == "89")) ||
                    (($IDClub == "20") && empty($Admin) && ($IDServicio == "571") && date("N", strtotime($Fecha)) == 6)
                ):
                    //Valido regla especial tenis my solo dos turnos por accion en un mismo dia en Temporada alta
                    //Valido regla especial tenis MEdellin solo dos turnos por accion en un mismo dia los sabados
                    $regla_no_cumplida_tenis = SIMWebService::validar_regla_turnos_tenis($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva);
                    if ((int) $regla_no_cumplida_tenis > 0):
                        $mensaje_regla_no_cumplida_tenis = "Lo sentimos, solo se puede tomar dos turnos por accion en el dia";
                        $respuesta["message"] = $mensaje_regla_no_cumplida_tenis;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                endif;

                //Especial para Lagartos en clases nataciÃ³n solo permite tomar reservas antes de las 8am el mismo dia
                /*
                if ( ( $IDClub == "7" || $IDClub == "800" ) && empty( $Admin ) && $IDServicio == "94" ):
                if ( date( "Y-m-d" ) == $Fecha && strtotime( date( "Y-m-d H:i:s" ) ) >= strtotime( date( "Y-m-d 08:00:00" ) ) ):
                $respuesta[ "message" ] = "Lo sentimos, solo se puede reservar clases para hoy hasta antes de las 8 a.m.";
                $respuesta[ "success" ] = false;
                $respuesta[ "response" ] = NULL;
                return $respuesta;
                endif;
                endif;
                 */

                //$rand_seg2 = rand(1,2);
                //sleep($rand_seg2);

                //Valido que se tengan los invitados minimos y maximos para reservar
                // elimino la pabra optional segun bug detectado en una actualizacion en ios
                $nuevacadena = str_replace('Optional("', "", $Invitados);
                $nuevacadena = str_replace('")', "", $nuevacadena);
                $Invitados = $nuevacadena;
                $datos_invitado = json_decode($Invitados, true);

                // Si el numero de turnos es mayor a 1 multiplico el minimo de la disponibilidad * el numero de turnos para saber el minimo y validar
                if ((int) $NumeroTurnos > 1):
                    $MinimoInvitadosDisponibilidad = $dbo->getFields("Disponibilidad", "MinimoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    $MinimoInvitados = (int) ($MinimoInvitadosDisponibilidad * $NumeroTurnos) - 1; // Le resto 1 para que cuente al socio que hace la reserva
                else:
                    $MinimoInvitadosDisponibilidad = $dbo->getFields("Disponibilidad", "MinimoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    $MinimoInvitados = (int) $MinimoInvitadosDisponibilidad - 1;
                endif;

                if ((int) $NumeroTurnos > 1):
                    $MaximoInvitadosDisponibilidad = $dbo->getFields("Disponibilidad", "MaximoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                    $MaximoInvitados = $MaximoInvitadosDisponibilidad * $NumeroTurnos;
                else:
                    $MaximoInvitados = $dbo->getFields("Disponibilidad", "MaximoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                endif;

                // Si es desde el administrador permito agregar los invitados
                if (!empty($Admin)) {
                        $MaximoInvitados = 100;
                }

                $cantidad_invitado = json_decode($Invitados, true);

                // Si agrega un aux por ejemplo boleador lo cuento como invitado
                if (!empty($IDAuxiliar)):

                    $IDAuxiliar = $IDAuxiliar . ",";
                    $cantidad_auxiliar = 1;
                    //Verifico si el auxiliar esta disponible en esta fecha hora
                    $id_reserva_aux = "";
                    if (($IDClub == "8" || $IDClub == "10") && ($IDServicio == "316" || $IDServicio == "317")):
                        $id_reserva_aux = SIMWebServiceApp::validar_disponibilidad_auxiliar($IDAuxiliar, $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub);
                        $mensaje_auxiliar_no_dispo = "La masajista seleccionada no esta disponible en esta fecha/hora, por favor seleccione otra";
                    else:
                        //Pongo un tiempo de espera por si ingresan varios al mismo tiempo
                        $id_reserva_aux = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDAuxiliar = '" . $IDAuxiliar . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)");
                        $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora";
                    endif;
                    if (!empty($id_reserva_aux)):
                        $respuesta["message"] = $mensaje_auxiliar_no_dispo;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    endif;
                else:
                    $cantidad_auxiliar = 0;
                endif;

                //Cuando se puede escoger multiples auxiliares
                $datos_auxiliares = json_decode($ListaAuxiliar, true);
                if (count($datos_auxiliares) > 0):
                    $cantidad_auxiliar = count($datos_auxiliares);
                    //$ArrayAuxiliar = implode(",",$datos_auxiliares);
                    foreach ($datos_auxiliares as $key_aux => $auxiliar_seleccionado):
                        $array_id_auxiliar[] = $auxiliar_seleccionado["IDAuxiliar"];

                    endforeach;
                    if (count($array_id_auxiliar) > 0):
                        $IDAuxiliar = implode(",", $array_id_auxiliar) . ",";
                    endif;
                endif;

                if (!empty($IDAuxiliar)):
                    //Actualizo la reserva separada con el dato del auxiliar
                    $update_reserva = "Update ReservaGeneral Set IDAuxiliar = '" . $IDAuxiliar . "', IDSocioBeneficiario='" . $IDBeneficiario . "' Where IDClub = '" . $IDClub . "' and Fecha='" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio = '" . $IDServicio . "' and IDSocio = '" . $IDSocio . "' and IDEstadoreserva = '3' ";
                    $dbo->query($update_reserva);
                endif;

                if ((count($datos_invitado) + $cantidad_auxiliar) >= (int) $MinimoInvitados):
                    if ((count($datos_invitado) + $cantidad_auxiliar) <= (int) $MaximoInvitados):
                        //if (1==1):

                        // Si es Admin si puede reservas turnos seguidos
                        if (!empty($Admin)):
                            $flag_turno_seguido = 0;
                        endif;

                        if ($flag_turno_seguido == 0):
                            $fecha_disponible = 0;
                            //Verifico que la fecha seleccionada verdaderamente este disponible, Ã©sto por que se puede cambiar la fecha del cel y lo deja pasar
                            $array_disponibilidad = SIMWebService::get_fecha_disponibilidad_servicio($IDClub, $IDServicio, $Fecha);
                            foreach ($array_disponibilidad["response"][0]["Fechas"] as $id_fecha => $datos_fecha):
                                if ($datos_fecha["Fecha"] == $Fecha && $datos_fecha["Activo"] == "S"):
                                    $fecha_disponible = 1;
                                endif;
                            endforeach;

                            // Si es Admin si puede reservas cualquier fecha
                            //Ene 27 El rancho solicitan que ellos no puedan tomar turnos si no esta activo el dia
                            //if ( !empty( $Admin ) && $IDClub != "12" ):
                            if (!empty($Admin)):
                                $fecha_disponible = 1;
                            endif;

                            if (!empty($IDBeneficiario) && !empty($TipoBeneficiario)):
                                if ($TipoBeneficiario == "Invitado") {
                                    $IDInvitadoBeneficiario = $IDBeneficiario;
                                } elseif ($TipoBeneficiario == "Socio") {
                                $IDSocioBeneficiario = $IDBeneficiario;
                            }

                        endif;

                        //Si el numero maximo de invitados esta en 0 no dejo que la reserva sea a un invitado seleccionado por beneficiarios
                        if ($MaximoInvitados <= 0 && (int) $IDInvitadoBeneficiario > 0):
                            $respuesta["message"] = "Lo sentimos el dia de hoy no es posible tomar reserva a nombre de un invitado";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        endif;

                        //VALIDA SI EL ELEMENTO ADICIONAL ESTÃ DISPONIBLE
                        $datos_invitado = json_decode($Invitados, true);

                        $elementoAdicional = [];

                        if (count($datos_invitado) > 0):
                            $cantidad += count($datos_invitado);
                            foreach ($datos_invitado as $detalle_datos):
                                $datos_respuesta = $detalle_datos["Adicionales"];
                                if (count($datos_respuesta) > 0):
                                    foreach ($datos_respuesta as $detalle_carac):
                                        $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                        $ValoresID = $detalle_carac["ValoresID"];

                                        if (!empty($IDPropiedadProducto)) {
                                            $array_id_carac = explode(",", $ValoresID);
                                            if (count($array_id_carac) > 0) {
                                                foreach ($array_id_carac as $id_carac) {
                                                    //Valida si no hay disponibilidad del elemento
                                                    $validacion = SIMServicioReserva::validar_disponibilidad_elemento_adicional($id_carac, $Fecha);
                                                    if ($validacion["response"] == "N"):
                                                        $respuesta["message"] = $validacion["message"];
                                                        $respuesta["success"] = false;
                                                        $respuesta["response"] = null;
                                                        return $respuesta;
                                                    else:
                                                        $elementoAdicional[$id_carac]++;
                                                        if ($validacion["cantidad"] < $elementoAdicional[$id_carac]):
                                                            $respuesta["message"] = "El elemento {$validacion['nombre']} solo tiene {$validacion['cantidad']} unidad(es) disponibles";
                                                            $respuesta["success"] = false;
                                                            $respuesta["response"] = null;
                                                            return $respuesta;
                                                        endif;
                                                    endif;
                                                    //Fin validaciÃ³n
                                                }
                                            }
                                        }
                                    endforeach;
                                endif;
                            endforeach;
                        endif;

                        $array_Adicional = json_decode($AdicionalesSocio, true);

                        if (count($array_Adicional) > 0) {
                            foreach ($array_Adicional as $detalle_carac) {
                                $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                $ValoresID = $detalle_carac["ValoresID"];

                                if (!empty($IDPropiedadProducto)) {
                                    $array_id_carac = explode(",", $ValoresID);
                                    if (count($array_id_carac) > 0) {
                                        foreach ($array_id_carac as $id_carac) {
                                            //Valida si no hay disponibilidad del elemento
                                            $validacion = SIMServicioReserva::validar_disponibilidad_elemento_adicional($id_carac, $Fecha);
                                            if ($validacion["response"] == "N"):
                                                $respuesta["message"] = $validacion["message"];
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            else:
                                                $elementoAdicional[$id_carac]++;
                                                if ($validacion["cantidad"] < $elementoAdicional[$id_carac]):
                                                    $respuesta["message"] = "El elemento {$validacion['nombre']} solo tiene {$validacion['cantidad']} unidad(es) disponibles";
                                                    $respuesta["success"] = false;
                                                    $respuesta["response"] = null;
                                                    return $respuesta;
                                                endif;
                                            endif;
                                            //Fin validaciÃ³n
                                        }
                                    }
                                }
                            }
                        }
                        //

                        //ESPECIAL LA PRADRERA CADDIES EN ADICIONALES
                        /* if($IDClub == 8 && $IDServicio == 31 && $datos_servicio["PermiteAdicionarServicios"] == 'S') */
                        if ($IDClub == 16 && $IDServicio == 329 && empty($Admin) && $datos_servicio["PermiteAdicionarServicios"] == 'S') {
                            $datos_invitado = json_decode($Invitados, true);
                            $cantidadPropiedad = 0;
                            $cantidad = 1;

                            if (count($datos_invitado) > 0):
                                $cantidad += count($datos_invitado);
                                foreach ($datos_invitado as $detalle_datos):
                                    $datos_respuesta = $detalle_datos["Adicionales"];
                                    if (count($datos_respuesta) > 0):
                                        foreach ($datos_respuesta as $detalle_carac):
                                            $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                            if ($IDPropiedadProducto == 9) {
                                                $cantidadPropiedad++;
                                            }
                                        endforeach;
                                    endif;
                                endforeach;
                            endif;

                            $array_Adicional = json_decode($AdicionalesSocio, true);

                            foreach ($array_Adicional as $detalle_carac) {
                                $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];

                                if ($IDPropiedadProducto == 9) {
                                    $cantidadPropiedad++;
                                }
                            }

                            if ($cantidad <= 3 && $cantidadPropiedad < 1) {
                                $respuesta["message"] = "Lo sentimos debe seleccionar por lo menos 1 caddie para realizar la reserva.";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                            } elseif ($cantidad == 4 && $cantidadPropiedad < 2) {
                            $respuesta["message"] = "Lo sentimos debe seleccionar por lo menos 2 caddies para realizar la reserva.";
                            $respuesta["success"] = false;
                            $respuesta["response"] = null;
                            return $respuesta;
                        }
                    }

                    if ($fecha_disponible == 1):

                        if ($IDClub == 1 || $IDClub == 23 || $IDClub == 16 || $IDClub == 44):
                            //Para Guaymaral si deja tomar otro turno asi tenga reserva de cancha automatica
                            $condicion_automatica = " and Tipo <> 'Automatica' ";
                        endif;

                        //Verifico que el socio no tenga mas de x reservas en el mismo dia dependiendo la conf de disponibilidad
                        //Para Mess Yeguas en temporada alta no pemite asi se la haya realizado a un invitado o benef para los demas clubes si lo permite
                        //Para Medellin si es sabado no permite mas de dos reservas asi sea para beneficiario
                        if ($IDClub == "900" || $IDClub == 800):
                            $sql_reservas_dia = $dbo->query("Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and Tipo <> 'Automatica'");
                        else:
                            //$sql_reservas_dia = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDSocioBeneficiario = '" . ( int )$IDSocioBeneficiario . "' and IDEstadoReserva = '1' " . $condicion_automatica );
                            //$sql_reservas_dia = $dbo->query( "Select * From ReservaGeneral Where  Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and (  ( IDSocio = '" . $IDSocio . "' and IDSocioBeneficiario = '" . ( int )$IDSocioBeneficiario . "') or IDSocioBeneficiario = '".$IDSocio."') and IDEstadoReserva = '1' " . $condicion_automatica );

                            if (!empty($IDBeneficiario)) {
                                $sql_reservas_dia = $dbo->query("Select * From ReservaGeneral Where ( IDSocioBeneficiario = '" . $IDBeneficiario . "' or IDSocio = '" . $IDBeneficiario . "' ) and (Fecha='" . $Fecha . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica);
                            } else {
                                $sql_reservas_dia = $dbo->query("Select * From ReservaGeneral Where ( (IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "') or IDSocioBeneficiario='" . $IDSocio . "' ) and (Fecha='" . $Fecha . "' ) and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica);
                            }

                        endif;

                        //Para medellin se valida que no tenga ,mas de dos reservas en el dia en tenis y golf
                        if ($IDClub == 20 && ($IDServicio == 571 || $IDServicio == 549 || $IDServicio == 551)) {
                            $sql_reservas_dia = $dbo->query("SELECT * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva = '1' and Tipo <> 'Automatica' and IDServicio in (571,549,551,14898,14899 )");
                        }

                        $total_reserva_socio = (int) $dbo->rows($sql_reservas_dia);

                        //Valido que el beneficiario al que se esta tomando la reserva ya no tenga otra reserva y asi cumplir lo de maximo de reservas por dia tambien
                        $condicion_beneficiario = "";
                        if (!empty($IDBeneficiario)):

                            if ($TipoBeneficiario != "Invitado" && (!empty($IDSocioBeneficiario) || !empty($IDBeneficiario)) ):
                                $sql_reservas_dia_benef = $dbo->query("Select * From ReservaGeneral Where IDSocio = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDSocioBeneficiario= 0 " . $condicion_automatica);
                                $total_reserva_socio += (int) $dbo->rows($sql_reservas_dia_benef);

                                $sql_reservas_dia_benef = $dbo->query("Select * From ReservaGeneral Where IDSocio <> '" . $IDSocio . "' and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica);
                                $total_reserva_socio += (int) $dbo->rows($sql_reservas_dia_benef);
                            endif;

                            //Invitado
                            if (!empty($IDInvitadoBeneficiario)):
                                $sql_reservas_dia_benef = $dbo->query("Select * From ReservaGeneral Where IDInvitadoBeneficiario = '" . $IDInvitadoBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica);
                                $total_reserva_socio += (int) $dbo->rows($sql_reservas_dia_benef);
                            endif;

                        endif;
                        //Fin Validacion

                        //Valido si en la configuracion permite a un socio tomar otro turno dspues que cumpla el que tiene en el dia solo aplica si esta en el dia actual
                        $datos_disponibilidad_otro = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array");
                        $PermiteReservaDespuesdeprimerturno = $datos_disponibilidad_otro["PermiteReservaCumplirTurno"];
                        if ($PermiteReservaDespuesdeprimerturno == "S" && $Fecha == date("Y-m-d") && $total_reserva_socio >= $MaximoReservaSocioServicio):
                            $TiempoDespues = (int) $datos_disponibilidad_otro["TiempoDespues"];
                            $MedicionTiempoDespues = $datos_disponibilidad_otro["MedicionTiempoDespues"];
                            $IntervaloTurno = $datos_disponibilidad_otro["Intervalo"];

                            switch ($MedicionTiempoDespues):
                        case "Dias":
                            $minutos_posterior_turno = (60 * 24) * $TiempoDespues;
                            break;
                        case "Horas":
                            $minutos_posterior_turno = 60 * $TiempoDespues;
                            break;
                        case "Minutos":
                            $minutos_posterior_turno = $TiempoDespues;
                            break;
                        default:
                            $minutos_posterior_turno = 0;
                            endswitch;

                            //Le sumo el intervalo del turno para calcular la siguiente hora que puede reservar despues de finalizar el turno
                            $minutos_posterior_turno += (int) $IntervaloTurno;

                            //Consulto cual es la utima que reserva que tiene en el dia para calcula con esa hora
                            if (!empty($IDBeneficiario && !empty($IDSocioBeneficiario))) {
                                    // es para un beneficiario
                                    $sql_reserva_dia_hora = "SELECT * From ReservaGeneral Where (IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' or IDSocio = '" . $IDSocioBeneficiario . "') and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' Order by Hora Desc Limit 1";
                            } else {
                                $sql_reserva_dia_hora = "SELECT * From ReservaGeneral Where (IDSocio = '" . $IDSocio . "' ) and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDSocioBeneficiario = '" . (int) $IDBeneficiario . "' Order by Hora Desc Limit 1";
                            }

                            $result_reserva_dia_hora = $dbo->query($sql_reserva_dia_hora);
                            $row_reserva_dia_hora = $dbo->fetchArray($result_reserva_dia_hora);
                            $ultimo_turno_dia = $Fecha . " " . $row_reserva_dia_hora["Hora"];
                            $hora_actual_peticion = date('Y-m-d H:i:s');
                            $hora_volver_reservar = strtotime('+' . $minutos_posterior_turno . ' minute', strtotime($ultimo_turno_dia));
                            //echo "Puede reservar a las " . date("Y-m-d H:i:s",$hora_volver_reservar);
                            if (strtotime($hora_actual_peticion) >= $hora_volver_reservar):
                                $total_reserva_socio = 0;
                            else:
                                $mensaje_opcion_reserva = "Puede volver a reservar despues de: " . $TiempoDespues . " " . $MedicionTiempoDespues . " de cumplir la reserva del dia";
                            endif;
                        endif;

                        // Si es Admin si puede reservar mas de un turno por dia
                        if (!empty($Admin)):

                            if ($IDClub != "12" && $IDClub != "8000"): //para el Rincon no permite asi sea admin
                                //verifico que si pueda reservar mientras no sea la misma hora en el mismo servicio
                                $sql_reservas_dia_hora = $dbo->query("Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and Hora = '" . $Hora . "' and IDServicioElemento <> '" . $IDElemento . "' and  IDSocioBeneficiario = '" . (int) $IDBeneficiario . "' and IDEstadoReserva = '1' and IDServicioElemento = '" . $IDElemento . "'");
                                $total_reserva_socio_hora = (int) $dbo->rows($sql_reservas_dia_hora);
                                if ($total_reserva_socio_hora > 0):
                                    $total_reserva_socio = 100;
                                else:
                                    $total_reserva_socio = 0;
                                endif;
                            endif;

                            //$total_reserva_socio = 0;
                            $UsuarioCreacion = "Starter";
                        else:
                            if (!empty($IDUsuarioReserva)) {
                                $UsuarioCreacion = "Empleado";
                            } else {
                                $UsuarioCreacion = "Socio";
                            }

                        endif;

                        //Consulto el parametro en disponibilidad de cuantas veces puede reervar el socio el mismo servicio en el mismo dia
                        $MaximoReservaSocioServicio = $dbo->getFields("Disponibilidad", "MaximoReservaDia", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                        //if($total_reserva_socio<1):

                        //Especial Bogota tenis si es fin semana y reserva cancha despues de 12:15
                        if ($IDClub == 72):
                            $dia_semana_reserva = date("w", strtotime($Fecha));
                            if ($Hora >= "12:15:00" && ((($IDServicio == "8649") && ($dia_semana_reserva == "6" || $dia_semana_reserva == "0")))):
                                $MaximoReservaSocioServicio = 2;
                            endif;
                        endif;
                        //FIN BTCC

                        if ($total_reserva_socio < $MaximoReservaSocioServicio) {

                            if ($Repetir == "S"):

                                //Consulto el limite de reservas que se pueda hacer para calcular la fecha final
                                $MedicionRepeticion = $dbo->getFields("Disponibilidad", "MedicionRepeticion", "IDDisponibilidad = '" . $IDDisponibilidad . "'");
                                switch ($MedicionRepeticion):
                            case "Dia":
                                $periodo_sumar = "day";
                                $dato_sumar = 1;
                                break;
                            case "Semana":
                                $periodo_sumar = "week";
                                $dato_sumar = 1;
                                break;
                            case "Quincenal":
                                $periodo_sumar = "day";
                                $dato_sumar = 14;
                                break;
                            case "Mes":
                                $periodo_sumar = "month";
                                $dato_sumar = 1;
                                break;
                            default:
                                $periodo_sumar = "day";
                                $dato_sumar = 1;
                                endswitch;

                                //periodo a sumar dependiendo de lo que el socio escoja en el app
                                switch ($Periodo):
                            case "Dia":
                                $periodo_sumar_app = "day";
                                $dato_sumar = 1;
                                break;
                            case "Semana":
                                $periodo_sumar_app = "week";
                                $dato_sumar = 1;
                                break;
                            case "Quincenal":
                                $periodo_sumar_app = "day";
                                $dato_sumar = 14;
                                break;
                            case "Mes":
                                $periodo_sumar_app = "month";
                                $dato_sumar = 1;
                                break;
                            default:
                                $periodo_sumar_app = "day";
                                $dato_sumar = 1;
                                endswitch;

                                $numero_repeticion = $dbo->getFields("Disponibilidad", "NumeroRepeticion", "IDDisponibilidad = '" . $IDDisponibilidad . "'");
                                // Este sirve para establecer el limite deacuerdo al admin en el parametro limite de repeticion
                                //$fechaFin = strtotime ( '+'.$numero_repeticion.' '.$periodo_sumar ,  strtotime($Fecha)  ) ;

                                //Toma la fecha final de lo que seleccione el usuario en el app
                                if (!empty($RepetirFechaFinal)):
                                    //$fechaFin = strtotime( $RepetirFechaFinal );
                                    $fechaFin = strtotime('+1 day', strtotime($RepetirFechaFinal));
                                else:
                                    $fechaFin = strtotime($Fecha);
                                endif;
                            else:
                                $numero_repeticion = 1;
                                $fechaFin = strtotime($Fecha);
                                $periodo_sumar = "day";
                                $periodo_sumar_app = "day";
                                $dato_sumar = 1;
                            endif;

                            $fechaInicio = strtotime($Fecha);
                            //$fechaFin=strtotime($fecha_fin_reserva );
                            //echo date("Y-m-d",$fechaFin);
                            //exit;

                            if (!empty($IDBeneficiario) && !empty($TipoBeneficiario)):
                                if ($TipoBeneficiario == "Invitado") {
                                        $IDInvitadoBeneficiario = $IDBeneficiario;
                                } elseif ($TipoBeneficiario == "Socio") {
                                $IDSocioBeneficiario = $IDBeneficiario;
                            }

                        endif;

                        for ($contador_fecha = $fechaInicio; $contador_fecha <= $fechaFin; $contador_fecha += 86400):

                            $flag_reserva_cancha_clase = 0;
                            // verifico que todavia este disponible la reserva

                            if (!empty($Tee)):
                                $condicion_tee = " and Tee = '" . $Tee . "'";
                            endif;

                            // Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
                            $cupo_total = "S"; // ya no hay cupos
                            $cupos_disponibilidad = $dbo->getFields("Disponibilidad", "Cupos", "IDDisponibilidad = '" . $id_disponibilidad . "'");
                            $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral["IDDisponibilidad"] . "' ", "array");
                            if ((int) $cupos_disponibilidad > 1):
                                //Consulto cuantos reservas se han tomado en esta hora para saber si ya llegÃ³ al limite de cupos
                                $cupos_reservados = self::valida_cupos_disponibles($IDClub, $IDServicio, $IDElemento, $Fecha, $Hora);
                                //Valido si todavia existe cupo en esta hora
                                if ($cupos_reservados <= $cupos_disponibilidad):
                                    $cupo_total = "N"; // aun hay cupos disponibles
                                endif;
                                $numero_inscripcion = rand(0, 999999);
                            else:
                                $numero_inscripcion = 0;
                            endif;

                            //Verifico que los cupos libres mas los invitados no supere el maximo permitido
                            if ((int) $cupos_disponibilidad > 1) {
                                $suma_cupos = (int) $cupos_reservados + count($datos_invitado);
                                if ($suma_cupos > $cupos_disponibilidad) {
                                    $cup_dispo = (int) $cupos_disponibilidad - (int) $cupos_reservados;
                                    $respuesta["message"] = "Lo sentimos solo queda " . $cup_dispo . " cupos disponibles-" . $cupos_reservados . "-" . $cupos_disponibilidad;
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                }
                            }
                            //FIN Verifico que los cupos libres mas los invitados no supere el maximo permitido

                            $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee ");

                            if (empty($id_reserva_disponible) || $cupo_total == "N"):

                                $datos_invitado = json_decode($Invitados, true);

                                //Verifico que el socio no este como invitado en el mismo servicio en otra hora
                                if ($Fecha == date("Y-m-d")):
                                    $hora_actual_sistema_valida = date("H:i:s");
                                else:
                                    $hora_actual_sistema_valida = "01:00:00";
                                endif;

                                $sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.Hora >='" . $hora_actual_sistema_valida . "' and RG.IDServicio = '" . $IDServicio . "' ORDER BY IDReservaGeneralInvitado Desc ";
                                $qry_socio_grupo = $dbo->query($sql_socio_grupo);

                                if ($dbo->rows($qry_socio_grupo) > 0 && ($MaximoReservaSocioServicio <= 1 || $dbo->rows($qry_socio_grupo) >= $MaximoReservaSocioServicio) && empty($Admin)):
                                    $nombre_socio_invitado = utf8_encode($dbo->getFields("Socio", "Nombre", "IDSocio = '" . $IDSocio . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $IDSocio . "'"));
                                    $respuesta["message"] = $nombre_socio_invitado . ", ya esta agregado(a) en esta fecha como invitado en un grupo, no es posible realizar la reserva, por favor verifique";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                    exit;
                                endif;

                                // Si es golf verifico que los invitado no este en mas de un grupo el mismo dia
                                if (count($datos_invitado) > 0 && $MaximoReservaSocioServicio <= 1):

                                    foreach ($datos_invitado as $detalle_datos):
                                        $IDSocioInvitado = $detalle_datos["IDSocio"];
                                        $NombreSocioInvitado = $detalle_datos["Nombre"];

                                        if (!empty($IDSocioInvitado)):
                                            $respuesta_valida_invitado = SIMWebService::verificar_socio_grupo($IDClub, $IDSocioInvitado, $Fecha, $IDServicio);

                                            if ($respuesta_valida_invitado == 1):
                                                $nombre_socio_invitado = $dbo->getFields("Socio", "Nombre", "IDSocio = '" . $IDSocioInvitado . "'") . " " . $dbo->getFields("Socio", "Apellido", "IDSocio = '" . $IDSocioInvitado . "'");
                                                $respuesta["message"] = "El invitado: " . utf8_encode($nombre_socio_invitado) . ", solo puede estar en un grupo por dia";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                                exit;
                                            endif;
                                        endif;
                                    endforeach;
                                endif;

                                // Si el servicio es una clase y necesita reservar cancha
                                $id_servicio_cancha = $dbo->getFields("ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'");
                                if ($id_servicio_cancha > 0):
                                    // Consulto el servicio del club asociado a este servicio maestro
                                    $IDServicioCanchaClub = $dbo->getFields("Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'");
                                    // Valido si existe una cancha disponible en el horario de la clase
                                    $IDElemento_cancha = SIMWebService::buscar_elemento_disponible($IDClub, $IDServicioCanchaClub, $Fecha, $Hora, $IDElemento, $IDTipoReserva, $EdadSocio);

                                    if (empty($IDElemento_cancha)):
                                        $respuesta["message"] = "Lo sentimos no hay una cancha disponible para tomar la clase en este horario ";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    else:
                                        $flag_reserva_cancha_clase = 1;
                                    endif;
                                endif;

                                /*
                                //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
                                //Si el servicio maestro tiene definido permitir turnos seguidos cuando los invitados sean mas de X personas
                                $numero_para_reservar_turnos = $dbo->getFields( "ServicioMaestro" , "InvitadoTurnos" , "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
                                if( ( (int)$numero_para_reservar_turnos>0 ) && count($datos_invitado)>=$numero_para_reservar_turnos):
                                //if($id_servicio_maestro==14): //Tennis
                                $cantidad_turnos = 1; // Para validar los siguientes X turnos esten disponibles
                                $array_hora_siguiente_turno_diponible = SIMWebService::valida_siguiente_turno_disponible($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos );
                                if(count($array_hora_siguiente_turno_diponible)!=$cantidad_turnos):
                                $respuesta["message"] = "Se necesitan ".$cantidad_turnos." turnos mas seguidos y el siguiente turno no esta disponible, por favor seleccione otro opcion.";
                                $respuesta["success"] = false;
                                $respuesta["response"] = NULL;
                                return $respuesta;
                                else:
                                $flag_separa_siguiente_turno=1;
                                endif;
                                endif;
                                 */

                                //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
                                if (!empty($IDTipoReserva)):
                                    $datos_tipo_reserva = $dbo->fetchAll("ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array");
                                    $cantidad_turnos = $datos_tipo_reserva["NumeroTurnos"];
                                    $cantidad_minima_participantes = $datos_tipo_reserva["MinimoParticipantes"];

                                    //Consulto cuantos turnos automaticos se deben separar , pj en salones despues de una reserva se toma un turno mas para que se pueda realizar el aseo
                                    $TurnoMantenimiento = (int) $datos_servicio["TurnoMantenimiento"];
                                    $cantidad_turnos += $TurnoMantenimiento;

                                    if ((count($datos_invitado) + $cantidad_auxiliar) >= (int) $cantidad_minima_participantes):
                                        // valido que no vengas mas de los participantes que es necesario
                                        if (((count($datos_invitado) + $cantidad_auxiliar) == (int) $cantidad_minima_participantes) || (int) $cantidad_minima_participantes == 0):
                                            if (((int) $cantidad_turnos > 1)):
                                                //$cantidad_turnos-=1; // Quito uno para que no cuente la reserva primera
                                                // Separo las reservas
                                                $array_hora_siguiente_turno_diponible = SIMWebService::valida_siguiente_turno_sin_reserva($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos);
                                                if ((count($array_hora_siguiente_turno_diponible) != (int) ($cantidad_turnos - 1) || !is_array($array_hora_siguiente_turno_diponible)) && (int) $cupos_disponibilidad <= 1):
                                                    $respuesta["message"] = "Se necesitan " . $cantidad_turnos . ". turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion! " . $cupos_disponibilidad;
                                                    $respuesta["success"] = false;
                                                    $respuesta["response"] = null;
                                                    return $respuesta;
                                                else:
                                                    $flag_separa_siguiente_turno = 1;
                                                endif;
                                            endif;
                                        else:
                                            $respuesta["message"] = "Lo sentimos, el maximo numero de invitados debe ser de " . $cantidad_minima_participantes;
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                            return $respuesta;
                                        endif;
                                    else:
                                        $respuesta["message"] = "Lo sentimos, el minimo numero de invitados debe ser de: " . $cantidad_minima_participantes;
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;
                                endif;

                                //Si turnos es mayor a 1 verifico que los siguientes turnos esten disponibles y los reservo
                                if ((int) $NumeroTurnos > 1):

                                    if ($id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30): //Golf
                                        $array_disponible = SIMWebService::valida_siguiente_turno_disponible_golf($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, $Tee, "Reserva", "");
                                    else:
                                        $array_disponible = SIMWebService::valida_siguiente_turno_sin_reserva($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos);
                                    endif;

                                    //Cuando es por grupos busco aleatoriamente de los invitados los socios que quedaran como cabeza de grupo
                                    $array_cabeza_grupo = SIMWebService::busca_cabeza_grupo($Invitados, $NumeroTurnos, $IDSocio);

                                    if (count($array_disponible) != $NumeroTurnos):
                                        $respuesta["message"] = "Se necesitan: " . $NumeroTurnos . " turnos mas seguidos y el siguiente turno no esta disponible, por favor seleccione otra opcion.";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    else:
                                        $contador_turno = 0;
                                        // separo los siguientes turnos disponibles menos el primero que se realiza en el siguiente proceso
                                        foreach ($array_disponible as $key_hora => $dato_hora):
                                            if ($contador_turno > 0):
                                                $socios_cabeza = 0;
                                                $contador_socio_cabeza_real = 0;
                                                $IDSocioCabeza = $array_cabeza_grupo[($contador_turno - 1)];
                                                if (empty($IDSocioCabeza)) {
                                                    $IDSocioCabeza = $IDSocio;
                                                }

                                                // Registro los socios cabeza como ingresados para que no queden como invitados
                                                foreach ($array_cabeza_grupo as $id_socio_cabeza => $datos_socio_cabeza):
                                                    $array_invitado_agregado[] = $datos_socio_cabeza;
                                                    if ($IDSocio != $datos_socio_cabeza):
                                                        $contador_socio_cabeza_real++;
                                                    endif;
                                                endforeach;

                                                $sql_inserta_reserva_turno = $dbo->query("INSERT Into ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Tee, CantidadInvitadoSalon, NumeroInscripcion, Altitud, Longitud, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
																						                                Values ('" . $IDClub . "','" . $IDSocioCabeza . "', '" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "',
																						                                '" . $dato_hora . "','" . $Tee . "', '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','" . $Altitud . "','" . $Longitud . "','" . $NombreSocioReserva . "','" . $AccionSocioReserva . "','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','WebService Automatica','" . $FechaHoraSistemaActual . "')");

                                                if (!$sql_inserta_reserva_turno):
                                                    $respuesta["message"] = "No se pudo realizar la reserva, intente de nuevo (m1)";
                                                    $respuesta["success"] = false;
                                                    $respuesta["response"] = null;
                                                    return $respuesta;
                                                endif;

                                                $id_reserva_general_turno = $dbo->lastID();

                                                //Recorre los invitados para crear las invitaciones
                                                $datos_invitado = json_decode($Invitados, true);
                                                if (count($datos_invitado) > 0):
                                                    foreach ($datos_invitado as $detalle_datos):
                                                        $IDSocioInvitado = $detalle_datos["IDSocio"];
                                                        $NombreSocioInvitado = $detalle_datos["Nombre"];
                                                        $CedulaSocioInvitado = $detalle_datos["Cedula"];
                                                        $CorreoSocioInvitado = $detalle_datos["Correo"];
                                                        if (!in_array($datos_invitado_actual, $array_invitado_agregado)):
                                                            if (($IDSocioInvitado == 0 || $IDSocioInvitado == "") && $datos_servicio["PermiteInvitadoExternoCedula"] == "S") {
                                                                $invitacionExterna = SIMServicioReserva::CrearInvitacionExterno($IDClub, $IDSocio, $CedulaSocioInvitado, $NombreSocioInvitado, $CorreoSocioInvitado, $Fecha, $Fecha);
                                                                if (!$invitacionExterna["success"]) {
                                                                    $respuesta["success"] = false;
                                                                    $respuesta["message"] = $invitacionExterna["message"];
                                                                    $respuesta["response"] = null;
                                                                    return $respuesta;
                                                                }
                                                            }
                                                        endif;
                                                    endforeach;
                                                endif;

                                                //Inserto los invitados
                                                $datos_invitado_turno = json_decode($Invitados, true);
                                                //Reparto los jugadores por turnos
                                                $total_invitados_turno = count($datos_invitado_turno);

                                                if ($contador_socio_cabeza_real >= 1) {
                                                    $socios_cabeza = $contador_socio_cabeza_real + 1;
                                                } else {
                                                    $socios_cabeza = 0;
                                                }

                                                $invitados_por_turno = ((int) (($total_invitados_turno + 1) - $socios_cabeza) / $NumeroTurnos);

                                                $contador_invitado_agregado = 1;
                                                if (count($datos_invitado_turno) > 0):
                                                    $cantidadExternos = 0;
                                                    foreach ($datos_invitado_turno as $detalle_datos_turno):
                                                        $IDSocioInvitadoTurno = $detalle_datos_turno["IDSocio"];
                                                        $NombreSocioInvitadoTurno = $detalle_datos_turno["Nombre"];
                                                        $CorreoSocioInvitadoTurno = $detalle_datos_turno["Correo"];
                                                        $CedulaSocioInvitadoTurno = $detalle_datos_turno["Cedula"];
                                                        if ($IDSocioInvitadoTurno == 0 || $IDSocioInvitadoTurno == "") {
                                                            $cantidadExternos++;
                                                        }
                                                        // Guardo los invitados socios o externos
                                                        $datos_invitado_actual = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
                                                        if (!in_array($datos_invitado_actual, $array_invitado_agregado)):
                                                            if ($contador_invitado_agregado <= (int) $invitados_por_turno):
                                                                $sql_inserta_invitado_turno = $dbo->query("Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre, Cedula, Correo)
																																		                                    Values ('" . $id_reserva_general_turno . "','" . $IDSocioInvitadoTurno . "', '" . $NombreSocioInvitadoTurno . "', '" . $CedulaSocioInvitadoTurno . "', '" . $CorreoSocioInvitadoTurno . "')");
                                                                $id_invitado_reserva_general_turno = $dbo->lastID();

                                                                //INSERTO LOS ADICIONALES POR INVITADO SI APLICA
                                                                $datos_respuesta = $detalle_datos["Adicionales"];
                                                                $SumaEspeciales = 0;
                                                                if (count($datos_respuesta) > 0):
                                                                    foreach ($datos_respuesta as $detalle_carac):
                                                                        $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                                                        $ValoresCarac = $detalle_carac["Valores"];
                                                                        $ValoresID = $detalle_carac["ValoresID"];
                                                                        $Total = $detalle_carac["Total"];
                                                                        $SumaEspeciales += $Total;

                                                                        if (!empty($IDPropiedadProducto)) {
                                                                            $array_id_carac = explode(",", $ValoresID);
                                                                            if (count($array_id_carac) > 0) {
                                                                                foreach ($array_id_carac as $id_carac) {
                                                                                    $sql_datos_form = $dbo->query("INSERT INTO ReservaGeneralAdicionalInvitado (IDReservaGeneral, IDReservaGeneralInvitado, IDServicioPropiedad, IDServicioAdicional, Valor, Valores, Total) Values ('" . $id_reserva_general_turno . "','" . $id_invitado_reserva_general_turno . "','" . $IDPropiedadProducto . "','" . $id_carac . "','" . $ValoresID . "','" . $ValoresCarac . "','" . $Total . "')");
                                                                                }
                                                                            }
                                                                        }
                                                                    endforeach;
                                                                endif;
                                                                //INSERTO LOS ADICIONALES POR INVITADO SI APLICA

                                                                $array_invitado_agregado[] = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
                                                                //Envio push al invitado para notificarle si es un invitado socio
                                                                if (!empty($IDSocioInvitadoTurno)) {
                                                                    SIMUtil::push_socio_invitado($IDClub, $id_reserva_general_turno, $IDSocioInvitadoTurno);
                                                                }
                                                            endif;
                                                        else:
                                                            $contador_invitado_agregado = 0;
                                                        endif;
                                                        $contador_invitado_agregado++;
                                                    endforeach;
                                                endif;
                                                // Borro la reserva separada
                                                $sql_inserta_reserva = $dbo->query("Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $dato_hora . "' and IDEstadoReserva  = 3");
                                            endif;

                                            $contador_turno++;
                                        endforeach;
                                        //$respuesta["message"] = "Guardado";
                                        //$respuesta["success"] = true;
                                        //$respuesta["response"] = $id_reserva_general;
                                        //return $respuesta;
                                    endif;
                                endif;

                                // Si se va a reservas mas turnos seguidos y la validacion fue exitosa borro las separacion hechas
                                if ($flag_separa_siguiente_turno == 1 && count($array_hora_siguiente_turno_diponible) > 0):
                                    foreach ($array_hora_siguiente_turno_diponible as $Hora_siguiente):
                                        // Borro la reserva separada
                                        $sql_inserta_reserva = $dbo->query("Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3");
                                        // Borro la reserva separada automaticas
                                        $sql_inserta_reserva_aut = $dbo->query("Delete From ReservaGeneralAutomatica Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3");

                                    endforeach;
                                endif;

                                //Especial para clubes que solo se permite x reserva por accion por dia
                                $maximo_turnos_dia = $datos_servicio["NumeroReservasPermitidaAccion"];
                                if ((int) $maximo_turnos_dia > 0 && empty($Admin)):
                                    unset($array_socio);
                                    $condicion_reserva_verif = " and Tipo <> 'Automatica'";
                                    $ReservasPermitidaSemana = $maximo_turnos_dia;
                                    // Valido tambien los de la misma acciÃ³n
                                    $accion_padre = $datos_socio["AccionPadre"];
                                    $accion_socio = $datos_socio["Accion"];

                                    if (empty($accion_padre)): // Es titular
                                        $array_socio[] = $IDSocio;
                                        $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
                                        $result_nucleo = $dbo->query($sql_nucleo);
                                        while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                                            $array_socio[] = $row_nucleo["IDSocio"];
                                        endwhile;
                                    else:
                                        $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
                                        $result_nucleo = $dbo->query($sql_nucleo);
                                        while ($row_nucleo = $dbo->fetchArray($result_nucleo)):
                                            $array_socio[] = $row_nucleo["IDSocio"];
                                        endwhile;
                                    endif;
                                    if (count($array_socio) > 0):
                                        $id_socio_nucleo = implode(",", $array_socio);
                                    endif;

                                    //$sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (".$id_socio_nucleo.") and (Fecha='".$Fecha."' and Hora >= '".date("H:i:s")."' )  and IDServicio = '".$IDServicio."' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
                                    $sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . $Fecha . "')  and IDServicio = '" . $IDServicio . "' and (IDEstadoReserva = '1') " . $condicion_reserva_verif);
                                    $total_reservas_dia_nucleo = $dbo->rows($sql_reservas_sem);
                                    if ((int) $total_reservas_dia_nucleo >= (int) $ReservasPermitidaSemana):
                                        $respuesta["message"] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por dia por accion ";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;

                                endif;

                                //Vuelvo a validar que nadie haya tomado la reserva nuevamente por los casos de milisegundos, para esto creo un espera de x segundos
                                $suma_rand = rand(0, 1);
                                $rand_seg = rand(1, 1) + $suma_rand;
                                sleep($rand_seg);

                                $id_reserva_disponible2 = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee ");
                                if (!empty($id_reserva_disponible2) && ((int) $cupos_disponibilidad <= 1 || empty($cupos_disponibilidad))):
                                    $respuesta["message"] = "Lo sentimos, la reserva ya fue tomada";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                endif;

                                if (!empty($IDAuxiliar)):
                                    $suma_rand = rand(0, 2);
                                    $rand_seg = rand(1, 1) + $suma_rand;
                                    sleep($rand_seg);
                                    //Verifico de nuevo que el auxiliar boleador no estÃ© reservado

                                    $id_reserva_aux = "";
                                    $sql_aux = "Select *
													                    From ReservaGeneral
													                    Where IDAuxiliar = '" . $IDAuxiliar . "'
													                    and Fecha = '" . $Fecha . "'
													                    and Hora = '" . $Hora . "'
													                    and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)";
                                    $r_aux = $dbo->query($sql_aux);
                                    while ($row_aux = $dbo->fetchArray($r_aux)):
                                        if ($row_aux["IDSocio"] == $IDSocio && $row_aux["IDSocioBeneficiario"] == (int) $IDBeneficiario):
                                            $id_reserva_aux = "";
                                        else:
                                            $id_reserva_aux = "1";
                                        endif;
                                    endwhile;

                                    /*$id_reserva_aux = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDAuxiliar = '" . $IDAuxiliar . "' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and (IDSocio <> '".$IDSocio."' and IDSocioBeneficiario <> '".$IDSocioBeneficiario."') and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)" );
                                     */
                                    /*
                                    $respuesta["message"] = $sql_aux;
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = NULL;
                                    return $respuesta;
                                     */

                                    $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora";
                                    if (!empty($id_reserva_aux)):
                                        $respuesta["message"] = $mensaje_auxiliar_no_dispo;
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;

                                    //Cuando viene con array
                                    foreach ($array_id_auxiliar as $id_auxiliar_valida):
                                        if ((int) $id_auxiliar_valida >= 0):
                                            $id_auxiliar_valida = $id_auxiliar_valida . ",";
                                            $id_reserva_aux = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '" . $id_auxiliar_valida . "%' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDSocio <> '" . $IDSocio . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)");
                                            $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora.";
                                            if (!empty($id_reserva_aux)):
                                                $respuesta["message"] = $mensaje_auxiliar_no_dispo;
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            endif;

                                        endif;
                                    endforeach;

                                endif;

                                //Verifico que el elemnto no hay sido reservado a esta misma hora en otro servicio
                                $condicion_multiple_elemento = SIMWebService::verifica_elemento_otro_servicio($IDElemento, "");
                                //Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
                                $array_otro_elemento = explode(",", $condicion_multiple_elemento);
                                //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
                                $suma_rand = rand(0, 1);
                                $rand_seg = rand(1, 1) + $suma_rand;
                                sleep($rand_seg);
                                if (count($array_otro_elemento) > 1): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
                                    foreach ($array_otro_elemento as $id_elemento_multiple):
                                        if ($id_elemento_multiple != $IDElemento && !empty($id_elemento_multiple)):
                                            $sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 ) and Hora = '" . $Hora . "' ";
                                            $qry_reserva_elemento_mult = $dbo->query($sql_reserva_elemento_multp);
                                            if ($dbo->rows($qry_reserva_elemento_mult) > 0 && $cupos_disponibilidad <= 1):
                                                $respuesta["message"] = "La persona o elemento seleccionado ya fue reservado en otro servicio en esta misma fecha/hora";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            endif;
                                        endif;
                                    endforeach;
                                endif;

                                //Guardo la reserva maestra
                                $sql_inserta_reserva = $dbo->query("INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva,
										                              Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, Altitud, Longitud, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
										                          Values ('" . $IDClub . "','" . $IDSocio . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "',
										                          '" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','" . $Altitud . "' , '" . $Longitud . "','" . $NombreSocioReserva . "',
										                          '" . $AccionSocioReserva . "','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','" . $UsuarioCreacion . "','" . $FechaHoraSistemaActual . "')");

                                if (!$sql_inserta_reserva):
                                    $respuesta["message"] = "No se pudo realizar la reserva, intente de nuevo (m2)";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                endif;

                                $id_reserva_general = $dbo->lastID();

                                //Recorre los invitados para crear las invitaciones
                                $datos_invitado = json_decode($Invitados, true);
                                if (count($datos_invitado) > 0):
                                    foreach ($datos_invitado as $detalle_datos):
                                        $IDSocioInvitado = $detalle_datos["IDSocio"];
                                        $NombreSocioInvitado = $detalle_datos["Nombre"];
                                        $CedulaSocioInvitado = $detalle_datos["Cedula"];
                                        $CorreoSocioInvitado = $detalle_datos["Correo"];
                                        if (!in_array($datos_invitado_actual, $array_invitado_agregado)):
                                            if (($IDSocioInvitado == 0 || $IDSocioInvitado == "") && $datos_servicio["PermiteInvitadoExternoCedula"] == "S") {
                                                $invitacionExterna = SIMServicioReserva::CrearInvitacionExterno($IDClub, $IDSocio, $CedulaSocioInvitado, $NombreSocioInvitado, $CorreoSocioInvitado, $Fecha, $Fecha);
                                                if (!$invitacionExterna["success"]) {
                                                    $respuesta["success"] = false;
                                                    $respuesta["message"] = $invitacionExterna["message"];
                                                    $respuesta["response"] = null;
                                                    return $respuesta;
                                                }
                                            }
                                        endif;
                                    endforeach;
                                endif;

                                $datos_invitado = json_decode($Invitados, true);
                                if (count($datos_invitado) > 0):
                                    $cantidadExternos = 0;
                                    foreach ($datos_invitado as $detalle_datos):
                                        $IDSocioInvitado = $detalle_datos["IDSocio"];
                                        $NombreSocioInvitado = $detalle_datos["Nombre"];
                                        $CedulaSocioInvitado = $detalle_datos["Cedula"];
                                        $CorreoSocioInvitado = $detalle_datos["Correo"];
                                        if ($IDSocioInvitado == 0 || $IDSocioInvitado == "") {
                                            $cantidadExternos++;
                                        }

                                        $datos_invitado_actual = $IDSocioInvitado . "-" . $NombreSocioInvitado;
                                        if (!in_array($datos_invitado_actual, $array_invitado_agregado)):
                                            // Guardo los invitados socios o externos
                                            $sql_inserta_invitado = $dbo->query("INSERT Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre, Cedula, Correo)
																			                              Values ('" . $id_reserva_general . "','" . $IDSocioInvitado . "', '" . $NombreSocioInvitado . "', '" . $CedulaSocioInvitado . "','" . $CorreoSocioInvitado . "' )");
                                            $id_invitado_reserva_general_turnoi = $dbo->lastID();

                                            //INSERTO LOS ADICIONALES POR INVITADO SI APLICA
                                            $datos_respuesta = $detalle_datos["Adicionales"];
                                            $SumaEspeciales = 0;
                                            if (count($datos_respuesta) > 0):
                                                foreach ($datos_respuesta as $detalle_carac):
                                                    $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                                    $ValoresCarac = $detalle_carac["Valores"];
                                                    $ValoresID = $detalle_carac["ValoresID"];
                                                    $Total = $detalle_carac["Total"];
                                                    $SumaEspeciales += $Total;

                                                    if (!empty($IDPropiedadProducto)) {
                                                        $array_id_carac = explode(",", $ValoresID);
                                                        if (count($array_id_carac) > 0) {
                                                            foreach ($array_id_carac as $id_carac) {
                                                                $sql_datos_form = $dbo->query("INSERT INTO ReservaGeneralAdicionalInvitado (IDReservaGeneral, IDReservaGeneralInvitado, IDServicioPropiedad, IDServicioAdicional, Valor, Valores, Total) Values ('" . $id_reserva_general . "','" . $id_invitado_reserva_general_turnoi . "','" . $IDPropiedadProducto . "','" . $id_carac . "','" . $ValoresID . "','" . $ValoresCarac . "','" . $Total . "')");
                                                            }
                                                        }
                                                    }
                                                endforeach;
                                            endif;
                                            //INSERTO LOS ADICIONALES POR INVITADO SI APLICA

                                            //// Para las reservas del polo de practicas los invitado se crean como socio invitado y se les crea la reserva
                                            if ($IDClub == 37 && $IDServicio == 3575) {
                                                $sql_reserva_invitado = "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva,
																			                                              Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
																			                              Values ('" . $IDClub . "','" . $IDNuevoSocio . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "',
																			                              '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','" . $NombreSocioReserva . "','" . $AccionSocioReserva . "','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','InvitadoPolo','" . $FechaHoraSistemaActual . "')";

                                                if (empty($IDSocioInvitado)) {
                                                    $sql_inserta_invitado_socio = $dbo->query("Insert Into Socio (IDClub, IDCategoria, IDEstadoSocio, Accion, Nombre, NumeroDocumento, Email, Clave, TipoSocio, FechaInicioInvitado, FechaFinInvitado, ObservacionEspecial)
																			                                Values ('" . $IDClub . "','43', '1','999999991','" . $NombreSocioInvitado . "','','invitadoreserva','','Invitado','" . $Fecha . "','" . $Fecha . "','Creado Automaticamente por practica de polo')");
                                                    $IDNuevoSocio = $dbo->lastID();

                                                } else {
                                                    $IDNuevoSocio = $IDSocioInvitado;
                                                }
                                                $numero_inscripcion_inv = rand(0, 999999);
                                                //Crear la reserva para el invitado
                                                $sql_reserva_invitado = "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, NombreSocio,
																			                        AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
																			                          Values ('" . $IDClub . "','" . $IDNuevoSocio . "','" . $IDNuevoSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "',
																			                          '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion_inv . "','" . $NombreSocioInvitado . "','','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','InvitadoPolo','" . $FechaHoraSistemaActual . "')";
                                                $dbo->query($sql_reserva_invitado);

                                            }

                                            //Envio push al invitado para notificarle si es un invitado socio
                                            if (!empty($IDSocioInvitado)) {
                                                SIMUtil::push_socio_invitado($IDClub, $id_reserva_general, $IDSocioInvitado);
                                            }

                                        endif;
                                    endforeach;
                                endif;

                                $array_Campos = $Campos;
                                $array_Campos = json_decode($Campos, true);

                                if (count($array_Campos) > 0):
                                    foreach ($array_Campos as $id_valor_campo => $valor_campo):
                                        // Guardo los campos personalizados
                                        $sql_inserta_campo = $dbo->query("INSERT Into ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
																                              Values ('" . $id_reserva_general . "','" . $valor_campo["IDCampo"] . "', '" . $valor_campo["Valor"] . "')");
                                    endforeach;
                                endif;

                                $array_Adicional = $AdicionalesSocio;
                                $array_Adicional = json_decode($AdicionalesSocio, true);

                                if (count($array_Adicional) > 0) {
                                    foreach ($array_Adicional as $detalle_carac) {
                                        $SumaEspeciales = 0;

                                        $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                        $ValoresCarac = $detalle_carac["Valores"];
                                        $ValoresID = $detalle_carac["ValoresID"];
                                        $Total = $detalle_carac["Total"];
                                        $SumaEspeciales += $Total;

                                        if (!empty($IDPropiedadProducto)) {
                                            $array_id_carac = explode(",", $ValoresID);
                                            if (count($array_id_carac) > 0) {
                                                foreach ($array_id_carac as $id_carac) {
                                                    $sql_datos_form = $dbo->query("INSERT INTO ReservaGeneralAdicional (IDReservaGeneral, IDServicioPropiedad, IDServicioAdicional, Valor, Valores, Total) Values ('" . $id_reserva_general . "','" . $IDPropiedadProducto . "','" . $id_carac . "','" . $ValoresID . "','" . $ValoresCarac . "','" . $Total . "')");
                                                }
                                            }
                                        }
                                    }
                                }

                                // Si se va a reservas mas turnos seguidos y la validacion fue exitosa ingreso las demas reservas
                                if ($flag_separa_siguiente_turno == 1 && count($array_hora_siguiente_turno_diponible) > 0):
                                    foreach ($array_hora_siguiente_turno_diponible as $Hora_siguiente):

                                        $validacion_auxiliar = 0;
                                        if (!empty($IDAuxiliar)):

                                            if (!empty($IDAuxiliar) && count($array_id_auxiliar) <= 0):
                                                $array_id_auxiliar = explode(",", $IDAuxiliar);
                                            endif;

                                            //Cuando viene con array
                                            foreach ($array_id_auxiliar as $id_auxiliar_valida):
                                                if ((int) $id_auxiliar_valida >= 0):
                                                    $id_auxiliar_valida = $id_auxiliar_valida . ",";
                                                    $id_reserva_aux = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '" . $id_auxiliar_valida . "%' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)");
                                                    $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora: " . $Fecha . "/" . $Hora_siguiente;
                                                    if (!empty($id_reserva_aux)):
                                                        $validacion_auxiliar = 1;
                                                        $borra_reserva_primera = $dbo->query("Delete From ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "'");
                                                        $respuesta["message"] = $mensaje_auxiliar_no_dispo;
                                                        $respuesta["success"] = false;
                                                        $respuesta["response"] = null;
                                                        return $respuesta;
                                                    endif;

                                                endif;
                                            endforeach;
                                        endif;

                                        //Vuelvo a validar que nadie haya tomado la reserva nuevamente por los casos de milisegundos

                                        $id_reserva_disponible3 = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "'");

                                        //En las reservas que permiten varios cupos si se puede varias a la misma fecha y hora entonces no valida
                                        if ($cupos_disponibilidad > 1) {
                                            $id_reserva_disponible3 = "";
                                        }

                                        if (empty($id_reserva_disponible3)):
                                            //Guardo la reserva si nadie la ha tomado
                                            $sql_inserta_reserva_duplicar = $dbo->query("INSERT INTO ReservaGeneral (IDClub, IDSocio,IDUsuarioReserva,  IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui,NumeroInscripcion,Tipo,NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,CantidadInvitadoSalon,UsuarioTrCr, FechaTrCr,Longitud)
																			                                Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora_siguiente . "','" . $Observaciones . "'
																			                                  ,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','" . $NombreSocioReserva . "','" . $AccionSocioReserva . "','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','" . $CantidadInvitadoSalon . "','" . $UsuarioCreacion . "',
																			                                  '" . $FechaHoraSistemaActual . "','AT.')");

                                            $FechaHoraAut = $Fecha . " " . $Hora_siguiente;
                                            if (!$sql_inserta_reserva_duplicar):
                                                $respuesta["message"] = "No se pudo realizar la reserva, intente de nuevo (m3)";
                                                $respuesta["success"] = false;
                                                $respuesta["response"] = null;
                                                return $respuesta;
                                            endif;

                                            $id_reserva_general_duplicar = $dbo->lastID();
                                            // Duplico los invitados de la reserva padre
                                            $sql_invitado_duplicar = $dbo->query("Insert into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre, Cedula, Correo) Select '" . $id_reserva_general_duplicar . "', IDSocio, Nombre, Cedula, Correo From ReservaGeneralInvitado Where IDReservaGeneral = '" . $id_reserva_general . "'");
                                            // Guardar relacion de reservas automaticas
                                            $sql_reserva_automatica = $dbo->query("Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																			                            Values ('" . $id_reserva_general . "','" . $id_reserva_general_duplicar . "','" . $IDClub . "','" . $IDSocio . "','" . $IDElemento . "','" . $Fecha . "','" . $Hora_siguiente . "','1')");
                                        endif;

                                    endforeach;
                                endif;

                                // SI el servicio es una clase y se solicta reservar una cancha realizo la reserva
                                if ($flag_reserva_cancha_clase == 1):
                                    //Verifico de nuevo que la cancha este disponible por que por milesimas de seg puede queadr 2 al tiempo

                                    //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
                                    $suma_rand = rand(0, 1);
                                    $rand_seg = rand(1, 1) + $suma_rand;
                                    sleep($rand_seg);

                                    $id_reserva_disponible = $dbo->getFields("ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicioCanchaClub . "' and IDServicioElemento = '" . $IDElemento_cancha . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'");

                                    if (empty($id_reserva_disponible)):
                                        // Obtener la disponibilidad utilizada al consultar la reserva
                                        $id_disponibilidad_cancha = SIMWebService::obtener_disponibilidad_utilizada($IDServicioCanchaClub, $Fecha, $IDElemento_cancha);
                                        $sql_inserta_reserva_cancha = $dbo->query("INSERT INTO ReservaGeneral (IDClub, IDSocio, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, NumeroInscripcion, Tipo, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
																                      Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicioCanchaClub . "','" . $IDElemento_cancha . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "'
																                      ,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','" . $NombreSocioReserva . "','" . $AccionSocioReserva . "','" . $NombreBenefReserva . "','" . $AccionBenefReserva . "','" . $IP . "','" . $IdentificadorServicio . "','" . $ConsecutivoServicio . "','" . $UsuarioCreacion . "','" . $FechaHoraSistemaActual . "')");

                                        if (!$sql_inserta_reserva_cancha):
                                            $respuesta["message"] = "La reserva solicitada ya fue o esta siendo tomada (m5)";
                                            $respuesta["success"] = false;
                                            $respuesta["response"] = null;
                                            return $respuesta;
                                        endif;

                                        $id_reserva_cancha = $dbo->lastID();

                                        // Guardar relacion de reservas automaticas
                                        $sql_reserva_automatica = $dbo->query("Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																                        Values ('" . $id_reserva_general . "','" . $id_reserva_cancha . "','" . $IDClub . "','" . $IDSocio . "','" . $IDElemento_cancha . "','" . $Fecha . "','" . $Hora . "','1')");
                                    else:
                                        //No se pudo tomar por que la cancha ya fue reservada por alguien mas en el mismo segundo
                                        //Borro la reserva asociadas
                                        $borra_reserva_primera = $dbo->query("Delete From ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "'");
                                        $respuesta["message"] = "Lo sentimos, no hay una cancha disponible para tomar la clase en este horario.";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;

                                endif;

                                //Especial Country Sala belleza Keratina y antifrizz se reserva turno a otras personas
                                if (($IDClub == 44) && $IDServicio == 11736 && ($IDTipoReserva == "1482" || $IDTipoReserva == "1483" || $IDTipoReserva == "1484")) {
                                    $mensaje_otra_persona = "Se necesita otra profesional para completar la reserva pero no esta disponible, intente en otro horario";
                                    $reserva_aut_otra = self::reserva_otra_elemento($IDClub, $IDSocio, $IDServicio, $IDTipoReserva, $Fecha, $Hora, $id_reserva_general);
                                    if (!$reserva_aut_otra) {
                                        //Borro reserva maestra
                                        $borra_reserva_primera = $dbo->query("DELETE FROM ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "' Limit 1");
                                        $respuesta["message"] = $reserva_aut_otra;
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;

                                    }
                                }
                                //FIN ESPECIAL country

                                // Borro la reserva separada Padre
                                //$sql_inserta_reserva = $dbo->query( "Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento     = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3" );
                                $sql_inserta_reserva = $dbo->query("Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3");
                                // Borro la reserva separada automaticas
                                $sql_inserta_reserva_aut = $dbo->query("Delete From ReservaGeneralAutomatica Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3");

                                SIMUtil::notificar_nueva_reserva($id_reserva_general, $IDTipoReserva);

                                if ($datos_servicio["EnviarPushEncuestaCrear"] == "S" && $datos_servicio["IDEncuesta"] > 0) {
                                    SIMUtil::notificar_encuesta($id_reserva_general, $datos_servicio["IDEncuesta"]);
                                }

                                if ($datos_servicio["NotificarSocioPushReserva"] == "S" && !empty($datos_servicio["MensajePushReserva"])) {
                                    if ((int) $IDSocioBeneficiario > 0) {
                                        $IDSocioNotificacion = $IDSocioBeneficiario;
                                    } else {
                                        $IDSocioNotificacion = $IDSocio;
                                    }
                                    SIMUtil::push_notifica_reserva_socio($IDClub, $IDSocioNotificacion, $datos_servicio["MensajePushReserva"]);
                                }

                                //Si el elemento reservado es una persona (profesor, peluquero, masajista, etc) y esta creado como empleado en app empleados envio notificacion push
                                SIMUtil::push_notifica_reserva($IDClub, $id_reserva_general, "Empleado");

                                // si se configura un push para recordar el fin de la reserva x minutos antes
                                if ($datos_servicio["PermiteRecordatorio"] == "S") {
                                    $Intervalo = (int) $datos_disponibilidad_otro["Intervalo"];
                                    $MinutosaAntesNotif = $Intervalo - (int) $datos_servicio["NotifMinutosAntes"];
                                    if (empty($FechaHoraAut)) { //Si la reserva no hace otras reservas aut por ejemplo separar dos turnos seguidos utilizo la hora de la reserva
                                        $FechaHoraUltimaReserva = $Fecha . " " . $Hora;
                                    } else {
                                        $FechaHoraUltimaReserva = $FechaHoraAut;
                                    }
                                    $FechaHoraRecordatorio = strtotime('+' . $MinutosaAntesNotif . ' minute', strtotime($FechaHoraUltimaReserva));
                                } else {
                                    $FechaHoraRecordatorio = "";
                                }
                                $datos_reserva[PermiteRecordatorio] = $datos_servicio["PermiteRecordatorio"];
                                $datos_reserva[FechaRecordatorio] = date("Y-m-d H:i:s", $FechaHoraRecordatorio);
                                $datos_reserva[MensajeRecordatorio] = $datos_servicio["MensajeNotifTerminaReserva"];
                                //Fin si se configura un push para recordar el fin de la reserva x minutos antes

                                //Datos reserva
                                $datos_club = $dbo->fetchAll("Club", " IDClub = '" . $IDClub . "' ", "array");
                                $response_reserva = array();
                                $datos_reserva["IDReserva"] = (int) $id_reserva_general;
                                //Calculo el valor de la reserva
                                $valor_inicial_reserva = (int) $datos_servicio["ValorReserva"];
                                $TurnosSeparar = (int) $dbo->getFields("ServicioTipoReserva", "NumeroTurnos", "IDServicioTipoReserva = '" . $IDTipoReserva . "'");
                                $consul = "ServicioTipoReserva " . " NumeroTurnos " . "IDServicioTipoReserva = '" . $IDTipoReserva . "'";
                                if ($TurnosSeparar > 1 && $IDClub != 88):
                                    $ValorReserva = (int) $valor_inicial_reserva * $TurnosSeparar;
                                else:
                                    $ValorReserva = (int) $valor_inicial_reserva;
                                endif;

                                if ($IDClub == 28): // Valor Especial Liga de tenis
                                    $ValorReserva = SIMUtil::calcular_tarifa($IDClub, $IDSocio, $IDServicio, $Fecha, $Hora, $IDElemento, $id_reserva_general, $IDTipoReserva);
                                    if ((int) $ValorReserva == 0) {
                                        $ValorReserva = (int) $datos_servicio["ValorReserva"];
                                    }
                                endif;

                                if ($IDClub == 106): // Valor Especial nadesba
                                    $ValorReserva = SIMUtil::calcular_tarifa2($IDSocio, $Invitados, $IDTipoReserva);
                                endif;

                                /* if ($IDClub == 85): // Valor Especial liga risaraldas
                                $ValorReserva = SIMUtil::calcular_tarifa3($IDSocio, $Invitados);
                                endif; */

                                $datos_reserva["ValorReserva"] = $ValorReserva;

                                if ($datos_servicio["InvitadoExternoPago"] == "S") {
                                    $ValorReserva += ($cantidadExternos * $datos_servicio["InvitadoExternoValor"]);
                                }
                                //array_push($response_reserva, $datos_reserva);
                                //Produccion
                                $llave_encripcion = $datos_club["ApiKey"]; //llave de encripciÃn que se usa para generar la fima
                                //Produccion
                                $usuarioId = $datos_club["MerchantId"]; //c0digo inicio del cliente

                                $refVenta = time(); //referencia que debe ser ?nica para cada transacciÃn
                                $iva = 0; //impuestos calculados de la transacciÃn
                                $baseDevolucionIva = 0; //el precio sin iva de los productos que tienen iva
                                $valor = $datos_reserva["ValorReserva"] + (($datos_reserva["ValorReserva"] * $ArrayParametro["Iva"]) / 100); //el valor ; //el valor total
                                $moneda = "COP"; //la moneda con la que se realiza la compra
                                $prueba = "0"; //variable para poder utilizar tarjetas de crÃdito de prueba
                                $descripcion = "Pago Reserva Mi Club";
                                if ($IDClub == 28) {
                                    $descripcion = "Pago Reserva " . $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
                                }
                                $url_respuesta = URLROOT . "respuesta_transaccion.php"; //Esta es la pÂ·gina a la que se direccionarÂ· al final del pago
                                $url_confirmacion = URLROOT . "confirmacion_pagos.php";
                                $emailSocio = $datos_socio["CorreoElectronico"];
                                if (filter_var(trim($emailSocio), FILTER_VALIDATE_EMAIL)) {
                                    $emailComprador = $emailSocio;
                                } else {
                                    $emailComprador = "";
                                }

                                $firma_cadena = "$llave_encripcion~$usuarioId~$refVenta~$valor~$moneda"; //concatenaciÃn para realizar la firma
                                $firma = md5($firma_cadena); //creaciÃn de la firma con la cadena previamente hecha
                                $extra1 = $id_reserva_general;

                                //  ACTUALIZO EL VALOR DE LA RESERVA PARA SOLO ELIMINAR LAS QUE TIENE UN VALOR MAYOR A CERO EN EL CRON.
                                $actulizaValor = "UPDATE ReservaGeneral SET ValorPagado = '" . $ValorReserva . "' WHERE IDReservaGeneral ='" . $id_reserva_general . "'";
                                $dbo->query($actulizaValor);

                                $datos_reserva["Action"] = $datos_club["URL_PAYU"];

                                $response_parametros = array();
                                $datos_post["llave"] = "moneda";
                                $datos_post["valor"] = (string) $moneda;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "ref";
                                $datos_post["valor"] = $refVenta;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "llave";
                                $datos_post["valor"] = $llave_encripcion;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "userid";
                                $datos_post["valor"] = $usuarioId;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "usuarioId";
                                $datos_post["valor"] = $usuarioId;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "accountId";
                                $datos_post["valor"] = (string) $datos_club["AccountId"];
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "descripcion";
                                $datos_post["valor"] = $descripcion;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "extra1";
                                $datos_post["valor"] = (string) $extra1;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "extra2";
                                $datos_post["valor"] = $IDClub;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "refVenta";
                                $datos_post["valor"] = $refVenta;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "valor";
                                $datos_post["valor"] = $ValorReserva;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "iva";
                                $datos_post["valor"] = "0";
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "baseDevolucionIva";
                                $datos_post["valor"] = "0";
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "firma";
                                $datos_post["valor"] = $firma;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "emailComprador";
                                $datos_post["valor"] = $emailComprador;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "prueba";
                                $datos_post["valor"] = (string) $datos_club["IsTest"];
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "url_respuesta";
                                $datos_post["valor"] = (string) $url_respuesta;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "url_confirmacion";
                                $datos_post["valor"] = (string) $url_confirmacion;
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "Modulo";
                                $datos_post["valor"] = (string) "Reservas";
                                array_push($response_parametros, $datos_post);

                                $datos_post["llave"] = "IDSocio";
                                $datos_post["valor"] = $IDSocio;
                                array_push($response_parametros, $datos_post);

                                $datos_reserva["ParametrosPost"] = $response_parametros;

                                //PAGO
                                $datos_post_pago = array();
                                $datos_post_pago["iva"] = 0;
                                $datos_post_pago["purchaseCode"] = $refVenta;
                                $datos_post_pago["totalAmount"] = $ValorReserva * 100;
                                $datos_post_pago["ipAddress"] = SIMUtil::get_IP();
                                $datos_reserva["ParametrosPaGo"] = $datos_post_pago;
                                //FIN PAGO

                                /*
                                $datos_reserva["Action"] = $datos_club["URL_PAYU"];
                                $datos_reserva["moneda"] = (string)$moneda;
                                $datos_reserva["ref"] = $refVenta;
                                $datos_reserva["llave"] = $llave_encripcion;
                                $datos_reserva["userid"] = $usuarioId;
                                $datos_reserva["usuarioId"] = $usuarioId;
                                $datos_reserva["accountId"] = (string)$datos_club["AccountId"];
                                $datos_reserva["descripcion"] = $descripcion;
                                $datos_reserva["extra1"] = (string)$extra1;
                                $datos_reserva["extra2"] = $IDClub;
                                $datos_reserva["refVenta"] = $refVenta;
                                $datos_reserva["valor"] =  $datos_reserva["ValorReserva"];
                                $datos_reserva["iva"] = "0";
                                $datos_reserva["baseDevolucionIva"] = "0";
                                $datos_reserva["firma"] = $firma;
                                $datos_reserva["emailComprador"] = $emailComprador;
                                $datos_reserva["prueba"] = (string)$datos_club["IsTest"];
                                $datos_reserva["url_respuesta"] = (string)$url_respuesta;
                                $datos_reserva["url_confirmacion"] = (string)$url_confirmacion;
                                 */

                                $mensaje_guardar = $datos_servicio["MensajeReservaGuardada"];
                                if (!empty($mensaje_guardar)) {
                                    $mensaje_guardado = $mensaje_guardar;
                                } else {
                                    $mensaje_guardado = "Guardado";
                                }

                                //Para aeroclub avion si es 8 dias antes no esta sujeta a verificaciÃ³n y es menos dÃ­as si aparece mensaje
                                if ($IDClub == 36):
                                    $mensaje_guardado = "Reservado con exito";
                                endif;
                                if ($IDServicio == "3608" || $IDServicio == "4371" || $IDServicio == "3608" || $IDServicio == "3609"):
                                    $fecha_reser = $Fecha;
                                    $nuevafecha = strtotime('-8 day', strtotime($fecha_reser));
                                    $nuevafecha = date('Y-m-j', $nuevafecha);
                                    $fecha_hoy_reser = date("Y-m-d");
                                    if (strtotime($nuevafecha) <= strtotime($fecha_hoy_reser)):
                                        $mensaje_especial_repetir = "RESERVA EN PROCESO Como su solicitud esta siendo procesada con menos de 8 dÃ­as de antelaciÃ³n, queda sujeta a disponibilidad. Pronto le confirmaremos";
                                        $mensaje_guardado = "";
                                    else:
                                        $mensaje_guardado = "Reservado con exito";
                                    endif;
                                endif;

                                $respuesta["message"] = $mensaje_guardado . $mensaje_especial_repetir;
                                $respuesta["success"] = true;
                                $respuesta["response"] = $datos_reserva;
                            else:
                                $respuesta["message"] = "Lo sentimos la reserva ya fue tomada en el dia o dias que necesita";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;

                            endif;

                            //$contador_fecha = strtotime ( '+1 '.$periodo_sumar ,  $contador_fecha  ) ;
                            //$contador_fecha = strtotime ( '+'.$numero_repeticion.' '.$periodo_sumar ,  strtotime($Fecha)  ) ;
                            $contador_fecha = strtotime('+' . $dato_sumar . ' ' . $periodo_sumar_app, strtotime($Fecha));
                            $Fecha = date("Y-m-d", $contador_fecha);

                        endfor;
                    } else {
                        $respuesta["message"] = "Lo sentimos, solo se permite " . $MaximoReservaSocioServicio . " reservas por dia. " . $mensaje_opcion_reserva;
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    } else :
                    $respuesta["message"] = "Lo sentimos, fecha no disponible";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                endif;
                else:
                    $respuesta["message"] = "Lo sentimos no se puede reservar turnos seguidos, debe haber un lapso de por lo menos 1 hora ";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                endif;

                else:
                    $respuesta["message"] = "Lo sentimos, el maximo numero de invitados para poder reservar es: " . $MaximoInvitados;
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                endif;

                else:
                    $respuesta["message"] = "Lo sentimos el minimo de personas para reservas es de : " . ($MinimoInvitados + 1);
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                endif;

            } else {
                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "21. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function reserva_otra_elemento($IDClub, $IDSocio, $IDServicio, $IDTipoReserva, $Fecha, $Hora, $IDReservaPadre)
    {

        $dbo = &SIMDB::get();
        $FechaHoraServicio = $Fecha . " " . $Hora;
        $doc_segundo_elemento_dispo = "";
        $ServicioAsociadoEst["IDServicio"] = "11732";
        $ServicioAsociadoEst["IDTipoServicio"] = "1518";
        $ServicioAsociadoEst["IDElemento"][1035912851] = "3424";
        $ServicioAsociadoEst["IDElemento"][1019084378] = "3422";
        $sql_estilista = "SELECT IDServicioElemento,IdentificadorElemento FROM ServicioElemento WHERE IdentificadorElemento = '1035912851' or IdentificadorElemento = '1019084378' Order by IdentificadorElemento DESC"; //leira
        $r_estilista = $dbo->query($sql_estilista);
        while ($row_estilista = $dbo->fetchArray($r_estilista)) {
            $array_id_estilista[$row_estilista["IdentificadorElemento"]][] = $row_estilista["IDServicioElemento"];
        }
        //print_r($array_id_estilista);

        switch ($IDTipoReserva) {
            case "1482": //Keratina media cabeza 90 min.
                $H_Siguiente = strtotime('+30 minute', strtotime($FechaHoraServicio));
                $HoraSiguiente = date("H:i:s", $H_Siguiente);
                $NumeroBloques = 4;
                break;
            case "1483": //keratina completa 135 min.
                $H_Siguiente = strtotime('+45 minute', strtotime($FechaHoraServicio));
                $HoraSiguiente = date("H:i:s", $H_Siguiente);
                $NumeroBloques = 6;
                break;
            case "1484": // Antifrizz 90 min.
                $H_Siguiente = strtotime('+30 minute', strtotime($FechaHoraServicio));
                $HoraSiguiente = date("H:i:s", $H_Siguiente);
                $NumeroBloques = 4;
                break;
        }

        foreach ($array_id_estilista as $identifica_est => $datos_est) {
            $bloques_disponibles = "S";
            if (empty($doc_segundo_elemento_dispo)) {
                foreach ($datos_est as $id_est) {
                    $array_id_est[] = $id_est;
                }
                if (count($array_id_est) > 0) {
                    $id_est = implode(",", $array_id_est);
                    for ($i_bloque = 1; $i_bloque <= $NumeroBloques; $i_bloque++) {
                        if ($bloques_disponibles == "S") {
                            /*
                            echo "<br>".$sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE Fecha = '".$Fecha."' and Hora = '".$HoraSiguiente."' and IDServicioElemento in ($id_est) Limit 1";
                            $r_est=$dbo->query($sql_reserva_otro);
                            $row_est=$dbo->fetchArray($r_est);
                            if(!empty($row_est["IDReservageneral"])){
                            $bloques_disponibles="N";
                            }
                             */
                            // Obtener la disponibilidad utilizada al consultar la reserva
                            $id_disponibilidad_est = SIMWebService::obtener_disponibilidad_utilizada($ServicioAsociadoEst["IDServicio"], $Fecha, $ServicioAsociadoEst["IDElemento"][$identifica_est], $HoraSiguiente);

                            if (!empty($id_disponibilidad_est)) {
                                $verificacion_est = SIMWebService::verifica_club_servicio_abierto($IDClub, $Fecha, $ServicioAsociadoEst["IDServicio"], $ServicioAsociadoEst["IDElemento"][$identifica_est], $HoraSiguiente, "");
                                if (empty($verificacion_est)) {
                                    $Observaciones = "Reserva automatica de keratina o antifrrizz";
                                    $sql_insert_rese = "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, NumeroInscripcion, Tipo, UsuarioTrCr, FechaTrCr)
																								Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $ServicioAsociadoEst["IDServicio"] . "','" . $ServicioAsociadoEst["IDElemento"][$identifica_est] . "', '1','" . $id_disponibilidad_est . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $ServicioAsociadoEst["IDTipoServicio"] . "','" . $Fecha . "', '" . $HoraSiguiente . "','" . $Observaciones . "'
																									,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','" . $UsuarioCreacion . "',NOW())";

                                    $sql_inserta_reserva_est = $dbo->query($sql_insert_rese);
                                    $dbo->query($sql_inserta_reserva_est);
                                    $id_reserva_est = $dbo->lastID();
                                    // Guardar relacion de reservas automaticas
                                    $sql_reserva_automatica = $dbo->query("INSERT INTO ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																																		Values ('" . $IDReservaPadre . "','" . $id_reserva_est . "','" . $IDClub . "','" . $IDSocio . "','" . $ServicioAsociadoEst["IDElemento"][$identifica_est] . "','" . $Fecha . "','" . $HoraSiguiente . "','1')");

                                    $array_id_reserva_est_aut[] = $id_reserva_est;

                                    if (!$sql_inserta_reserva_est) {
                                        $bloques_disponibles = "N";
                                        if (count($array_id_reserva_est_aut) > 0) {
                                            foreach ($array_id_reserva_est_aut as $id_reserva_aut_est) {
                                                $borra_reserva_apartada = "DELETE FROM ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_aut_est . "' Limit 1";
                                                $dbo->query($borra_reserva_apartada);
                                            }
                                        }
                                    }
                                } else {
                                    $bloques_disponibles = "N";
                                }
                            } else {
                                $bloques_disponibles = "N";
                            }

                        }
                        $FechaHoraServicio = $Fecha . " " . $HoraSiguiente;
                        $H_Siguiente = strtotime('+15 minute', strtotime($FechaHoraServicio));
                        $HoraSiguiente = date("H:i:s", $H_Siguiente);
                    }

                    // como si se pudo reservar todo salgo del ciclo
                    if ($bloques_disponibles == "S") {
                        $doc_segundo_elemento_dispo = $identifica_est;
                    }
                }
            }
        }

        if ($doc_segundo_elemento_dispo == "") {
            return false;

        } else {
            return true;
        }
        return false;
    }

    public function set_invitado_servicio($IDClub, $IDReserva, $Invitados)
    {
        $dbo = &SIMDB::get();

        if (!empty($IDClub) && !empty($IDReserva)) {

            //verifico que el socio exista y pertenezca al club
            $id_reserva = $IDReserva;

            $nuevacadena = str_replace('Optional("', "", $Invitados);
            $nuevacadena = str_replace('")', "", $nuevacadena);
            $Invitados = $nuevacadena;
            $datos_invitado = json_decode($Invitados, true);
            $TotalInvitadosAgregados = count($datos_invitado);

            $datos_reserva = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array");
            $datos_servicio = $dbo->fetchAll("Servicio", " IDServicio = '" . $datos_reserva["IDServicio"] . "' ", "array");

            //Para bellavista solo el dueÃ±o de la reserva puede eliminar invitados para los sabados

            //Para bellavista el dueÃ±o de la reserva puede modificar el turno de lunes a miercoles
            if ($IDClub == 8 || ($IDClub == 112 && $datos_reserva["IDServicio"] == 19939)) {
                $dia_semana = date("w", strtotime($datos_reserva["Fecha"]));
                if ((int) $dia_semana == 6) {
                    //Verifico que este en los dias
                    $HoraEmpieza = "23:59:00";
                    $FechaHoraReserva = $datos_reserva["Fecha"] . " " . $datos_reserva["Hora"];
                    $DiaPermitido = strtotime('-3 day', strtotime(date($FechaHoraReserva)));
                    $HoraPermitida = strtotime(date("Y-m-d", $DiaPermitido) . " " . $HoraEmpieza);
                    $HoraActual = strtotime(date("Y-m-d H:i:s"));
                    if ($HoraActual >= $HoraPermitida) {
                        $respuesta["message"] = "Lo sentimos solo puede modificar la reserva para el Sabado de Lunes a miercoles: ";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                        exit;
                    }
                }
            }

            if ($datos_servicio["PermiteEditarReserva"] != "N") {
                $id_disponibilidad = SIMWebService::obtener_disponibilidad_utilizada($datos_reserva["IDServicio"], $datos_reserva["Fecha"], $datos_reserva["IDServicioElemento"], $datos_reserva["Hora"]);
                $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array");
                //quito 1 al dueÃ±o de la reserva
                $MinimoPersonasTurno = $datos_disponibilidad["MinimoInvitados"] - 1;
                $MaximoReservaSocioServicio = $datos_disponibilidad["MaximoReservaDia"];
                $MaximoInvitados = $datos_disponibilidad["MaximoInvitados"];

                if (count($datos_invitado) > $MaximoInvitados) {
                    $respuesta["message"] = "Supera el maximo de invitados permitidos";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                    return $respuesta;
                    exit;
                }

                if ($TotalInvitadosAgregados >= $MinimoPersonasTurno) {

                    //Verifico que la persona no este en otro grupo
                    if (count($datos_invitado) > 0) {
                        foreach ($datos_invitado as $detalle_datos) {
                            $IDSocioInvitado = $detalle_datos["IDSocio"];
                            if ((int) $IDSocioInvitado > 0) {

                                //aqui valida
                                $datos_socio_agregado = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocioInvitado . "' ", "array");
                                $nombre_socio_invitado = $datos_socio_agregado["Nombre"] . " " . $datos_socio_agregado["Apellido"];
                                if ($datos_socio_agregado["PermiteReservar"] == "N") {
                                    $respuesta["message"] = "Lo sentimos el invitado " . $nombre_socio_invitado . " no tiene permiso para reservar";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                }

                                if ($datos_servicio["ValidarEdad"] == "S") {
                                    $fecha_nacimiento_invitado = $datos_socio_agregado["FechaNacimiento"];
                                    $dia_actual = date("Y-m-d");
                                    $edad_diff = date_diff(date_create($fecha_nacimiento_invitado), date_create($dia_actual));
                                    $EdadSocioInvitado = $edad_diff->format('%y');
                                    if ($EdadSocioInvitado >= $datos_servicio["EdadMinima"] && $EdadSocioInvitado <= $datos_servicio["EdadMaxima"]) {
                                        $edadpermitida == "S";
                                    } else {
                                        $respuesta["message"] = "Lo sentimos el invitado: " . $nombre_socio_invitado . " no tiene la edad permitida";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    }
                                }

                                $hora_actual_sistema_valida = date("H:i:s");
                                $sql_socio_grupo = "SELECT RGI.*
																		FROM ReservaGeneralInvitado RGI, ReservaGeneral RG
																		WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocioInvitado . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $datos_reserva["Fecha"] . "' and RG.Hora <> '" . $datos_reserva["Hora"] . "' and RG.IDServicio = '" . $datos_reserva["IDServicio"] . "' ORDER BY IDReservaGeneralInvitado Desc ";
                                $qry_socio_grupo = $dbo->query($sql_socio_grupo);

                                if ($dbo->rows($qry_socio_grupo) > 0 && ($MaximoReservaSocioServicio <= 1 || $dbo->rows($qry_socio_grupo) >= $MaximoReservaSocioServicio)) {
                                    $respuesta["message"] = $nombre_socio_invitado . ", ya esta agregado(a) en esta fecha como invitado en un grupo, no es posible realizar la reserva, por favor verifique";
                                    $respuesta["success"] = false;
                                    $respuesta["response"] = null;
                                    return $respuesta;
                                    exit;
                                } elseif ($MaximoReservaSocioServicio <= 1 || $dbo->rows($qry_socio_grupo) >= $MaximoReservaSocioServicio) {
                                    $sql_reserva_dia_hora = "SELECT IDReservageneral
																								 FROM ReservaGeneral
																								 Where IDSocio = '" . $IDSocioInvitado . "' and Fecha = '" . $datos_reserva["Fecha"] . "' and IDServicio = '" . $datos_reserva["IDServicio"] . "' and IDEstadoReserva = '1' Order by Hora Desc Limit 1";
                                    $result_reserva_dia_hora = $dbo->query($sql_reserva_dia_hora);
                                    $row_reserva_dia_hora = $dbo->fetchArray($result_reserva_dia_hora);
                                    if (!empty($row_reserva_dia_hora["IDReservageneral"])) {
                                        $respuesta["message"] = $nombre_socio_invitado . ", ya tiene una reserva para ese mismo dia";
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                        exit;
                                    }

                                }

                            }

                        }
                    }

                    //Verifico la reserva si tiene invitados que se agregaron con el boton de mas cupos, ellos no se pueden borrar de la reserva
                    $array_socio_agregado = array();
                    $SocioAgregado = "N";
                    $sql_socio_grupo = "SELECT IDSocio,AgregadoBotonPublico
																	FROM ReservaGeneralInvitado RGI
																	WHERE IDReservageneral = '" . $IDReserva . "' and AgregadoBotonPublico ='S'";
                    $qry_socio_grupo = $dbo->query($sql_socio_grupo);
                    while ($row_soc_gr = $dbo->fetchArray($qry_socio_grupo)) {
                        $array_socio_agregado[] = $row_soc_gr["IDSocio"];
                        $SocioAgregado = "S";
                    }
                    if (count($datos_invitado) <= 0 && $SocioAgregado == "S") {
                        $respuesta["message"] = "No es posible eliminar los invitados, una persona se agregÃ³ a este grupo y no es posible borrarlo ";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                        exit;
                    }

                    if (count($datos_invitado) > 0 && $SocioAgregado == "S") {
                        foreach ($datos_invitado as $detalle_datos) {
                            $array_nuevos_soc[] = $detalle_datos["IDSocio"];
                        }

                        foreach ($array_socio_agregado as $id_soc_agre) {
                            if (!in_array($id_soc_agre, $array_nuevos_soc)) {
                                $respuesta["message"] = "Uno de los invitados se agregÃ³ a este grupo no es posible borrarlo";
                                $respuesta["success"] = false;
                                $respuesta["response"] = null;
                                return $respuesta;
                                exit;
                            }

                        }
                    }

                    //quito del array de invitados los socios que se agregaron
                    $contador_pos = 0;
                    if (count($datos_invitado) > 0 && $SocioAgregado == "S") {
                        foreach ($datos_invitado as $detalle_datos) {
                            if (in_array($detalle_datos["IDSocio"], $array_socio_agregado)) {
                                unset($datos_invitado[$contador_pos]);
                            }
                            $contador_pos++;
                        }

                    }

                    if (!empty($id_reserva)) {
                        //Borro los invitado anteriores
                        $del_invitado = "Delete From ReservaGeneralInvitado Where IDReservaGeneral = '" . $IDReserva . "' and AgregadoBotonPublico <> 'S' ";
                        $dbo->query($del_invitado);

                        if (count($datos_invitado) > 0):
                            foreach ($datos_invitado as $detalle_datos):
                                $IDSocioInvitado = $detalle_datos["IDSocio"];
                                $NombreSocioInvitado = $detalle_datos["Nombre"];
                                $CedulaSocioInvitado = $detalle_datos["Cedula"];
                                $CorreoSocioInvitado = $detalle_datos["Correo"];
                                // Guardo los invitados socios o externos
                                $sql_inserta_invitado = $dbo->query("INSERT Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre, Cedula, Correo)
																								Values ('" . $id_reserva . "','" . $IDSocioInvitado . "', '" . $NombreSocioInvitado . "', '" . $CedulaSocioInvitado . "', '" . $CorreoSocioInvitado . "')");

                                $id_invitado_reserva_general_turnoi = $dbo->lastID();
                                //INSERTO LOS ADICIONALES POR INVITADO SI APLICA
                                $datos_respuesta = $detalle_datos["Adicionales"];
                                $SumaEspeciales = 0;
                                if (count($datos_respuesta) > 0):
                                    //Valida si el elemento adicional esta disponible
                                    require LIBDIR . "SIMServicioReserva.inc.php";
                                    $validacion = SIMServicioReserva::validar_disponibilidad_elemento_adicional($id_carac, $datos_reserva["Fecha"]);
                                    if ($validacion["response"] == "N"):
                                        $respuesta["message"] = $validacion["message"];
                                        $respuesta["success"] = false;
                                        $respuesta["response"] = null;
                                        return $respuesta;
                                    endif;
                                    //Fin validaciÃ³n
                                    foreach ($datos_respuesta as $detalle_carac):
                                        $IDPropiedadProducto = $detalle_carac["IDCaracteristica"];
                                        $ValoresCarac = $detalle_carac["Valores"];
                                        $ValoresID = $detalle_carac["ValoresID"];
                                        $Total = $detalle_carac["Total"];
                                        $SumaEspeciales += $Total;

                                        if (!empty($IDPropiedadProducto)) {
                                            $array_id_carac = explode(",", $ValoresID);
                                            if (count($array_id_carac) > 0) {
                                                foreach ($array_id_carac as $id_carac) {
                                                    $sql_datos_form = $dbo->query("INSERT INTO ReservaGeneralAdicionalInvitado (IDReservaGeneral, IDReservaGeneralInvitado, IDServicioPropiedad, IDServicioAdicional, Valor, Valores, Total) Values ('" . $id_reserva . "','" . $id_invitado_reserva_general_turnoi . "','" . $IDPropiedadProducto . "','" . $id_carac . "','" . $ValoresID . "','" . $ValoresCarac . "','" . $Total . "')");
                                                }
                                            }
                                        }
                                    endforeach;
                                endif;
                                //INSERTO LOS ADICIONALES POR INVITADO SI APLICA

                            endforeach;
                        endif;

                        /*
                        $array_Invitados = $Invitados;
                        if (count($array_Invitados)>0):
                        foreach($array_Invitados as $id_valor => $valor):
                        // Guardo los invitados socios o externos
                        $sql_inserta_invitado = $dbo->query("Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
                        Values ('".$id_reserva."','".$valor["IDSocioInvitado"]."', '".$valor["NombreInvitado"]."')");
                        endforeach;
                        endif;
                         */

                        $respuesta["message"] = "Guardado";
                        $respuesta["success"] = true;
                        $respuesta["response"] = "Guardado";

                    } else {
                        $respuesta["message"] = "Error la reserva no existe o no pertenece al club";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                    }

                } else {
                    $respuesta["message"] = $row_invitado["TotalInvitados"] . "El invitado no puede ser eliminado por que la reserva no cumple con el numero mÃ­nimo para hacer la reserva";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;
                }

            } else {
                $respuesta["message"] = "No es posible editar la reserva, debe eliminar y volver a crear";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }
        } else {
            $respuesta["message"] = "22. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function del_invitado_servicio($IDClub, $IDReserva, $IDReservaGeneralInvitado,$EliminarParaMi="")
    {
        $dbo = &SIMDB::get();

        if (!empty($IDClub) && !empty($IDReserva) && !empty($IDReservaGeneralInvitado)) {

            //verifico que el invitado exista y pertenezca al club
            $id_invitado_reserva = $dbo->getFields("ReservaGeneralInvitado", "IDReservaGeneralInvitado", "IDReservaGeneralInvitado = '" . $IDReservaGeneralInvitado . "'");

            if (!empty($id_invitado_reserva)) {

                $datos_reserva = $dbo->fetchAll("ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array");

                //Para bellavista solo el dueÃ±o de la reserva puede eliminar invitados para los sabados
                if ($IDClub == 8 || $IDClub == 112) {
                    $dia_semana = date("w", strtotime($datos_reserva["Fecha"]));
                    if ((int) $dia_semana == 6) {
                        $respuesta["message"] = "Lo sentimos solo el capitan puede modificar la reserva";
                        $respuesta["success"] = false;
                        $respuesta["response"] = null;
                        return $respuesta;
                    }
                }

                $id_disponibilidad = SIMWebService::obtener_disponibilidad_utilizada($datos_reserva["IDServicio"], $datos_reserva["Fecha"], $datos_reserva["IDServicioElemento"], $datos_reserva["Hora"]);
                $datos_disponibilidad = $dbo->fetchAll("Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array");

                //quito 1 al dueÃ±o de la reserva
                $MinimoPersonasTurno = $datos_disponibilidad["MinimoInvitados"] - 1;
                //Invitados de la reserva
                $sql_invitados = $dbo->query("SELECT count(IDReservaGeneralInvitado) as TotalInvitados
																			 FROM ReservaGeneralInvitado
																			 WHERE IDReservaGeneral = '" . $IDReserva . "'");

                $row_invitado = $dbo->fetchArray($sql_invitados);
                //Le quito el invitado que trata de eliminar para saber si cumple con la condiciÃ³n
                $TotalInvitadoReserva = (int) $row_invitado["TotalInvitados"] - 1;

                if ($TotalInvitadoReserva >= $MinimoPersonasTurno) {
                    // Borrar los invitados socios o externos
                    $sql_elimina_invitado = $dbo->query("Delete From ReservaGeneralInvitado Where IDReservaGeneralInvitado = '" . $IDReservaGeneralInvitado . "'");
                    $respuesta["message"] = "eliminado";
                    $respuesta["success"] = true;
                    $respuesta["response"] = "eliminado";
                } else {
                    $respuesta["message"] = "El invitado no puede ser eliminado por que la reserva no cumple con el numero mÃ­nimo para hacer la reserva";
                    $respuesta["success"] = false;
                    $respuesta["response"] = null;

                }
            } else {
                $respuesta["message"] = "Error la reserva no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "23. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function set_reserva_golf($IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Tee)
    {
        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDSocio) && !empty($IDElemento) && !empty($IDServicio) && !empty($Fecha) && !empty($Hora) && !empty($Tee)) {

            //verifico que el socio exista y pertenezca al club
            $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

            if (!empty($id_socio)) {

                //Guardo la reserva
                $sql_inserta_reserva = $dbo->query("Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, UsuarioTrCr, FechaTrCr)
											    Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $Fecha . "', '" . $Hora . "', '" . $Tee . "', 'WebService',NOW())");

                $id_reserva_general = $dbo->lastID();

                $array_Invitados = $Invitados;
                if (count($array_Invitados) > 0):
                    foreach ($array_Invitados as $id_valor => $valor):
                        // Guardo los invitados socios o externos
                        $sql_inserta_invitado = $dbo->query("Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre, Cedula, Correo)
																				Values ('" . $id_reserva_general . "','" . $valor["IDSocioInvitado"] . "', '" . $valor["NombreInvitado"] . "','" . $valor["Cedula"] . "','" . $valor["Correo"] . "')");
                    endforeach;
                endif;

                $array_Campos = $Campos;
                if (count($array_Campos) > 0):
                    foreach ($array_Campos as $id_valor_campo => $valor_campo):
                        // Guardo los campos personalizados
                        $sql_inserta_campo = $dbo->query("Insert Into ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
																				Values ('" . $id_reserva_general . "','" . $valor_campo["IDServicioCampo"] . "', '" . $valor_campo["Valor"] . "')");
                    endforeach;
                endif;

                $respuesta["message"] = "Guardado";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "24. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function set_cambiar_clave($IDClub, $IDSocio, $Clave = "", $SegundaClave = "", $Correo = "")
    {
        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDSocio) && !empty($Clave)) {

            //verifico que el socio exista y pertenezca al club
            $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

            if (!empty($id_socio)) {

                if (!empty($Correo)) {
                    $sql_cambiar_correo = "Update Socio Set CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
                    $dbo->query($sql_cambiar_correo);
                }

                if (!empty($Clave)):
                    $sql_cambiar = "Update Socio Set Clave =  sha1('" . $Clave . "'), CambioClave = 'N' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
                    $dbo->query($sql_cambiar);

                    if ($IDClub == "51") { // Si es Condado lo actualizo por el ws
                        $cambio = SIMWebServiceApp::cambio_clave_condado($IDClub, $IDSocio, $Clave);
                    }

                    if ($IDClub == "38"): // Si es Club Colombia tambien la actualizo por el ws
                        $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' ", "array");
                        $token = SIMWebServiceApp::obtener_token_colombia($datos_socio["Email"], base64_decode($datos_socio["ClaveSistemaExterno"]));
                        if (!empty($token)):
                            $cambio_clave = SIMWebServiceApp::set_cambio_clave_colombia($token, $Clave);
                            if (!empty($Correo)) {
                                $cambio_correo = SIMWebServiceApp::set_email_colombia($token, $Correo);
                            }

                        endif;
                    endif;

                endif;

                if (!empty($SegundaClave)):
                    $sql_cambiar = "Update Socio Set SegundaClave =  sha1('" . $SegundaClave . "'), CambioSegundaClave = 'N',CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
                    $dbo->query($sql_cambiar);
                endif;

                $respuesta["message"] = "clave modificada con exito";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "25. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function set_cambiar_segunda_clave($IDClub, $IDSocio, $Clave, $Correo = "")
    {
        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDSocio) && !empty($Clave)) {

            //verifico que el socio exista y pertenezca al club
            $id_socio = $dbo->getFields("Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'");

            if (!empty($id_socio)) {

                $sql_cambiar = "Update Socio Set SegundaClave =  sha1('" . $Clave . "'), CambioSegundaClave = 'N', CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
                $dbo->query($sql_cambiar);

                $respuesta["message"] = "Segunda clave modificada con exito";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "25. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function set_cambiar_clave_empleado($IDClub, $IDUsuario, $Clave)
    {
        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDUsuario) && !empty($Clave)) {

            //verifico que el socio exista y pertenezca al club
            $id_socio = $dbo->getFields("Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'");

            if (!empty($id_socio)) {

                $sql_cambiar = "Update Usuario Set Password =  sha1('" . $Clave . "') Where IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'";
                $dbo->query($sql_cambiar);

                $respuesta["message"] = "clave modificada con exito";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el usuario no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "25. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function verifica_version_app($IDClub, $AppVersion, $Dispositivo, $TipoApp = "")
    {
        $dbo = &SIMDB::get();
        if ($Dispositivo == "Android"):
            $CampoVersion = "VersionAndroid";
            $CampoEsencial = "EsencialAndroid";
            $CampoMensaje = "VersionMessageAndroid";
            $CampoUrl = "VersionURLAndroid";
        else:
            $CampoVersion = "Version";
            $CampoEsencial = "Esencial";
            $CampoMensaje = "VersionMessage";
            $CampoUrl = "VersionURLIOS";
        endif;

        if ($TipoApp == "Empleado"):
            //Consulto cual debe ser la ultima la version de empleados segun Dispositivo
            $datos_appempleado = $dbo->fetchAll("AppEmpleado", " IDClub = '" . $IDClub . "' ", "array");
            $numero_version = $datos_appempleado[$CampoVersion];
            $esencial_version = $datos_appempleado[$CampoEsencial];
            if ($datos_club[$CampoVersion] != $AppVersion && $datos_club[$CampoEsencial] == "S"):
                $respuesta["message"] = $datos_club[$CampoMensaje] . " " . $datos_club[$CampoUrl];
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                //inserta _log
                $sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('verifica_version_app','" . json_encode($_GET) . "','" . json_encode($respuesta) . "')");
                die(json_encode(array('success' => $respuesta[success], 'message' => $respuesta[message], 'response' => $respuesta[response], 'date' => $nowserver)));
                exit;
            endif;
        else:
            //Consulto cual debe ser la ultima la version funcionando segun Dispositivo
            $datos_club = $dbo->fetchAll("Club", " IDClub = '" . $IDClub . "' ", "array");
            $numero_version = $dbo->getFields("Club", $CampoVersion, "IDClub = '" . $IDClub . "'");
            $esencial_version = $dbo->getFields("Club", $CampoEsencial, "IDClub = '" . $IDClub . "'");

            if ($datos_club[$CampoVersion] != $AppVersion && $datos_club[$CampoEsencial] == "S"):
                $respuesta["message"] = $datos_club[$CampoMensaje] . " " . $datos_club[$CampoUrl];
                $respuesta["success"] = false;
                $respuesta["response"] = null;
                //inserta _log
                $sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('verifica_version_app','" . json_encode($_GET) . "','" . json_encode($respuesta) . "')");
                die(json_encode(array('success' => $respuesta[success], 'message' => $respuesta[message], 'response' => $respuesta[response], 'date' => $nowserver)));
                exit;
            endif;
        endif;
    }

    public function set_token($IDClub, $IDSocio, $Dispositivo, $Token, $TokenIBM = "", $UserIDIBM = "")
    {

        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDSocio) && (!empty($Token) || !empty($TokenIBM))) {

            //verifico que el socio exista y pertenezca al club
            $datos_socio = $dbo->fetchAll("Socio", " IDSocio = '" . $IDSocio . "' and IDCLub = '" . $IDClub . "' ", "array");

            //quito carceter especial token
            $Token = str_replace(">", "", $Token);

            if (!empty($datos_socio["IDSocio"])) {

                if ($datos_socio["FechaPrimerIngreso"] == "0000-00-00 00:00:00"):
                    $actualiza_primer_ingreso = " , FechaPrimerIngreso =  '" . date("Y-m-d H:i:s") . "' ";
                    // al primer ingreso actualizo todas las secciones activas de noticias
                    //SIMUtil::actualiza_secciones_socio($IDClub, $IDSocio);

                endif;

                $sql_seccion_not = $dbo->query("UPDATE Socio Set Dispositivo = '" . $Dispositivo . "', Token = '" . $Token . "', TokenIBM = '" . $TokenIBM . "' " . $actualiza_primer_ingreso . " Where IDSocio = '" . $IDSocio . "'");

                //Guardo Token
                $sql_token_socio = $dbo->query("INSERT IGNORE INTO SocioToken (IDSocio,IDClub,Dispositivo,Token,Fecha) VALUES ('" . $IDSocio . "','" . $IDClub . "','" . $Dispositivo . "','" . $Token . "',NOW()) ");

                $respuesta["message"] = "Guardado";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el socio no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "26. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function set_token_empleado($IDClub, $IDUsuario, $Dispositivo, $Token)
    {
        $dbo = &SIMDB::get();
        if (!empty($IDClub) && !empty($IDUsuario) && !empty($Token)) {

            //verifico que el socio exista y pertenezca al club
            $id_usuario = $dbo->getFields("Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'");

            if (!empty($id_usuario)) {

                $sql_seccion_not = $dbo->query("Update Usuario Set Dispositivo = '" . $Dispositivo . "', Token = '" . $Token . "' Where IDUsuario = '" . $id_usuario . "'");

                $respuesta["message"] = "Guardado";
                $respuesta["success"] = true;
                $respuesta["response"] = null;

            } else {
                $respuesta["message"] = "Error el usuario no existe o no pertenece al club";
                $respuesta["success"] = false;
                $respuesta["response"] = null;
            }

        } else {
            $respuesta["message"] = "26. Atencion faltan parametros";
            $respuesta["success"] = false;
            $respuesta["response"] = null;
        }

        return $respuesta;

    }

    public function valida_cantidad_ingresos($IDClub, $IDSocio)
    {
        $dbo = &SIMDB::get();
        $Mes = date("m");
        $Year = date("Y");
        $sql = "SELECT IDLogAcceso FROM LogAcceso WHERE IDInvitacion = '" . $IDSocio . "' and Tipo = 'Socio' and MONTH(FechaIngreso) ='" . $Mes . "' and YEAR(FechaIngreso)='" . $Year . "'  ";
        $r = $dbo->query($sql);
        $total = $dbo->rows($r);
        return $total;
    }

} //end class
?>
