<?php
class SIMWebServiceQuemado {

	function valida_socio( $email, $clave, $id_club, $AppVersion,$Data="" ) {

		$dbo = & SIMDB::get();

		if($AppVersion>=31 && !empty($Data)){
			$valornonce=substr($Data,0,48);
			$valorencrip=substr($Data,48);
			$param['key']=KEY_API;
			$param['chiper']=$valorencrip;
			$param['nonce']=$valornonce;
			$result_decrypt=SIMUtil::decryptSodium($param);
				if($result_decrypt["decryptedText"]=="nodecrypt"){
					$respuesta[ "message" ] = "ENCRIPT. No";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
				}
				else{
					$result_decrypt["decryptedText"];
					$array_datos=json_decode($result_decrypt["decryptedText"]);
					$email=$array_datos->ax;
					$clave=$array_datos->az;
				}
		}


		if ( !empty( $email ) && !empty( $clave ) ) {
			$foto = "";
			$foto_cod_barras = "";

			// si el club tiene hijos valido usuario/clave dl primero que lo encuentre
			$sql_hijos = " Select IDClub From Club Where IDClubPadre = '" . $id_club . "' ";
			$result_hijos = $dbo->query( $sql_hijos );
			while ( $r_hijos = $dbo->fetchArray( $result_hijos ) ):
				$array_id_hijos[] = $r_hijos[ "IDClub" ];
			endwhile;
			if ( count( $array_id_hijos ) > 0 ):
				$id_club_consulta = implode( ",", $array_id_hijos );
			else :
				$id_club_consulta = $id_club;
			endif;

			$sql_verifica = "SELECT * FROM Socio WHERE ( Email = '" . $email . "' ) Limit 1";

			$qry_verifica = $dbo->query( $sql_verifica );
			if ( $dbo->rows( $qry_verifica ) == 0 ) {

				$respuesta[ "message" ] = "Por favor verifica tu usuario y/o clave";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			} //end if
			else {


				$datos_socio = $dbo->fetchArray( $qry_verifica );



				$flag_canje_cortesia = 0;

					if ( $flag_canje_cortesia == 0 ) {

						if ( !empty( $datos_socio[ "Foto" ] ) ) {
							$foto = SOCIO_ROOT . $datos_socio[ "Foto" ];
						}

						$tipo_codigo_carne = $dbo->getFields( "Club", "TipoCodigoCarne", "IDClub = '" . $id_club . "'" );

						switch ( $tipo_codigo_carne ) {
							case "Barras":
								if ( !empty( $datos_socio[ "CodigoBarras" ] ) ) {
									$foto_cod_barras = SOCIO_ROOT . $datos_socio[ "CodigoBarras" ];
								}
								break;
							case "QR":
								if ( !empty( $datos_socio[ "CodigoQR" ] ) ) {
									$foto_cod_barras = SOCIO_ROOT . "qr/" . $datos_socio[ "CodigoQR" ];
								}
								break;
							default:
								$foto_cod_barras = "";
						}

						//Consulto el nucleo familiar
						if ( !empty( $datos_socio[ "AccionPadre" ] ) ): // Es beneficiario
							$condicion_nucleo = " and (AccionPadre = '" . $datos_socio[ "AccionPadre" ] . "' or Accion = '" . $datos_socio[ "AccionPadre" ] . "')";
						//$tipo_socio = "Beneficiario";
						$tipo_socio = $datos_socio[ "TipoSocio" ];
						else : // es Cabeza familia
							$condicion_nucleo = " and AccionPadre = '" . $datos_socio[ "Accion" ] . "'";
						//$tipo_socio = "Socio";
						$tipo_socio = $datos_socio[ "TipoSocio" ];
						endif;

						if($id_club==50)
								$tipo_socio="Cargo: ";

						$tipo_socio .= " " . $datos_socio[ "Predio" ] . " " . $datos_socio[ "Torre" ] ;


						$response_nucleo = array();
						$sql_nucleo = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and IDSocio <> '" . $datos_socio[ "IDSocio" ] . "' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 ) " . $condicion_nucleo . " Limit 1";
						$qry_nucleo = $dbo->query( $sql_nucleo );

						//Preferencias Contenido
						$response_seccion_noticia = array();
						$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
						while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
							$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
						$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
						$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
						array_push( $response_seccion_noticia, $seccion_noticia );
						/*
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
						*/
						endwhile;

						$response_seccion_noticia2 = array();
						$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion2 Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
						while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
							$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
						$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
						$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
						array_push( $response_seccion_noticia2, $seccion_noticia );
						/*
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
						*/
						endwhile;

						$response_seccion_noticia3 = array();
						$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion3 Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
						while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
							$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
							$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
							$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
							array_push( $response_seccion_noticia3, $seccion_noticia );
						/*
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
						$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
						*/
						endwhile;

						//Preferencias Eventos
						$response_seccion_evento = array();
						$sql_seccioneve_socio = $dbo->query( "Select * From SocioSeccionEvento Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
						while ( $r_seccioneve_socio = $dbo->fetchArray( $sql_seccioneve_socio ) ):
							$seccion_evento[ IDSocio ] = $datos_socio[ "IDSocio" ];
						$seccion_evento[ IDClub ] = $datos_socio[ "IDClub" ];
						$seccion_evento[ IDSeccionEvento ] = $r_seccioneve_socio[ "IDSeccionEvento" ];
						array_push( $response_seccion_evento, $seccion_evento );
						endwhile;


						//Socios Favoritos
						$response_favoritos = array();
						$sql_favorito_socio = $dbo->query( "Select * From SocioFavorito Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
						while ( $r_favorito_socio = $dbo->fetchArray( $sql_favorito_socio ) ):
							$favorito_socio[ IDSocio ] = $r_favorito_socio[ "IDSocio2" ];
						array_push( $response_favoritos, $favorito_socio );
						endwhile;



						$response[ "IDClub" ] = $id_club_consulta;
						$response[ "IDSocio" ] = $datos_socio[ "IDSocio" ];
						$response[ "Foto" ] = $foto;
						$response[ "Socio" ] =  $datos_socio[ "Nombre" ] . " " . $datos_socio[ "Apellido" ] ;
						$response["Nombre"] =  $datos_socio["Nombre"] ." " .$datos_socio["Apellido"];
						$response["Apellido"] =  $datos_socio["Apellido"] ;
						$response["Celular"] =  $datos_socio["Celular"];
						$response["CorreoElectronico"] =  $datos_socio["CorreoElectronico"] ;
						$response["Direccion"] =  $datos_socio["Direccion"] ;
						$response["EstadoCivil"] =  $datos_socio["EstadoCivil"] ;
						$response["NumeroDocumento"] =  $datos_socio["NumeroDocumento"] ;

						if($id_club==46){
							$dato_carne=utf8_encode( $datos_socio["NumeroDocumento"] );
						}
						else{
								$dato_carne= $datos_socio[ "Accion" ] ;
						}

						$response[ "NumeroDerecho" ] = $dato_carne;
						$response[ "CodigoBarras" ] = $foto_cod_barras;
						$response[ "NucleoFamiliar" ] = $response_nucleo;
						$response[ "PreferenciasContenido" ] = $response_seccion_noticia;
						$response[ "PreferenciasContenido2" ] = $response_seccion_noticia2;
						$response[ "PreferenciasEvento" ] = $response_seccion_evento;
						$response[ "SocioFavorito" ] = $response_favoritos;
						$response[ "Dispositivo" ] = $datos_socio[ "Dispositivo" ];
						$response[ "Token" ] = $datos_socio[ "Token" ];
						$response[ "TipoSocio" ] = $tipo_socio;
						$response[ "TipoUsuario" ] = "Socio";
						$response[ "LabelEstadoUsuario" ] = $datos_socio[ "LabelEstadoUsuario" ];

						//Campos carne
						$array_carne_club=array();
						$reponse_datos_carne=array();
						$campo_mostrar_carne=array();
						$CamposCarne=$dbo->getFields( "Club", "CampoCarne", "IDClub = '" . $id_club . "'" );
						if(!empty($CamposCarne)){
							$array_carne_club=explode("|||",$CamposCarne);
							foreach($array_carne_club as $DetalleCampoCarne){
								$EtiquetaCarne=$array_campo_carne[$DetalleCampoCarne]["Nombre"];
								$DatoCarne=$datos_socio[  $array_campo_carne[$DetalleCampoCarne]["CampoTabla"] ];
								$campo_mostrar_carne[]=$EtiquetaCarne . " ".$DatoCarne;
							}
						}
						$response[ "ValoresCarnet" ] = $campo_mostrar_carne;


						$response[ "CambioClave" ] = $datos_socio[ "CambioClave" ];
						$response[ "CambioSegundaClave" ] = $datos_socio[ "CambioSegundaClave" ];

						//Datos mostrar al editar perfil
						$response_campo_editar = array();



						$qry_campo_editar = $dbo->query( $sql_campo_editar );
						$response[ "CampoEditar" ] = $response_campo_editar;

						if($AppVersion>=31){
							$respuesta=json_encode($response);
							$param['key']=KEY_API;
							$param['nonce']=sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
							$param['msg']=$respuesta;
							$result=SIMUtil::cryptSodium($param);

							//$response_encrip=array();
							//$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
							$respuesta=array();
							$respuesta[ "message" ] = "ok";
							$respuesta[ "success" ] = true;
							$respuesta[ "response" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);

						}
						else{
							$respuesta[ "message" ] = "ok";
							$respuesta[ "success" ] = true;
							$respuesta[ "response" ] = $response;
						}

					} else {
						$respuesta[ "message" ] = "Lo sentimos, las fechas de la cortesia o canje ya vencieron";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}


			}
		} else {
			$respuesta[ "message" ] = "1. Atencion faltan parametros.";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		return $respuesta;

	} //end function


	function get_noticacion_local( $IDClub, $IDSocio,$IDUsuario ) {
		$dbo = & SIMDB::get();
	//Notificaciones Locales
	$condicion_notif_local = SIMWebserviceQuemado::verificar_notificacion_local($IDSocio,$IDUsuario,$IDClub);
	$response_notif_local = array();
	$sql_notif = "SELECT *
								FROM NotificacionLocal
								WHERE IDClub = '" . $IDClub . "' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() " . $condicion_notif_local;
	$qry_notif = $dbo->query( $sql_notif );
	if ( $dbo->rows( $qry_notif ) > 0 ) {
		while ( $r_notif = $dbo->fetchArray( $qry_notif ) ) {
			$datos_notif[ "IDNotificacionLocal" ] = $r_notif[ "IDNotificacionLocal" ];
			$datos_notif[ "IDModulo" ] = $r_notif[ "IDModulo" ];
			$datos_notif[ "IDDetalle" ] = $r_notif[ "IDDetalle" ];
			$datos_notif[ "Titulo" ] = $r_notif[ "Titulo" ];
			$datos_notif[ "Mensaje" ] = $r_notif[ "Mensaje" ];
			//$datos_notif[ "FechaInicio" ] = $r_notif[ "FechaInicio" ];
			$datos_notif[ "FechaInicio" ] = date("Y-m-d");
			$datos_notif[ "FechaFin" ] = $r_notif[ "FechaFin" ];
			$datos_notif[ "HoraInicio" ] = $r_notif[ "HoraInicio" ];
			$datos_notif[ "HoraFin" ] = $r_notif[ "HoraFin" ];
			$datos_notif[ "Periodicidad" ] = $r_notif[ "Periodicidad" ];


			$response_dias = array();
			$datos_dia = array();
			$array_dias=array();
			$array_dias=explode("|",$r_notif["Dias"]);
			foreach($array_dias as $dia){

				if(!empty($dia)){
					switch ($dia) {
						case '0':
							$datos_dia["Dia"]="D";
						break;
						case '1':
							$datos_dia["Dia"]="L";
						break;
						case '2':
							$datos_dia["Dia"]="M";
						break;
						case '3':
							$datos_dia["Dia"]="X";
						break;
						case '4':
							$datos_dia["Dia"]="J";
						break;
						case '5':
							$datos_dia["Dia"]="V";
						break;
						case '6':
							$datos_dia["Dia"]="S";
						break;
						default:
								$datos_dia["Dia"]="D";
					}
						array_push( $response_dias, $datos_dia );
				}
			}
		;

			$datos_notif[ "Dias" ] = $response_dias;
			array_push( $response_notif_local, $datos_notif );
		} //ednw while
	}


	$respuesta[ "message" ] = "Encontrado";
	$respuesta[ "success" ] = true;
	$respuesta[ "response" ] = $response_notif_local;

	return $respuesta;

}


function get_perfil( $IDClub, $IDSocio,$IDUsuario ) {
	$dbo = & SIMDB::get();

	$response = array();
	$sql_campo_editar = "SELECT CES.* FROM CampoEditarSocio CES
												WHERE CES.IDClub = '" . $IDClub . "' ORDER BY CES.Orden";

	$qry_campo_editar = $dbo->query( $sql_campo_editar );
	if ( $dbo->rows( $qry_campo_editar ) > 0 ) {
		while ( $r_campo_editar = $dbo->fetchArray( $qry_campo_editar ) ) {
			$array_datos_perfil[ "IDCampoEditarSocio" ] = $r_campo_editar[ "IDCampoEditarSocio" ];
			$array_datos_perfil[ "Nombre" ] = $r_campo_editar[ "Nombre" ];
			$array_datos_perfil[ "Tipo" ] = $r_campo_editar[ "Tipo" ];
			$array_datos_perfil[ "Valores" ] = $r_campo_editar[ "Valores" ];
			$array_datos_perfil[ "PermiteEditar" ] = $r_campo_editar[ "PermiteEditar" ];
			//Consulto el valor de la actualización
			$ValorDato = $dbo->getFields( "SocioCampoEditarSocio" , "Valor" , "IDCampoEditarSocio = '".$r_campo_editar[ "IDCampoEditarSocio" ]."' and IDSocio = '".$IDSocio."'" );
			//$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
			$array_datos_perfil[ "ValorActual" ] = $ValorDato;
			$array_datos_perfil[ "Obligatorio" ] = $r_campo_editar[ "Obligatorio" ];
			array_push( $response, $array_datos_perfil );

		} //ednw while
	}
	$respuesta[ "message" ] = "ok";
	$respuesta[ "success" ] = true;
	$respuesta[ "response" ] = $response;


return $respuesta;

}


	function valida_socio_accion( $IDClub, $Accion ) {
		$dbo = & SIMDB::get();
		$datos_socio = $dbo->fetchAll( "Socio", " Accion = '" . $Accion . "'  LIMIT 1", "array" );
		$datos_socio = array_map( "utf8_encode", $datos_socio );
		if ( !empty( $datos_socio[ "IDSocio" ] ) ):
			$respuesta[ "message" ] = "ok";
		$respuesta[ "success" ] = true;
		$respuesta[ "response" ] = $datos_socio;
		else :
			$respuesta[ "message" ] = "Socio no encontrado";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		endif;

		return $respuesta;

	}


	function validar_canje_activo( $IDSocio ) {
		$dbo = & SIMDB::get();
		$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
		$flag_canje_cortesia = 0;
		//Si el socio es por canje o cortesia valido este activo segun las fechas

		switch ( $datos_socio[ "TipoSocio" ] ):
		case "Canje":
			$fecha_hoy = strtotime( date( "Y-m-d" ) );
			$FechaInicioCanje = strtotime( $datos_socio[ "FechaInicioCanje" ] );
			$FechaFinCanje = strtotime( $datos_socio[ "FechaFinCanje" ] );
			//echo $FechaInicioCanje.">=".$fecha_hoy ."&&". $fecha_hoy."<=".$FechaFinCanje;
			if ( $fecha_hoy >= $FechaInicioCanje && $fecha_hoy <= $FechaFinCanje ):
				$flag_canje_cortesia = 0;
			else :
				$flag_canje_cortesia = 1;
			endif;
			break;
		case "Cortesia":
			$fecha_hoy = strtotime( date( "Y-m-d" ) );
			$FechaInicioCortesia = strtotime( $datos_socio[ "FechaInicioCortesia" ] );
			$FechaFinCortesia = strtotime( $datos_socio[ "FechaFinCortesia" ] );
			if ( $fecha_hoy >= $FechaInicioCortesia && $fecha_hoy <= $FechaFinCortesia ):
				$flag_canje_cortesia = 0;
			else :
				$flag_canje_cortesia = 1;
			endif;
			break;
		case "Invitado":
			$fecha_hoy = strtotime( date( "Y-m-d" ) );
			$FechaInicioInvitado = strtotime( $datos_socio[ "FechaInicioInvitado" ] );
			$FechaFinInvitado = strtotime( $datos_socio[ "FechaFinInvitado" ] );
			if ( $fecha_hoy >= $FechaInicioInvitado && $fecha_hoy <= $FechaFinInvitado ):
				$flag_canje_cortesia = 0;
			else :
				$flag_canje_cortesia = 1;
			endif;
			break;
		default:
			$flag_canje_cortesia = 0;
			endswitch;

			return $flag_canje_cortesia;

	}


	function get_banner_app( $id_club ) {
		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY RAND()";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$banner[ "IDBannerApp" ] = $r[ "IDBannerApp" ];
				$banner[ "Nombre" ] = $r[ "Nombre" ];
				if ( !empty( $r[ "Foto1" ] ) ):
					$foto = BANNERAPP_ROOT . $r[ "Foto1" ];
				else :
					$foto = "";
				endif;
				$banner[ "Foto1" ] = $foto;
				array_push( $response, $banner );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado splash";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_banner_app_empleado( $id_club ) {
		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY RAND()";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$banner[ "IDBannerApp" ] = $r[ "IDBannerApp" ];
				$banner[ "Nombre" ] = $r[ "Nombre" ];
				if ( !empty( $r[ "Foto1" ] ) ):
					$foto = BANNERAPP_ROOT . $r[ "Foto1" ];
				else :
					$foto = "";
				endif;
				$banner[ "Foto1" ] = $foto;
				array_push( $response, $banner );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado splash";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function



	function verificar_contenido_modulo( $IDModulo, $id_club ) {
		$dbo = & SIMDB::get();
		$flag_mostrar = 0;
		//Para Noticias, Eventos y galeria se verifica si hay contenido para mostrarlo en el menu los id son 3,4,5
		switch ( $IDModulo ):
		case "3": // Noticias
			// verifico que la seccion tenga por lo menos una noticia publicada
			$id_noticia = $dbo->getFields( "Noticia", "IDNoticia", "IDClub = '" . $id_club . "' and Publicar = 'S' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T')" );
			if ( empty( $id_noticia ) ):
				$flag_mostrar = 1;
			endif;
			break;
		case "4": // Eventos
			// verifico que la seccion tenga por lo menos una noticia publicada
			$id_evento = $dbo->getFields( "Evento", "IDEvento", "IDClub = '" . $id_club . "' and Publicar = 'S' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T')" );
			if ( empty( $id_evento ) ):
				$flag_mostrar = 1;
			endif;
			break;
		case "5": // Galerias
			// verifico que la seccion tenga por lo menos una galeria publicada
			$id_galeria = $dbo->getFields( "Galeria", "IDGaleria", "IDClub = '" . $id_club . "' and Publicar = 'S'" );
			if ( empty( $id_galeria ) ):
				$flag_mostrar = 1;
			endif;
			break;
		default:
			$flag_mostrar = 0;
			endswitch;

			return $flag_mostrar;
	}



	function get_club( $id_club, $IDSocio = "" ) {

	  $dbo = & SIMDB::get();

	  $datos_socio=$dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
	  $PermiteReservar = $datos_socio["PermiteReservar"];

	  $response = array();
	  $sql = "SELECT * FROM Club WHERE IDClub = '" . $id_club . "'";
	  $qry = $dbo->query( $sql );
	  if ( $dbo->rows( $qry ) > 0 ) {
	    $message = $dbo->rows( $qry ) . " Encontrados";
	    while ( $r = $dbo->fetchArray( $qry ) ) {
	      if ( !empty( $r[ "FotoLogoApp" ] ) ) {
	        $foto_logo = CLUB_ROOT . $r[ "FotoLogoApp" ];
	      }
	      if ( !empty( $r[ "FotoDiseno1" ] ) ) {
	        $foto1 = CLUB_ROOT . $r[ "FotoDiseno1" ];
	      }
	      if ( !empty( $r[ "FotoDiseno2" ] ) ) {
	        $foto2 = CLUB_ROOT . $r[ "FotoDiseno2" ];
	      }

	      //Banners
	      $response_banner = array();
	      $sql_banner = "SELECT * FROM BannerApp WHERE (DirigidoA <> 'E' or DirigidoA='T')  and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY IDBannerApp";
	      $qry_banner = $dbo->query( $sql_banner );
	      if ( $dbo->rows( $qry_banner ) > 0 ) {
	        while ( $r_banner = $dbo->fetchArray( $qry_banner ) ) {
	          $banner[ "IDClub" ] = $id_club;
	          $banner[ "IDBannerApp" ] = $r_banner[ "IDBannerApp" ];
	          if(!empty($r_banner[ "UrlVideo" ])){
	            $banner[ "Tipo" ] = "Video";
	            $banner[ "UrlVideo" ] = $r_banner[ "UrlVideo" ];
	          }
	          else{
	            $banner[ "Tipo" ] = "Imagen";
	            if ( !empty( $r_banner[ "Foto1" ] ) ):
	              $foto = BANNERAPP_ROOT . $r_banner[ "Foto1" ];
	            else :
	              $foto = "";
	            endif;
	            $banner[ "Foto" ] = $foto;
	          }


	          array_push( $response_banner, $banner );

	        } //ednw hile
	      }


	      // Consulto los tipos de servicio Iniciales
	      $sql_servicio_inicial="SELECT * FROM ServicioInicial Where Publicar='S'";
	      $qry_servicio_inicial = $dbo->query( $sql_servicio_inicial );
	      while ( $r_servicio_inicial = $dbo->fetchArray( $qry_servicio_inicial ) ) {
	          $array_servicio_inicial[$r_servicio_inicial["IDServicioInicial"]]=$r_servicio_inicial["Nombre"];
	      }


	      //Servicios Reservas
	      $response_servicio = array();
	      $sql_servicio = "SELECT * FROM ServicioClub WHERE IDClub = '" . $id_club . "' and Activo ='S' ORDER BY IDServicioMaestro";
	      //$sql_servicio = "SELECT * FROM Servicio WHERE IDClub = '".$id_club."' ORDER BY IDServicio";
	      $qry_servicio = $dbo->query( $sql_servicio );
	      if ( $dbo->rows( $qry_servicio ) > 0 ) {
	        while ( $r_servicio = $dbo->fetchArray( $qry_servicio ) ) {


	          $datos_servicio = $dbo->fetchAll( "Servicio", " IDServicioMaestro = '" . $r_servicio[ "IDServicioMaestro" ] . "' and IDClub='" . $id_club . "' ", "array" );

	          $servicio[ "IDClub" ] = $id_club;
	          $servicio[ "IDServicio" ] = $datos_servicio[ "IDServicio" ];
	          $servicio[ "NombreServicio" ] = $datos_servicio[ "Nombre" ];
	          if ( !empty( $datos_servicio[ "Icono" ] ) ):
	            $foto = SERVICIO_ROOT . $datos_servicio[ "Icono" ];
	          else :
	            $foto = "";
	          endif;
	          $servicio[ "Icono" ] = $foto;
	          $IDInicial=$dbo->getFields( "ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $r_servicio[ "IDServicioMaestro" ] . "'" );
	          //$servicio[ "ServicioInicial" ] = $dbo->getFields( "ServicioInicial", "Nombre", "IDServicioInicial = '" . $IDInicial . "'" );
	          $servicio[ "ServicioInicial" ] = $array_servicio_inicial[$IDInicial];

	          array_push( $response_servicio, $servicio );

	        } //ednw while
	      }


	      //Reviso si el socio tiene en numero de invitaciones mayor a cero para hacer invitaciones para mostrar o no el modulo
	      if ( !empty( $IDSocio ) ):
	        $NumeroInvitados = $datos_socio["NumeroInvitados"];
	        $NumeroAccesos = $datos_socio["NumeroAccesos"];
	      if ( ( int )$NumeroInvitados <= 0 && ( int )$NumeroAccesos <= 0 ):
	        $condicion_modulo = " and IDModulo not in ( 1, 25, 28, 26 ) ";
	      endif;

	      endif;

	      //Modulos Sistema Menu Central

	      $CerrarSesion = $datos_socio["SolicitarCierreSesion"];
	      if($CerrarSesion=="S"){
	        $condicion_modulo =" and IDModulo = 14 "; //cerrar sesion
	      }



	      //reviso si tienen modulo personalizado por perfil de socio
	      $TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $IDSocio . "'" );
	      $sql_modulo_perfil  = "Select * From TipoSocioModulo Where IDClub = '".$id_club."' and TipoSocio = '".$TipoSocio."' Limit 1";
	      $r_modulo_perfil = $dbo->query($sql_modulo_perfil);
	      if($dbo->rows($r_modulo_perfil)>0 ){
	          $row_modulo_perfil=$dbo->fetchArray($r_modulo_perfil);
	          if(!empty($row_modulo_perfil["IDModulo"])){
	              $array_id_modulo=explode("|",$row_modulo_perfil["IDModulo"]);
	              if(count($array_id_modulo)>0){
	                  $id_modulo_ver=implode(",",$array_id_modulo);
	                  $condicion_modulo .= " and IDModulo in (".$id_modulo_ver.")";
	              }
	          }
	      }



	      $response_modulo = array();
	     	$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Central%' " . $condicion_modulo . " ORDER BY Orden";
	      $qry_modulo = $dbo->query( $sql_modulo );
	      if ( $dbo->rows( $qry_modulo ) > 0 ) {

	        while ( $r_modulo = $dbo->fetchArray( $qry_modulo ) ) {
	          // Verificar si el modulo tiene contenido para mostrar
	          $flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo( $r_modulo[ "IDModulo" ], $id_club );


	          //Para mostrar el modulo solo a unos socios
	          if ( $r_modulo[ "IDModulo" ] == "2" && $PermiteReservar == "N" && ( $id_club <> 20 && $id_club <> 48) ):
	            $flag_mostrar = 1;
	          endif;


						if($r_modulo[ "IDModulo" ] == "11" || $r_modulo[ "IDModulo" ] == "2" || $r_modulo[ "IDModulo" ] == "3" || $r_modulo[ "IDModulo" ] == "82" || $r_modulo[ "IDModulo" ] == "13" ||
						$r_modulo[ "IDModulo" ] == "12" || $r_modulo[ "IDModulo" ] == "14" || $r_modulo[ "IDModulo" ] == "9" || $r_modulo[ "IDModulo" ] == "8" ||
						$r_modulo[ "IDModulo" ] == "10" || $r_modulo[ "IDModulo" ] == "4" || $r_modulo[ "IDModulo" ] == "5" || $r_modulo[ "IDModulo" ] == "3" ||
						$r_modulo[ "IDModulo" ] == "15"  )
							$flag_mostrar=0;
						else
							$flag_mostrar=1;


	          //$flag_mostrar=0;
	          if ( $flag_mostrar == 0 ):


	            $modulo[ "IDClub" ] = $id_club;
	          $modulo[ "IDModulo" ] = $r_modulo[ "IDModulo" ];
	          if ( !empty( $r_modulo[ "Titulo" ] ) )
	            $modulo[ "NombreModulo" ] = trim($r_modulo[ "Titulo" ]);
	          else
	            $modulo[ "NombreModulo" ] =  $dbo->getFields( "Modulo", "Nombre", "IDModulo = '" . $r_modulo[ "IDModulo" ] . "'" ) ;


	          $modulo[ "Tipo" ] = $dbo->getFields( "Modulo", "Tipo", "IDModulo = '" . $r_modulo[ "IDModulo" ] . "'" );

	          $modulo[ "Orden" ] = $r_modulo[ "Orden" ];
	          $icono_modulo = $r_modulo[ "Icono" ];
	          if ( !empty( $r_modulo[ "Icono" ] ) ):
	            $foto = MODULO_ROOT . $r_modulo[ "Icono" ];
	          else :
	            $foto = "";
	          endif;
	          $modulo[ "Icono" ] = $foto;

	          //Consulto si tiene submodulos
	          $sql_sub = "Select * From SubModulo Where IDModulo = '" . $r_modulo[ "IDModulo" ] . "' and IDClub = '" . $id_club . "'";
	          $result_sub = $dbo->query( $sql_sub );
	          if ( $dbo->rows( $result_sub ) > 0 ):
	            $modulo[ "SubModulos" ] = "S";
	          else :
	            $modulo[ "SubModulos" ] = "";
	          endif;
	          //Fin Submodulos



	          array_push( $response_modulo, $modulo );
	          endif;

	        } //ednw while
	      }




	      //Modulos Sistema Menu Lateral

	      unset( $modulo );
	      $response_modulo_lateral = array();
	      $sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '" . $id_club . "' and Activo = 'S' and Ubicacion like '%Lateral%' " . $condicion_modulo . " ORDER BY Orden";
	      $qry_modulo = $dbo->query( $sql_modulo );
	      if ( $dbo->rows( $qry_modulo ) > 0 ) {

	        while ( $r_modulo = $dbo->fetchArray( $qry_modulo ) ) {
	          // Verificar si el modulo tiene contenido para mostrar
	          $flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo( $r_modulo[ "IDModulo" ], $id_club );


						if($r_modulo[ "IDModulo" ] == "11" || $r_modulo[ "IDModulo" ] == "3" || $r_modulo[ "IDModulo" ] == "82" || $r_modulo[ "IDModulo" ] == "13" ||
						$r_modulo[ "IDModulo" ] == "12" || $r_modulo[ "IDModulo" ] == "14" || $r_modulo[ "IDModulo" ] == "9" || $r_modulo[ "IDModulo" ] == "8" ||
						$r_modulo[ "IDModulo" ] == "10" || $r_modulo[ "IDModulo" ] == "4" || $r_modulo[ "IDModulo" ] == "5" || $r_modulo[ "IDModulo" ] == "3" ||
						$r_modulo[ "IDModulo" ] == "15"  )
							$flag_mostrar=0;
						else
							$flag_mostrar=1;


	          //$flag_mostrar=0;
	          if ( $flag_mostrar == 0 ):
	            $modulo[ "IDClub" ] = $id_club;
	          $modulo[ "IDModulo" ] = $r_modulo[ "IDModulo" ];
	          //$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
	          if ( !empty( $r_modulo[ "Titulo" ] ) )
	            $modulo[ "NombreModulo" ] = trim($r_modulo[ "TituloLateral" ]);
	          else
	            $modulo[ "NombreModulo" ] =  $dbo->getFields( "Modulo", "Nombre", "IDModulo = '" . $r_modulo[ "IDModulo" ] . "'" ) ;

	          $modulo[ "Orden" ] = $r_modulo[ "Orden" ];
	          $modulo[ "Tipo" ] = $dbo->getFields( "Modulo", "Tipo", "IDModulo = '" . $r_modulo[ "IDModulo" ] . "'" );

	          $icono_modulo_lateral = $r_modulo[ "IconoLateral" ];
	          if ( !empty( $r_modulo[ "IconoLateral" ] ) ):
	            $foto = MODULO_ROOT . $r_modulo[ "IconoLateral" ];
	          else :
	            if ( !empty( $r_modulo[ "Icono" ] ) ):
	              $foto = MODULO_ROOT . $r_modulo[ "Icono" ];
	            else :
	              $foto = "";
	            endif;
	          endif;
	          $modulo[ "Icono" ] = $foto;

	          //Consulto si tiene submodulos
	          $sql_sub = "Select * From SubModulo Where IDModulo = '" . $r_modulo[ "IDModulo" ] . "' and IDClub = '" . $id_club . "'";
	          $result_sub = $dbo->query( $sql_sub );
	          if ( $dbo->rows( $result_sub ) > 0 ):
	            $modulo[ "SubModulos" ] = "S";
	          else :
	            $modulo[ "SubModulos" ] = "N";
	          endif;
	          //Fin Submodulos
	          array_push( $response_modulo_lateral, $modulo );
	          endif;

	        } //ednw while
	      }


	      // Georeferenciacion
	      //Tomo los valores de accesos que debe apolicar para invitados
	      $IDParametroAcceso = $dbo->getFields( "ParametroAcceso", "IDParametroAcceso", "IDClub = '" . $id_club . "'" );
	      $datos_ParametroAcceso = $dbo->fetchAll( "ParametroAcceso", " IDParametroAcceso = '" . $IDParametroAcceso . "' ", "array" );
	      $response_georef = array();
	      $georef[ "Georeferenciacion" ] = $datos_ParametroAcceso[ "Georeferenciacion" ];
	      $georef[ "Latitud" ] = $datos_ParametroAcceso[ "Latitud" ];
	      $georef[ "Longitud" ] = $datos_ParametroAcceso[ "Longitud" ];
	      $georef[ "Rango" ] = $datos_ParametroAcceso[ "Rango" ];
	      $georef[ "MensajeFueraRango" ] = $datos_ParametroAcceso[ "MensajeFueraRango" ];
	      $georef[ "Georeferenciacion" ] = $datos_ParametroAcceso[ "Georeferenciacion" ];
	      //array_push($response_georef, $georef);


	      $datos_club[ "IDClub" ] = $r[ "IDClub" ];
	      $datos_club[ "Nombre" ] = $r[ "Nombre" ];
	      $datos_club[ "Direccion" ] = $r[ "Direccion" ];
	      $datos_club[ "Telefono" ] = $r[ "Telefono" ];
	      $datos_club[ "Email" ] = $r[ "Email" ];
	      $datos_club[ "IDDiseno" ] = $r[ "IDDiseno" ];
	      $datos_club[ "Foto" ] = $foto_logo;
	      $datos_club[ "Foto1" ] = $foto1;
	      $datos_club[ "Foto2" ] = $foto2;
	      $datos_club[ "Color1" ] = $r[ "Color1" ];
	      $datos_club[ "Color2" ] = $r[ "Color2" ];
	      $datos_club[ "ColorFondoCarne" ] = $r[ "ColorFondoCarne" ];
	      $datos_club[ "Banner" ] = $response_banner;
	      $datos_club[ "Terminos" ] = $r[ "Terminos" ];
	      $datos_club[ "SolicitaCambioCorreo" ] = $r[ "SolicitaCambioCorreo" ];
	      $datos_club[ "IDSocio" ] = $IDSocio;
	      $datos_club[ "PermiteReservar" ] = $PermiteReservar;


	      //datos IOS Version
	      $datos_club[ "iosVersion" ] = $r[ "Version" ];
	      $datos_club[ "iosEsencial" ] = $r[ "Esencial" ];
	      $datos_club[ "iosversionMessage" ] = $r[ "VersionMessage" ];
	      $datos_club[ "versionURLiOS" ] = $r[ "VersionURLIOS" ];

	      //datos Android Version
	      $datos_club[ "androidVersion" ] = $r[ "VersionAndroid" ];
	      $datos_club[ "androidEsencial" ] = $r[ "EsencialAndroid" ];
	      $datos_club[ "androidversionMessage" ] = $r[ "VersionMessageAndroid" ];
	      $datos_club[ "versionURLAndroid" ] = $r[ "VersionURLAndroid" ];





	      /*
	      $datos_club["Version"] = $r["Version"];
	      $datos_club["Esencial"] = $r["Esencial"];
	      $datos_club["versionMessage"] = $r["VersionMessage"];
	      $datos_club["versionURLiOS"] = $r["VersionURLIOS"];
	      $datos_club["versionURLAndroid"] = $r["VersionURLAndroid"];
	      */

	      $datos_club[ "ServiciosReserva" ] = $response_servicio;
	      $datos_club[ "Modulos" ] = $response_modulo;
	      $datos_club[ "ModulosLateral" ] = $response_modulo_lateral;
	      $datos_club[ "Georeferenciacion" ] = $georef;

	      //Si es club es numero derecho si es Residencial o colegio Numero Doc
	      if ( !empty( $r[ "LabelIdentificadorUsuario" ] ) ):
	        $IdentificadorUsuario = $r[ "LabelIdentificadorUsuario" ];
	      else :
	        $IdentificadorUsuario = "Numero de derecho";
	      endif;
	      $datos_club[ "IdentificadorUsuario" ] = $IdentificadorUsuario . " ";

	      $datos_club[ "LabelUsuario" ] = $r[ "LabelUsuario" ];
	      $datos_club[ "LabelClave" ] = $r[ "LabelClave" ];
	      $datos_club[ "LabelDigiteUsuario" ] = $r[ "LabelDigiteUsuario" ];
	      $datos_club[ "LabelDigiteClave" ] = $r[ "LabelDigiteClave" ];
	      $datos_club[ "LabelOlvidoUsuario" ] = $r[ "LabelOlvidoUsuario" ];
	      $datos_club[ "LabelFotoError" ] = $r[ "LabelFotoError" ];
	      $datos_club[ "LabelCodigoHandicap" ] = $r[ "LabelCodigoHandicap" ];
	      $datos_club[ "LabelNombreHandicap" ] = $r[ "LabelNombreHandicap" ];
	      $datos_club[ "AyudaHandicap" ] = $r[ "AyudaHandicap" ];
	      $datos_club[ "InstruccionQr" ] = $r[ "InstruccionQr" ];
	      $datos_club[ "PorcentajeQrAndroid" ] = $r[ "PorcentajeQrAndroid" ];
	      $datos_club[ "PorcentajeQrIOS" ] = $r[ "PorcentajeQrIOS" ];
	      $datos_club[ "MensajeListaEsperaReservas" ] = $r[ "MensajeListaEsperaReservas" ];
	      $datos_club[ "MensajeListaEsperaHotel" ] = $r[ "MensajeListaEsperaHotel" ];
	      $datos_club[ "MensajeAceptacionListaEsperaReservas" ] = $r[ "MensajeAceptacionListaEsperaReservas" ];
	      $datos_club[ "MensajeAceptacionListaEsperaHotel" ] = $r[ "MensajeAceptacionListaEsperaHotel" ];
	      $datos_club[ "PermiteListaEsperaHotel" ] = $r[ "PermiteListaEsperaHotel" ];
	      $datos_club[ "PermiteSMS" ] = $r[ "PermiteSMS" ];
	      $datos_club[ "PermiteOtroValorHotel" ] = $r[ "PermiteOtroValorHotel" ];
	      $datos_club[ "PermiteMisEventos" ] = $r[ "PermiteMisEventos" ];
	      $datos_club[ "CampoObservacionContratista" ] = $r[ "CampoObservacionContratista" ];
	      $datos_club[ "ColorFondoEvento" ] = $r[ "ColorFondoEvento" ];
	      $datos_club[ "EventoLista" ] = $r[ "EventoLista" ];
	      $datos_club[ "BuscadorFechaEvento" ] = $r[ "BuscadorFechaEvento" ];
	      $datos_club[ "LabelTerminos" ] = $r[ "LabelTerminos" ];
	      $datos_club[ "TipoTerminos" ] = $r[ "TipoTerminos" ];
	      $datos_club[ "ArchivoTerminos" ] = CLUB_ROOT . $r[ "ArchivoTerminos" ];
	      $datos_club[ "LabelInvitacion" ] = utf8_encode($r[ "LabelInvitacion" ]);
	      $datos_club[ "CheckSeguridadSocial" ] = $r[ "CheckSeguridadSocial" ];
	      $datos_club[ "LabelSeguridadSocial" ] = $r[ "LabelSeguridadSocial" ];
	      $datos_club[ "Presalida" ] = $r[ "Presalida" ];
	      $datos_club[ "TiempoSplash" ] = $r[ "TiempoSplash" ];
	      $datos_club[ "TipoCeldaEvento" ] = $r[ "TipoCeldaEvento" ];
	      $datos_club[ "TipoFiltroEvento" ] = $r[ "TipoFiltroEvento" ];
	      $datos_club[ "LabelCambioSegundaClave" ] = $r[ "LabelCambioSegundaClave" ];
	      $datos_club[ "LabelPlaca" ] = (empty($r[ "LabelPlaca" ])) ? 'Placa' : $r[ "LabelPlaca" ];
	      $datos_club[ "LabelPresalida" ] = (empty($r[ "LabelPresalida" ])) ? 'Numero Documento' : $r[ "LabelPresalida" ];
	      $datos_club[ "LabelFelicitacion" ] = utf8_encode($r[ "LabelFelicitacion" ]);
	      $datos_club[ "LabelCalificacion" ] = $r[ "LabelCalificacion" ];
	      $datos_club[ "LabelComentarioFelicitacion" ] = $r[ "LabelComentarioFelicitacion" ];
	      $datos_club[ "ObligatorioComentarioCalificar" ] = $r[ "ObligatorioComentarioCalificar" ];
	      $datos_club[ "ObligatorioComentarioCalificar" ] = $r[ "ObligatorioComentarioCalificar" ];
	      $datos_club[ "LabelBotonEventos" ] = $r[ "LabelBotonEventos" ];
	      $datos_club[ "LabelVerMisReservas" ] = $r[ "LabelVerMisReservas" ];
	      $datos_club[ "LabelAcercaDe" ] = $r[ "LabelAcercaDe" ];
	      $datos_club[ "SolicitaEditarPerfil" ] = $datos_socio["SolicitaEditarPerfil"];
	      $datos_club[ "FechaInicioEditarPerfil" ] = $r[ "FechaInicioEditarPerfil" ];
	      $datos_club[ "SolicitaEditarPefilLabel" ] = $r[ "SolicitaEditarPefilLabel" ];
				$datos_club[ "OcultarOlvideMiUsuario" ] = $r[ "OcultarOlvideMiUsuario" ];




	      $SegundaClave = $dbo->getFields( "Socio", "SegundaClave", "IDSocio = '" . $IDSocio . "'" );
	      if(empty($SegundaClave) && $r[ "ManejoSegundaClave" ]=="S")
	        $crearsegundaclave="S";
	      else
	        $crearsegundaclave="N";

	      $datos_club[ "CrearSegundaClave" ] = $crearsegundaclave;

	      $datos_club[ "IDClubPadre" ] = $r[ "IDClubPadre" ];


	      //Servicios Reservas
	      $response_club_hijo = array();
	      $sql_club_hijo = "SELECT * FROM Club WHERE IDClubPadre = '" . $id_club . "' ORDER BY Nombre";
	      $qry_club_hijo = $dbo->query( $sql_club_hijo );
	      if ( $dbo->rows( $qry_club_hijo ) > 0 ) {
	        while ( $r_club_hijo = $dbo->fetchArray( $qry_club_hijo ) ) {
	          $club_hijo[ "IDClub" ] = $r_club_hijo[ "IDClub" ];
	          $club_hijo[ "Nombre" ] = $r_club_hijo[ "Nombre" ];

	          array_push( $response_club_hijo, $club_hijo );

	        } //ednw while
	      }
	      $datos_club[ "IDClubHijos" ] = $response_club_hijo;

	      $datos_club[ "Encuesta" ] = $response_encuesta;
	      $datos_club[ "LabelEncuesta" ] = $r[ "LabelEncuesta" ];


	      //FIN Encuestas al abrir app
	      $datos_club[ "EncuestaCalificada" ] = $response_encuesta;
	      $datos_club[ "LabelEncuestaCalificada" ] = $r[ "LabelEncuesta2" ];

				$datos_club[ "Diagnostico" ] = $response_diagnostico;
	      $datos_club[ "LabelDiagnostico" ] = $r[ "LabelDiagnostico" ];

	      $datos_club[ "Votacion" ] = $response_votacion;
	      $datos_club[ "LabelVotacion" ] = $r[ "LabelVotacion" ];

	      $datos_club[ "Movilidad" ] = $response_diagnostico;
	      $datos_club[ "LabelMovilidad" ] = $r[ "LabelMovilidad" ];


	      //Tipo de header de app
	      if ( empty( $r[ "TipoHeaderApp" ] ) ):
	        $datos_club[ "TipoHeaderApp" ] = "Clasico";
	      $datos_club[ "TiempoPublicidadHeader" ] = "0";
	      else :
	        $datos_club[ "TipoHeaderApp" ] = $r[ "TipoHeaderApp" ];
	      $datos_club[ "TiempoPublicidadHeader" ] = $r[ "TiempoPublicidadHeader" ];
	      endif;

	      array_push( $response, $datos_club );

	    } //ednw hile

	    $respuesta[ "message" ] = $message;
	    $respuesta[ "success" ] = true;
	    $respuesta[ "response" ] = $response;




	  } //End if
	  else {
	    $respuesta[ "message" ] = "No se ha encontrado club";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	  } //end else

	  return $respuesta;

	} // fin function


	function get_app_empleado( $id_club, $IDUsuario = "" ) {

		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM AppEmpleado WHERE IDClub = '" . $id_club . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			$datos_club_soc = $dbo->fetchAll( "Club", " IDClub = '" . $id_club . "' ", "array" );
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( !empty( $r[ "FotoLogoApp" ] ) ) {
					$foto_logo = CLUB_ROOT . $r[ "FotoLogoApp" ];
				}
				if ( !empty( $r[ "FotoDiseno1" ] ) ) {
					$foto1 = CLUB_ROOT . $r[ "FotoDiseno1" ];
				}
				if ( !empty( $r[ "FotoDiseno2" ] ) ) {
					$foto2 = CLUB_ROOT . $r[ "FotoDiseno2" ];
				}

				//Banners
				$response_banner = array();
				$sql_banner = "SELECT * FROM BannerApp WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY IDBannerApp";
				$qry_banner = $dbo->query( $sql_banner );
				if ( $dbo->rows( $qry_banner ) > 0 ) {

					while ( $r_banner = $dbo->fetchArray( $qry_banner ) ) {
						$banner[ "IDClub" ] = $id_club;
						$banner[ "IDBannerApp" ] = $r_banner[ "IDBannerApp" ];
						if ( !empty( $r_banner[ "Foto1" ] ) ):
							$foto = BANNERAPP_ROOT . $r_banner[ "Foto1" ];
						else :
							$foto = "";
						endif;
						$banner[ "Foto" ] = $foto;
						array_push( $response_banner, $banner );

					} //ednw hile
				}

				// Georeferenciacion
				//Tomo los valores de accesos que debe apolicar para invitados
				$IDParametroAcceso = $dbo->getFields( "ParametroAcceso", "IDParametroAcceso", "IDClub = '" . $id_club . "'" );
				$datos_ParametroAcceso = $dbo->fetchAll( "ParametroAcceso", " IDParametroAcceso = '" . $IDParametroAcceso . "' ", "array" );
				$response_georef = array();
				$georef[ "Georeferenciacion" ] = $datos_ParametroAcceso[ "Georeferenciacion" ];
				$georef[ "Latitud" ] = $datos_ParametroAcceso[ "Latitud" ];
				$georef[ "Longitud" ] = $datos_ParametroAcceso[ "Longitud" ];
				$georef[ "Rango" ] = $datos_ParametroAcceso[ "Rango" ];
				$georef[ "MensajeFueraRango" ] = $datos_ParametroAcceso[ "MensajeFueraRango" ];
				$georef[ "Georeferenciacion" ] = $datos_ParametroAcceso[ "Georeferenciacion" ];
				//array_push($response_georef, $georef);


				$datos_club[ "IDClub" ] = $r[ "IDClub" ];
				$datos_club[ "Telefono" ] = $datos_club_soc[ "Telefono" ];
				$datos_club[ "Foto" ] = $foto_logo;
				$datos_club[ "Foto1" ] = $foto1;
				$datos_club[ "Foto2" ] = $foto2;
				$datos_club[ "Color1" ] = $r[ "Color1" ];
				$datos_club[ "Color2" ] = $r[ "Color2" ];
				$datos_club[ "Banner" ] = $response_banner;
				$datos_club[ "Terminos" ] = $r[ "TerminosEmpleados" ];
				$datos_club[ "PermiteInvitacionPortero" ] = $r[ "PermiteInvitacionPortero" ];


				//datos IOS Version
				$datos_club[ "iosVersion" ] = $r[ "Version" ];
				$datos_club[ "iosEsencial" ] = $r[ "Esencial" ];
				$datos_club[ "iosversionMessage" ] = $r[ "VersionMessage" ];
				$datos_club[ "versionURLiOS" ] = $r[ "VersionURLIOS" ];

				//datos Android Version
				$datos_club[ "androidVersion" ] = $r[ "VersionAndroid" ];
				$datos_club[ "androidEsencial" ] = $r[ "EsencialAndroid" ];
				$datos_club[ "androidversionMessage" ] = $r[ "VersionMessageAndroid" ];
				$datos_club[ "versionURLAndroid" ] = $r[ "VersionURLAndroid" ];

				$datos_club[ "Georeferenciacion" ] = $georef;

				$datos_club[ "LabelTerminos" ] = $r[ "LabelTerminos" ];
				$datos_club[ "TipoTerminos" ] = $r[ "TipoTerminos" ];
				$datos_club[ "ArchivoTerminos" ] = CLUB_ROOT . $r[ "ArchivoTerminos" ];
				$datos_club[ "LabelInvitacion" ] = $r[ "LabelInvitacion" ];
				$datos_club[ "PorcentajeQrAndroid" ] = $r[ "PorcentajeQrAndroid" ];
				$datos_club[ "PorcentajeQrIOS" ] = $r[ "PorcentajeQrIOS" ];

				if(!empty($r[ "OpcionesIngreso" ])){
						$datos_club[ "OpcionesTipoIngreso" ] = "S";
				}
				else{
						$datos_club[ "OpcionesTipoIngreso" ] = "N";
				}

				$datos_club[ "OpcionesIngreso" ] = $r[ "OpcionesIngreso" ];

				//Tipo de header de app
				if ( empty( $r[ "TipoHeaderApp" ] ) ):
					$datos_club[ "TipoHeaderApp" ] = "Clasico";
				$datos_club[ "TiempoPublicidadHeader" ] = "0";
				else :
					$datos_club[ "TipoHeaderApp" ] = $r[ "TipoHeaderApp" ];
				$datos_club[ "TiempoPublicidadHeader" ] = $r[ "TiempoPublicidadHeader" ];
				endif;




				//Otros datos Usuario
				$datos_usuario = $dbo->fetchAll( "Usuario", " IDUsuario = '" . $IDUsuario . "' ", "array" );

				$CerrarSesion = $datos_usuario["SolicitarCierreSesion"];
				if($CerrarSesion=="S"){
					$condicion_modulo =" and IDModulo = 14 "; //cerrar sesion
				}

				//Modulos Sistema Menu Central
				$response_modulo = array();
				$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Central%' ".$condicion_modulo." ORDER BY Orden";
				$qry_modulo = $dbo->query( $sql_modulo );
				if( $dbo->rows( $qry_modulo ) > 0 )
				{
					while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
					{

						$agregar_modulo  = SIMWebserviceQuemado::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);


						if($agregar_modulo=="S"):
							// Verificar si el modulo tiene contenido para mostrar
							$flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
							//$flag_mostrar=0;
							if($flag_mostrar==0):
								$modulo["IDClub"] = $id_club;
								$modulo["IDModulo"] = $r_modulo["IDModulo"];
								if(!empty($r_modulo["Titulo"]))
									$modulo["NombreModulo"] = $r_modulo["Titulo"];
								else
									$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );


								$modulo["Orden"] = $r_modulo["Orden"];
								$icono_modulo = $r_modulo["Icono"] ;
								if (!empty($r_modulo["Icono"])):
									$foto = MODULO_ROOT.$r_modulo["Icono"];
								else:
									$foto="";
								endif;
								$modulo["Icono"] = $foto;
								array_push($response_modulo, $modulo);
							endif;
						endif;

					}//ednw while
				}


							//Modulos Sistema Menu Lateral
							unset($modulo);
							$response_modulo_lateral = array();
							$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Lateral%' ".$condicion_modulo." ORDER BY Orden";
							$qry_modulo = $dbo->query( $sql_modulo );
							if( $dbo->rows( $qry_modulo ) > 0 )
							{

								while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
								{
									$agregar_modulo  = SIMWebserviceQuemado::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

									if($agregar_modulo=="S"):
										// Verificar si el modulo tiene contenido para mostrar
										$flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
										//$flag_mostrar=0;
										if($flag_mostrar==0):
											$modulo["IDClub"] = $id_club;
											$modulo["IDModulo"] = $r_modulo["IDModulo"];
											//$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
											if(!empty($r_modulo["Titulo"]))
												$modulo["NombreModulo"] = $r_modulo["Titulo"];
											else
												$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );

											$modulo["Orden"] = $r_modulo["Orden"];
											$icono_modulo = $r_modulo["Icono"] ;
											if (!empty($r_modulo["Icono"])):
												$foto = MODULO_ROOT.$r_modulo["Icono"];
											else:
												$foto="";
											endif;
											$modulo["Icono"] = $foto;
											array_push($response_modulo_lateral, $modulo);
										endif;
									endif;

								}//ednw while
							}

							//traer servicios del usuario
							$response_servicio = array();
							$sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $IDUsuario . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
							$qry_servicios = $dbo->query( $sql_servicios );
							while( $r_servicio = $dbo->fetchArray( $qry_servicios  ) )
							{
									$servicio["IDClub"] = $id_club;
									$servicio["IDServicio"] = $r_servicio["IDServicio"];
									$servicio["NombreServicio"] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' " );
									if (!empty($r_servicio["Icono"])):
										$foto = SERVICIO_ROOT.$r_servicio["Icono"];
									else:
										$foto="";
									endif;

									$servicio["Icono"] = $foto;
									//$servicio["ServicioInicial"] = $dbo->getFields( "ServicioInicial" , "Nombre" , "IDServicioInicial = '".$r_servicio["IDServicioInicial"]."'" );
									array_push($response_servicio, $servicio);

							}//end while

							$tipo_codigo_carne = $dbo->getFields( "AppEmpleado" , "TipoCodigoCarne" , "IDClub = '".$id_club."'" );
							switch($tipo_codigo_carne){
								case "Barras":
									if (!empty($datos_usuario["CodigoBarras"])){
										$foto_cod_barras = 	USUARIO_ROOT.$datos_usuario["CodigoBarras"];
									}
								break;
								case "QR":
									if (!empty($datos_usuario["CodigoQR"])){
										$foto_cod_barras = 	USUARIO_ROOT."qr/".$datos_usuario["CodigoQR"];
									}
								break;
								default:
								 $foto_cod_barras = 	"";
							}

							if (!empty($datos_usuario["Foto"])){
								$foto_empleado = 	USUARIO_ROOT.$datos_usuario["Foto"];
							}


							$datos_club["IDUsuario"] = $datos_usuario["IDUsuario"];
							$datos_club["IDPerfil"] = $datos_usuario["IDPerfil"];
							$respdatos_clubonse["Nombre"] = $datos_usuario["Nombre"];
							$datos_club["Autorizado"] = $datos_usuario["Autorizado"];
							$datos_club["Nivel"] = $datos_usuario["Nivel"];
							$datos_club["Permiso"] = $datos_usuario["Permiso"];
							$datos_club["ServiciosReserva"] = $response_servicio;
							$datos_club["Modulos"] = $response_modulo;
							$datos_club["ModulosLateral"] = $response_modulo_lateral;
							$datos_club["CodigoBarras"] = $foto_cod_barras;
							$datos_club["Dispositivo"] =  $datos_usuario["Dispositivo"];
							$resdatos_clubponse["Token"] = $datos_usuario["Token"];
							//$response["NumeroDerecho"] = $datos_usuario["CodigoUsuario"];
							$datos_club["NumeroDerecho"] = "";
							//Consulto si el app esta configurado para permitir se puede cambiar p[ara que sea por usuario
							$datos_club["PermiteInvitacionPortero"] = $dbo->getFields( "AppEmpleado" , "PermiteInvitacionPortero" , "IDClub = '".$id_club."'" );
							//Consulto las areas
							$sql_area_usuario="Select * From UsuarioArea Where IDUsuario = '".$datos_usuario["IDUsuario"]."'";
							$result_area_usuario=$dbo->query($sql_area_usuario);
							while($row_area=$dbo->fetchArray($result_area_usuario)):
								$nombre_area = utf8_encode($dbo->getFields( "Area" , "Nombre" , "IDArea = '".$row_area["IDArea"]."'" ));
								$array_areas [] = $nombre_area;
							endwhile;
							if(count($array_areas)>0):
								$nombre_areas = implode(",",$array_areas);
							endif;


							$nombre_areas="";
							$datos_club["Area"] = $nombre_areas;
							$datos_club["Cargo"] = utf8_encode($datos_usuario["Cargo"]);
							$datos_club["Codigo"] = $datos_usuario["CodigoUsuario"];
							$datos_club["PermiteReservar"] = $datos_usuario["PermiteReservar"];
							$datos_club["SolicitaEditarPerfil"] = $datos_usuario["SolicitaEditarPerfil"];
							$datos_club["Activo"] = $datos_usuario["Activo"];
							//$datos_club["Foto"] = $foto_empleado;
							$datos_club["TipoUsuario"] =  "Empleado";


				//Fin otros datos usuario

				//Encuestas al abrir app
				$encuesta_activa=0;
				$response_encuesta = array();
				$sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
				$qry_encuesta = $dbo->query( $sql_encuesta );
				if ( $dbo->rows( $qry_encuesta ) > 0 ) {
					while ( $r_encuesta = $dbo->fetchArray( $qry_encuesta ) ) {
						$mostrar_encuesta=0;
						//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
						if($r_encuesta["UnaporSocio"]=="S"){
							$sql_resp="Select IDEncuesta From EncuestaRespuesta Where IDSocio = '".$datos_usuario["IDUsuario"]."' and IDEncuesta = '".$r_encuesta["IDEncuesta"]."' Limit 1"	;
							$r_resp=$dbo->query($sql_resp);
							if ( $dbo->rows( $r_resp ) <= 0 ) {
									$mostrar_encuesta=1;
							}
						}
						else{
							$mostrar_encuesta=1;
						}
							//Verifico si la encuesta es solo para algunos socios para mostrar o no
							//$permiso_encuesta=SIMWebserviceQuemado::verifica_ver_encuesta($r_encuesta,$IDSocio);
							$permiso_encuesta=1;

						if($mostrar_encuesta==1 && $permiso_encuesta==1){
							$encuesta[ "IDClub" ] = $r_encuesta[ "IDClub" ];
							$encuesta[ "IDEncuesta" ] = $r_encuesta[ "IDEncuesta" ];
							$encuesta["Nombre"] = $r_encuesta["Nombre"];
							$encuesta["Descripcion"] = $r_encuesta["Descripcion"];
							if ( !empty( $r_encuesta[ "Imagen" ] ) ):
								$foto = BANNERAPP_ROOT . $r_encuesta[ "Imagen" ];
							else :
								$foto = "";
							endif;
							$encuesta["ImagenEncuesta"] = $foto;
							$encuesta_activa=1;

							array_push( $response_encuesta, $encuesta );
						}

					} //ednw while
				}
				//FIN Encuestas al abrir app
				$datos_club[ "Encuesta" ] = $response_encuesta;
				$datos_club[ "LabelEncuesta" ] = "Encuesta";

				//Autodisagnostico al abrir app
				$diagnostico_activa=0;
				$response_diagnostico = array();
				$sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
				$qry_diagnostico = $dbo->query( $sql_diagnostico );
				if ( $dbo->rows( $qry_diagnostico ) > 0 ) {
					while ( $r_diagnostico = $dbo->fetchArray( $qry_diagnostico ) ) {
						$mostrar_disgnostico=0;
						//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
						if($r_diagnostico["UnaporSocio"]=="S"){
							$sql_resp="Select IDDiagnostico From DiagnosticoRespuesta Where IDSocio = '".$IDSocio."' and IDDiagnostico = '".$r_diagnostico["IDDiagnostico"]."' Limit 1"	;
							$r_resp=$dbo->query($sql_resp);
							if ( $dbo->rows( $r_resp ) <= 0 ) {
									$mostrar_disgnostico=1;
							}
						}
						else{
							$mostrar_disgnostico=1;
						}
							//Verifico si la encuesta es solo para algunos socios para mostrar o no
							$permiso_diagnostico=SIMWebserviceQuemado::verifica_ver_diagnostico($r_diagnostico,$IDSocio,$IDUsuario);
							//$permiso_encuesta=1;

						if($mostrar_disgnostico==1 && $permiso_diagnostico==1){
						  $diagnostico[ "IDClub" ] = $r_diagnostico[ "IDClub" ];
							$diagnostico[ "IDDiagnostico" ] = $r_diagnostico[ "IDDiagnostico" ];
							$diagnostico["Nombre"] = $r_diagnostico["Nombre"];
							$diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
							if ( !empty( $r_diagnostico[ "Imagen" ] ) ):
								$foto = BANNERAPP_ROOT . $r_diagnostico[ "Imagen" ];
							else :
								$foto = "";
							endif;
							$diagnostico["ImagenDiagnostico"] = $foto;
							$diagnostico_activa=1;

							array_push( $response_diagnostico, $diagnostico );
						}

					} //ednw while
				}
				//FIN Encuestas al abrir app
				$datos_club[ "Diagnostico" ] = $response_diagnostico;
				$datos_club[ "LabelDiagnostico" ] = $r[ "LabelDiagnostico" ];







				array_push( $response, $datos_club );

			} //ednw hile

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado club";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_parametro_acceso( $id_club ) {

		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM ParametroAcceso WHERE IDClub = '" . $id_club . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( !empty( $r[ "IconoFamiliar" ] ) ) {
					$foto_familiar = CLUB_ROOT . $r[ "IconoFamiliar" ];
				}
				if ( !empty( $r[ "IconoIndividual" ] ) ) {
					$foto_individual = CLUB_ROOT . $r[ "IconoIndividual" ];
				}

				//Tipo Invitado
				$response_tipo_invitado = array();
				$array_tipo_invitado = explode( "|", $r[ "TipoInvitado" ] );
				if ( count( $array_tipo_invitado ) > 0 ):
					foreach ( $array_tipo_invitado as $nombre_tipo ):
						$dato_tipo_invitado[] = $nombre_tipo;
				array_push( $response_tipo_invitado, $nombre_tipo );
				endforeach;
				endif;

				//Tipo Autorizacion
				$response_tipo_autorizacion = array();
				$array_tipo_autorizacion = explode( "|", $r[ "TipoAutorizacion" ] );
				if ( count( $array_tipo_autorizacion ) > 0 ):
					foreach ( $array_tipo_autorizacion as $nombre_tipo ):
						$dato_tipo_autorizacion[] = $nombre_tipo;
				array_push( $response_tipo_autorizacion, $nombre_tipo );
				endforeach;
				endif;

				//Tipo Documentos
				$response_tipodoc = array();
				$sql_tipodoc = "SELECT * FROM TipoDocumento WHERE Publicar = 'S' ORDER BY Nombre";
				$qry_tipodoc = $dbo->query( $sql_tipodoc );
				if ( $dbo->rows( $qry_tipodoc ) > 0 ) {
					while ( $r_tipodoc = $dbo->fetchArray( $qry_tipodoc ) ) {
						$tipodoc[ "IDTipoDocumento" ] = ( int )$r_tipodoc[ "IDTipoDocumento" ];
						$tipodoc[ "Nombre" ] = $r_tipodoc[ "Nombre" ];
						array_push( $response_tipodoc, $tipodoc );

					} //ednw hile
				}

				// Georeferenciacion
				$response_georef = array();
				$georef[ "Georeferenciacion" ] = $r[ "Georeferenciacion" ];
				$georef[ "Latitud" ] = $r[ "Latitud" ];
				$georef[ "Longitud" ] = $r[ "Longitud" ];
				$georef[ "Rango" ] = $r[ "Rango" ];
				$georef[ "MensajeFueraRango" ] = $r[ "MensajeFueraRango" ];
				//array_push($response_georef, $georef);

				// Georeferenciacion
				$response_georef_contratista = array();
				$georef_contratista[ "Georeferenciacion" ] = $r[ "GeoreferenciacionContratista" ];
				$georef_contratista[ "Latitud" ] = $r[ "LatitudContratista" ];
				$georef_contratista[ "Longitud" ] = $r[ "LongitudContratista" ];
				$georef_contratista[ "Rango" ] = $r[ "Rango" ];
				$georef_contratista[ "MensajeFueraRango" ] = $r[ "MensajeFueraRangoContratista" ];
				//array_push($response_georef, $georef);



				$datos_acceso[ "IDClub" ] = $r[ "IDClub" ];
				$datos_acceso[ "GrupoFamiliar" ] = $r[ "GrupoFamiliar" ];
				$datos_acceso[ "IconoFamiliar" ] = $foto_familiar;
				$datos_acceso[ "NombreFamiliar" ] = $r[ "NombreFamiliar" ];
				$datos_acceso[ "Invitado" ] = $r[ "Invitado" ];
				$datos_acceso[ "IconoIndividual" ] = $foto_individual;
				$datos_acceso[ "NombreIndividual" ] = $r[ "NombreIndividual" ];
				$datos_acceso[ "TipoInvitado" ] = $response_tipo_invitado;
				$datos_acceso[ "TipoAutorizacion" ] = $response_tipo_autorizacion;
				$datos_acceso[ "TipoDocumento" ] = $response_tipodoc;
				$datos_acceso[ "TextoMenorEdad" ] = $r[ "TextoMenorEdad" ];
				$datos_acceso[ "GeoreferenciacionInvitado" ] = $georef;
				$datos_acceso[ "GeoreferenciacionContratista" ] = $georef_contratista;

				array_push( $response, $datos_acceso );

			} //ednw hile

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado club";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function




	function get_seccion( $id_club, $id_socio = "", $id_usuario="", $TipoApp="", $Version="" ) {
		if ( !empty( $id_socio ) ):
		//$condicion = " and SS.IDSeccion = S.IDSeccion and IDSocio = '" . $id_socio . "' ";
		//$tabla_join = ", SocioSeccion".$Version." SS ";
		endif;

		$dbo = & SIMDB::get();
		$response = array();



		$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'" );
		if($id_club==36 && $TipoSocio=="Estudiante"){
			$condicion_noticia .= " and TipoSocio = 'Estudiante'";
		}
		else{
			$condicion_noticia .= " and TipoSocio <> 'Estudiante'";
		}

		if($TipoApp=="Socio"){
			$condicion_seccion .= " and (DirigidoA = 'S' or DirigidoA = 'T') ";
		}
		else{
			$condicion_seccion .= " and (DirigidoA = 'E' or DirigidoA = 'T') ";
		}

		$sql = "SELECT S.* FROM Seccion".$Version." S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " " . $condicion_seccion . " ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				// verifico que la seccion tenga por lo menos una noticia publicada
				$id_noticia = $dbo->getFields( "Noticia".$Version, "IDNoticia", "IDSeccion = '" . $r[ "IDSeccion" ] . "' and Publicar = 'S' ".$condicion_noticia );
				if ( !empty( $id_noticia ) ):
					$seccion[ "IDClub" ] = $r[ "IDClub" ];
				$seccion[ "IDSeccion" ] = $r[ "IDSeccion" ];
				$seccion[ "Nombre" ] = $r[ "Nombre" ];
				$seccion[ "Descripcion" ] = $r[ "Descripcion" ];
				array_push( $response, $seccion );
				endif;

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_seccionevento( $id_club, $id_socio = "",$Version="" ) {
		$dbo = & SIMDB::get();

		if ( !empty( $id_socio ) ):
			//$condicion = " and SSE.IDSeccionEvento = S.IDSeccionEvento and IDSocio = '" . $id_socio . "' ";
		  //$tabla_join = ", SocioSeccionEvento SSE ";
		endif;


		$response = array();
		$sql = "SELECT S.* FROM SeccionEvento".$Version." S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				// verifico que la seccion tenga por lo menos una noticia publicada
				//$id_noticia = $dbo->getFields( "Evento", "IDEvento", "IDSeccionEvento = '" . $r[ "IDSeccionEvento" ] . "' and Publicar = 'S' and FechaFinEvento >= NOW()" );
				$id_noticia = $dbo->getFields( "Evento".$Version, "IDEvento".$Version, "(DirigidoA = 'S' or DirigidoA = 'T') and IDSeccionEvento".$Version." = '" . $r[ "IDSeccionEvento".$Version ] . "' and Publicar = 'S' and  FechaInicio <= CURDATE() and FechaFin >= CURDATE()" );
				if ( !empty( $id_noticia ) ):
					$seccion[ "IDClub" ] = $r[ "IDClub" ];
				$seccion[ "IDSeccion" ] = $r[ "IDSeccionEvento".$Version ];
				$seccion[ "Nombre" ] = $r[ "Nombre" ];
				$seccion[ "Descripcion" ] = $r[ "Descripcion" ];
				array_push( $response, $seccion );
				endif;

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_secciongaleria( $id_club, $id_socio = "" ) {
		$dbo = & SIMDB::get();

		if ( !empty( $id_socio ) ):
			//$condicion = " and SSG.IDSeccionGaleria = S.IDSeccionGaleria and IDSocio = '" . $id_socio . "' ";
			//$tabla_join = ", SocioSeccionGaleria SSG ";
		endif;

		$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'" );
		if($id_club==36 && $TipoSocio=="Estudiante"){
			$condicion_galeria .= " and TipoSocio = 'Estudiante'";
		}
		else{
			$condicion_galeria .= " and TipoSocio <> 'Estudiante'";
		}


		$response = array();
		$sql = "SELECT S.* FROM SeccionGaleria S " . $tabla_join . " WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' " . $condicion . " ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				// verifico que la seccion tenga por lo menos una galeria publicada
				$id_galeria = $dbo->getFields( "Galeria", "IDGaleria", "IDSeccionGaleria = '" . $r[ "IDSeccionGaleria" ] . "' and Publicar = 'S' ". $condicion_galeria );
				if ( !empty( $id_galeria ) ):
					$seccion[ "IDClub" ] = $r[ "IDClub" ];
				$seccion[ "IDSeccion" ] = $r[ "IDSeccionGaleria" ];
				$seccion[ "Nombre" ] = $r[ "Nombre" ];
				$seccion[ "Descripcion" ] = $r[ "Descripcion" ];
				array_push( $response, $seccion );
				endif;

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_seccion_club( $id_club, $id_socio = "" ) {
		$dbo = & SIMDB::get();
		$response = array();
		$contador_resultado = 0;

		//Secciones Noticia
		$sql = "SELECT * FROM Seccion S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			//Verifico si tiene nombre pesonalizado la sección
			//$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 3" ));
			if ( empty( $nombre_modulo ) )
				$nombre_modulo = "Noticia";

			$seccion[ "Tipo" ] = $nombre_modulo;
			$seccion[ "IDSeccion" ] = $r[ "IDSeccion" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccion Where IDSocio = '" . $id_socio . "' and IDSeccion = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;


			array_push( $response, $seccion );
		} //end while

		//Secciones Noticia 2
		unset( $seccion );
		$nombre_modulo="";
		$sql = "SELECT * FROM Seccion3 S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			//Verifico si tiene nombre pesonalizado la sección
			//$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 3" ));
			if ( empty( $nombre_modulo ) )
				$nombre_modulo = "Noticia3";

			$seccion[ "Tipo" ] = $nombre_modulo;
			$seccion[ "IDSeccion" ] = $r[ "IDSeccion" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccion3 Where IDSocio = '" . $id_socio . "' and IDSeccion = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;


			array_push( $response, $seccion );
		} //end while


		unset( $seccion );
		$nombre_modulo = "";
		//Secciones Evento
		$sql = "SELECT * FROM SeccionEvento S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			//Verifico si tiene nombre pesonalizado la sección
			//$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 4" ));
			if ( empty( $nombre_modulo ) )
				$nombre_modulo = "Evento";

			$seccion[ "Tipo" ] = $nombre_modulo;

			$seccion[ "IDSeccion" ] = $r[ "IDSeccionEvento" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccionEvento Where IDSocio = '" . $id_socio . "' and IDSeccionEvento = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;

			array_push( $response, $seccion );
		} //end while

		unset( $seccion );
		$nombre_modulo = "";
		//Secciones Galeria
		$sql = "SELECT * FROM SeccionGaleria S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			//Verifico si tiene nombre pesonalizado la sección
			//$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDClub = '".$id_club."' and IDModulo = 5" ));
			if ( empty( $nombre_modulo ) )
				$nombre_modulo = "Galeria";

			$seccion[ "Tipo" ] = $nombre_modulo;
			$seccion[ "IDSeccion" ] = $r[ "IDSeccionGaleria" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccionGaleria Where IDSocio = '" . $id_socio . "' and IDSeccionGaleria = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;

			array_push( $response, $seccion );
		} //end while

		unset( $seccion );
		$nombre_modulo = "";
		//Secciones Clasificado
		$sql = "SELECT * FROM SeccionClasificados S  WHERE S.Publicar = 'S' and S.IDClub = '" . $id_club . "' ORDER BY S.Orden";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			//Verifico si tiene nombre pesonalizado la sección
			$nombre_modulo = utf8_encode( $dbo->getFields( "ClubModulo", "Titulo", "IDClub = '" . $id_club . "' and IDModulo = 46" ) );
			if ( empty( $nombre_modulo ) )
				$nombre_modulo = "Clasificado";

			$seccion[ "Tipo" ] = $nombre_modulo;
			$seccion[ "IDSeccion" ] = $r[ "IDSeccionClasificados" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccionClasificados Where IDSocio = '" . $id_socio . "' and IDSeccionClasificados = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;

			array_push( $response, $seccion );
		} //end while



		$message = $contador_resultado . " Encontrados";
		if ( $contador_resultado > 0 ) {
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_area_club( $IDClub ) {

		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * From Area WHERE Activo = 'S' and IDClub = '" . $IDClub . "' and MostrarApp <> 'N' ORDER BY Orden,Nombre";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {

				$area[ "IDClub" ] = $r[ "IDClub" ];
				$area[ "IDArea" ] = $r[ "IDArea" ];
				$area[ "Nombre" ] = $r[ "Nombre" ];
				$area[ "CorreoResponsable" ] = $r[ "CorreoResponsable" ];
				$foto = "";
				$foto_icono = $r[ "Icono" ];


			if ( !empty( $r[ "Icono" ] ) ) {
				$foto = PQR_ROOT . $r[ "Icono" ];
			}

			$area[ "Icono" ] = $foto;

				array_push( $response, $area );
			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_pqr_socio( $IDClub, $IDSocio, $IDPqr ) {
		$dbo = & SIMDB::get();

		$response = array();

		$array_id_consulta[] = $IDSocio;

		if ( !empty( $IDPqr ) )
			$condicion .= " and IDPqr = '" . $IDPqr . "'";

		if ( !empty( $IDSocio ) )
			$condicion .= " and IDSocio = '" . $IDSocio . "'";


		$sql = "SELECT * FROM Pqr WHERE IDClub = '" . $IDClub . "' $condicion ORDER BY IDPqr Desc ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $row_pqr = $dbo->fetchArray( $qry ) ):
				$pqr[ "IDClub" ] = $IDClub;
				$pqr[ "IDSocio" ] = $IDSocio;
				$pqr[ "IDPqr" ] = $row_pqr[ "IDPqr" ];
				$pqr[ "IDArea" ] = $row_pqr[ "IDArea" ];
				$pqr[ "IDTipoPqr" ] = $row_pqr[ "IDTipoPqr" ];
				$pqr[ "IDPqrEstado" ] = $row_pqr[ "IDPqrEstado" ];
				$pqr[ "NombreArea" ] =  $dbo->getFields( "Area", "Nombre", "IDArea = '" . $row_pqr[ "IDArea" ] . "'" ) ;
				$pqr[ "Tipo" ] =  $dbo->getFields( "TipoPqr", "Nombre", "IDTipoPqr = '" . $row_pqr[ "IDTipoPqr" ] . "'" ) ;
				$pqr[ "Asunto" ] =  $row_pqr[ "Asunto" ] ;
				$pqr[ "Comentario" ] =  $row_pqr[ "Descripcion" ] ;

				if(!empty($row_pqr[ "Archivo1" ]))
					$pqr[ "Archivo" ] = PQR_ROOT . $row_pqr[ "Archivo1" ];
				else
					$pqr[ "Archivo" ]="";

				$pqr[ "Fecha" ] = $row_pqr[ "Fecha" ];
				$pqr[ "Estado" ] = $dbo->getFields( "PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr[ "IDPqrEstado" ] . "'" );

				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $row_pqr[ "IDSocio" ] . "' ", "array" );
				$pqr[ "NombreSocio" ] =  $datos_socio["Nombre"] .  " " .$datos_socio["Apellido"];
				$pqr[ "CelularSocio" ] = $datos_socio["Celular"];
				$pqr[ "AccionSocio" ] = $datos_socio["Accion"];

			//Bitacora Pqr
			$response_bitacora = array();
			$sql_bitacora = $dbo->query( "SELECT * FROM Detalle_Pqr WHERE IDPQR = '" . $row_pqr[ "IDPqr" ] . "' AND MostrarSocio <> 'N' Order By 	IDDetallePqr Desc" );
			while ( $r_bitacora = $dbo->fetchArray( $sql_bitacora ) ):

				$bitacora[ IDDetallePqr ] = $r_bitacora[ "IDDetallePqr" ];
			if ( $r_bitacora[ IDUsuario ] > 0 ) {
				$usuario_responde = "CLUB: " . $dbo->getFields( "Usuario", "Nombre", "IDUsuario = '" . $r_bitacora[ IDUsuario ] . "'" );
				$pos = strpos( $r_bitacora[ "Respuesta" ], "<p>" ); //para saber si la respuesta esta en html o no
				//quito caracteres especiales
				$respuesta_pqr = strip_tags( $r_bitacora[ "Respuesta" ] );
				$respuesta_pqr = str_replace("&nbsp;"," ",$respuesta_pqr);
				$respuesta_pqr = str_replace("&aacute;","á",$respuesta_pqr);
				$respuesta_pqr = str_replace("&eacute;","é",$respuesta_pqr);
				$respuesta_pqr = str_replace("&iacute;","í",$respuesta_pqr);
				$respuesta_pqr = str_replace("&oacute;","ó",$respuesta_pqr);
				$respuesta_pqr = str_replace("&uacute;","ú",$respuesta_pqr);
				$respuesta_pqr = str_replace("&ntilde;","ñ",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Aacute;","Á",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Eacute;","É",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Iacute;","Í",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Oacute;","Ó",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Uacute;","Ú",$respuesta_pqr);
				$respuesta_pqr = str_replace("&Ntilde;","Ñ",$respuesta_pqr);
				if ( $pos !== false ) {
					$respuesta_pqr = html_entity_decode($respuesta_pqr, ENT_QUOTES, "UTF-8");
				}

			} elseif ( $r_bitacora[ IDSocio ] > 0 ) {
				//$nombre_cliente = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $r_bitacora[ IDSocio ] . "'" ) );
				//$apellido_cliente = utf8_encode( $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $r_bitacora[ IDSocio ] . "'" ) );
				$nombre_cliente = $datos_socio["Nombre"];
				$apellido_cliente = $datos_socio["Apellido"];
				$usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
				$respuesta_pqr = $r_bitacora[ "Respuesta" ] ;
			}
			$bitacora[ UsuarioResponde ] = $usuario_responde;
			$bitacora[ RespuestaPqr ] = $respuesta_pqr;
			$bitacora[ Estado ] = $dbo->getFields( "PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr[ "IDPqrEstado" ] . "'" );
			$bitacora[ FechaRespuesta ] = substr( $r_bitacora[ "Fecha" ], 0, 10 );



			if(!empty($r_bitacora[ "Archivo" ])){
					$array_documento_resp[]=PQR_ROOT . $r_bitacora[ "Archivo" ];
			}
			$bitacora[ "Archivos" ] = $array_documento_resp;
			array_push( $response_bitacora, $bitacora );
			$array_documento_resp=array();
			endwhile;

			$bitacora=array();
			//Agrego el primer comentario como parte del seguimiento
			$bitacora[ IDDetallePqr ] = $row_pqr[ "IDPqr" ];
			//$nombre_cliente = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocio . "'" ) );
			//$apellido_cliente = utf8_encode( $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocio . "'" ) );
			$nombre_cliente = $datos_socio["Nombre"];
			$apellido_cliente = $datos_socio["Apellido"];
			$usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
			$respuesta_pqr =  $row_pqr[ "Descripcion" ] ;
			$bitacora[ UsuarioResponde ] = $usuario_responde;
			$bitacora[ RespuestaPqr ] = $respuesta_pqr;
			$bitacora[ Estado ] = $dbo->getFields( "PqrEstado", "Nombre", "IDPqrEstado = '" . $row_pqr[ "IDPqrEstado" ] . "'" );
			$bitacora[ FechaRespuesta ] = substr( $row_pqr[ "Fecha" ], 0, 10 );
			array_push( $response_bitacora, $bitacora );




			$pqr[ "Seguimiento" ] = $response_bitacora;
			array_push( $response, $pqr );
			endwhile;

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {

			$pqr[ "IDSocio" ] = "";
			$pqr[ "IDPqr" ] = "";
			$pqr[ "IDArea" ] = "";
			$pqr[ "IDTipoPqr" ] = "";
			$pqr[ "IDPqrEstado" ] = "";
			$pqr[ "NombreArea" ] = "";
			$pqr[ "Tipo" ] = "";
			$pqr[ "Asunto" ] = "";
			$pqr[ "Comentario" ] = "";
			$pqr[ "Archivo" ] = "";
			$pqr[ "Fecha" ] = "";
			$pqr[ "Estado" ] = "";

			array_push( $response, $reserva );
			$respuesta[ "message" ] = "No se han encontraron resultados";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;


			//$respuesta[ "message" ] = "No se han encontraron resultados";
			//$respuesta[ "success" ] = false;
			//$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function



	function get_noticias( $id_club, $id_seccion = "", $id_socio = "", $tag = "", $Version="" ) {

		$dbo = & SIMDB::get();

		// Secciones Socio
		if ( !empty( $id_socio ) && $id_seccion == ""):

			$sql_seccion_socio = $dbo->query("Select * From SocioSeccion".$Version." Where IDSocio = '".$id_socio."'");

			//$dbo->object($sql_seccion_socio);

			while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
				$array_secciones_socio[] = $row_seccion["IDSeccion"];
			endwhile;

			if (count($array_secciones_socio)>0):
				$id_secciones = implode(",",$array_secciones_socio);
				$array_condiciones[] = " IDSeccion in(".$id_secciones.") ";
			endif;

			$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'" );
			if($id_club==36 && $TipoSocio=="Estudiante"){
				$array_condiciones[] = " TipoSocio = 'Estudiante'";
			}
			else{
				$array_condiciones[] = " (TipoSocio = '' or TipoSocio = 'Socio' )";
			}
			endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccion  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%')";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Noticia".$Version." WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "'" . $condiciones_noticia . " ORDER BY FechaInicio DESC,Orden";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$noticia[ "IDClub" ] = $r[ "IDClub" ];
				$noticia[ "IDSeccion" ] = $r[ "IDSeccion" ];
				$noticia[ "IDNoticia" ] = $r[ "IDNoticia" ];
				$noticia[ "Titular" ] = $r[ "Titular" ];
				$noticia[ "Introduccion" ] = $r[ "Introduccion" ];

				$cuerpo_noticia = str_replace( "/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r[ "Cuerpo" ] );

				//Documentos adjuntos
				if ( !empty( $r[ "Adjunto1File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto1File" ] . "' >" . $r[ "Adjunto1File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto1File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';

				endif;
				if ( !empty( $r[ "Adjunto2File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto2File" ] . "' >" . $r[ "Adjunto2File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto2File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto3File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto3File" ] . "' >" . $r[ "Adjunto3File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto3File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto4File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto4File" ] . "' >" . $r[ "Adjunto4File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto4File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto5File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto5File" ] . "' >" . $r[ "Adjunto5File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto5File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto6File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto6File" ] . "' >" . $r[ "Adjunto6File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto6File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto7File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto7File" ] . "' >" . $r[ "Adjunto7File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto7File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;
				if ( !empty( $r[ "Adjunto8File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto8File" ] . "' >" . $r[ "Adjunto8File" ] . '</a>';
					//$cuerpo_noticia .= '<iframe src="http://docs.google.com/gview?url='.IMGNOTICIA_ROOT . $r[ "Adjunto8File" ].'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>';
				endif;

				$noticia[ "Cuerpo" ] = $cuerpo_noticia;

				if($id_club==51){
					$noticia[ "Fecha" ] = "";
				}else{
					$noticia[ "Fecha" ] = $r[ "FechaInicio" ];
				}


				if ( !empty( $r[ "NoticiaFile" ] ) ):
					if ( strstr( strtolower( $r[ "NoticiaFile" ] ), "http://" ) )
						$foto1 = $r[ "NoticiaFile" ];
					else
						$foto1 = IMGNOTICIA_ROOT . $r[ "NoticiaFile" ];
					//$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
				else :
					$foto1 = "";
				endif;

				if ( !empty( $r[ "FotoDestacada" ] ) ):
					if ( strstr( strtolower( $r[ "FotoDestacada" ] ), "http://" ) )
						$foto2 = $r[ "FotoDestacada" ];
					else
						$foto2 = IMGNOTICIA_ROOT . $r[ "FotoDestacada" ];

					//$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
				else :
					$foto2 = "";
				endif;

				$noticia[ "Foto" ] = $foto1;
				$noticia[ "Foto2" ] = $foto2;


				array_push( $response, $noticia );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_noticias_empleados( $id_club, $id_seccion = "", $id_usuario = "", $tag = "" ) {

		$dbo = & SIMDB::get();

		// Secciones Empleado
		if ( !empty( $id_empleado ) ):
			$sql_seccion_empleado = $dbo->query( "Select * From UsuarioSeccion Where IDUsuario = '" . $id_usuario . "'" );
		while ( $row_seccion = $dbo->fetchArray( $sql_seccion_socio ) ):
			$array_secciones_empleado[] = $row_seccion[ "IDSeccion" ];
		endwhile;

		if ( count( $array_secciones_empleado ) > 0 ):
			$id_secciones = implode( ",", $array_secciones_empleado );
		$array_condiciones[] = " IDSeccion in(" . $id_secciones . ") ";
		endif;
		endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccion  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%')";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Noticia WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "'" . $condiciones_noticia . " ORDER BY FechaInicio DESC,Orden";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$noticia[ "IDClub" ] = $r[ "IDClub" ];
				$noticia[ "IDSeccion" ] = $r[ "IDSeccion" ];
				$noticia[ "IDNoticia" ] = $r[ "IDNoticia" ];
				$noticia[ "Titular" ] = $r[ "Titular" ];
				$noticia[ "Introduccion" ] = $r[ "Introduccion" ];

				$cuerpo_noticia = str_replace( "/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r[ "Cuerpo" ] );

				//Documentos adjuntos
				if ( !empty( $r[ "Adjunto1File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto1File" ] . "' >" . $r[ "Adjunto1File" ] . '</a>';
				endif;
				if ( !empty( $r[ "Adjunto2File" ] ) ):
					$cuerpo_noticia .= "<br><a href='" . IMGNOTICIA_ROOT . $r[ "Adjunto2File" ] . "' >" . $r[ "Adjunto2File" ] . '</a>';
				endif;

				$noticia[ "Cuerpo" ] = $cuerpo_noticia;



				$noticia[ "Fecha" ] = $r[ "FechaInicio" ];
				if ( !empty( $r[ "NoticiaFile" ] ) ):
					if ( strstr( strtolower( $r[ "NoticiaFile" ] ), "http://" ) )
						$foto1 = $r[ "NoticiaFile" ];
					else
						$foto1 = IMGNOTICIA_ROOT . $r[ "NoticiaFile" ];
					//$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
				else :
					$foto1 = "";
				endif;

				if ( !empty( $r[ "FotoDestacada" ] ) ):
					if ( strstr( strtolower( $r[ "FotoDestacada" ] ), "http://" ) )
						$foto2 = $r[ "FotoDestacada" ];
					else
						$foto2 = IMGNOTICIA_ROOT . $r[ "FotoDestacada" ];

					//$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
				else :
					$foto2 = "";
				endif;

				$noticia[ "Foto" ] = $foto1;
				$noticia[ "Foto2" ] = $foto2;


				array_push( $response, $noticia );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_eventos( $id_club, $id_seccion = "", $id_socio = "", $tag = "", $Fecha="", $Version="" ) {
		$dbo = & SIMDB::get();

		// Secciones Socio
		if ( !empty( $id_socio ) && $id_seccion == "" ):

			$sql_seccion_socio = $dbo->query("Select * From SocioSeccionEvento".$Version." Where IDSocio = '".$id_socio."'");
			while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
				$array_secciones_socio[] = $row_seccion["IDSeccionEvento"];
			endwhile;

			if (count($array_secciones_socio)>0):
				$id_secciones = implode(",",$array_secciones_socio);
				//$array_condiciones[] = " IDSeccionEvento".$Version." in(".$id_secciones.") ";
			endif;

			$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'" );
			if($id_club==36 && $TipoSocio=="Estudiante"){
				$array_condiciones[] = " TipoSocio = 'Estudiante'";
			}
			else{
				$array_condiciones[] = " (TipoSocio = '' or TipoSocio = 'Socio' ) ";
			}
			endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccionEvento".$Version."  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%' or Lugar like '%" . $tag . "%' )";
		endif;

		if ( !empty( $Fecha ) ):
			$array_condiciones[] = " FechaEvento  = '" . $Fecha . "'";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;

		if ( $id_club == 34 ):
			$orden = " IDEvento DESC";
			$CondicionFechaEvento = " ";
		//elseif($id_club == 44):
			//$orden = " Orden ASC";
			//$CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
		elseif($id_club == 37):
				$CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
				$orden = " FechaEvento ASC";
		else :
			$orden = " FechaEvento ASC";
		//$CondicionFechaEvento = " and FechaFinEvento >= CURDATE() ";
		endif;

		$response = array();
		$sql = "SELECT * FROM Evento".$Version." WHERE (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and FechaInicio <= CURDATE() and FechaFin >= CURDATE() " . $CondicionFechaEvento . " and IDClub = '" . $id_club . "' " . $condiciones_noticia . " ORDER BY " . $orden . " ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$evento[ "IDClub" ] = $r[ "IDClub" ];
				$evento[ "IDSeccionEvento" ] = $r[ "IDSeccionEvento".$Version ];
				$evento[ "IDEvento" ] = $r[ "IDEvento".$Version ];
				$evento[ "Titular" ] = $r[ "FechaEvento" ] . ": " . $r[ "Titular" ];
				$evento[ "Introduccion" ] = $r[ "Introduccion" ];

				$cuerpo_evento = str_replace( "/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r[ "Cuerpo" ] );

				//Documentos adjuntos
				if ( !empty( $r[ "Adjunto1File" ] ) ):
					$cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r[ "Adjunto1File" ] . "' >" . $r[ "Adjunto1File" ] . '</a>';
				endif;
				if ( !empty( $r[ "Adjunto2File" ] ) ):
					$cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r[ "Adjunto2File" ] . "' >" . $r[ "Adjunto2File" ] . '</a>';
				endif;
				if ( !empty( $r[ "Adjunto3File" ] ) ):
					$cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r[ "Adjunto3File" ] . "' >" . $r[ "Adjunto3File" ] . '</a>';
				endif;
				if ( !empty( $r[ "Adjunto4File" ] ) ):
					$cuerpo_evento .= "<br><a href='" . IMGEVENTO_ROOT . $r[ "Adjunto4File" ] . "' >" . $r[ "Adjunto4File" ] . '</a>';
				endif;


				$evento[ "Cuerpo" ] = utf8_encode( $cuerpo_evento );

				$evento[ "CuerpoEmail" ] = $r[ "CuerpoEmail" ];
				$evento[ "Fecha" ] = $r[ "FechaEvento" ];
				$evento[ "FechaFinEvento" ] = $r[ "FechaFinEvento" ];
				$evento[ "Lugar" ] = $r[ "Lugar" ];

				$HoraEvento=(string)$r["Hora"];
				if($HoraEvento=="00:00:00")
					$evento["Hora"] = "";
				else
					$evento["Hora"] = (string)$r["Hora"];

				$evento[ "Valor" ] = $r[ "Valor" ];
				$evento[ "EmailContacto" ] = $r[ "EmailContacto" ];
				$evento[ "InscripcionApp" ] = $r[ "InscripcionApp" ];

				if($r[ "InscripcionApp" ]=="S"){
					//Verifico si quedan cupos
					$sql_registrados="SELECT count(*) as Total FROM  EventoRegistro".$Version." Where IDEvento".$Version." = '".$r[ "IDEvento" ]."'";
					$r_registrados=$dbo->query($sql_registrados);
					$row_registrados=$dbo->FetchArray($r_registrados);
					if((int)$row_registrados["Total"]>=(int)$r["MaximoParticipantes"]){
								$evento[ "InscripcionApp" ] ="N";
								$evento[ "Cuerpo" ] .= "<br><strong>Se lleg&oacute; al maximo de cupos</strong>";
					}

					//verifico  la fecha/hora límite de inscripcion
					$fechahora_actual=date("Y-m-d H:i:s");
					$FechaHoraLimite=$r[ "FechaLimiteInscripcion" ] . " " . $r[ "HoraLimiteInscripcion" ];
					if( $FechaHoraLimite!="0000-00-00" && strtotime($fechahora_actual)>strtotime($FechaHoraLimite) )  {
						$evento[ "InscripcionApp" ] ="N";
						$evento[ "Cuerpo" ] .= "<br><strong>Inscripciones cerradas</strong>";
					}


				}







				$evento[ "MensajePagoInscripcion" ] = $r[ "MensajePagoInscripcion" ];
				//Tipos de pagos recibidos
				$response_tipo_pago = array();
				$sql_tipo_pago = "SELECT * FROM EventoTipoPago".$Version." ETP, TipoPago TP  WHERE ETP.IDTipoPago = TP.IDTipoPago and IDEvento".$Version." = '" . $r[ "IDEvento".$Version ] . "' ";
				$qry_tipo_pago = $dbo->query( $sql_tipo_pago );
				if ( $dbo->rows( $qry_tipo_pago ) > 0 ) {
					$evento[ "PagoReserva" ] = "S";
					while ( $r_tipo_pago = $dbo->fetchArray( $qry_tipo_pago ) ) {
						$tipopago[ "IDClub" ] = $id_club;
						$tipopago[ "IDServicio" ] = $r_tipo_pago[ "IDServicio" ];
						$tipopago[ "IDTipoPago" ] = $r_tipo_pago[ "IDTipoPago" ];
						$tipopago[ "PasarelaPago" ] = $r_tipo_pago[ "PasarelaPago" ];
						$tipopago[ "Action" ] = SIMUtil::obtener_accion_pasarela($r_tipo_pago[ "IDTipoPago" ],$id_club);
						$tipopago[ "Nombre" ] = $r_tipo_pago[ "Nombre" ];

						$imagen="";
						//Para el condado y es pagos online muestro la imagen de placetopay
						if($id_club==51){
							switch($r_tipo_pago[ "IDTipoPago" ]){
								case "1":
									$imagen="https://www.miclubapp.com/file/noticia/641923_placetopay.png";
								break;
								case "2":
									$imagen="https://www.miclubapp.com/file/noticia/icono-bono.png";
								break;
								case "3":
									$imagen="https://www.miclubapp.com/file/noticia/abonoc.png";
								break;
							}
					}

						$tipopago[ "Imagen" ] = $imagen;
						array_push( $response_tipo_pago, $tipopago );

					} //end while
					$evento[ "TipoPago" ] = $response_tipo_pago;
				} else {
					$evento[ "PagoReserva" ] = "N";
				}

				//Campos Formulario
				$response_campo_formulario = array();
				$sql_campo_form = "SELECT * FROM CampoFormularioEvento".$Version." WHERE IDEvento".$Version." = '" . $r[ "IDEvento".$Version ] . "' and Publicar = 'S' order by Orden ";
				$qry_campo_form = $dbo->query( $sql_campo_form );
				if ( $dbo->rows( $qry_campo_form ) > 0 ) {
					while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
						$campoformulario[ "IDCampoFormularioEvento"] = $r_campo[ "IDCampoFormularioEvento".$Version ];
						$campoformulario[ "TipoCampo" ] = $r_campo[ "TipoCampo" ];
						$campoformulario[ "EtiquetaCampo" ] = $r_campo[ "EtiquetaCampo" ];
						$campoformulario[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
						$campoformulario[ "Valores" ] = $r_campo[ "Valores" ];
						array_push( $response_campo_formulario, $campoformulario );

					} //end while
					$evento[ "CampoFormulario" ] = $response_campo_formulario;
				} else {
					$evento[ "CampoFormulario" ] = $response_campo_formulario;
				}


				if ( !empty( $r[ "EventoFile" ] ) ):
					if ( strstr( strtolower( $r[ "EventoFile" ] ), "http://" ) )
						$foto1 = $r[ "EventoFile" ];
					else
						$foto1 = IMGEVENTO_ROOT . $r[ "EventoFile" ];
					//$foto1 = IMGEVENTO_ROOT.$r["EventoFile"];
				else :
					$foto1 = "";
				endif;

				if ( !empty( $r[ "FotoDestacada" ] ) ):
					if ( strstr( strtolower( $r[ "FotoDestacada" ] ), "http://" ) )
						$foto2 = $r[ "FotoDestacada" ];
					else
						$foto2 = IMGEVENTO_ROOT . $r[ "FotoDestacada" ];
					//$foto2 = IMGEVENTO_ROOT.$r["FotoDestacada"];
				else :
					$foto2 = "";
				endif;

				$evento[ "Foto" ] = $foto1;
				$evento[ "Foto2" ] = $foto2;

				array_push( $response, $evento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_eventos_empleados( $id_club, $id_seccion = "", $id_usuario = "", $tag = "" ) {
		$dbo = & SIMDB::get();

		// Secciones Empleado
		if ( !empty( $id_usuario ) ):
			$sql_seccion_empleado = $dbo->query( "Select * From UsuarioSeccionEvento Where IDSocio = '" . $id_socio . "'" );
		while ( $row_seccion = $dbo->fetchArray( $sql_seccion_empleado ) ):
			$array_secciones_empleado[] = $row_seccion[ "IDSeccionEvento" ];
		endwhile;

		if ( count( $array_secciones_empleado ) > 0 ):
			$id_secciones = implode( ",", $array_secciones_empleado );
		$array_condiciones[] = " IDSeccionEvento in(" . $id_secciones . ") ";
		endif;
		endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccionEvento  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Titular  like '%" . $tag . "%' or Introduccion like '%" . $tag . "%' or Cuerpo like '%" . $tag . "%' or Lugar like '%" . $tag . "%' )";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;

		$orden = " FechaEvento ASC";


		$response = array();
		$sql = "SELECT * FROM Evento WHERE (DirigidoA = 'E' or DirigidoA = 'T') and Publicar = 'S' and FechaInicio <= NOW() and FechaFin >= NOW() and  IDClub = '" . $id_club . "'" . $condiciones_noticia . " ORDER BY " . $orden . "";

		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$evento[ "IDClub" ] = $r[ "IDClub" ];
				$evento[ "IDSeccionEvento" ] = $r[ "IDSeccionEvento" ];
				$evento[ "IDEvento" ] = $r[ "IDEvento" ];
				$evento[ "Titular" ] = $r[ "Titular" ];
				$evento[ "Introduccion" ] = $r[ "Introduccion" ];

				$cuerpo_evento = str_replace( "/file/noticia/editor/", IMGNOTICIA_ROOT . 'editor/', $r[ "Cuerpo" ] );
				$evento[ "Cuerpo" ] = $cuerpo_evento;

				$evento[ "CuerpoEmail" ] = $r[ "CuerpoEmail" ];
				$evento[ "Fecha" ] = $r[ "FechaEvento" ];
				$evento[ "FechaFinEvento" ] = $r[ "FechaFinEvento" ];
				$evento[ "Lugar" ] = $r[ "Lugar" ];
				$evento[ "Valor" ] = $r[ "Valor" ];
				$evento[ "EmailContacto" ] = $r[ "EmailContacto" ];

				if ( !empty( $r[ "EventoFile" ] ) ):
					if ( strstr( strtolower( $r[ "EventoFile" ] ), "http://" ) )
						$foto1 = $r[ "EventoFile" ];
					else
						$foto1 = IMGEVENTO_ROOT . $r[ "EventoFile" ];
					//$foto1 = IMGEVENTO_ROOT.$r["EventoFile"];
				else :
					$foto1 = "";
				endif;

				if ( !empty( $r[ "FotoDestacada" ] ) ):
					if ( strstr( strtolower( $r[ "FotoDestacada" ] ), "http://" ) )
						$foto2 = $r[ "FotoDestacada" ];
					else
						$foto2 = IMGEVENTO_ROOT . $r[ "FotoDestacada" ];
					//$foto2 = IMGEVENTO_ROOT.$r["FotoDestacada"];
				else :
					$foto2 = "";
				endif;

				$evento[ "Foto" ] = $foto1;
				$evento[ "Foto2" ] = $foto2;

				array_push( $response, $evento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_directorio( $id_club, $tag ) {
		$dbo = & SIMDB::get();


		if ( !empty( $tag ) ):
			$tag = utf8_decode( $tag );
			$array_buscar=explode(" ",$tag);
			foreach ($array_buscar as $key => $value) {
				$array_condiciones_nombre[] = " (	Nombre  like '%" . $value . "%' or Descripcion like '%" . $value . "%'  )";
			}
			if(count($array_condiciones_nombre)>0){
				$condicion_nombre=implode(" and ",$array_condiciones_nombre);
			}
			$array_condiciones[] = $condicion_nombre;
		endif;

		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_directorio = " and " . $condiciones;
		endif;


		if ( $id_club == "36" )
			$condicion_orden = " Orden ";
		else
			$condicion_orden = " Nombre ";

		$response = array();
		$sql = "SELECT * FROM Directorio WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_directorio . " ORDER BY " . $condicion_orden;
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$response_otros = array();
				$directorio[ "IDClub" ] = $r[ "IDClub" ];
				$directorio[ "IDDirectorio" ] = $r[ "IDDirectorio" ];
				$directorio[ "Nombre" ] = $r[ "Nombre" ];
				$directorio[ "Telefono" ] = $r[ "Telefono" ];
				$directorio[ "PermiteCalificacion" ] = $r[ "PermiteCalificar" ];
				$directorio[ "MostrarIcono" ] = $r[ "MostrarIcono" ];

				if ( !empty( $r[ "Foto1" ] ) ):
					$foto = DIRECTORIO_ROOT . $r[ "Foto1" ];
				else :
					$foto = "";
				endif;

				$directorio[ "Foto" ] = $foto;

				$icono_telefono=$dbo->getFields( "Club", "IconoTelefono", "IDClub = '" . $id_club . "'" );
				if ( !empty( $icono_telefono ) ):
					$fototelefono = CLUB_ROOT . $icono_telefono;
				else :
					$fototelefono = "";
				endif;
				$directorio[ "IconoTelefono" ] = $fototelefono;

				//Otros datos
				if ( !empty( trim( $r[ "Descripcion" ] ) ) ):
					$array_otros[ "Campo" ] = "Descripción";
				$array_otros[ "Valor" ] =  $r[ "Descripcion" ] ;
				array_push( $response_otros, $array_otros );
				endif;

				if ( trim( $r[ "Email" ] ) <> "" ):
					$array_otros[ "Campo" ] = "Email";
				$array_otros[ "Valor" ] =  $r[ "Email" ] ;
				array_push( $response_otros, $array_otros );
				endif;

				$sql_otros = "Select * From CampoDirectorioClubValor Where IDDirectorio = '" . $r[ "IDDirectorio" ] . "'";
				$result_otros = $dbo->query( $sql_otros );
				while ( $row_otros = $dbo->fetchArray( $result_otros ) ):
					$array_otros[ "Campo" ] = $dbo->getFields( "CampoDirectorioClub", "Nombre", "IDCampoDirectorioClub = '" . $row_otros[ "IDCampoDirectorioClub" ] . "'" );
				$array_otros[ "Valor" ] = $row_otros[ "Valor" ];
				array_push( $response_otros, $array_otros );
				endwhile;

				$directorio[ "OtrosDatos" ] = $response_otros;

				array_push( $response, $directorio );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function



	function get_directorio_socio( $id_club, $tag ) {
		$dbo = & SIMDB::get();


		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%' )";
		endif;

		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_directorio = " and " . $condiciones;
		endif;


		$response = array();
		$sql = "SELECT * FROM DirectorioSocio WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_directorio . " ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$response_otros = array();
				$directorio[ "IDClub" ] = $r[ "IDClub" ];
				$directorio[ "IDDirectorioSocio" ] = $r[ "IDDirectorioSocio" ];
				$directorio[ "Nombre" ] = $r[ "Nombre" ];
				$directorio[ "Telefono" ] = $r[ "Telefono" ];
				$directorio[ "PermiteCalificacion" ] = $r[ "PermiteCalificar" ];
				$directorio[ "MostrarIcono" ] = $r[ "MostrarIcono" ];

				if ( !empty( $r[ "Foto1" ] ) ):
					$foto = DIRECTORIO_ROOT . $r[ "Foto1" ];
				else :
					$foto = "";
				endif;

				$directorio[ "Foto" ] = $foto;

				$icono_telefono=$dbo->getFields( "Club", "IconoTelefono", "IDClub = '" . $id_club . "'" );
				if ( !empty( $icono_telefono ) ):
					$fototelefono = CLUB_ROOT . $icono_telefono;
				else :
					$fototelefono = "";
				endif;
				$directorio[ "IconoTelefono" ] = $fototelefono;


				//Otros datos
				if ( !empty( trim( $r[ "Descripcion" ] ) ) ):
					$array_otros[ "Campo" ] = "Descripción";
				$array_otros[ "Valor" ] =  $r[ "Descripcion" ];
				array_push( $response_otros, $array_otros );
				endif;

				if ( trim( $r[ "Email" ] ) <> "" ):
					$array_otros[ "Campo" ] = "Email";
				$array_otros[ "Valor" ] =  $r[ "Email" ] ;
				array_push( $response_otros, $array_otros );
				endif;

				$sql_otros = "Select * From CampoDirectorioSocioValor Where IDDirectorio = '" . $r[ "IDDirectorioSocio" ] . "'";
				$result_otros = $dbo->query( $sql_otros );
				while ( $row_otros = $dbo->fetchArray( $result_otros ) ):
					$array_otros[ "Campo" ] = $dbo->getFields( "CampoDirectorioSocio", "Nombre", "IDCampoDirectorioSocio = '" . $row_otros[ "IDCampoDirectorioSocio" ] . "'" );
				$array_otros[ "Valor" ] = $row_otros[ "Valor" ];
				array_push( $response_otros, $array_otros );
				endwhile;

				$directorio[ "OtrosDatos" ] = $response_otros;

				array_push( $response, $directorio );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_categoria_directorio( $IDClub , $IDCategoria = "", $Tag="")
	{

		$dbo =& SIMDB::get();


		// Seccion Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDCategoriaDirectorio  = '".$IDCategoria."'";
		endif;

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_producto = " and " .$condiciones;
		endif;



		$response = array();
		$response_lista_producto = array();
		$sql = "SELECT * FROM CategoriaDirectorio WHERE Publicar = 'S' and IDClub = '".$IDClub."'" . $condiciones_producto ." ORDER BY Orden ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$categoria_directorio["IDClub"] = $r["IDClub"];
				$categoria_directorio["IDCategoriaDirectorio"] = $r["IDCategoriaDirectorio"];
				$categoria_directorio["NombreCategoria"] = $r["Nombre"];
				$categoria_directorio["DescripcionCategoria"] = $r["Descripcion"];
				//Busco los registros de la categoria
				$response_detalle_directorio = array();

				$sql_directorio = "Select * From Directorio Where IDCategoriaDirectorio = '".$r["IDCategoriaDirectorio"]."' and Publicar = 'S' Order by Nombre " ;
				$result_directorio = $dbo->query($sql_directorio);
				while($row_directorio = $dbo->fetchArray($result_directorio)):
					$response_otros = array();
					$array_otros=array();
					$directorio[ "IDClub" ] = $row_directorio[ "IDClub" ];
					$directorio[ "IDDirectorio" ] = $row_directorio[ "IDDirectorio" ];
					$directorio[ "Nombre" ] = $row_directorio[ "Nombre" ];
					$directorio[ "Telefono" ] = $row_directorio[ "Telefono" ];

					$directorio[ "PermiteCalificacion" ] = $row_directorio[ "PermiteCalificar" ];
					if ( !empty( $row_directorio[ "Foto1" ] ) ):
						$foto = DIRECTORIO_ROOT . $row_directorio[ "Foto1" ];
					else :
						$foto = "";
					endif;
					$directorio[ "Foto" ] = $foto;

					//Otros datos
					if ( !empty( trim( $row_directorio[ "Descripcion" ] ) ) ):
						$array_otros[ "Campo" ] = "Descripción";
					$array_otros[ "Valor" ] =  $row_directorio[ "Descripcion" ] ;
					array_push( $response_otros, $array_otros );
					endif;

					if ( trim( $row_directorio[ "Email" ] ) <> "" ):
						$array_otros[ "Campo" ] = "Email";
					$array_otros[ "Valor" ] =  $row_directorio[ "Email" ] ;
					array_push( $response_otros, $array_otros );
					endif;

					$sql_otros = "Select * From CampoDirectorioClubValor Where IDDirectorio = '" . $row_directorio[ "IDDirectorio" ] . "'";
					$result_otros = $dbo->query( $sql_otros );
					while ( $row_otros = $dbo->fetchArray( $result_otros ) ):
						$array_otros[ "Campo" ] = $dbo->getFields( "CampoDirectorioClub", "Nombre", "IDCampoDirectorioClub = '" . $row_otros[ "IDCampoDirectorioClub" ] . "'" );
					$array_otros[ "Valor" ] = $row_otros[ "Valor" ];
					array_push( $response_otros, $array_otros );
					endwhile;

					$directorio[ "OtrosDatos" ] = $response_otros;
					array_push($response_detalle_directorio, $directorio);
				endwhile;

				$categoria_directorio["Registros"] = $response_detalle_directorio;
				array_push($response, $categoria_directorio);

			}//ednw hile

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_categoria_directorio_socio( $IDClub , $IDCategoria = "", $Tag="")
	{

		$dbo =& SIMDB::get();


		// Seccion Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDCategoriaDirectorioSocio  = '".$IDCategoria."'";
		endif;

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_producto = " and " .$condiciones;
		endif;



		$response = array();
		$response_lista_producto = array();
		$sql = "SELECT * FROM CategoriaDirectorioSocio WHERE Publicar = 'S' and IDClub = '".$IDClub."'" . $condiciones_producto ." ORDER BY Orden ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$categoria_directorio["IDClub"] = $r["IDClub"];
				$categoria_directorio["IDCategoriaDirectorioSocio"] = $r["IDCategoriaDirectorioSocio"];
				$categoria_directorio["NombreCategoria"] = $r["Nombre"];
				$categoria_directorio["DescripcionCategoria"] = $r["Descripcion"];
				//Busco los registros de la categoria
				$response_detalle_directorio = array();

				$sql_directorio = "Select * From DirectorioSocio Where IDCategoriaDirectorioSocio = '".$r["IDCategoriaDirectorioSocio"]."' and Publicar = 'S'" ;
				$result_directorio = $dbo->query($sql_directorio);
				while($row_directorio = $dbo->fetchArray($result_directorio)):
					$array_otros=array();
					$response_otros = array();

					$directorio[ "IDClub" ] = $row_directorio[ "IDClub" ];
					$directorio[ "IDDirectorioSocio" ] = $row_directorio[ "IDDirectorioSocio" ];
					$directorio[ "Nombre" ] = $row_directorio[ "Nombre" ];
					$directorio[ "Telefono" ] = $row_directorio[ "Telefono" ];
					$directorio[ "PermiteCalificacion" ] = $row_directorio[ "PermiteCalificar" ];
					if ( !empty( $row_directorio[ "Foto1" ] ) ):
						$foto = DIRECTORIO_ROOT . $row_directorio[ "Foto1" ];
					else :
						$foto = "";
					endif;
					$directorio[ "Foto" ] = $foto;

					//Otros datos
					if ( !empty( trim( $row_directorio[ "Descripcion" ] ) ) ):
						$array_otros[ "Campo" ] = "Descripción";
						$array_otros[ "Valor" ] =  $row_directorio[ "Descripcion" ] ;
						array_push( $response_otros, $array_otros );
					endif;

					if ( trim( $row_directorio[ "Email" ] ) <> "" ):
						$array_otros[ "Campo" ] = "Email";
					$array_otros[ "Valor" ] =  $row_directorio[ "Email" ] ;
					array_push( $response_otros, $array_otros );
					endif;

					$sql_otros = "Select * From CampoDirectorioSocioValor Where IDDirectorioSocio = '" . $row_directorio[ "IDDirectorioSocio" ] . "'";
					$result_otros = $dbo->query( $sql_otros );
					while ( $row_otros = $dbo->fetchArray( $result_otros ) ):
						$array_otros[ "Campo" ] = $dbo->getFields( "CampoDirectorioSocio", "Nombre", "IDCampoDirectorioSocio = '" . $row_otros[ "IDCampoDirectorioSocio" ] . "'" );
					$array_otros[ "Valor" ] = $row_otros[ "Valor" ];
					array_push( $response_otros, $array_otros );
					endwhile;

					$directorio[ "OtrosDatos" ] = $response_otros;

					array_push($response_detalle_directorio, $directorio);
				endwhile;

				$categoria_directorio["Registros"] = $response_detalle_directorio;
				array_push($response, $categoria_directorio);

			}//ednw hile

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_restaurante( $id_club ) {
		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM Restaurante WHERE Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$restaurante[ "IDClub" ] = $r[ "IDClub" ];
				$restaurante[ "IDRestaurante" ] = $r[ "IDRestaurante" ];
				$restaurante[ "Nombre" ] = $r[ "Nombre" ];
				$restaurante[ "Lugar" ] = $r[ "Lugar" ];
				$restaurante[ "Menu" ] = nl2br( $r[ "Menu" ] );
				$restaurante[ "Horario" ] = $r[ "Horario" ];
				$restaurante[ "Localizacion" ] = $r[ "Localizacion" ];

				if ( !empty( $r[ "RestauranteFile" ] ) ):
					$foto1 = IMGEVENTO_ROOT . $r[ "RestauranteFile" ];
				else :
					$foto1 = "";
				endif;

				$restaurante[ "Foto" ] = $foto1;

				if ( !empty( $r[ "RestauranteIcono" ] ) ):
					$fotoicono = IMGEVENTO_ROOT . $r[ "RestauranteIcono" ];
				else :
					$fotoicono = "";
				endif;

				$restaurante[ "Icono" ] = $fotoicono;

				//Para la carta

				if ( !empty( $r[ "CartaFile" ] ) ):
					$foto1 = IMGEVENTO_ROOT . $r[ "CartaFile" ];
				else :
					$foto1 = "";
				endif;
				$restaurante[ "FotoCarta" ] = "";


				$fotos_carta = array();
				$fotos_carta[] = $foto1;

				//Para la carta
				if ( !empty( $r[ "CartaFile2" ] ) ):
					$foto2 = IMGEVENTO_ROOT . $r[ "CartaFile2" ];
				$fotos_carta[] = $foto2;
				else :
					$foto2 = "";
				endif;
				//$restaurante["FotoCarta2"] = $foto2;



				//Para la carta
				if ( !empty( $r[ "CartaFile3" ] ) ):
					$foto3 = IMGEVENTO_ROOT . $r[ "CartaFile3" ];
				$fotos_carta[] = $foto3;
				else :
					$foto3 = "";
				endif;
				//$restaurante["FotoCarta3"] = $foto3;



				//Para la carta
				if ( !empty( $r[ "CartaFile4" ] ) ):
					$foto4 = IMGEVENTO_ROOT . $r[ "CartaFile4" ];
				$fotos_carta[] = $foto4;
				else :
					$foto4 = "";
				endif;
				//$restaurante["FotoCarta4"] = $foto4;


				//Para la carta
				if ( !empty( $r[ "CartaFile5" ] ) ):
					$foto5 = IMGEVENTO_ROOT . $r[ "CartaFile5" ];
				$fotos_carta[] = $foto5;
				else :
					$foto5 = "";
				endif;


				//Para la carta
				if ( !empty( $r[ "CartaFile6" ] ) ):
					$foto6 = IMGEVENTO_ROOT . $r[ "CartaFile6" ];
				$fotos_carta[] = $foto6;
				else :
					$foto6 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile7" ] ) ):
					$foto7 = IMGEVENTO_ROOT . $r[ "CartaFile7" ];
				$fotos_carta[] = $foto7;
				else :
					$foto7 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile8" ] ) ):
					$foto8 = IMGEVENTO_ROOT . $r[ "CartaFile8" ];
				$fotos_carta[] = $foto8;
				else :
					$foto8 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile9" ] ) ):
					$foto9 = IMGEVENTO_ROOT . $r[ "CartaFile9" ];
				$fotos_carta[] = $foto9;
				else :
					$foto9 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile10" ] ) ):
					$foto10 = IMGEVENTO_ROOT . $r[ "CartaFile10" ];
				$fotos_carta[] = $foto10;
				else :
					$foto10 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile11" ] ) ):
					$foto11 = IMGEVENTO_ROOT . $r[ "CartaFile11" ];
				$fotos_carta[] = $foto11;
				else :
					$fot11 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile12" ] ) ):
					$foto12 = IMGEVENTO_ROOT . $r[ "CartaFile12" ];
				$fotos_carta[] = $foto12;
				else :
					$foto12 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile13" ] ) ):
					$foto13 = IMGEVENTO_ROOT . $r[ "CartaFile13" ];
				$fotos_carta[] = $foto13;
				else :
					$foto13 = "";
				endif;

				//Para la carta
				if ( !empty( $r[ "CartaFile14" ] ) ):
					$foto14 = IMGEVENTO_ROOT . $r[ "CartaFile14" ];
				$fotos_carta[] = $foto14;
				else :
					$foto14 = "";
				endif;





				$restaurante[ "fotoscarta" ] = $fotos_carta;



				array_push( $response, $restaurante );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_documento( $id_club, $id_tipo_archivo = "", $id_servicio = "" ) {
		$dbo = & SIMDB::get();


		//inserta _log
		//$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros) Values ('get_documento','TipoArchivo: ".$id_tipo_archivo. " IDServicio:" . $id_servicio . "')");

		// Tipo Archivo Especifico
		if ( !empty( $id_tipo_archivo ) ):
			$condiciones = " and IDTipoArchivo  = '" . $id_tipo_archivo . "'";
		endif;

		// Servicio Especifico
		if ( !empty( $id_servicio ) ):
			$condiciones = " and IDServicio  = '" . $id_servicio . "'";
		endif;


		$response = array();
		$sql = "SELECT * FROM Documento WHERE Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones . " ORDER BY Fecha DESC";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$documento[ "IDClub" ] = $r[ "IDClub" ];
				$documento[ "IDTipoArchivo" ] = $r[ "IDTipoArchivo" ];
				$documento[ "TipoArchivo" ] = $dbo->getFields( "TipoArchivo", "Nombre", "IDTipoArchivo = '" . $r[ "IDTipoArchivo" ] . "'" );

				$foto_servicio = "";
				if ( !empty( $r[ "Icono" ] ) ):
					$foto_servicio = DOCUMENTO_ROOT . $r[ "Icono" ];
				else :
					$foto_servicio = "";
				endif;


				if ( empty( $r[ "IDServicio" ] ) ):
					$servicio = "";
				$id_servicio = "";
				else :
					$id_servicio = $r[ "IDServicio" ];
				$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $r[ "IDServicio" ] . "'" );
				$servicio = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
				$icono_servicio = $dbo->getFields( "Servicio", "Icono", "IDServicio = '" . $r[ "IDServicio" ] . "'" );

				if ( empty( $foto_servicio ) ):
					if ( !empty( $icono_servicio ) ):
						$foto_servicio = SERVICIO_ROOT . $icono_servicio;
					else :
						$foto_servicio = "";
				endif;
				endif;
				endif;

				$documento[ "IDServicio" ] = $id_servicio;
				//$documento["Servicio"] = $servicio;
				$documento[ "Servicio" ] = $r[ "Nombre" ];
				$documento[ "IconoServicio" ] = $foto_servicio;
				$documento[ "IDDocumento" ] = $r[ "IDDocumento" ];
				$documento[ "Titular" ] = $r[ "Nombre" ];
				$documento[ "Subtitular" ] = $r[ "Subtitular" ];
				$documento[ "Fecha" ] = $r[ "Fecha" ];
				$documento[ "Descripcion" ] = $r[ "Descripcion" ];
				//ruta temporal =
				$ruta_temporal = str_replace( "https", "http", DOCUMENTO_ROOT );
				$ruta_temporal = DOCUMENTO_ROOT;
				if ( !empty( $r[ "Archivo1" ] ) ):
					$archivo = $ruta_temporal . $r[ "Archivo1" ];
				else :
					$archivo = "";
				endif;
				$documento[ "Documento" ] = $archivo;
				array_push( $response, $documento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_documento_personal( $id_club, $IDSocio) {
		$dbo = & SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM DocumentoPersonal WHERE Publicar = 'S' and IDClub = '" . $id_club . "' and IDSocio = '".$IDSocio."' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$documento[ "IDClub" ] = $r[ "IDClub" ];
				$foto_servicio = "";
				if ( !empty( $r[ "Icono" ] ) ):
					$foto_servicio = DOCUMENTO_ROOT . $r[ "Icono" ];
				else :
					$foto_servicio = "";
				endif;

				$documento[ "IconoServicio" ] = $foto_servicio;
				$documento[ "IDDocumentoPersonal" ] = $r[ "IDDocumentoPersonal" ];
				$documento[ "Nombre" ] = $r[ "Nombre" ];
				$documento[ "Fecha" ] = $r[ "Fecha" ];
				$documento[ "Descripcion" ] = $r[ "Descripcion" ];
				//ruta temporal =
				$ruta_temporal = str_replace( "https", "http", DOCUMENTO_ROOT );
				$ruta_temporal = DOCUMENTO_ROOT;
				if ( !empty( $r[ "Archivo1" ] ) ):
					$archivo = $ruta_temporal . $r[ "Archivo1" ];
				else :
					$archivo = "";
				endif;
				$documento[ "Documento" ] = $archivo;
				array_push( $response, $documento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function





	function get_tipoarchivo( $IDClub, $id_tipo_archivo = "",$IDSubmodulo="" ) {
		$dbo = & SIMDB::get();

		// Tipo Archivo Especifico
		if ( !empty( $id_tipo_archivo ) ):
			$condiciones = " and IDTipoArchivo  = '" . $id_tipo_archivo . "'";
		endif;


		$response = array();
		$sql = "SELECT * FROM TipoArchivo WHERE Publicar = 'S' " . $condiciones . " ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$activo_tipoarchivo = $dbo->getFields( "ClubTipoArchivo", "Activo", "IDTipoArchivo = '" . $r[ "IDTipoArchivo" ] . "' and IDClub = '" . $IDClub . "'" );
				if ( $activo_tipoarchivo == "S" ):
					$foto = "";
				$foto_icono = $dbo->getFields( "ClubTipoArchivo", "Icono", "IDTipoArchivo = '" . $r[ "IDTipoArchivo" ] . "' and IDClub = '" . $IDClub . "'" );
				if ( !empty( $foto_icono ) ) {
					$foto = CLIENTE_ROOT . $foto_icono;
				}

				if ( !empty( $r[ "Icono" ] ) && empty( $foto ) ) {
					$foto = CLIENTE_ROOT . $r[ "Icono" ];
				}

				$tipo_archivo[ "IDTipoArchivo" ] = $r[ "IDTipoArchivo" ];

				$nombre_tipoarchivo = $dbo->getFields( "ClubTipoArchivo", "NombreTipoArchivo", "IDTipoArchivo = '" . $r[ "IDTipoArchivo" ] . "' and IDClub = '" . $IDClub . "'" );
				$tipo_archivo[ "Nombre" ] = $r[ "Nombre" ];


				if ( !empty( $nombre_tipoarchivo ) ):
					$tipo_archivo[ "Label" ] = $nombre_tipoarchivo;
				else :
					$tipo_archivo[ "Label" ] = $r[ "Nombre" ];
				endif;

				$tipo_archivo[ "Icono" ] = $foto;
				array_push( $response, $tipo_archivo );
				endif;

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_tipo_pqr( $IDClub ) {
		$dbo = & SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM TipoPqr WHERE Publicar = 'S' and IDClub = '" . $IDClub . "' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$tipo_pqr[ "IDTipoPqr" ] = $r[ "IDTipoPqr" ];
				$tipo_pqr[ "Nombre" ] = $r[ "Nombre" ];
				array_push( $response, $tipo_pqr );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registro";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_galeria( $id_club, $id_seccion = "", $id_socio = "", $tag = "" ) {
		$dbo = & SIMDB::get();

		// Secciones Socio
		if ( !empty( $id_socio ) ):
			/*
			$sql_seccion_socio = $dbo->query("Select * From SocioSeccionGaleria Where IDSocio = '".$id_socio."'");
			while ($row_seccion = $dbo->fetchArray($sql_seccion_socio)):
				$array_secciones_socio[] = $row_seccion["IDSeccionGaleria"];
			endwhile;

			if (count($array_secciones_socio)>0):
				$id_secciones = implode(",",$array_secciones_socio);
				$array_condiciones[] = " IDSeccionGaleria in(".$id_secciones.") ";
			endif;
			*/
			$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $id_socio . "'" );
			if($id_club==36 && $TipoSocio=="Estudiante"){
				$array_condiciones[] = " TipoSocio = 'Estudiante'";
			}
			else{
				$array_condiciones[] = " TipoSocio = ''";
			}
			endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccionGaleria  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%')";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_galeria = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Galeria WHERE (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_galeria . " Order by Fecha DESC";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( !empty( $r[ "Foto" ] ) ) {
					if ( strstr( strtolower( $r[ "Foto" ] ), "http://" ) )
						$foto_principal = $r[ "Foto" ];
					else
						$foto_principal = GALERIA_ROOT . $r[ "Foto" ];

					//$foto_principal = GALERIA_ROOT.$r["Foto"];
				}

				//Fotos
				$response_foto = array();
				$sql_foto = "SELECT * FROM FotoGaleria WHERE IDGaleria = '" . $r[ "IDGaleria" ] . "' ORDER BY Orden ASC";
				$qry_foto = $dbo->query( $sql_foto );
				if ( $dbo->rows( $qry_foto ) > 0 ) {
					while ( $r_foto = $dbo->fetchArray( $qry_foto ) ) {
						$foto_galeria[ "IDClub" ] = $id_club;
						$foto_galeria[ "IDFoto" ] = $r_foto[ "IDFoto" ];
						$foto_galeria[ "IDGaleria" ] = $r_foto[ "IDGaleria" ];
						$foto_galeria[ "Nombre" ] = $r_foto[ "Nombre" ];
						$foto_galeria[ "Orden" ] = $r_foto[ "Orden" ];
						$foto_galeria[ "Descripcion" ] = $r_foto[ "Descripcion" ];
						if ( !empty( $r_foto[ "Foto" ] ) ):
							if ( strstr( strtolower( $r_foto[ "Foto" ] ), "http://" ) )
								$foto = $r_foto[ "Foto" ];
							else
								$foto = GALERIA_ROOT . $r_foto[ "Foto" ];
						else :
							$foto = "";
						endif;
						$foto_galeria[ "Foto" ] = $foto;
						array_push( $response_foto, $foto_galeria );

					} //ednw hile
				}



				$datos_galeria[ "IDClub" ] = $r[ "IDClub" ];
				$datos_galeria[ "IDSeccionGaleria" ] = $r[ "IDSeccionGaleria" ];
				$datos_galeria[ "IDGaleria" ] = $r[ "IDGaleria" ];
				$datos_galeria[ "Nombre" ] = $r[ "Nombre" ];
				$datos_galeria[ "Descripcion" ] = $r[ "Descripcion" ];
				$datos_galeria[ "Fecha" ] = $r[ "Fecha" ];
				$datos_galeria[ "Foto" ] = $foto_principal;
				$datos_galeria[ "FotoGaleria" ] = $response_foto;
				array_push( $response, $datos_galeria );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado club";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_galeria_empleados( $id_club, $id_seccion = "", $id_usuario = "", $tag = "" ) {
		$dbo = & SIMDB::get();

		// Secciones Socio
		if ( !empty( $id_usuario ) ):
			$sql_seccion_empleado = $dbo->query( "Select * From UsuarioSeccionGaleria Where IDSocio = '" . $id_usuario . "'" );
		while ( $row_seccion = $dbo->fetchArray( $sql_seccion_empleado ) ):
			$array_secciones_empleado[] = $row_seccion[ "IDSeccionGaleria" ];
		endwhile;

		if ( count( $array_secciones_empleado ) > 0 ):
			$id_secciones = implode( ",", $array_secciones_empleado );
		$array_condiciones[] = " IDSeccionGaleria in(" . $id_secciones . ") ";
		endif;
		endif;

		// Seccion Especifica
		if ( !empty( $id_seccion ) ):
			$array_condiciones[] = " IDSeccionGaleria  = '" . $id_seccion . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (Nombre  like '%" . $tag . "%' or Descripcion like '%" . $tag . "%')";
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_galeria = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Galeria WHERE (DirigidoA = 'E' or DirigidoA = 'T' ) and Publicar = 'S' and IDClub = '" . $id_club . "' " . $condiciones_galeria;
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( !empty( $r[ "Foto" ] ) ) {
					if ( strstr( strtolower( $r[ "Foto" ] ), "http://" ) )
						$foto_principal = $r[ "Foto" ];
					else
						$foto_principal = GALERIA_ROOT . $r[ "Foto" ];

					//$foto_principal = GALERIA_ROOT.$r["Foto"];
				}

				//Fotos
				$response_foto = array();
				$sql_foto = "SELECT * FROM FotoGaleria WHERE IDGaleria = '" . $r[ "IDGaleria" ] . "' ORDER BY RAND()";
				$qry_foto = $dbo->query( $sql_foto );
				if ( $dbo->rows( $qry_foto ) > 0 ) {
					while ( $r_foto = $dbo->fetchArray( $qry_foto ) ) {
						$foto_galeria[ "IDClub" ] = $id_club;
						$foto_galeria[ "IDFoto" ] = $r_foto[ "IDFoto" ];
						$foto_galeria[ "IDGaleria" ] = $r_foto[ "IDGaleria" ];
						$foto_galeria[ "Nombre" ] = $r_foto[ "Nombre" ];
						$foto_galeria[ "Orden" ] = $r_foto[ "Orden" ];
						$foto_galeria[ "Descripcion" ] = $r_foto[ "Descripcion" ];
						if ( !empty( $r_foto[ "Foto" ] ) ):
							if ( strstr( strtolower( $r_foto[ "Foto" ] ), "http://" ) )
								$foto = $r_foto[ "Foto" ];
							else
								$foto = GALERIA_ROOT . $r_foto[ "Foto" ];
						else :
							$foto = "";
						endif;
						$foto_galeria[ "Foto" ] = $foto;
						array_push( $response_foto, $foto_galeria );

					} //ednw hile
				}



				$datos_galeria[ "IDClub" ] = $r[ "IDClub" ];
				$datos_galeria[ "IDSeccionGaleria" ] = $r[ "IDSeccionGaleria" ];
				$datos_galeria[ "IDGaleria" ] = $r[ "IDGaleria" ];
				$datos_galeria[ "Nombre" ] = $r[ "Nombre" ];
				$datos_galeria[ "Descripcion" ] = $r[ "Descripcion" ];
				$datos_galeria[ "Fecha" ] = $r[ "Fecha" ];
				$datos_galeria[ "Foto" ] = $foto_principal;
				$datos_galeria[ "FotoGaleria" ] = $response_foto;
				array_push( $response, $datos_galeria );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado club";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_socios_club( $id_club, $numero_documento = "", $numero_derecho = "", $tag = "", $IDSocio = "" ) {
		$dbo = & SIMDB::get();

		$foto="";

		// Secciones Socio
		if ( !empty( $numero_documento ) ):
			$array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
		endif;

		// Seccion Especifica
		if ( !empty( $numero_derecho ) ):
			$array_condiciones[] = " Accion  = '" . $numero_derecho . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$tag = utf8_decode( $tag );
			$array_buscar=explode(" ",$tag);
			foreach ($array_buscar as $key => $value) {
				$array_condiciones_nombre[] = " (	Nombre  like '%" . $value . "%' or Apellido like '%" . $value . "%' or Accion like '%" . $value . "%' or NumeroDocumento like '%" . $value . "%' or Accion like '%" . $value . "%' or Predio like '%" . $value . "%' )";
			}
			if(count($array_condiciones_nombre)>0){
				$condicion_nombre=implode(" and ",$array_condiciones_nombre);
			}


			$array_condiciones[] = $condicion_nombre;
		endif;

		if ( !empty( $IDSocio ) && empty( $tag ) ):
			$sql_fav = "SELECT * FROM SocioFavorito WHERE IDSocio = '" . $IDSocio . "'";
		$qry_fav = $dbo->query( $sql_fav );
		while ( $r_fav = $dbo->fetchArray( $qry_fav ) ) {
			$array_favoritos[] = $r_fav[ "IDSocio2" ];
		}
		if ( count( $array_favoritos ) > 0 ):
			$array_condiciones[] = " IDSocio  in  (" . implode( ",", $array_favoritos ) . ")";
		else :
			$array_condiciones[] = " IDSocio  in  (0)";
		endif;
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and IDEstadoSocio = 1 and IDSocio <> '" . $IDSocio . "'" . $condiciones_noticia . " ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {

			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$evento[ "IDClub" ] = $r[ "IDClub" ];
				$evento[ "IDSocio" ] = $r[ "IDSocio" ];

				if ( !empty( $r[ "Foto" ] ) ) {
					$foto = SOCIO_ROOT . $r[ "Foto" ];
				}

				$favorito = "N";
				if ( !empty( $IDSocio ) ):
					$socio_favorito = $dbo->getFields( "SocioFavorito", "IDSocioFavorito", "IDSocio = '" . $IDSocio . "' and IDSocio2 = '" . $r[ "IDSocio" ] . "'" );
				if ( !empty( $socio_favorito ) ):
					$favorito = "S";
				else :
					$favorito = "N";
				endif;
				endif;

				$evento[ "Foto" ] = $foto;
				$evento[ "Socio" ] =  $r[ "Nombre" ] . " " . $r[ "Apellido" ] ;
				$evento[ "Favorito" ] = $favorito;
				$evento[ "NumeroDerecho" ] = $r[ "Accion" ];
				$evento[ "Predio" ] = $r[ "Predio" ];
				array_push( $response, $evento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "Por favor utilice el buscador , no se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function get_info_socio( $IDClub, $IDSocio,$AppVersion,$Data,$TipoApp ) {
		$dbo = & SIMDB::get();
		$response = array();
		$id_club=$IDClub;

		if($AppVersion>=31 && !empty($Data)){
			$valornonce=substr($Data,0,48);
			$valorencrip=substr($Data,48);
			$param['key']=KEY_API;
			$param['chiper']=$valorencrip;
			$param['nonce']=$valornonce;
			$result_decrypt=SIMUtil::decryptSodium($param);
				if($result_decrypt["decryptedText"]=="nodecrypt"){
					$respuesta[ "message" ] = "ENCRIPT. No";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
				}
				else{
					$result_decrypt["decryptedText"];
					$texto_desencrip=json_decode($result_decrypt["decryptedText"]);
					$IDSocio=$texto_desencrip;

					$sql_campos_carne="SELECT IDCampoCarne,Nombre,CampoTabla From CampoCarne Where 1";
					$r_campo_carne=$dbo->query($sql_campos_carne);
					while($row_campo_carne = $dbo->fetchArray($r_campo_carne)){
						$array_campo_carne[$row_campo_carne["IDCampoCarne"]]=$row_campo_carne;
					}


						if($TipoApp=="Socio"){


							$sql_verifica = "SELECT * FROM Socio WHERE IDSocio = '".$IDSocio."' Limit 1";
							$qry_verifica = $dbo->query( $sql_verifica );
							if ( $dbo->rows( $qry_verifica ) == 0 ) {
								$respuesta[ "message" ] = "Datos no encontrados";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
							else{

							$datos_socio = $dbo->fetchArray( $qry_verifica );

							//Borro el id de socios que tienen que cerrar sesion obligatoriamente
							$sql_borra_sesion = "delete from CierreSesionSocio Where IDSocio ='" . $datos_socio[ "IDSocio" ] . "' Limit 1";
							$dbo->query( $sql_borra_sesion );


							$flag_canje_cortesia = 0;

							//Si el socio es por canje o cortesia valido este activo segun las fechas

							switch ( $datos_socio[ "TipoSocio" ] ):
							case "Canje":
								$fecha_hoy = strtotime( date( "Y-m-d" ) );
								$FechaInicioCanje = strtotime( $datos_socio[ "FechaInicioCanje" ] );
								$FechaFinCanje = strtotime( $datos_socio[ "FechaFinCanje" ] );
								//echo $FechaInicioCanje.">=".$fecha_hoy ."&&". $fecha_hoy."<=".$FechaFinCanje;
								if ( $fecha_hoy >= $FechaInicioCanje && $fecha_hoy <= $FechaFinCanje ):
									$flag_canje_cortesia = 0;
								else :
									$flag_canje_cortesia = 1;
								endif;
								break;
							case "Cortesia":
								$fecha_hoy = strtotime( date( "Y-m-d" ) );
								$FechaInicioCortesia = strtotime( $datos_socio[ "FechaInicioCortesia" ] );
								$FechaFinCortesia = strtotime( $datos_socio[ "FechaFinCortesia" ] );
								if ( $fecha_hoy >= $FechaInicioCortesia && $fecha_hoy <= $FechaFinCortesia ):
									$flag_canje_cortesia = 0;
								else :
									$flag_canje_cortesia = 1;
								endif;
								break;
							case "Invitado":
								$fecha_hoy = strtotime( date( "Y-m-d" ) );
								$FechaInicioInvitado = strtotime( $datos_socio[ "FechaInicioInvitado" ] );
								$FechaFinInvitado = strtotime( $datos_socio[ "FechaFinInvitado" ] );
								if ( $fecha_hoy >= $FechaInicioInvitado && $fecha_hoy <= $FechaFinInvitado ):
									$flag_canje_cortesia = 0;
								else :
									$flag_canje_cortesia = 1;
								endif;
								break;
							default:
								$flag_canje_cortesia = 0;
								endswitch;



								if ( $flag_canje_cortesia == 0 ) {

									if ( !empty( $datos_socio[ "Foto" ] ) ) {
										$foto = SOCIO_ROOT . $datos_socio[ "Foto" ];
									}

									$tipo_codigo_carne = $dbo->getFields( "Club", "TipoCodigoCarne", "IDClub = '" . $id_club . "'" );

									switch ( $tipo_codigo_carne ) {
										case "Barras":
											if ( !empty( $datos_socio[ "CodigoBarras" ] ) ) {
												$foto_cod_barras = SOCIO_ROOT . $datos_socio[ "CodigoBarras" ];
											}
											break;
										case "QR":
											if ( !empty( $datos_socio[ "CodigoQR" ] ) ) {
												$foto_cod_barras = SOCIO_ROOT . "qr/" . $datos_socio[ "CodigoQR" ];
											}
											break;
										default:
											$foto_cod_barras = "";
									}

									//Consulto el nucleo familiar
									if ( !empty( $datos_socio[ "AccionPadre" ] ) ): // Es beneficiario
										$condicion_nucleo = " and (AccionPadre = '" . $datos_socio[ "AccionPadre" ] . "' or Accion = '" . $datos_socio[ "AccionPadre" ] . "')";
									//$tipo_socio = "Beneficiario";
									$tipo_socio = $datos_socio[ "TipoSocio" ];
									else : // es Cabeza familia
										$condicion_nucleo = " and AccionPadre = '" . $datos_socio[ "Accion" ] . "'";
									//$tipo_socio = "Socio";
									$tipo_socio = $datos_socio[ "TipoSocio" ];
									endif;

									if($id_club==50)
											$tipo_socio="Cargo: ";

									$tipo_socio .= " " . $datos_socio[ "Predio" ] . " " . $datos_socio[ "Torre" ] ;


									$response_nucleo = array();
									$sql_nucleo = "SELECT * FROM Socio WHERE IDClub = '" . $id_club . "' and IDSocio <> '" . $datos_socio[ "IDSocio" ] . "' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 ) and Accion <> '' " . $condicion_nucleo . " Limit 2";
									$qry_nucleo = $dbo->query( $sql_nucleo );
									while ( $datos_nucleo = $dbo->fetchArray( $qry_nucleo ) ):
										$foto_nucleo = "";
									$foto_cod_barras_nucleo = "";

									if ( !empty( $datos_nucleo[ "Foto" ] ) ) {
										$foto_nucleo = SOCIO_ROOT . $datos_nucleo[ "Foto" ];
									}

									switch ( $tipo_codigo_carne ) {
										case "Barras":
											if ( !empty( $datos_nucleo[ "CodigoBarras" ] ) ) {
												$foto_cod_barras_nucleo = SOCIO_ROOT . $datos_nucleo[ "CodigoBarras" ];
											}
											break;
										case "QR":
											if ( !empty( $datos_nucleo[ "CodigoQR" ] ) ) {
												$foto_cod_barras_nucleo = SOCIO_ROOT . "qr/" . $datos_nucleo[ "CodigoQR" ];
											}
											break;
										default:
											$foto_cod_barras_nucleo = "";
									}


									//if (!empty($datos_nucleo["CodigoBarras"])){
									//$foto_cod_barras_nucleo = 	SOCIO_ROOT.$datos_nucleo["CodigoBarras"];
									//}

									//Averiguo tipo: Socio o Beneficiario
									if ( !empty( $datos_nucleo[ "AccionPadre" ] ) ): // Es beneficiario
										$tipo_socio_nucleo = "Beneficiario";
									$tipo_socio_nucleo = $datos_nucleo[ "TipoSocio" ];
									else : // es Cabeza familia
										//$tipo_socio_nucleo = "Socio";
										$tipo_socio_nucleo = $datos_nucleo[ "TipoSocio" ];
									endif;


									if ( $id_club == 29 )
										$tipo_socio_nucleo .= " " . substr(  trim( $datos_nucleo[ "Predio" ] ) , 0, 16 );
									else
										$tipo_socio_nucleo .= " " .  trim( $datos_nucleo[ "Predio" ]  );


									$nucleo[ "IDSocio" ] = $datos_nucleo[ IDSocio ];
									$nucleo[ "IDClub" ] = $datos_nucleo[ IDClub ];
									$nucleo[ "Foto" ] = $foto_nucleo;
									$nucleo[ "Socio" ] =  $datos_nucleo[ "Nombre" ]  . " " .  $datos_nucleo[ "Apellido" ];
									$nucleo[ "NumeroDerecho" ] = $datos_nucleo[ "Accion" ];
									$nucleo[ "CodigoBarras" ] = $foto_cod_barras_nucleo;
									$nucleo[ "TipoSocio" ] =  $tipo_socio_nucleo;
									$nucleo[ "LabelEstadoUsuario" ] = $datos_nucleo[ "LabelEstadoUsuario" ];

									//Campos carne
									$array_carne_club_nucleo=array();
									$reponse_datos_carne_nucleo=array();
									$campo_mostrar_carne_nucleo=array();
									$CamposCarne=$dbo->getFields( "Club", "CampoCarne", "IDClub = '" . $id_club . "'" );
									if(!empty($CamposCarne)){
										$array_carne_club_nucleo=explode("|||",$CamposCarne);
										foreach($array_carne_club_nucleo as $DetalleCampoCarne){
											$EtiquetaCarne=$array_campo_carne[$DetalleCampoCarne]["Nombre"];
											$DatoCarne=$datos_nucleo[  $array_campo_carne[$DetalleCampoCarne]["CampoTabla"] ];
											$campo_mostrar_carne_nucleo[]=$EtiquetaCarne . " " . $DatoCarne;
										}
									}
									$nucleo[ "ValoresCarnet" ] = $campo_mostrar_carne_nucleo;

									array_push( $response_nucleo, $nucleo );





									/*
									$array_nucleo[$datos_nucleo[IDSocio]][IDSocio] = $datos_nucleo[IDSocio];
									$array_nucleo[$datos_nucleo[IDSocio]][IDClub] = $datos_nucleo[IDClub];
									$array_nucleo[$datos_nucleo[IDSocio]][Foto] = $foto_nucleo;
									$array_nucleo[$datos_nucleo[IDSocio]][Socio] = $datos_nucleo[Socio];
									$array_nucleo[$datos_nucleo[IDSocio]][NumeroDerecho] = $datos_nucleo[Accion];
									$array_nucleo[$datos_nucleo[IDSocio]][CodigoBarras] = $foto_cod_barras_nucleo;
									*/

									if($id_club == 70 || $id_club==9){
										self::set_socio_favorito( $id_club, $datos_socio[ "IDSocio" ], $datos_nucleo[ "IDSocio" ], "S" );
									}

									endwhile;


									//Preferencias Contenido
									$response_seccion_noticia = array();
									$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
									while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
										$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
									$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
									$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
									array_push( $response_seccion_noticia, $seccion_noticia );
									/*
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
									*/
									endwhile;

									$response_seccion_noticia2 = array();
									$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion2 Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
									while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
										$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
									$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
									$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
									array_push( $response_seccion_noticia2, $seccion_noticia );
									/*
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
									*/
									endwhile;

									$response_seccion_noticia3 = array();
									$sql_seccionnot_socio = $dbo->query( "Select * From SocioSeccion3 Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
									while ( $r_seccionnot_socio = $dbo->fetchArray( $sql_seccionnot_socio ) ):
										$seccion_noticia[ IDSocio ] = $datos_socio[ "IDSocio" ];
										$seccion_noticia[ IDClub ] = $datos_socio[ "IDClub" ];
										$seccion_noticia[ IDSeccion ] = $r_seccionnot_socio[ "IDSeccion" ];
										array_push( $response_seccion_noticia3, $seccion_noticia );
									/*
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSocio] = $datos_socio["IDSocio"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDClub] = $datos_socio["IDClub"];
									$array_preferencia_contenido[$r_seccionnot_socio["IDSeccion"]][IDSeccion] = $r_seccionnot_socio["IDSeccion"];
									*/
									endwhile;

									//Preferencias Eventos
									$response_seccion_evento = array();
									$sql_seccioneve_socio = $dbo->query( "Select * From SocioSeccionEvento Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
									while ( $r_seccioneve_socio = $dbo->fetchArray( $sql_seccioneve_socio ) ):
										$seccion_evento[ IDSocio ] = $datos_socio[ "IDSocio" ];
									$seccion_evento[ IDClub ] = $datos_socio[ "IDClub" ];
									$seccion_evento[ IDSeccionEvento ] = $r_seccioneve_socio[ "IDSeccionEvento" ];
									array_push( $response_seccion_evento, $seccion_evento );
									endwhile;


									//Socios Favoritos
									$response_favoritos = array();
									$sql_favorito_socio = $dbo->query( "Select * From SocioFavorito Where IDSocio = '" . $datos_socio[ "IDSocio" ] . "'" );
									while ( $r_favorito_socio = $dbo->fetchArray( $sql_favorito_socio ) ):
										$favorito_socio[ IDSocio ] = $r_favorito_socio[ "IDSocio2" ];
									array_push( $response_favoritos, $favorito_socio );
									endwhile;



									$response[ "IDClub" ] = $datos_socio[ "IDClub" ];
									$response[ "IDSocio" ] = $datos_socio[ "IDSocio" ];
									$response[ "Foto" ] = $foto;
									$response[ "Socio" ] =  $datos_socio[ "Nombre" ] . " " . $datos_socio[ "Apellido" ] ;
									$response["Nombre"] =  $datos_socio["Nombre"] ." " .$datos_socio["Apellido"];
									$response["Apellido"] =  $datos_socio["Apellido"] ;
									$response["Celular"] =  $datos_socio["Celular"];
									$response["CorreoElectronico"] =  $datos_socio["CorreoElectronico"] ;
									$response["Direccion"] =  $datos_socio["Direccion"] ;
									$response["EstadoCivil"] =  $datos_socio["EstadoCivil"] ;
									$response["NumeroDocumento"] =  $datos_socio["NumeroDocumento"] ;

									if($id_club==46){
										$dato_carne=utf8_encode( $datos_socio["NumeroDocumento"] );
									}
									else{
											$dato_carne= $datos_socio[ "Accion" ] ;
									}

									$response[ "NumeroDerecho" ] = $dato_carne;
									$response[ "CodigoBarras" ] = $foto_cod_barras;
									$response[ "NucleoFamiliar" ] = $response_nucleo;
									$response[ "PreferenciasContenido" ] = $response_seccion_noticia;
									$response[ "PreferenciasContenido2" ] = $response_seccion_noticia2;
									$response[ "PreferenciasEvento" ] = $response_seccion_evento;
									$response[ "SocioFavorito" ] = $response_favoritos;
									$response[ "Dispositivo" ] = $datos_socio[ "Dispositivo" ];
									$response[ "Token" ] = $datos_socio[ "Token" ];
									$response[ "TipoSocio" ] = $tipo_socio;
									$response[ "TipoUsuario" ] = "Socio";
									$response[ "LabelEstadoUsuario" ] = $datos_socio[ "LabelEstadoUsuario" ];

									//Campos carne
									$array_carne_club=array();
									$reponse_datos_carne=array();
									$campo_mostrar_carne=array();
									$CamposCarne=$dbo->getFields( "Club", "CampoCarne", "IDClub = '" . $id_club . "'" );
									if(!empty($CamposCarne)){
										$array_carne_club=explode("|||",$CamposCarne);
										foreach($array_carne_club as $DetalleCampoCarne){
											$EtiquetaCarne=$array_campo_carne[$DetalleCampoCarne]["Nombre"];
											$DatoCarne=$datos_socio[  $array_campo_carne[$DetalleCampoCarne]["CampoTabla"] ];
											$campo_mostrar_carne[]=$EtiquetaCarne . " ".$DatoCarne;
										}
									}
									$response[ "ValoresCarnet" ] = $campo_mostrar_carne;




									//Si el club tiene configurado para solciitar cambio de clave al primer ingreso o el usuario esta marcado para cambio de clave
									$cambio_clave_club = $dbo->getFields( "Club", "SolicitaCambioClave", "IDClub = '" . $datos_socio[ "IDClub" ] . "'" );
									if ( ( empty( $datos_socio[ "Token" ] ) && empty( $datos_socio[ "Token" ] ) ) && $cambio_clave_club == "S" && ( empty( $datos_socio[ "CambioClave" ] ) || $datos_socio[ "CambioClave" ] == "S" ) ):
										$cambiar_clave = "S";
									elseif ( $cambio_clave_club == "S" ):
										$cambiar_clave = "S";
									else :
										$cambiar_clave = "N";
									endif;
									$response[ "CambioClave" ] = $datos_socio[ "CambioClave" ];
									$response[ "CambioSegundaClave" ] = $datos_socio[ "CambioSegundaClave" ];

									//Datos mostrar al editar perfil
									$response_campo_editar = array();
									/*
									$sql_campo_editar = "SELECT CES.* FROM ClubCampoEditarSocio CCES,CampoEditarSocio CES
																				WHERE CCES.`IDCampoEditarSocio`=CES.IDCampoEditarSocio and CCES.IDClub = '" . $id_club . "' ORDER BY CES.Orden";
									*/

									$sql_campo_editar = "SELECT CES.* FROM CampoEditarSocio CES
																			WHERE CES.IDClub = '" . $datos_socio[ "IDClub" ] . "' ORDER BY CES.Orden";

									$qry_campo_editar = $dbo->query( $sql_campo_editar );
									if ( $dbo->rows( $qry_campo_editar ) > 0 ) {
										while ( $r_campo_editar = $dbo->fetchArray( $qry_campo_editar ) ) {
											$campo_editar[ "IDCampoEditarSocio" ] = $r_campo_editar[ "IDCampoEditarSocio" ];
											$campo_editar[ "Nombre" ] = $r_campo_editar[ "Nombre" ];
											$campo_editar[ "Tipo" ] = $r_campo_editar[ "Tipo" ];
											$campo_editar[ "Valores" ] = trim(preg_replace('/\s+/', ' ', $r_campo_editar[ "Valores" ]));
											$campo_editar[ "PermiteEditar" ] = $r_campo_editar[ "PermiteEditar" ];
											//Consulto el valor de la actualización
											$ValorDatoCampo = $dbo->getFields( "SocioCampoEditarSocio" , "Valor" , "IDCampoEditarSocio = '".$r_campo_editar[ "IDCampoEditarSocio" ]."' and IDSocio = '".$datos_socio[ "IDSocio" ]."'" );
											if($ValorDatoCampo!="" && $ValorDatoCampo!="false")
												$ValorDato=$ValorDatoCampo;
											else{
												$ValorDato= $datos_socio[  $r_campo_editar[ "Nombre" ] ];

											}

											//$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
											$campo_editar[ "ValorActual" ] = trim(preg_replace('/\s+/', ' ', $ValorDato));

											$campo_editar[ "Obligatorio" ] = $r_campo_editar[ "Obligatorio" ];
											array_push( $response_campo_editar, $campo_editar );

										} //ednw while
									}
									$response[ "CampoEditar" ] = $response_campo_editar;



									if($AppVersion>=31){
										$respuesta=json_encode($response);
										$param['key']=KEY_API;
										$param['nonce']=sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
										$param['msg']=$respuesta;
										$result=SIMUtil::cryptSodium($param);

										//$response_encrip=array();
										//$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
										$respuesta=array();
										$respuesta[ "message" ] = "ok";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);

									}
									else{
										$respuesta[ "message" ] = "ok";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = $response;
									}

								} else {
									$respuesta[ "message" ] = "Lo sentimos, las fechas de la cortesia o canje ya vencieron";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}


						}
					}
						else{

								//Es un empleado
								$sql_verifica = "SELECT * FROM Usuario WHERE IDUsuario = '".$IDSocio ."'  and IDClub ='".$id_club."'";
								$qry_verifica = $dbo->query( $sql_verifica );
								$datos_usuario = $dbo->fetchArray( $qry_verifica );

								if( $dbo->rows( $qry_verifica ) == 0 )
								{
									$respuesta["message"] = "No encontrado";
									$respuesta["success"] = false;
									$respuesta["response"] = NULL;
								}//end if
								else{

									$CerrarSesion = $datos_usuario["SolicitarCierreSesion"];
									if($CerrarSesion=="S"){
										$condicion_modulo =" and IDModulo = 14 "; //cerrar sesion
									}

									//Modulos Sistema Menu Central
							$response_modulo = array();
							$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Central%' ".$condicion_modulo." ORDER BY Orden";
							$qry_modulo = $dbo->query( $sql_modulo );
							if( $dbo->rows( $qry_modulo ) > 0 )
							{
								while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
								{

									$agregar_modulo  = SIMWebserviceApp::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);


									if($agregar_modulo=="S"):
										// Verificar si el modulo tiene contenido para mostrar
										$flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
										//$flag_mostrar=0;
										if($flag_mostrar==0):
											$modulo["IDClub"] = $datos_usuario["IDClub"];
											$modulo["IDModulo"] = $r_modulo["IDModulo"];
											if(!empty($r_modulo["Titulo"]))
												$modulo["NombreModulo"] = $r_modulo["Titulo"];
											else
												$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );


											$modulo["Orden"] = $r_modulo["Orden"];
											$icono_modulo = $r_modulo["Icono"] ;
											if (!empty($r_modulo["Icono"])):
												$foto = MODULO_ROOT.$r_modulo["Icono"];
											else:
												$foto="";
											endif;
											$modulo["Icono"] = $foto;
											array_push($response_modulo, $modulo);
										endif;
									endif;

								}//ednw while
							}


										//Modulos Sistema Menu Lateral
										unset($modulo);
										$response_modulo_lateral = array();
										$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Lateral%'  ".$condicion_modulo." ORDER BY Orden";
										$qry_modulo = $dbo->query( $sql_modulo );
										if( $dbo->rows( $qry_modulo ) > 0 )
										{

											while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
											{
												$agregar_modulo  = SIMWebserviceApp::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

												if($agregar_modulo=="S"):
													// Verificar si el modulo tiene contenido para mostrar
													$flag_mostrar = SIMWebService::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
													//$flag_mostrar=0;
													if($flag_mostrar==0):
														$modulo["IDClub"] = $datos_usuario["IDClub"];
														$modulo["IDModulo"] = $r_modulo["IDModulo"];
														//$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
														if(!empty($r_modulo["Titulo"]))
															$modulo["NombreModulo"] = $r_modulo["Titulo"];
														else
															$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );

														$modulo["Orden"] = $r_modulo["Orden"];
														$icono_modulo = $r_modulo["Icono"] ;
														if (!empty($r_modulo["Icono"])):
															$foto = MODULO_ROOT.$r_modulo["Icono"];
														else:
															$foto="";
														endif;
														$modulo["Icono"] = $foto;
														array_push($response_modulo_lateral, $modulo);
													endif;
												endif;

											}//ednw while
										}

										//traer servicios del usuario
										$response_servicio = array();
										$sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $datos_usuario["IDUsuario"] . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
										$qry_servicios = $dbo->query( $sql_servicios );
										while( $r_servicio = $dbo->fetchArray( $qry_servicios  ) )
										{
												$servicio["IDClub"] = $datos_usuario["IDClub"];
												$servicio["IDServicio"] = $r_servicio["IDServicio"];
												$servicio["NombreServicio"] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' " );
												if (!empty($r_servicio["Icono"])):
													$foto = SERVICIO_ROOT.$r_servicio["Icono"];
												else:
													$foto="";
												endif;

												$servicio["Icono"] = $foto;
												//$servicio["ServicioInicial"] = $dbo->getFields( "ServicioInicial" , "Nombre" , "IDServicioInicial = '".$r_servicio["IDServicioInicial"]."'" );
												array_push($response_servicio, $servicio);

										}//end while

										$tipo_codigo_carne = $dbo->getFields( "AppEmpleado" , "TipoCodigoCarne" , "IDClub = '".$id_club."'" );
										switch($tipo_codigo_carne){
											case "Barras":
												if (!empty($datos_usuario["CodigoBarras"])){
													$foto_cod_barras = 	USUARIO_ROOT.$datos_usuario["CodigoBarras"];
												}
											break;
											case "QR":
												if (!empty($datos_usuario["CodigoQR"])){
													$foto_cod_barras = 	USUARIO_ROOT."qr/".$datos_usuario["CodigoQR"];
												}
											break;
											default:
											 $foto_cod_barras = 	"";
										}

										if (!empty($datos_usuario["Foto"])){
											$foto_empleado = 	USUARIO_ROOT.$datos_usuario["Foto"];
										}


										$response["IDClub"] = $datos_usuario["IDClub"];
										$response["IDUsuario"] = $datos_usuario["IDUsuario"];
										$response["IDPerfil"] = $datos_usuario["IDPerfil"];
										$response["Nombre"] = $datos_usuario["Nombre"];
										$response["Autorizado"] = $datos_usuario["Autorizado"];
										$response["Nivel"] = $datos_usuario["Nivel"];
										$response["Permiso"] = $datos_usuario["Permiso"];
										$response["ServiciosReserva"] = $response_servicio;
										$response["Modulos"] = $response_modulo;
										$response["ModulosLateral"] = $response_modulo_lateral;
										$response["CodigoBarras"] = $foto_cod_barras;
										$response["Dispositivo"] =  $datos_usuario["Dispositivo"];
										$response["Token"] = $datos_usuario["Token"];
										//$response["NumeroDerecho"] = $datos_usuario["CodigoUsuario"];
										$response["NumeroDerecho"] = "";
										//Consulto si el app esta configurado para permitir se puede cambiar p[ara que sea por usuario
										$response["PermiteInvitacionPortero"] = $dbo->getFields( "AppEmpleado" , "PermiteInvitacionPortero" , "IDClub = '".$id_club."'" );
										//Consulto las areas
										$sql_area_usuario="Select * From UsuarioArea Where IDUsuario = '".$datos_usuario["IDUsuario"]."'";
										$result_area_usuario=$dbo->query($sql_area_usuario);
										while($row_area=$dbo->fetchArray($result_area_usuario)):
											$nombre_area = utf8_encode($dbo->getFields( "Area" , "Nombre" , "IDArea = '".$row_area["IDArea"]."'" ));
											$array_areas [] = $nombre_area;
										endwhile;
										if(count($array_areas)>0):
											$nombre_areas = implode(",",$array_areas);
										endif;


										$nombre_areas="";
										$response["Area"] = $nombre_areas;
										$response["Cargo"] = utf8_encode($datos_usuario["Cargo"]);
										$response["Codigo"] = $datos_usuario["CodigoUsuario"];
										$response["PermiteReservar"] = $datos_usuario["PermiteReservar"];
										$response["Activo"] = $datos_usuario["Activo"];
										$response["Foto"] = $foto_empleado;
										$response["TipoUsuario"] =  "Empleado";


										//Encuestas al abrir app
										$encuesta_activa=0;
										$response_encuesta = array();
										$sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
										$qry_encuesta = $dbo->query( $sql_encuesta );
										if ( $dbo->rows( $qry_encuesta ) > 0 ) {
											while ( $r_encuesta = $dbo->fetchArray( $qry_encuesta ) ) {
												$mostrar_encuesta=0;
												//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
												if($r_encuesta["UnaporSocio"]=="S"){
													$sql_resp="Select IDEncuesta From EncuestaRespuesta Where IDSocio = '".$datos_usuario["IDUsuario"]."' and IDEncuesta = '".$r_encuesta["IDEncuesta"]."' Limit 1"	;
													$r_resp=$dbo->query($sql_resp);
													if ( $dbo->rows( $r_resp ) <= 0 ) {
															$mostrar_encuesta=1;
													}
												}
												else{
													$mostrar_encuesta=1;
												}
													//Verifico si la encuesta es solo para algunos socios para mostrar o no
													//$permiso_encuesta=SIMWebServiceApp::verifica_ver_encuesta($r_encuesta,$IDSocio);
													$permiso_encuesta=1;

												if($mostrar_encuesta==1 && $permiso_encuesta==1){
												  $encuesta[ "IDClub" ] = $r_encuesta[ "IDClub" ];
													$encuesta[ "IDEncuesta" ] = $r_encuesta[ "IDEncuesta" ];
													$encuesta["Nombre"] = $r_encuesta["Nombre"];
													$encuesta["Descripcion"] = $r_encuesta["Descripcion"];
													if ( !empty( $r_encuesta[ "Imagen" ] ) ):
														$foto = BANNERAPP_ROOT . $r_encuesta[ "Imagen" ];
													else :
														$foto = "";
													endif;
													$encuesta["ImagenEncuesta"] = $foto;
													$encuesta_activa=1;

													array_push( $response_encuesta, $encuesta );
												}

											} //ednw while
										}
										//FIN Encuestas al abrir app
										$response[ "Encuesta" ] = $response_encuesta;
										$response[ "LabelEncuesta" ] = "Encuesta";

										//Autodisagnostico al abrir app
										$diagnostico_activa=0;
										$response_diagnostico = array();
										$sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
										$qry_diagnostico = $dbo->query( $sql_diagnostico );
										if ( $dbo->rows( $qry_diagnostico ) > 0 ) {
											while ( $r_diagnostico = $dbo->fetchArray( $qry_diagnostico ) ) {
												$mostrar_disgnostico=0;
												//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
												if($r_diagnostico["UnaporSocio"]=="S"){
													$sql_resp="Select IDDiagnostico From DiagnosticoRespuesta Where IDUsuario = '".$IDUsuario."' and IDDiagnostico = '".$r_diagnostico["IDDiagnostico"]."' Limit 1"	;
													$r_resp=$dbo->query($sql_resp);
													if ( $dbo->rows( $r_resp ) <= 0 ) {
															$mostrar_disgnostico=1;
													}
												}
												else{
													$mostrar_disgnostico=1;
												}
													//Verifico si la encuesta es solo para algunos socios para mostrar o no
													$permiso_diagnostico=SIMWebServiceApp::verifica_ver_diagnostico($r_diagnostico,$IDSocio,$IDUsuario);
													//$permiso_encuesta=1;

												if($mostrar_disgnostico==1 && $permiso_diagnostico==1){
												  $diagnostico[ "IDClub" ] = $r_diagnostico[ "IDClub" ];
													$diagnostico[ "IDDiagnostico" ] = $r_diagnostico[ "IDDiagnostico" ];
													$diagnostico["Nombre"] = $r_diagnostico["Nombre"];
													$diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
													if ( !empty( $r_diagnostico[ "Imagen" ] ) ):
														$foto = BANNERAPP_ROOT . $r_diagnostico[ "Imagen" ];
													else :
														$foto = "";
													endif;
													$diagnostico["ImagenDiagnostico"] = $foto;
													$diagnostico_activa=1;

													array_push( $response_diagnostico, $diagnostico );
												}

											} //ednw while
										}
										//FIN Encuestas al abrir app
										$response[ "Diagnostico" ] = $response_diagnostico;
										$response[ "LabelDiagnostico" ] = "Diligenciar auto";

										$response_campo_editar = array();
										$sql_campo_editar = "SELECT CEU.* FROM CampoEditarUsuario CEU
																				WHERE CEU.IDClub = '" . $datos_usuario[ "IDClub" ] . "' ORDER BY CEU.Orden";

										$qry_campo_editar = $dbo->query( $sql_campo_editar );
										if ( $dbo->rows( $qry_campo_editar ) > 0 ) {
											while ( $r_campo_editar = $dbo->fetchArray( $qry_campo_editar ) ) {
												$campo_editar[ "IDCampoEditarSocio" ] = $r_campo_editar[ "IDCampoEditarUsuario" ];
												$campo_editar[ "Nombre" ] = $r_campo_editar[ "Nombre" ];
												$campo_editar[ "Tipo" ] = $r_campo_editar[ "Tipo" ];
												$campo_editar[ "Valores" ] = $r_campo_editar[ "Valores" ];
												$campo_editar[ "PermiteEditar" ] = $r_campo_editar[ "PermiteEditar" ];
												//Consulto el valor de la actualización
												$ValorDatoCampo = $dbo->getFields( "UsuarioCampoEditarUsuario" , "Valor" , "IDCampoEditarUsuario = '".$r_campo_editar[ "IDCampoEditarUsuario" ]."' and IDUsuario = '".$datos_usuario["IDUsuario"]."'" );
												if($ValorDatoCampo!="" && $ValorDatoCampo!="false")
													$ValorDato=$ValorDatoCampo;
												else{
													$ValorDato= $datos_socio[  $r_campo_editar[ "Nombre" ] ];

												}

												//$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
												$campo_editar[ "ValorActual" ] = $ValorDato;

												$campo_editar[ "Obligatorio" ] = $r_campo_editar[ "Obligatorio" ];
												array_push( $response_campo_editar, $campo_editar );

											} //ednw while
										}
										$response[ "CampoEditar" ] = $response_campo_editar;


										if($AppVersion>=31){
											$respuesta=json_encode($response);
											$param['key']=KEY_API;
											$param['nonce']=sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
											$param['msg']=$respuesta;
											$result=SIMUtil::cryptSodium($param);

											//$response_encrip=array();
											//$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
											$respuesta=array();
											$respuesta[ "message" ] = "ok";
											$respuesta[ "success" ] = true;
											$respuesta[ "response" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);

										}
										else{
											$respuesta[ "message" ] = "ok";
											$respuesta[ "success" ] = true;
											$respuesta[ "response" ] = $response;
										}


								}


						}

				}

		}
		else{
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;
		}


		/*
		$sql = "SELECT * FROM Socio WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {

			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$informacion[ "IDClub" ] = $r[ "IDClub" ];
				$informacion[ "IDSocio" ] = $r[ "IDSocio" ];

				if ( !empty( $r[ "Foto" ] ) ) {
					$foto = SOCIO_ROOT . $r[ "Foto" ];
				}
				$informacion[ "Foto" ] = $foto;
				$informacion[ "Accion" ] = $r[ "Accion" ];
				$informacion[ "DireccionDomicilio" ] = utf8_encode( $r[ "Direccion" ]);
				$informacion[ "Telefono" ] = utf8_encode( $r[ "Telefono" ]);
				$informacion[ "DireccionOficina" ] = utf8_encode( $r[ "DireccionOficina" ]);
				$informacion[ "TelefonoOficina" ] = utf8_encode( $r[ "TelefonoOficina" ]);
				$informacion[ "Celular" ] = utf8_encode( $r[ "Celular" ]);
				$informacion[ "CorreoElectronico" ] = utf8_encode( $r[ "CorreoElectronico" ]);
				array_push( $response, $informacion );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;
		} //end else
		*/

		return $respuesta;

	} // fin function


	function get_invitado_general( $id_club, $numero_documento = "", $tag = "" ) {
		$dbo = & SIMDB::get();

		// Doc
		if ( !empty( $numero_documento ) ):
			$array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
		endif;

		// Tag
		if ( !empty( $tag ) ):
			$array_condiciones[] = " (	Nombre  like '%" . $tag . "%' or Apellido like '%" . $tag . "%' or Email like '%" . $tag . "%' or NumeroDocumento like '%" . $tag . "%' )";
		endif;

		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		$condiciones_noticia = " and " . $condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Invitado WHERE 1 " . $condiciones_noticia . " ORDER BY Nombre ";

		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$datos_invitado[ "IDInvitado" ] = $r[ "IDInvitado" ];
				$datos_invitado[ "IDTipoDocumento" ] = $r[ "IDTipoDocumento" ];
				$datos_invitado[ "NumeroDocumento" ] = $r[ "NumeroDocumento" ];
				$datos_invitado[ "Nombre" ] = utf8_encode( $r[ "Nombre" ] );
				$datos_invitado[ "Apellido" ] = utf8_encode( $r[ "Apellido" ] );
				$datos_invitado[ "Direccion" ] = $r[ "Direccion" ];
				$datos_invitado[ "Telefono" ] = $r[ "Telefono" ];
				$datos_invitado[ "Email" ] = $r[ "Email" ];
				$datos_invitado[ "FechaNacimiento" ] = $r[ "FechaNacimiento" ];

				array_push( $response, $datos_invitado );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "Por favor utilice el buscador , no se encontraron registros";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_invitado_dia_socio( $IDClub, $NumeroDocumento = "", $Nombre = "", $Fecha, $IDSocio ) {
		$dbo = & SIMDB::get();

		// Secciones Socio
		if ( !empty( $NumeroDocumento ) ):
			$array_condiciones[] = " NumeroDocumento  = '" . $numero_documento . "'";
		endif;

		// Seccion Especifica
		if ( !empty( $Nombre ) ):
			$array_condiciones[] = " Nombre  = '%" . $Nombre . "%'";
		endif;

		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		endif;


		if ( count( $array_condiciones ) > 0 ):
			$condiciones = implode( " and ", $array_condiciones );
		endif;



		$response = array();
		$sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and FechaIngreso = '" . $Fecha . "'" . $condiciones . " ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$datos_invitado[ "IDClub" ] = $r[ "IDClub" ];
				$datos_invitado[ "IDSocio" ] = $r[ "IDSocio" ];
				$datos_invitado[ "NumeroDocumento" ] = $r[ "NumeroDocumento" ];
				$datos_invitado[ "Nombre" ] = utf8_encode( $r[ "Nombre" ] );
				$datos_invitado[ "FechaIngreso" ] = $r[ "FechaIngreso" ];
				array_push( $response, $datos_invitado );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "Por favor utilice el buscador , no se encontraron registros";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function


	function get_servicios( $id_club, $TipoApp = "", $IDUsuario = "", $IDSocio = "" ) {
		$dbo = & SIMDB::get();


		$response = array();

		//reviso si tienen modulo personalizado por perfil de socio
		$TipoSocio=$dbo->getFields( "Socio", "TipoSocio", "IDSocio = '" . $IDSocio . "'" );
		$sql_servicio_perfil  = "Select * From TipoSocioModulo Where IDClub = '".$id_club."' and TipoSocio = '".$TipoSocio."' Limit 1";
		$r_servicio_perfil = $dbo->query($sql_servicio_perfil);
		if($dbo->rows($r_servicio_perfil)>0 ){
				$row_servicio_perfil=$dbo->fetchArray($r_servicio_perfil);
				if(!empty($row_servicio_perfil["IDServicioMaestro"])){
						$array_id_servicio=explode("|",$row_servicio_perfil["IDServicioMaestro"]);
						if(count($array_id_servicio)>0){
								$id_servicio_ver=implode(",",$array_id_servicio);
								$condicion_servicio = " and IDServicioMaestro in (".$id_servicio_ver.")";
						}
				}
		}



		//Consulto los servicios activos del club
		$sql_servicio_club = "Select * From  ServicioClub Where IDClub = '" . $id_club . "' and Activo = 'S'";
		$qry_servicio_club = $dbo->query( $sql_servicio_club );
		$message = $dbo->rows( $qry ) . " Encontrados";
		while ( $r_servicio_club = $dbo->fetchArray( $qry_servicio_club ) ) {
			$array_id_servicios[] = $r_servicio_club[ "IDServicioMaestro" ];
			$array_nom_servicios[ $r_servicio_club[ "IDServicioMaestro" ] ] = $r_servicio_club[ "TituloServicio" ];
		}

		if ( count( $array_id_servicios ) > 0 ):
			$id_servicios = implode( ",", $array_id_servicios );
		endif;


		//traer servicios del usuario
		if ( $TipoApp == "Empleado" && !empty( $IDUsuario ) ):
			unset( $array_id_servicios );
		$id_servicios = "0";
		$response_servicio = array();
		$sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $IDUsuario . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
		$qry_servicios = $dbo->query( $sql_servicios );
		while ( $r_servicio = $dbo->fetchArray( $qry_servicios ) ) {
			$array_id_servicios[] = $r_servicio[ "IDServicioMaestro" ];

		} //end while
		if ( count( $array_id_servicios ) > 0 ):
			$id_servicios = implode( ",", $array_id_servicios );
		endif;
		endif;




		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $id_club . "' and IDServicioMaestro in (" . $id_servicios . ") ".$condicion_servicio." ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$servicio[ "IDClub" ] = $r[ "IDClub" ];
				$servicio[ "IDServicio" ] = $r[ "IDServicio" ];

				//Si tiene un nombre personalizado se lo pongo de lo contrario le pongo el general
				if ( !empty( $array_nom_servicios[ $r[ "IDServicioMaestro" ] ] ) ):
					$servicio[ "Nombre" ] = $array_nom_servicios[ $r[ "IDServicioMaestro" ] ];
				else :
					$servicio[ "Nombre" ] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				endif;



				$foto = "";
				if ( !empty( $r[ "Icono" ] ) ) {
					$foto = SERVICIO_ROOT . $r[ "Icono" ];
				} else {
					$icono_maestro = $dbo->getFields( "ServicioMaestro", "Icono", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
					if ( !empty( $icono_maestro ) ) {
						$foto = SERVICIO_ROOT . $icono_maestro;
					}
				}

				$invitadoclub = "";
				$invitadoexterno = "";
				$servicio[ "Icono" ] = $foto;
				$servicio[ "General" ] = $dbo->getFields( "ServicioMaestro", "General", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );


				//TEMPORAL....Consulto alguna disponibilidad para ver el numero de invitados, esto se debe hacer por el servicio que consulta disponibilidades
				$id_disponibilidad = $dbo->getFields( "ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r[ "IDServicio" ] . "' and Activo <>'N'" );

				//Consulto cual es la mayor disponibildad en tiempo apara armar el dia maximo en el servicio cuando se empieza por el elemento
				$sql_disponibilidad = "Select * From Disponibilidad Where IDServicio = '" . $r[ "IDServicio" ] . "'";
				$result_disponibilidad = $dbo->query( $sql_disponibilidad );
				$dia_mayor = 0;
				while ( $row_disponibilidad = $dbo->fetchArray( $result_disponibilidad ) ) {
					$medicion_tiempo_anticipacion = $row_disponibilidad[ "MedicionTiempoAnticipacion" ];
					$valor_anticipacion_turno = ( int )$row_disponibilidad[ "Anticipacion" ];
					switch ( $medicion_tiempo_anticipacion ):
					case "Dias":
						$dias_anticipacion_turno = $valor_anticipacion_turno;
						break;
					case "Horas":
						$dias_anticipacion_turno = ( int )( $valor_anticipacion_turno / 24 );
						break;
					case "Minutos":
						$dias_anticipacion_turno = ( int )( $valor_anticipacion_turno / 1440 );
						break;
					default:
						$dias_anticipacion_turno = 0;
						endswitch;

						if ( ( int )$dias_anticipacion_turno >= ( int )$dia_mayor ):
							$dia_mayor = $dias_anticipacion_turno;
						endif;


				}

				$invitadoclub = $dbo->getFields( "ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r[ "IDServicio" ] . "' and Activo <>'N'" );
				$invitadoexterno = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );

				if ( !empty( $invitadoclub ) ):
					$servicio[ "NumeroInvitadoClub" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				else :
					$servicio[ "NumeroInvitadoClub" ] = "";
				endif;
				if ( !empty( $invitadoexterno ) ):
					$servicio[ "NumeroInvitadoExterno" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				else :
					$servicio[ "NumeroInvitadoExterno" ] = "";
				endif;

				/*
				//Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
				$medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad" , "MedicionTiempoAnticipacion" , "IDDisponibilidad = '" . $id_disponibilidad  . "'" );
				$valor_anticipacion_turno = (int)$dbo->getFields( "Disponibilidad" , "Anticipacion" , "IDDisponibilidad = '" . $id_disponibilidad  . "'" );
				switch($medicion_tiempo_anticipacion):
					case "Dias":
						$dias_anticipacion_turno = $valor_anticipacion_turno;
					break;
					case "Horas":
						$dias_anticipacion_turno = (int)($valor_anticipacion_turno/24);
					break;
					case "Minutos":
						$dias_anticipacion_turno = (int)($valor_anticipacion_turno/1440);
					break;
					default:
						$dias_anticipacion_turno = 0;
				endswitch;
				$servicio["DiasMaximoReserva"] = "$dias_anticipacion_turno";
				*/
				$servicio[ "DiasMaximoReserva" ] = "$dia_mayor";


				//temporal lagartos

				if ( $id_club == 7 && $r[ "IDServicio" ] == 43 ) { //Clases tenis especial
					$dias_maximo_especial = 9 - ( int )date( "w" );
					$servicio[ "DiasMaximoReserva" ] = "$dias_maximo_especial";
				}

				//FIN TEMPORAL

				$datos_maestro = $dbo->fetchAll( "ServicioMaestro", " IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "' ", "array" );
				$servicio[ "LabelElemento" ] = $datos_maestro["LabelElemento"];
				$servicio[ "LabelElementoSocio" ] = utf8_encode($r["LabelElementoSocio"]);
				$servicio[ "LabelElementoExterno" ] = utf8_encode($r["LabelElementoExterno"]);

				$labelauxiliar = $dbo->getFields( "Club", "LabelAuxiliar", "IDClub = '" . $id_club . "'" );
				if ( empty( $labelauxiliar ) )
					$labelauxiliar = $dbo->getFields( "ServicioMaestro", "LabelAuxiliar", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );

				$servicio[ "LabelAuxiliar" ] = $labelauxiliar;
				if(!empty($r[ "HorarioAcordeon" ])){
					$servicio[ "HorarioAcordeon" ] = $r[ "HorarioAcordeon" ];
				}
				else{
					$servicio[ "HorarioAcordeon" ] = $dbo->getFields( "ServicioMaestro", "HorarioAcordeon", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				}

				$servicio[ "LabelTipoReserva" ] = $dbo->getFields( "ServicioMaestro", "LabelTipoReserva", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				$servicio[ "TextoLegal" ] = $r[ "TextoLegal" ];
				$servicio[ "DiasAnticipacion" ] = "$r[DiasAnticipacion]";

				$servicio[ "AcordeonAbiertoPrimeraOpcion" ] = "N";
				$servicio[ "ColorLetraHora" ] = "$r[ColorLetraHora]";
				$servicio[ "ColorFondoHora" ] = "$r[ColorFondoHora]";
				$servicio[ "NegrillaLetraHora" ] = "S";



				if ( $id_club == 25 || $id_club == 15 ): //Gun club y Pereira no permite beneficiarios y ya estab configurado asi se pone esta validacion especial
					$servicio[ "PermiteBeneficiario" ] = "N";
				$servicio[ "LabelBeneficiario" ] = "";
				else :
					$servicio[ "PermiteBeneficiario" ] = $dbo->getFields( "ServicioMaestro", "PermiteBeneficiario", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				$servicio[ "LabelBeneficiario" ] = $dbo->getFields( "ServicioMaestro", "LabelBeneficiario", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				endif;


				$servicio[ "HoraDesde" ] = $r[ "HoraHasta" ];
				$servicio[ "HoraCancelacion" ] = $r[ "HoraCancelacion" ];
				$servicio[ "IntervaloHora" ] = $r[ "IntervaloHora" ];
				$servicio[ "MinutosReserva" ] = "$r[MinutosReserva]";
				$servicio[ "TurnosMaximo" ] = "$r[TurnosMaximo]";
				$id_servicio_inicial = $dbo->getFields( "ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				$servicio[ "PrimerServicio" ] = $dbo->getFields( "ServicioInicial", "Nombre", "IDServicioInicial = '" . $id_servicio_inicial . "'" );
				$servicio[ "Orden" ] = $dbo->getFields( "ServicioClub", "Orden", "IDClub = '" . $id_club . "' and IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );
				$servicio[ "Georeferenciacion" ] = "$r[Georeferenciacion]";
				$servicio[ "Latitud" ] = $r[ "Latitud" ];
				$servicio[ "Longitud" ] = $r[ "Longitud" ];
				$servicio[ "Rango" ] = $r[ "Rango" ];
				$servicio[ "MensajeFueraRango" ] = $r[ "MensajeFueraRango" ];
				$servicio[ "MostrarBotonBuscar" ] = $r[ "MostrarBotonBuscar" ];
				$servicio[ "MultipleAuxiliar" ] = $r[ "MultipleAuxiliar" ];
				$servicio[ "MaximoInvitadosSalon" ] = $r[ "MaximoInvitadosSalon" ];
				$servicio[ "PermiteListaEspera" ] = $r[ "PermiteListaEspera" ];
				$servicio[ "PermiteListaEsperaAuxiliar" ] = $r[ "PermiteListaEsperaAuxiliar" ];
				$servicio[ "PermiteAgregarGrupo" ] = $r[ "PermiteAgregarGrupo" ];
				$servicio[ "PermiteEditarAuxiliar" ] = $r[ "PermiteEditarAuxiliar" ];
				$servicio[ "LabelEncabezadoInvitados" ] = $r[ "LabelEncabezadoInvitados" ];
				$servicio[ "LabelEncabezadoBeneficiarios" ] = $r[ "LabelEncabezadoBeneficiarios" ];
				$servicio[ "TextoAbrirMapa" ] = $r[ "TextoAbrirMapa" ];
				$servicio[ "SoloIcono" ] = $dbo->getFields( "Club", "SoloIcono", "IDClub = '" . $id_club . "'" );
				$servicio[ "SoloFechaSeleccionada" ] = $datos_maestro["SoloFechaSeleccionada"];
				$servicio[ "LabelReservaMultiple" ] = $datos_maestro["LabelReservaMultiple"];

				$servicio[ "MostrarImagenEncabezado" ] = $r[ "MostrarImagenEncabezado" ];
				$fotoencabezado = "";
				if ( !empty( $r[ "ImagenEncabezado" ] ) ) {
					$fotoencabezado = SERVICIO_ROOT . $r[ "ImagenEncabezado" ];
				}
				else{
					$fotoencabezado="";
				}

				$servicio[ "ImagenEncabezado" ] = $fotoencabezado;


				$zonahoraria = date_default_timezone_get();
				$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
				$servicio[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );

				//Campos Reservas
				$response_campos = array();
				$sql_campos = "SELECT * FROM ServicioCampo WHERE Publicar = 'S' and IDServicio= '" . $r[ "IDServicio" ] . "' ORDER BY Nombre";
				$qry_campos = $dbo->query( $sql_campos );
				if ( $dbo->rows( $qry_campos ) > 0 ) {
					while ( $r_campos = $dbo->fetchArray( $qry_campos ) ) {
						$campos[ "IDClub" ] = $id_club;
						$campos[ "IDServicio" ] = $r_campos[ "IDServicio" ];
						$campos[ "IDServicioCampo" ] = $r_campos[ "IDServicioCampo" ];
						$campos[ "Nombre" ] = $r_campos[ "Nombre" ];
						$campos[ "Descripcion" ] = utf8_encode($r_campos[ "Descripcion" ]);
						$campos[ "Tipo" ] = $r_campos[ "Tipo" ];
						$campos[ "Valor" ] = $r_campos[ "Valor" ];
						$campos[ "Obligatorio" ] = $r_campos[ "Obligatorio" ];


						array_push( $response_campos, $campos );

					} //end while
				}
				$servicio[ "CamposReserva" ] = $response_campos;

				//Servicios Asociados
				$response_servicio_asociado = array();
				$datos_guardados =explode("|||",$r["IDServicioAsociado"]);
				foreach( $datos_guardados as  $id_servicio):
					if(!empty($id_servicio)){
						$servicio_asoc[ "IDServicio" ] = $id_servicio;
						$id_servicio_mestro_menu =  $dbo->getFields( "Servicio" , "IDServicioMaestro" , "IDServicio = '" . $id_servicio . "'");
						$asoc_servicio["Nombre"] =  $dbo->getFields( "ServicioMaestro" , "Nombre" , "IDServicioMaestro = '" . $id_servicio_mestro_menu . "'");
						$asoc_servicio["NombrePersonalizado"] =  $dbo->getFields( "ServicioClub" , "TituLoServicio" , "IDClub = '".SIMUser::get("club")."' and Activo = 'S' and IDServicioMaestro = '".$id_servicio_mestro_menu."'");

						if( !empty( $asoc_servicio["NombrePersonalizado"] ) )
							$NombreServicio=$asoc_servicio["NombrePersonalizado"];
						else
							$NombreServicio=$asoc_servicio["Nombre"];

						$servicio_asoc[ "Nombre" ] = $NombreServicio;
						array_push( $response_servicio_asociado, $servicio_asoc );
					}
				endforeach;
				$servicio[ "ServicioAsociado" ] = $response_servicio_asociado;


				//Tipos de Reservas
				$response_tiporeservas = array();
				$sql_tiporeservas = "SELECT * FROM ServicioTipoReserva WHERE Activo = 'S' and IDServicio= '" . $r[ "IDServicio" ] . "' " . $condicion_tipo . " ORDER BY Orden";
				$qry_tiporeservas = $dbo->query( $sql_tiporeservas );
				if ( $dbo->rows( $qry_tiporeservas ) > 0 ) {
					while ( $r_tiporeservas = $dbo->fetchArray( $qry_tiporeservas ) ) {
						$tiporeserva[ "IDClub" ] = $id_club;
						$tiporeserva[ "IDServicio" ] = $r_tiporeservas[ "IDServicio" ];
						$tiporeserva[ "IDServicioTipoReserva" ] = $r_tiporeservas[ "IDServicioTipoReserva" ];
						$tiporeserva[ "Nombre" ] = $r_tiporeservas[ "Nombre" ];
						array_push( $response_tiporeservas, $tiporeserva );

					} //end while
				}

				$servicio[ "TipoReserva" ] = $response_tiporeservas;

				//Tipos de pagos recibidos
				$response_tipo_pago = array();
				$sql_tipo_pago = "SELECT * FROM ServicioTipoPago STP, TipoPago TP  WHERE STP.IDTipoPago = TP.IDTipoPago and IDServicio= '" . $r[ "IDServicio" ] . "' ";
				$qry_tipo_pago = $dbo->query( $sql_tipo_pago );
				if ( $dbo->rows( $qry_tipo_pago ) > 0 ) {
					$servicio[ "PagoReserva" ] = "S";
					while ( $r_tipo_pago = $dbo->fetchArray( $qry_tipo_pago ) ) {
						$tipopago[ "IDClub" ] = $id_club;
						$tipopago[ "IDServicio" ] = $r_tipo_pago[ "IDServicio" ];
						$tipopago[ "IDTipoPago" ] = $r_tipo_pago[ "IDTipoPago" ];
						$tipopago[ "PasarelaPago" ] = $r_tipo_pago[ "PasarelaPago" ];
						$tipopago[ "Action" ] = SIMUtil::obtener_accion_pasarela($r_tipo_pago[ "IDTipoPago" ],$id_club);
						$tipopago[ "Nombre" ] = $r_tipo_pago[ "Nombre" ];
						array_push( $response_tipo_pago, $tipopago );

					} //end while
					$servicio[ "TipoPago" ] = $response_tipo_pago;
				} else {
					$servicio[ "PagoReserva" ] = "N";
				}

				$servicio[ "MensajePagoReserva" ] = $r[ "MensajePagoReserva" ];

				$flag_mostrar = 0;
				//Especial por socio
				if ( $id_club == 16 && ( $r[ "IDServicio" ] == 324 || $r[ "IDServicio" ] == 325 || $r[ "IDServicio" ] == 464 || $r[ "IDServicio" ] == 934
						 || $r[ "IDServicio" ] == 1242  || $r[ "IDServicio" ] == 320 ||
						$r[ "IDServicio" ] == 4924 || $r[ "IDServicio" ] == 341 || $r[ "IDServicio" ] == 337  ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 62004 || $IDSocio == 84166 || $IDSocio == 61803 ):
					$flag_mostrar = 0;
				endif;
				endif;

				/*
				if ( $id_club == 7 && ( $r[ "IDServicio" ] == 12010 ||  $r[ "IDServicio" ] == 1405 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 23 || $IDSocio == 19075 ):
					$flag_mostrar = 0;
				endif;
				endif;
				*/


				//Country Clases de golf
				if ( $id_club == 44 && ( $r[ "IDServicio" ] ==3925 || $r[ "IDServicio" ] == 3905 || $r[ "IDServicio" ] == 3897 || $r[ "IDServicio" ] == 11732
				|| $r[ "IDServicio" ] == 11733 || $r[ "IDServicio" ] == 11734 || $r[ "IDServicio" ] == 11735 || $r[ "IDServicio" ] == 11736 || $r[ "IDServicio" ] == 12470
				|| $r[ "IDServicio" ] == 3941 || $r[ "IDServicio" ] == 3866 || $r[ "IDServicio" ] == 3852 || $r[ "IDServicio" ] == 3888 || $r[ "IDServicio" ] == 3889
				|| $r[ "IDServicio" ] == 3890 || $r[ "IDServicio" ] == 3855 	) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 135019 || $IDSocio == 135054 || $IDSocio == 137339 || $IDSocio == 144913 || $IDSocio == 150201 || $IDSocio == 150312 || $IDSocio == 144391  ):
					$flag_mostrar = 0;
				endif;
				endif;


				//Bijao Rancho
				if ( $id_club == 32 && ( $r[ "IDServicio" ] == 5551  ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 94470 || $IDSocio == 100111 ):
					$flag_mostrar = 0;
				endif;
				endif;

				//farallones
				if ( $id_club == 29 && ( $r[ "IDServicio" ] == 2459  ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 92041 || $IDSocio == 92147 ):
					$flag_mostrar = 0;
				endif;
				endif;




				//Gun Club reservas de
				if ( $id_club == 25 && ( $r[ "IDServicio" ] == 9575 || $r[ "IDServicio" ] == 9576 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 84887 ):
					$flag_mostrar = 0;
				endif;
				endif;


				//Guaymaral
				/*
				if ( $id_club == 1 && ( $r[ "IDServicio" ] == 15 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 7 || $IDSocio == 125701 || $IDSocio == 11 || $IDSocio == 35476 || $IDSocio == 38644 || $IDSocio == 35675 || $IDSocio == 35509
				|| $IDSocio == 35548 || $IDSocio == 35481 || $IDSocio == 35639  ):
					$flag_mostrar = 0;
				endif;
				endif;
				*/

				//Italiano servicios
				if ( $id_club == 54 && ( $r[ "IDServicio" ] == 5327 || $r[ "IDServicio" ] == 5339 || $r[ "IDServicio" ] == 5341 || $r[ "IDServicio" ] == 5381 || $r[ "IDServicio" ] == 5383 ||
						$r[ "IDServicio" ] == 5389 || $r[ "IDServicio" ] == 5398 || $r[ "IDServicio" ] == 7667 || $r[ "IDServicio" ] == 5362 || $r[ "IDServicio" ] == 5377 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 145323 || $IDSocio == 146738 || $IDSocio == 176148 || $IDSocio == 145352 || $IDSocio == 168380 ):
					$flag_mostrar = 0;
				endif;
				endif;

				//San andres

				if ( $id_club == 72 && ( $r[ "IDServicio" ] == 7575 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 170314   ):
					$flag_mostrar = 0;
				endif;
				endif;



				//Pereira Tenis
				if ( $id_club == 15 && ( $r[ "IDServicio" ] == 305 ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 53113 || $IDSocio == 50883 || $IDSocio == 53112  || $IDSocio == 78018 || $IDSocio == 78030):
					$flag_mostrar = 0;
				endif;
				endif;

				//Club Colombia
				if ( $id_club == 38 && ( $r[ "IDServicio" ] == 16184 ) ):
					$flag_mostrar = 1;
				if($IDSocio == 141131 || $IDSocio == 176857 ):
					$flag_mostrar = 0;
				endif;
				endif;

				//EntreLomas
				if ( $id_club == 75 && ( $r[ "IDServicio" ] == 9120 || $r[ "IDServicio" ] == 9218 || $r[ "IDServicio" ] == 9240 || $r[ "IDServicio" ] == 9241 || $r[ "IDServicio" ] == 12887 || $r[ "IDServicio" ] == 12888 || $r[ "IDServicio" ] == 12889 || $r[ "IDServicio" ] == 12890 || $r[ "IDServicio" ] == 12891   ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 174908 || $IDSocio == 182539 || $IDSocio == 177038  ):
					$flag_mostrar = 0;
				endif;
				endif;




				//Polo Calse Polo
				/*
				if ( $id_club == 37 && ( $r[ "IDServicio" ] == 11204  ) ):
					$flag_mostrar = 1;
				if ( $IDSocio == 127192 || $IDSocio == 127614 || $IDSocio == 127457  ):
					$flag_mostrar = 0;
				endif;
				endif;
				*/




				if ( $flag_mostrar == 0 )
					array_push( $response, $servicio );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}



	function get_elementos( $IDClub, $IDSocio, $IDServicio, $IDUsuario = "" ) {
		$dbo = & SIMDB::get();
		$condicion_elemento="";
		if ( !empty( $IDUsuario ) ):
			$sql_elemento_usuario = "Select * From UsuarioServicioElemento Where IDUsuario = '" . $IDUsuario . "'";
		$result_elemento_usuario = $dbo->query( $sql_elemento_usuario );
		while ( $row_elemento_usuario = $dbo->fetchArray( $result_elemento_usuario ) ):
			$array_id_elemento[] = $row_elemento_usuario[ "IDServicioElemento" ];
		endwhile;
		if ( count( $array_id_elemento ) > 0 ):
			$condicion_elemento = " and IDServicioElemento in (" . implode( ",", $array_id_elemento ) . ") ";
		endif;
		endif;

		$response = array();
		$sql = "SELECT SE.* FROM ServicioElemento SE, Servicio S WHERE SE.IDServicio = S.IDServicio and SE.Publicar = 'S' and S.IDClub = '" . $IDClub . "' and SE.IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " ORDER BY SE.Orden ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$elemento[ "IDElemento" ] = $r[ "IDServicioElemento" ];
				$elemento[ "IDClub" ] = $IDClub;
				$elemento[ "IDServicio" ] = $r[ "IDServicio" ];
				$elemento[ "IDPadre" ] = $r[ "IDPadre" ];
				$elemento[ "Nombre" ] = $r[ "Nombre" ];
				if(!empty($r[ "Foto" ]))
					$FotoElemento=ELEMENTOS_ROOT . $r["Foto"];
				else
					$FotoElemento="";

				$elemento[ "Foto" ] = $FotoElemento;

				array_push( $response, $elemento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}


	function get_invitado( $IDClub, $IDSocio, $NumeroDocumento, $FechaIngreso ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) ) {

			// Numero Doc
			if ( !empty( $NumeroDocumento ) ):
				$array_condiciones[] = " NumeroDocumento  like '%" . $NumeroDocumento . "%'";
			endif;

			if ( !empty( $FechaIngreso ) ):
				$array_condiciones[] = " FechaIngreso  = '" . $FechaIngreso . "'";
			endif;



			if ( count( $array_condiciones ) > 0 ):
				$condiciones = "and " . implode( " and ", $array_condiciones );
			endif;




			$sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " and Estado = 'P' and FechaIngreso >= CURDATE()  ORDER BY FechaIngreso Desc ";
			$qry = $dbo->query( $sql );
			if ( $dbo->rows( $qry ) > 0 ) {
				$message = $dbo->rows( $qry ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry ) ) {
					$elemento[ "IDClub" ] = $IDClub;
					$elemento[ "IDInvitacion" ] = $r[ "IDSocioInvitado" ];
					$elemento[ "Nombre" ] = $r[ "Nombre" ];
					$elemento[ "NumeroDocumento" ] = $r[ "NumeroDocumento" ];
					$elemento[ "FechaIngreso" ] = $r[ "FechaIngreso" ];

					array_push( $response, $elemento );

				} //ednw hile
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;
			} //end else
		} else {
			$respuesta[ "message" ] = "2. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function get_mis_invitado( $IDClub, $IDSocio, $NumeroDocumento ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) ) {

			// Numero Doc
			if ( !empty( $NumeroDocumento ) ):
				$array_condiciones[] = " NumeroDocumento  like '%" . $NumeroDocumento . "%'";
			endif;

			if ( count( $array_condiciones ) > 0 ):
				$condiciones = "and " . implode( " and ", $array_condiciones );
			endif;




			$sql = "SELECT * FROM SocioInvitado WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " and Mostrar <> 'N' Group by IDSocio, NumeroDocumento ORDER BY FechaIngreso Desc";
			$qry = $dbo->query( $sql );
			if ( $dbo->rows( $qry ) > 0 ) {
				$message = $dbo->rows( $qry ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry ) ) {
					$elemento[ "IDClub" ] = $IDClub;
					$elemento[ "IDSocioInvitado" ] = $r[ "IDSocioInvitado" ];
					$elemento[ "Nombre" ] = $r[ "Nombre" ];
					$elemento[ "NumeroDocumento" ] = $r[ "NumeroDocumento" ];

					array_push( $response, $elemento );

				} //ednw hile
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;
			} //end else
		} else {
			$respuesta[ "message" ] = "3. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_eliminar_invitado_v1( $IDClub, $IDSocio, $IDSocioInvitado ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDSocioInvitado ) ) {
			$sql = "Update SocioInvitado Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioInvitado = '" . $IDSocioInvitado . "'";
			$qry = $dbo->query( $sql );
			$respuesta[ "message" ] = "Invitado eliminado correctamente";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I5. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function get_ingreso_salida_invitadov1( $IDClub, $IDSocio, $IDSocioInvitado ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDSocioInvitado ) ) {
			$sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDSocioInvitado . "' and IDClub = '" . $IDClub . "' and Tipo = 'SocioInvitado' Order by IDLogAcceso Desc Limit 30";
			$qry = $dbo->query( $sql );
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$acceso[ "IDClub" ] = $IDClub;
				$acceso[ "IDSocioInvitado" ] = $r[ "IDInvitacion" ];
				if ( $r[ "Entrada" ] == "S" ):
					$TipoMovimiento = "Entrada";
				$FechaMovimiento = $r[ "FechaIngreso" ];
				else :
					$TipoMovimiento = "Salida";
				$FechaMovimiento = $r[ "FechaSalida" ];
				endif;
				$acceso[ "Movimiento" ] = $TipoMovimiento;
				$acceso[ "FechaMovimiento" ] = $FechaMovimiento;
				array_push( $response, $acceso );
			} //ednw hile
			$respuesta[ "message" ] = "Historial";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I6. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function get_ingresosalida_autorizaciones_invitados( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {
			$sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDInvitacion . "' and IDClub = '" . $IDClub . "' and Tipo = 'InvitadoAcceso' Order by IDLogAcceso Desc Limit 30";
			$qry = $dbo->query( $sql );
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$acceso[ "IDClub" ] = $IDClub;
				$acceso[ "IDSocioInvitado" ] = $r[ "IDInvitacion" ];
				if ( $r[ "Entrada" ] == "S" ):
					$TipoMovimiento = "Entrada";
				$FechaMovimiento = $r[ "FechaIngreso" ];
				else :
					$TipoMovimiento = "Salida";
				$FechaMovimiento = $r[ "FechaSalida" ];
				endif;
				$acceso[ "Movimiento" ] = $TipoMovimiento;
				$acceso[ "FechaMovimiento" ] = $FechaMovimiento;
				array_push( $response, $acceso );
			} //ednw hile
			$respuesta[ "message" ] = "Historial";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I6. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;
	}

	function get_ingresosalida_autorizaciones_contratista( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {
			$sql = "Select * From LogAcceso Where IDInvitacion = '" . $IDInvitacion . "' and IDClub = '" . $IDClub . "' and Tipo = 'Contratista' Order by IDLogAcceso Desc Limit 30";
			$qry = $dbo->query( $sql );
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$acceso[ "IDClub" ] = $IDClub;
				$acceso[ "IDSocioInvitado" ] = $r[ "IDInvitacion" ];
				if ( $r[ "Entrada" ] == "S" ):
					$TipoMovimiento = "Entrada";
				$FechaMovimiento = $r[ "FechaIngreso" ];
				else :
					$TipoMovimiento = "Salida";
				$FechaMovimiento = $r[ "FechaSalida" ];
				endif;
				$acceso[ "Movimiento" ] = $TipoMovimiento;
				$acceso[ "FechaMovimiento" ] = $FechaMovimiento;
				array_push( $response, $acceso );
			} //ednw hile
			$respuesta[ "message" ] = "Historial";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I6. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;
	}


	function elimina_misautorizaciones_invitados_anterior( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {
			$sql = "Update SocioInvitadoEspecial Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioInvitadoEspecial = '" . $IDInvitacion . "'";
			$qry = $dbo->query( $sql );
			$respuesta[ "message" ] = "Invitado eliminado correctamente";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I5. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;
	}

	function elimina_misautorizaciones_contratista_anterior( $IDClub, $IDSocio, $IDAutorizacion ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) && !empty( $IDAutorizacion ) ) {
			$sql = "Update SocioAutorizacion Set Mostrar = 'N' WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDSocioAutorizacion = '" . $IDAutorizacion . "'";
			$qry = $dbo->query( $sql );
			$respuesta[ "message" ] = "Invitado eliminado correctamente";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} else {
			$respuesta[ "message" ] = "I5. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;
	}


	function get_mis_autorizaciones_invitados( $IDClub, $IDSocio, $Tag, $FechaIngreso, $Tiempo = "" ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) ) {

			// Tag
			if ( !empty( $Tag ) ):
				// Consulto lo invitados con este dato
				$sql_busca_invitado = "Select * From Invitado Where NumeroDocumento like '%" . $Tag . "%' or Nombre like '%" . $Tag . "%' or Apellido like '%" . $Tag . "%'  or Telefono like '%" . $Tag . "%' or Email like '%" . $Tag . "%' ";
			$result_busca_invitado = $dbo->query( $sql_busca_invitado );
			while ( $row_busca_invitado = $dbo->fetchArray( $result_busca_invitado ) ):
				$array_condiciones_invitado[] = " IDInvitado  = '" . $row_busca_invitado[ "IDInvitado" ] . "'";
			endwhile;
			endif;

			if ( count( $array_condiciones_invitado ) > 0 ):
				$condiciones_invitado = "and (" . implode( " or ", $array_condiciones_invitado ) . ")";
			endif;

			if ( !empty( $FechaIngreso ) ):
				$array_condiciones[] = " FechaInicio  = '" . $FechaIngreso . "'";
			endif;

			if ( count( $array_condiciones ) > 0 ):
				$condiciones = "and " . implode( " and ", $array_condiciones );
			endif;

			if ( $Tiempo == "Futuro" || $Tiempo == "" ):
				$condicion_tiempo = " and FechaFin >= CURDATE() ";
			elseif ( $Tiempo == "Pasado" ):
				$condicion_tiempo = " and (FechaInicio <= CURDATE() or FechaInicio >= CURDATE() ) ";
			endif;


			//$sql = "SELECT * FROM SocioInvitadoEspecial WHERE IDClub = '" . $IDClub . "' and Mostrar <> 'N' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . " " . $condiciones_invitado . " " . $condicion_tiempo . "  ORDER BY IDSocioInvitadoEspecial,FechaInicio  Desc ";
			$sql = "SELECT * FROM SocioInvitadoEspecial WHERE IDClub = '" . $IDClub . "' and Mostrar <> 'N' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . " " . $condiciones_invitado . " " . $condicion_tiempo . "  ORDER BY IDSocioInvitadoEspecial,FechaInicio  Desc ";
			$qry = $dbo->query( $sql );
			if ( $dbo->rows( $qry ) > 0 ) {
				$message = $dbo->rows( $qry ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry ) ) {
					if ( !in_array( $r[ "IDInvitado" ], $array_socio_listado ) ):

						$elemento[ "IDClub" ] = $IDClub;
					$elemento[ "IDInvitacion" ] = $r[ "IDSocioInvitadoEspecial" ];
					//Consulto datos invitado
					$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $r[ "IDInvitado" ] . "' ", "array" );
					$elemento[ "Nombre" ] = $datos_invitado[ "Nombre" ];
					$elemento[ "Apellido" ] = $datos_invitado[ "Apellido" ];
					$elemento[ "NumeroDocumento" ] = "$datos_invitado[NumeroDocumento]";
					$elemento[ "Email" ] = $datos_invitado[ "Email" ];
					$elemento[ "TipoInvitado" ] = $r[ "TipoInvitacion" ];

					unset( $response_tipodoc );
					$response_tipodoc = array();
					$tipodoc[ "IDTipoDocumento" ] = ( int )$datos_invitado[ "IDTipoDocumento" ];
					$tipodoc[ "Nombre" ] = $dbo->getFields( "TipoDocumento", "Nombre", "IDTipoDocumento = '" . $datos_invitado[ "IDTipoDocumento" ] . "'" );
					array_push( $response_tipodoc, $tipodoc );
					$elemento[ "TipoDocumento" ] = $response_tipodoc;
					$elemento[ "FechaIngreso" ] = $r[ "FechaInicio" ];
					$elemento[ "FechaSalida" ] = $r[ "FechaFin" ];
					//Consulto datos vehiculo
					$datos_vehiculo = $dbo->fetchAll( "VehiculoInvitacion", " IDSocioInvitadoEspecial = '" . $r[ "IDSocioInvitadoEspecial" ] . "' ", "array" );
					$elemento[ "Vehiculo" ] = $datos_vehiculo[ "Placa" ];
					$elemento[ "CabezaInvitacion" ] = $r[ "CabezaInvitacion" ];


					//Reviso si ya se le dio entrada
					$presalida = $dbo->getFields( "Club", "Presalida", "IDClub = '" . $IDClub . "'" );
					if ( $presalida == "S" )
						$HabilitaPresalida = $dbo->getFields( "LogAcceso", "Entrada", "IDClub = '" . $IDClub . "' and IDInvitacion = '" . $r[ "IDSocioInvitadoEspecial" ] . "' and Fechaingreso >= '" . date( "Y-m-d" ) . " 00:00:00' " );

					if ( $HabilitaPresalida != "S" )
						$HabilitaPresalida = "N";

					$elemento[ "HabilitaPresalida" ] = $HabilitaPresalida;


					//$array_socio_listado[] = $r[ "IDInvitado" ];

					// Si tiene grupo familiar devuelvo el grupo y lo marco para no mostrarlo de nuevo
					if ( ( int )$r[ "IDPadre" ] > 0 ):
						$condicion_padre = " or IDPadre = '" . $r[ "IDPadre" ] . "'";
					endif;
					/*
					$response_invitado_familia = array();
					$sql_grupo_familiar = "Select * From SocioInvitadoEspecial Where IDPadre = '".$r["IDInvitado"]."' or IDInvitado = '".$r["IDPadre"]."' " . $condicion_padre;
					$result_grupo_familiar = $dbo->query($sql_grupo_familiar);
					while($row_grupo_familiar = $dbo->fetchArray($result_grupo_familiar)):
						if(!in_array($row_grupo_familiar["IDInvitado"],$array_socio_listado)):
							$dato_invitado_asociado["IDClub"] = $IDClub;
							$dato_invitado_asociado["IDInvitacion"] = $row_grupo_familiar["IDSocioInvitadoEspecial"];
							//Consulto datos invitado
							$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $row_grupo_familiar["IDInvitado"] . "' ", "array" );
							$dato_invitado_asociado["Nombre"] = $datos_invitado["Nombre"];
							$dato_invitado_asociado["Apellido"] = $datos_invitado["Apellido"];
							$dato_invitado_asociado["NumeroDocumento"] = "$datos_invitado[NumeroDocumento]";
							$dato_invitado_asociado["Email"] = $datos_invitado["Email"];
							$dato_invitado_asociado["TipoInvitado"] = $row_grupo_familiar["TipoInvitacion"];

							unset($response_tipodoc_asociado);
							$response_tipodoc_asociado = array();
							$tipodoc_asociado["IDTipoDocumento"] = (int)$datos_invitado["IDTipoDocumento"];
							$tipodoc_asociado["Nombre"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
							array_push($response_tipodoc_asociado, $tipodoc_asociado);
							$dato_invitado_asociado["TipoDocumento"] = $response_tipodoc_asociado;

							$dato_invitado_asociado["FechaIngreso"] = $row_grupo_familiar["FechaInicio"];
							$dato_invitado_asociado["FechaSalida"] = $row_grupo_familiar["FechaFin"];
							//Consulto datos vehiculo
							$datos_vehiculo = $dbo->fetchAll( "VehiculoInvitacion", " IDSocioInvitadoEspecial = '" . $row_grupo_familiar["IDSocioInvitadoEspecial"] . "' ", "array" );
							$dato_invitado_asociado["Vehiculo"] = $datos_vehiculo["Placa"];
							$dato_invitado_asociado["CabezaInvitacion"] = $row_grupo_familiar["CabezaInvitacion"];
							array_push($response_invitado_familia, $dato_invitado_asociado);
							$array_socio_listado[]=$row_grupo_familiar["IDInvitado"];
						endif;
					endwhile;
					*/

					$elemento[ "GrupoFamiliar" ] = $response_invitado_familia;
					array_push( $response, $elemento );
					endif;


				} //end while
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;
			} //end else
		} else {
			$respuesta[ "message" ] = "2. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function get_mis_autorizaciones_contratista( $IDClub, $IDSocio, $Tag, $FechaIngreso, $Tiempo = "" ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDSocio ) ) {

			if ( !empty( $Tag ) ):
				// Consulto lo invitados con este dato
				$sql_busca_invitado = "Select * From Invitado Where NumeroDocumento like '%" . $Tag . "%' or Nombre like '%" . $Tag . "%' or Apellido like '%" . $Tag . "%'  or Telefono like '%" . $Tag . "%' or Email like '%" . $Tag . "%' ";
			$result_busca_invitado = $dbo->query( $sql_busca_invitado );
			while ( $row_busca_invitado = $dbo->fetchArray( $result_busca_invitado ) ):
				$array_condiciones_invitado[] = " IDInvitado  = '" . $row_busca_invitado[ "IDInvitado" ] . "'";
			endwhile;
			endif;

			if ( count( $array_condiciones_invitado ) > 0 ):
				$condiciones_invitado = "and (" . implode( " or ", $array_condiciones_invitado ) . ")";
			endif;



			if ( count( $array_condiciones ) > 0 ):
				$condiciones = "and " . implode( " and ", $array_condiciones );
			endif;


			if ( $Tiempo == "Futuro" || $Tiempo == "" ):
				//$condicion_tiempo = " and FechaInicio >= CURDATE() ";
				$condicion_tiempo = " and FechaFin >= CURDATE() ";
			elseif ( $Tiempo == "Pasado" ):
				$condicion_tiempo = " and (FechaInicio <= CURDATE() or FechaInicio >= CURDATE() ) ";
			endif;


			$sql = "SELECT * FROM SocioAutorizacion WHERE IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' " . $condiciones . " " . $condiciones_invitado . " " . $condicion_tiempo . "  and Mostrar <> 'N' ORDER BY FechaInicio Desc ";
			$qry = $dbo->query( $sql );
			if ( $dbo->rows( $qry ) > 0 ) {
				$message = $dbo->rows( $qry ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry ) ) {
					$elemento[ "IDClub" ] = $IDClub;
					$elemento[ "IDAutorizacion" ] = $r[ "IDSocioAutorizacion" ];
					//Consulto datos invitado
					$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $r[ "IDInvitado" ] . "' ", "array" );
					$elemento[ "Nombre" ] = utf8_encode($datos_invitado[ "Nombre" ]);
					$elemento[ "Apellido" ] = utf8_encode($datos_invitado[ "Apellido" ]);
					$elemento[ "NumeroDocumento" ] = "$datos_invitado[NumeroDocumento]";
					$elemento[ "TipoAutorizacion" ] = $r[ "TipoAutorizacion" ];
					$elemento[ "Email" ] = $datos_invitado[ "Email" ];
					unset( $response_tipodoc_asociado );
					$response_tipodoc_asociado = array();
					$tipodoc_asociado[ "IDTipoDocumento" ] = ( int )$datos_invitado[ "IDTipoDocumento" ];
					$tipodoc_asociado[ "Nombre" ] = $dbo->getFields( "TipoDocumento", "Nombre", "IDTipoDocumento = '" . $datos_invitado[ "IDTipoDocumento" ] . "'" );
					array_push( $response_tipodoc_asociado, $tipodoc_asociado );
					$elemento[ "TipoDocumento" ] = $response_tipodoc_asociado;

					$elemento[ "FechaIngreso" ] = $r[ "FechaInicio" ];
					$elemento[ "FechaSalida" ] = $r[ "FechaFin" ];
					//Consulto datos vehiculo
					$datos_vehiculo = $dbo->fetchAll( "Vehiculo", " IDVehiculo = '" . $r[ "IDVehiculo" ] . "' ", "array" );
					$elemento[ "Vehiculo" ] = $datos_vehiculo[ "Placa" ];
					$elemento[ "Observaciones" ] = $r[ "ObservacionSocio" ];

					//Reviso si ya se le dio entrada
					$presalida = $dbo->getFields( "Club", "Presalida", "IDClub = '" . $IDClub . "'" );
					if ( $presalida == "S" )
						$HabilitaPresalida = $dbo->getFields( "LogAcceso", "Entrada", "IDClub = '" . $IDClub . "' and IDInvitacion = '" . $r[ "IDSocioAutorizacion" ] . "' and Fechaingreso >= '" . date( "Y-m-d" ) . " 00:00:00' " );

					if ( $HabilitaPresalida != "S" )
						$HabilitaPresalida = "N";




					$elemento[ "HabilitaPresalida" ] = $HabilitaPresalida;


					array_push( $response, $elemento );

				} //ednw hile
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;
			} //end else
		} else {
			$respuesta[ "message" ] = "2. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}





	function get_horas( $IDClub, $IDSocio, $IDServicio ) {
		$dbo = & SIMDB::get();

		//inserta _log
		$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_horas','IDClub: " . $IDClub . " IDSocio:" . $IDSocio . " . IDServicio: " . $IDServicio . " Elemento: " . $IDElemento . "','" . json_encode( $respuesta ) . "')" );


		$response = array();
		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {

				// Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
				$sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and Activo <>'N' Order by HoraDesde Limit 1";
				$qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
				$row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );


				$minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );

				$horaInicial = $row_dispo_elemento_primera[ "HoraDesde" ];
				$minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_primera[ "IDDisponibilidad" ] . "'" );
				$hora_final = strtotime( $row_dispo_elemento_primera[ "HoraHasta" ] );
				$hora_actual = $row_dispo_elemento_primera[ "HoraDesde" ];



				while ( $hora_actual <= $hora_final ):

					$servicio_hora[ "IDClub" ] = $r[ "IDClub" ];
				$servicio_hora[ "IDServicio" ] = $r[ "IDServicio" ];

				if ( strlen( $horaInicial ) != 8 ):
					$horaInicial .= ":00";
				endif;

				$servicio_hora[ "Hora" ] = $horaInicial;
				$zonahoraria = date_default_timezone_get();
				$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
				$servicio_hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


				array_push( $response, $servicio_hora );

				$segundos_horaInicial = strtotime( $horaInicial );
				$segundos_minutoAnadir = $minutoAnadir * 60;
				$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
				$hora_actual = strtotime( $nuevaHora );
				$horaInicial = $nuevaHora;


				endwhile;





			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}


	//Verifica si club y el servicio está abierto en la fecha indicada
	function verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDServicioElemento = "", $Hora = "", $Tee = "" ) {
		$dbo = & SIMDB::get();
		$respuesta = "";
		$condicion_servicio = "and IDServicio = '" . $IDServicio . "'";
		$sql = "SELECT * FROM  ClubFechaCierre WHERE Fecha = '" . $Fecha . "' and IDClub = '" . $IDClub . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$r_cierre = $dbo->fetchArray( $qry );
			$respuesta = "Lo sentimos club cerrado el dia: " . $Fecha . " Motivo: " . $r_cierre[ "Motivo" ];
		} else {


			if ( !empty( $IDServicioElemento ) ) {
				$condicion_multiple_elemento = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDServicioElemento, $IDServicio );
				$array_multiple_id = explode( ",", $condicion_multiple_elemento );
				if ( count( $array_multiple_id ) > 1 ):
					foreach ( $array_multiple_id as $id_elemento ):
						$array_condicion_multiple_elemento[] = " IDServicioElemento like '%|" . $id_elemento . "|%'";
				endforeach;
				if ( count( $condicion_multiple_elemento ) > 0 ):
					$condicion_elemento = " and (" . implode( " or ", $array_condicion_multiple_elemento ) . ")";
				$condicion_servicio = ""; // no consulto el servicio por que puede ser distintos
				endif;
				else :
					$condicion_elemento = " and IDServicioElemento like '%|" . $IDServicioElemento . "|%'";
				endif;

			} else {
				$condicion_elemento = " and IDServicioElemento = ''";
			}

			if ( !empty( $Tee ) )
				$condicion_tee = " and " . $Tee . " = 'S'";


			if ( !empty( $Hora ) ):
				$condicion_hora = " and HoraInicio <= '" . $Hora . "' and HoraFin >= '" . $Hora . "' ";
			else :
				$condicion_hora = " and HoraInicio = '00:00:00' and HoraFin = '00:00:00' ";
			endif;


			$dia_semana_fecha=date("w",strtotime($Fecha));
			//$sql_servicio = "SELECT * FROM  ServicioCierre WHERE FechaInicio <= '".$Fecha."' and FechaFin >= '".$Fecha."' and IDServicio = '".$IDServicio."' " . $condicion_hora . $condicion_elemento;
			$sql_servicio = "SELECT Dias,Descripcion FROM  ServicioCierre WHERE FechaInicio <= '" . $Fecha . "' and FechaFin >= '" . $Fecha . "' " . $condicion_servicio . $condicion_hora . $condicion_elemento . $condicion_tee;

			$qry_servicio = $dbo->query( $sql_servicio );
			while($r_cierre_servicio = $dbo->fetchArray( $qry_servicio )){

				//$r_cierre_servicio = $dbo->fetchArray( $qry_servicio );
				if(!empty($r_cierre_servicio["Dias"])){
					$array_dias_cierre=explode("|",$r_cierre_servicio["Dias"]);
					if(in_array($dia_semana_fecha,$array_dias_cierre)){
							$respuesta = "Lo sentimos servicio cerrado el dia: " . $Fecha . " motivo: " . $r_cierre_servicio[ "Descripcion" ];
					}
				}
				else{
						$respuesta = "Lo sentimos servicio cerrado el dia: " . $Fecha . " Motivo: " . $r_cierre_servicio[ "Descripcion" ];
				}
			}

		}

		return $respuesta;
	}



	function consultar_disponibilidad( $qry, $IDElemento, $IDServicio, $Fecha ) {

		$dbo = & SIMDB::get();
		//Horas Disponibles Elemento
		$response_disponibilidad = array();

		if ( !empty( $IDElemento ) )
			$condicion_elemento = " and IDServicioElemento = '" . $IDElemento . "'";

		while ( $r = $dbo->fetchArray( $qry ) ) {

			$sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " Order by Orden";
			$result_elementos_servicio = $dbo->query( $sql_elementos_servicio );
			while ( $r_elementos_servicio = $dbo->FetchArray( $result_elementos_servicio ) ):
				unset( $array_hora_reservada );
			$IDElemento = $r_elementos_servicio[ "IDServicioElemento" ];


			//Consulto lo que  tiene reservado el elemento en la fecha indicada
			$sql_reserva_elemento = "SELECT ReservaGeneral.*, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";
			$qry_reserva_elemento = $dbo->query( $sql_reserva_elemento );
			$array_socio = array();
			while ( $row_reserva_elemento = $dbo->fetchArray( $qry_reserva_elemento ) ) {
				$array_hora_reservada[] = $row_reserva_elemento[ "Hora" ];
				$array_socio[ $row_reserva_elemento[ "Hora" ] ] = $row_reserva_elemento;
				$array_socio[ $row_reserva_elemento[ "Hora" ] ][ "NombreSocio" ] = utf8_encode( $row_reserva_elemento[ "Socio" ] );
			}


			//Horas generales del servicio
			$horaInicial = $r[ "HoraDesde" ];
			$minutoAnadir = $r[ "IntervaloHora" ];
			$hora_final = strtotime( $r[ "HoraHasta" ] );
			$hora_actual = $r[ "HoraDesde" ];

			$dia_fecha = date( 'N', strtotime( $Fecha ) );

			//Verifico si tene disponibilidad especifica el elemento
			$sql_dispo_elemento = "Select * From ElementoDisponibilidad Where IDServicioElemento = '" . $IDElemento . "'";
			$qry_dispo_elemento = $dbo->query( $sql_dispo_elemento );
			if ( $dbo->rows( $qry_dispo_elemento ) > 0 ) {
				$verifica_disponibilidad_especifica = 1;
				$sql_dispo_elemento = "Select * From ElementoDisponibilidad Where IDServicioElemento = '" . $IDElemento . "' and IDDia = '" . $dia_fecha . "' Order by HoraDesde";
				$qry_dispo_elemento = $dbo->query( $sql_dispo_elemento );
				while ( $row_dispo_elemento = $dbo->fetchArray( $qry_dispo_elemento ) ) {
					$horaInicial = $row_dispo_elemento[ "HoraDesde" ];
					$minutoAnadir = $r[ "IntervaloHora" ];
					$hora_final = strtotime( $row_dispo_elemento[ "HoraHasta" ] );
					$hora_actual = strtotime( $row_dispo_elemento[ "HoraDesde" ] );

					while ( $hora_actual <= $hora_final ):
						if ( strlen( $horaInicial ) != 8 ):
							$horaInicial .= ":00";
					endif;



					$hora[ "Hora" ] = $horaInicial;
					$zonahoraria = date_default_timezone_get();
					$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
					$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );
					if ( in_array( $horaInicial, $array_hora_reservada ) ) {
						$hora[ "Disponible" ] = "N";
						$hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "NombreSocio" ];
					} else {
						$hora[ "Disponible" ] = "S";
						$hora[ "Socio" ] = "";
					}

					$hora[ "IDElemento" ] = $IDElemento;
					$hora[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'" );
					array_push( $response_disponibilidad, $hora );


					$array_horas_elemento[] = $horaInicial;
					$segundos_horaInicial = strtotime( $horaInicial );
					$segundos_minutoAnadir = $minutoAnadir * 60;
					$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
					$hora_actual = strtotime( $nuevaHora );
					$horaInicial = $nuevaHora;
					endwhile;

				}
			}
			// Si no tiene disponibildad especifica busco la general para elementos
			else {
				//Verifico si tene disponibilidad  general el elemento
				$sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N'";
				$qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );
				if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ) {

					$verifica_disponibilidad_general = 1;
					while ( $row_dispo_elemento_gral = $dbo->fetchArray( $qry_dispo_elemento_gral ) ) {
						$horaInicial = $row_dispo_elemento_gral[ "HoraDesde" ];
						$minutoAnadir = $r[ "IntervaloHora" ];
						$hora_final = strtotime( $row_dispo_elemento_gral[ "HoraHasta" ] );
						$hora_actual = strtotime( $row_dispo_elemento_gral[ "HoraDesde" ] );

						while ( $hora_actual <= $hora_final ):
							if ( strlen( $horaInicial ) != 8 ):
								$horaInicial .= ":00";
						endif;

						$hora[ "Hora" ] = $horaInicial;
						$zonahoraria = date_default_timezone_get();
						$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
						$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );
						if ( in_array( $horaInicial, $array_hora_reservada ) ) {
							$hora[ "Disponible" ] = "N";
							$hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "NombreSocio" ];
						} else {
							$hora[ "Disponible" ] = "S";
							$hora[ "Socio" ] = "";
						}

						$hora[ "IDElemento" ] = $IDElemento;
						$hora[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'" );
						array_push( $response_disponibilidad, $hora );


						$array_horas_elemento[] = $horaInicial;
						$segundos_horaInicial = strtotime( $horaInicial );
						$segundos_minutoAnadir = $minutoAnadir * 60;
						$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
						$hora_actual = strtotime( $nuevaHora );
						$horaInicial = $nuevaHora;
						endwhile;

					}


				}
			}



			// Si no se ha especificado disponibilidad general o especifica aal elemento consulto la del servicio
			if ( $verifica_disponibilidad_especifica == 0 && $verifica_disponibilidad_general == 0 ):
				$horaInicial = $r[ "HoraDesde" ];
			$minutoAnadir = $r[ "IntervaloHora" ];
			$hora_final = strtotime( $r[ "HoraHasta" ] );
			$hora_actual = strtotime( $r[ "HoraDesde" ] );

			while ( $hora_actual <= $hora_final ):

				if ( strlen( $horaInicial ) != 8 ):
					$horaInicial .= ":00";
			endif;

			$hora[ "Hora" ] = $horaInicial;
			$zonahoraria = date_default_timezone_get();
			$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
			$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );
			if ( in_array( $horaInicial, $array_hora_reservada ) ) {
				$hora[ "Disponible" ] = "N";
				$hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "NombreSocio" ];
			} else {
				$hora[ "Disponible" ] = "S";
				$hora[ "Socio" ] = "";
			}


			$hora[ "IDElemento" ] = $IDElemento;
			$hora[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'" );
			array_push( $response_disponibilidad, $hora );

			$segundos_horaInicial = strtotime( $horaInicial );
			$segundos_minutoAnadir = $minutoAnadir * 60;
			$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
			$hora_actual = strtotime( $nuevaHora );
			$horaInicial = $nuevaHora;

			endwhile;
			endif;


			endwhile;


		} //ednw hile


		return $response_disponibilidad;

	}




	function get_disponiblidad_elemento( $IDClub, $IDElemento, $IDServicio, $Fecha ) {
		$dbo = & SIMDB::get();



		$verifica_disponibilidad_especifica = 0;
		$verifica_disponibilidad_general = 0;

		// Verifico que el club y servicio este disponible en la fecha consultada
		$verificacion = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio );
		if ( !empty( $verificacion ) ):
			$respuesta[ "message" ] = $verificacion;
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;


		$response = array();
		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			$servicio_hora[ "IDClub" ] = $IDClub;
			$servicio_hora[ "IDServicio" ] = $IDServicio;
			$servicio_hora[ "IDElemento" ] = $IDElemento;
			$servicio_hora[ "Fecha" ] = $Fecha;

			$response_disponibilidad = SIMWebserviceQuemado::consultar_disponibilidad( $qry, $IDElemento, $IDServicio, $Fecha );
			$servicio_hora[ "Disponibilidad" ] = $response_disponibilidad;
			array_push( $response, $servicio_hora );


			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}


	function timezone_offset_string( $offset ) {
		return sprintf( "%s%02d:%02d", ( $offset >= 0 ) ? '+' : '-', abs( $offset / 3600 ), abs( $offset % 3600 ) );
	}


	function valida_cupos_disponibles( $IDClub, $IDServicio, $IDElemento, $Fecha, $horaInicial ) {
		$dbo = & SIMDB::get();
		//Consulto cuantos reservas se han tomado en esta hora para saber si ya llegó al limite de cupos
		$sql_reserva_elemento_hora_fecha = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ORDER BY Hora ";
		$result_reserva_elemento_hora_fecha = $dbo->query( $sql_reserva_elemento_hora_fecha );
		$total_cupos_reservados = $dbo->rows( $result_reserva_elemento_hora_fecha );

		//le sumo los invitados por cada reserva
		$total_invitados = 0;
		while ( $row_invitados_reserva = $dbo->fetchArray( $result_reserva_elemento_hora_fecha ) ):
			$sql_invitado = "Select count(IDReservaGeneralInvitado) as TotalInvitados From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_invitados_reserva[ "IDReservaGeneral" ] . "'";
		$result_invitado = $dbo->query( $sql_invitado );
		$row_invitados = $dbo->fetchArray( $result_invitado );
		$total_invitados += $row_invitados[ "TotalInvitados" ];
		endwhile;
		$total_cupos_reservados += $total_invitados;

		//le sumo los invitados seleccionados, por ejemplo en salones le pide al socio cuantos invitados sin necesidad de poner los nombres
		$sql_reserva_num_invitados = "SELECT SUM(CantidadInvitadoSalon) as TotalOtrosInvitados FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ORDER BY Hora ";
		$result_reserva_num_invitados = $dbo->query( $sql_reserva_num_invitados );
		$row_num_invitados = $dbo->fetchArray( $result_reserva_num_invitados );
		$total_num_invitados = $row_num_invitados[ "TotalOtrosInvitados" ];
		$total_cupos_reservados += $total_num_invitados;

		return $total_cupos_reservados;

	}


	function verifica_elemento_otro_servicio( $IDElemento, $IDServicio="" ) {
		$dbo = & SIMDB::get();

		$condicion_multiple_elemento="";
		$condicion_multiple_elemento=$IDElemento;
		unset( $array_id_elemento );
		$IdentificadorElemento = $dbo->getFields( "ServicioElemento", "IdentificadorElemento", "IDServicioElemento = '" . $IDElemento . "'" );
		if ( ( int )$IdentificadorElemento > 100000 ): //esto para que valide si es un numero de documento

			if(!empty($IDServicio)){
				$condicion_servicio=" Group by IDServicio ";
			}

		$sql_elemento_otro_servicio = "Select * From ServicioElemento Where IdentificadorElemento = '" . $IdentificadorElemento . "' " . $condicion_servicio;
		$result_elemento_otro_servicio = $dbo->query( $sql_elemento_otro_servicio );
		while ( $row_elemento_otro_servicio = $dbo->fetchArray( $result_elemento_otro_servicio ) ):
			$array_id_elemento[] = $row_elemento_otro_servicio[ "IDServicioElemento" ];
		endwhile;
		if ( count( $array_id_elemento ) > 0 ):
			$condicion_multiple_elemento = implode( ",", $array_id_elemento );
		endif;
		endif;

		return $condicion_multiple_elemento;

	}


	function get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento = "", $Admin = "", $UnElemento = "", $NumeroTurnos = "", $IDTipoReserva = "", $Agenda = "", $MostrarTodoDia = "", $IDUsuario="" ) {
		$dbo = & SIMDB::get();

	  $datos_servicio_actual=$dbo->fetchAll( "Servicio", " IDServicio = '" . $IDServicio . "' ", "array" );

	  if(!empty($IDUsuario)){
	    $PermiteReservarUsuario=$dbo->getFields( "Usuario", "PermiteReservar", "IDUsuario = '" . $IDUsuario . "'" );
	  }
		else
			$PermiteReservarUsuario="N";

	  $CuposporHora = $datos_servicio_actual["CupoMaximoBloque"];


	  //Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
	  $id_servicio_maestro = $datos_servicio_actual["IDServicioMaestro"];
	  $datos_servicio_mestro=$dbo->fetchAll( "ServicioMaestro", " IDServicioMaestro = '" . $id_servicio_maestro . "' ", "array" );
	  $id_servicio_cancha = $datos_servicio_mestro["IDServicioMaestroReservar"];

	  if ( $id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30 ): //Golf
	    //$respuesta = SIMWebserviceQuemado::get_disponibilidad_campo($IDClub,$IDCampo,$Fecha, $IDServicio);
	    $respuesta = SIMWebserviceQuemado::get_disponibilidad_campo( $IDClub, "", $Fecha, $IDServicio, $Admin, $NumeroTurnos );
	  return $respuesta;
	  endif;



	  $fecha_disponible = 0;

	  $verifica_disponibilidad_especifica = 0;
	  $verifica_disponibilidad_general = 0;
	  $verificacion = "";
	  // Verifico que el club y servicio este disponible en la fecha consultada
	  $verificacion = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio );

	  if ( !empty( $verificacion ) ):
	    $respuesta[ "message" ] = $verificacion;
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;


	  /*
	  //if($IDClub==10):
	    //valido si el servicio tiene opciones para seleccionar la opcion por ejemplo dobles o sencillos
	    $sql_tipo_reserva_servicio = "Select * From ServicioTipoReserva Where IDServicio = '".$IDServicio."' and Activo = 'S'";
	    $result_tipo_reserva_servicio = $dbo->query($sql_tipo_reserva_servicio);
	    $total_tipo_reserva = $dbo->rows($result_tipo_reserva_servicio);
	    if((int)$total_tipo_reserva>0 && empty($IDTipoReserva)):
	      $respuesta["message"] = "Debe seleccionar una opcion en el paso anterior, por favor verifique";
	      $respuesta["success"] = false;
	      $respuesta["response"] = NULL;
	      return $respuesta;
	    endif;

	  //endif;
	  */

	  if ( empty( $Admin ) ){
	    $TipoConsultaDispo="App";
	  }

	  //Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar
	  $array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio,$Fecha,$TipoConsultaDispo );
	  foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
	    if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
	      $fecha_disponible = 1;
	  endif;
	  endforeach;


	  if ( $Agenda == "S" )
	    $fecha_disponible = 1;



	  if ( $fecha_disponible == 0 && empty( $Admin ) ):
	    $respuesta[ "message" ] = "Esta fecha aún no está disponible.";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  exit;
	  endif;



	  $response = array();
	  $response_disponibilidades = array();
	  $sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
	  $qry = $dbo->query( $sql );
	  if ( $dbo->rows( $qry ) > 0 ) {




	    $datos_servicio_configuracion=$dbo->fetchArray($qry);

	    $message = $dbo->rows( $qry ) . " Encontrados";
	    $servicio_hora[ "IDClub" ] = $IDClub;
	    $servicio_hora[ "IDServicio" ] = $IDServicio;
	    $servicio_hora[ "Fecha" ] = $Fecha;
	    //$response_disponibilidad = SIMWebserviceQuemado::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

	    //Horas Disponibles Elemento
	    $response_disponibilidad = array();


	    //Si se selecciona un tipo de resrva consulto que elemntos pueden hacer esa reserva (por ejemplo una manicurista que solo hace decoracion y las otra no)
	    if ( !empty( $IDTipoReserva ) ):

	      $sql_elemento_tipo_reserva = $dbo->query( "Select IDServicioElemento From ServicioElementoTipoReserva Where IDServicioTipoReserva = '" . $IDTipoReserva . "'" );
	    while ( $row_elemento_tipo_reserva = $dbo->fetchArray( $sql_elemento_tipo_reserva ) ):
	      $array_elementos_tipo_reserva[] = $row_elemento_tipo_reserva[ "IDServicioElemento" ];
	    endwhile;
	    if ( count( $array_elementos_tipo_reserva ) > 0 ):
	      $id_elemento_tipo_reserva = implode( ",", $array_elementos_tipo_reserva );
	    $condicion_elemento = "and IDServicioElemento in (" . $id_elemento_tipo_reserva . ")";

	    endif;
	    endif;


	    if ( !empty( $IDElemento ) )
	      $condicion_elemento = " and IDServicioElemento = '" . $IDElemento . "'";

	    $r = $dbo->fetchArray( $qry );

	    $nombre_elemento_consulta = "";
	    $sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento . " Order By Orden";
	    $result_elementos_servicio = $dbo->query( $sql_elementos_servicio );
	    while ( $r_elementos_servicio = $dbo->FetchArray( $result_elementos_servicio ) ):
	      unset( $array_hora_reservada );



			$IDElemento = $r_elementos_servicio[ "IDServicioElemento" ];

	    //Verifico si el elemento esta en otro servicio para traer el id y verificar disponibilidad
	    $condicion_multiple_elemento = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDElemento,"" );

	    $nombre_elemento_consulta = $r_elementos_servicio[ "Nombre" ];
	    //Consulto lo que  tiene reservado el elemento en la fecha indicada
	    $sql_reserva_elemento = "SELECT ReservaGeneral.* FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";
			$qry_reserva_elemento = $dbo->query( $sql_reserva_elemento );
	    $array_socio = array();

	    while ( $row_reserva_elemento = $dbo->fetchArray( $qry_reserva_elemento ) ) {
				$tipo_reserva = "";
	      $tipo_reserva_empl="";

	      if($IDServicio!=$row_reserva_elemento["IDServicio"]){
	        //$total_reservas_hora_elmento++;
	      $array_reservas_por_hora[$row_reserva_elemento[ "Hora" ]][$IDElemento]++;
	      }



	      if ( $row_reserva_elemento[ "Tipo" ] == "Automatica" ):
	        //averiguo si fue automatica por una clase para mostrarlo en el nombre del socio
	        $sql_reserva_padre = "SELECT * FROM ReservaGeneral WHERE Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '" . $row_reserva_elemento[ "Hora" ] . "' and Tipo <> 'Automatica' and IDSocio = '" . $row_reserva_elemento[ "IDSocio" ] . "'  ORDER BY Hora Limit 1";
	      $qry_reserva_padre = $dbo->query( $sql_reserva_padre );
	      $row_reserva_padre = $dbo->fetchArray( $qry_reserva_padre );
	      $id_servicio_maestro_reserva = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_padre[ "IDServicio" ] . "'" );
	      $id_servicio_cancha = $dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro_reserva . "'" );
	      //Si la reserva es una clase agrego la palabra clase
	      if ( $id_servicio_cancha > 0 ):
	        $tipo_reserva = "Clase ";
	      else :
	        $tipo_reserva = "";
	      endif;
	      endif;



	      //Verifico si el club/servicio se configuro para mostrar el nombre del socio o para mostrar un texto personalizado, para funcionarios si se muestra el nombre
	      $MostrarReserva = $datos_servicio_actual["MostrarReserva"];

	      if ( empty( $MostrarReserva ) )
	        $MostrarReserva = $dbo->getFields( "Club", "MostrarReserva", "IDClub = '" . $IDClub . "'" );

	      if ( $MostrarReserva == "Pesonalizado" && empty( $Agenda ) && empty( $Admin ) ):
	        $LabelPersonalizado = $datos_servicio_actual["LabelPersonalizado"];
	      if ( empty( $MostrarReserva ) )
	        $LabelPersonalizado = $dbo->getFields( "Club", "LabelPersonalizado", "IDClub = '" . $IDClub . "'" );

	      $nombre_tomo_reserva =  $LabelPersonalizado ;
	      else :

	        $predio_socio="";
	        unset($array_aux_reserva);
	        unset($array_nombre_aux);
	        $nombres_aux="";

	        //En Puerto penalisa se debe mostrar el predio
	        if ( $IDClub == 35 )
	          $predio_socio =  $dbo->getFields( "Socio", "Predio", "IDSocio = '" . $row_reserva_elemento["IDSocio"] . "'" ) ;

	          // Mostrar la reserva con cual auxiliar esta
	          if(!empty($row_reserva_elemento["IDAuxiliar"])){
	            $array_aux_reserva=explode(",",$row_reserva_elemento["IDAuxiliar"]);
	            if(count($array_aux_reserva)>0){
	                foreach($array_aux_reserva as $id_auxiliar){
	                    if(!empty($id_auxiliar)){
	                        $nombre_aux =  $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $id_auxiliar . "'" ) ;
	                        $array_nom_corte=explode("..",$nombre_aux);
	                        $array_nombre_aux[]=$array_nom_corte[0];
	                    }
	                }
	                if(count($array_nombre_aux)>0){
	                    $nombres_aux = implode(",",$array_nombre_aux);
	                    $predio_socio .= "(".$nombres_aux.")" ;
	                }
	            }
	          }


	      $nombre_tomo_reserva =  $row_reserva_elemento["NombreSocio"] . " " . $predio_socio;
	      endif;




	      $array_hora_reservada[] = $row_reserva_elemento[ "Hora" ];
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ] = $row_reserva_elemento;
	      // Si la reserva fue tomada para algun beneficiario muestro el nombre del beneficiario
	      if ( $row_reserva_elemento[ "IDSocioBeneficiario" ] ):
	        if ( $MostrarReserva == "Pesonalizado" && empty( $Agenda ) && empty( $Admin ) ):
	          $nombre_reserva =  $LabelPersonalizado ;
	        else :
	          $nombre_reserva = "Benef. " . $row_reserva_elemento[ "NombreBeneficiario" ]. $predio_socio;
	      endif;

	      elseif ( $row_reserva_elemento[ "IDInvitadoBeneficiario" ] ):
	        if ( $MostrarReserva == "Pesonalizado" && empty( $Agenda ) && empty( $Admin ) ):
	          $nombre_reserva =  $LabelPersonalizado ;
	        else :
	          $nombre_reserva = "Inv. " .  $dbo->getFields( "Invitado", "Nombre", "IDInvitado = '" . $row_reserva_elemento[ "IDInvitadoBeneficiario" ] . "'" ) . " " . $dbo->getFields( "Invitado", "Apellido", "IDInvitado = '" . $row_reserva_elemento[ "IDInvitadoBeneficiario" ] . "'" ) . " " . " " . $dbo->getFields( "SocioInvitado", "Nombre", "IDSocioInvitado = '" . $row_reserva_elemento[ "IDInvitadoBeneficiario" ] . "'" )   . " por " . $nombre_tomo_reserva;
	      endif;

	      else :
	        $nombre_reserva = $tipo_reserva . $nombre_tomo_reserva;
	      endif;

	      if ( $row_reserva_elemento[ "IDEstadoReserva" ] == 3 ):
	        $nombre_reserva = "En proceso de reserva";
	      endif;

	      if ( $Agenda == "S" ):
	        $tipo_reserva_empl = "";
	        $nombre_tipo_reserva =  $dbo->getFields( "ServicioTipoReserva", "Nombre", "IDServicioTipoReserva = '" . $row_reserva_elemento[ "IDServicioTipoReserva" ] . "'" ) ;
	        if ( !empty( $nombre_tipo_reserva ) )
	          $tipo_reserva_empl = " / " .  $nombre_tipo_reserva ;


	          //Vuelvo a consultar el servicio ya que un elemento puede ser de varios servicios y se debe verificar de nuevo la reserva actual de cual servicio es
	          $id_servicio_maestro_consulta = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_elemento[ "IDServicio" ] . "'" );
	          $nombre_servicio_personalizado = $dbo->getFields( "ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro_consulta . "'" );
	          if ( empty( $nombre_servicio_personalizado ) )
	            $nombre_servicio_personalizado = $datos_servicio_mestro["Nombre"];

	          $tipo_reserva_empl .= "(" . $nombre_servicio_personalizado . ")";

	          if(!empty($row_reserva_elemento[ "Observaciones" ])){
	            $tipo_reserva_empl .=  $row_reserva_elemento[ "Observaciones" ] ;
	          }

	      endif;

	      //especial bttcc al socio canje mostrar Observacion
	      if($row_reserva_elemento[ "IDSocio" ]==181191 && $Agenda!="S"){
	        $tipo_reserva_empl =  $row_reserva_elemento[ "Observaciones" ] ;
	      }

	      //respuesta a preguntas personalizadas al reservar
	      $sql_respuesta_perso="SELECT Valor,IDServicioCampo FROM  ReservaGeneralCampo WHERE IDReservaGeneral = '".$row_reserva_elemento[ "IDReservaGeneral" ]."'";
	      $r_respuesta_perso=$dbo->query($sql_respuesta_perso);
	      while($row_respuesta_perso = $dbo->fetchArray($r_respuesta_perso)){
	        $pregunta_serv=$dbo->getFields( "ServicioCampo", "Nombre", "IDServicioCampo = '" . $row_respuesta_perso[ "IDServicioCampo" ] . "'" );
	        $tipo_reserva_empl .= $pregunta_serv. ":".$row_respuesta_perso["Valor"];
	      }



	      $datos_servicio_config=$dbo->fetchAll( "Servicio", " IDServicio = '" . $row_reserva_elemento[ "IDServicio" ] . "' ", "array" );
	      if($datos_servicio_config["PopInvitados"]=="N")
	        $IDReservaPop="";
	      else
	        $IDReservaPop=$row_reserva_elemento[ "IDReservaGeneral" ];


	        //$IDReservaPop=$row_reserva_elemento[ "IDReservaGeneral" ];



	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "NombreSocio" ] = $nombre_reserva . $tipo_reserva_empl;
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "IDSocio" ] = $row_reserva_elemento[ "IDSocio" ];
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "ModalidadEsquiSocio" ] = $dbo->getFields( "TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva_elemento[ "IDTipoModalidadEsqui" ] . "'" );
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "IDReservaGeneral" ] = $IDReservaPop;
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "IDSocioBeneficiario" ] = $row_reserva_elemento[ "IDSocioBeneficiario" ];
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "IDInvitadoBeneficiario" ] = $row_reserva_elemento[ "IDInvitadoBeneficiario" ];
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "Cumplida" ] = $row_reserva_elemento[ "Cumplida" ];
	      $array_socio[ $row_reserva_elemento[ "Hora" ] ][ "Tipo" ] = $row_reserva_elemento[ "Tipo" ];



	    }


	    //Horas generales del servicio
	    /*
	    $horaInicial=$r["HoraDesde"];
	    $minutoAnadir=$r["IntervaloHora"];
	    $hora_final = strtotime( $r["HoraHasta"] );
	    $hora_actual = $r["HoraDesde"];
	    */




	    $dia_fecha = date( 'w', strtotime( $Fecha ) );

	    if(empty( $Admin )){
	      $condicion_dispo_solo_admin=" and SoloAdmin <> 'S'";
	    }

	    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
	    $sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%|" . $IDElemento . "|%' and Activo <>'N' ".$condicion_dispo_solo_admin." Order by HoraDesde Limit 1";
	    $qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
	    $row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );
	    //$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
	    $horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera[ "HoraDesde" ];


	    //Verifico que no tenga cierre el elemento en esta fecha
	    $verifica_abierto_servicio = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento );
	    if ( empty( $verifica_abierto_servicio ) ) {


	      //Verifico si tene disponibilidad  general el elemento

	      $sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%|" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin;
	      $qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );


				if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ) {




	        $verifica_disponibilidad_general = 1;
	        while ( $row_dispo_elemento_gral = $dbo->fetchArray( $qry_dispo_elemento_gral ) ) {


	          $horaInicial = $row_dispo_elemento_gral[ "HoraDesde" ];

	          //$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
	          $minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );

	          // Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
	          if ( $Fecha == date( "Y-m-d" ) ):
	            $medicion_tiempo = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
	          $valor_tiempo_anticipacion = ( int )$dbo->getFields( "Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
	          if ( $medicion_tiempo == "Horas" ):
	            $valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
	          elseif ( $medicion_tiempo == "Dias" ):
	            $valor_tiempo_anticipacion = 0;
	          endif;
	          else :
	            $valor_tiempo_anticipacion = 0;
	          endif;



	          //Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
	          $medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
	          $valor_anticipacion_turno = ( int )$dbo->getFields( "Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
	          switch ( $medicion_tiempo_anticipacion ):
	          case "Dias":
	            $minutos_anticipacion_turno = ( 60 * 24 ) * $valor_anticipacion_turno;
	            break;
	          case "Horas":
	            $minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
	            break;
	          case "Minutos":
	            $minutos_anticipacion_turno = $valor_anticipacion_turno;
	            break;
	          default:
	            $minutos_anticipacion_turno = 0;
	            endswitch;



	            //Si es administrador no tiene limite de anticipacion
	            if ( $Admin == "S" ) {
	              $valor_tiempo_anticipacion = 0;
	              $minutos_anticipacion_turno = 0;
	            }

	            //Consulto hace una hora para mostrar los turnos anterior segun solicitud de lagartos
	            $id_servicio_inicial = $datos_servicio_mestro["IDServicioInicial"];

	            //$hace_una_hora = strtotime ( '-1 hour' , strtotime ( date("Y-m-d H:i:s") ) ) ;
	            $hace_una_hora = strtotime( '-' . $minutoAnadir . ' minutes', strtotime( date( "Y-m-d H:i:s" ) ) );

	            if ( $Fecha == date( "Y-m-d" ) ):
	              $hora_real = date( 'Y-m-d H:i:s', $hace_una_hora );
	            else :
	              $hora_real = date( 'Y-m-d H:i:s' );
	            endif;

	            // Solo aplica lo de 1 hora antes cuando no es servicio de clases
	            if ( $id_servicio_inicial == "1" ):
	              //$hora_real = date('Y-m-d H:i:s');
	              endif;


	            //Cunado se consulta desde la agenda del app de empleados muestro todo el dia
	            if ( $Agenda == "S" || $MostrarTodoDia == "S" ):
	              $hora_real = date( 'Y-m-d 05:00:00' );
	            endif;

	            if ( $Agenda == "S" || $MostrarTodoDia == "S" ):
	              $hora_real = $Fecha .  " " . date('05:00:00' );
	            endif;

	            // Si tiene configurado el parametro de anticipacion turno no tomo en cuenta lo de dejar ala hora actual 1 hora antes
	            if($minutos_anticipacion_turno>0 && $Agenda != "S"){
	              $hora_real = date('Y-m-d H:i:s');
	            }

	            $hora_empezar_reserva = strtotime( '-' . $valor_tiempo_anticipacion . ' minute', strtotime( $horaInicial_reserva ) );
	            //$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
	            $hora_actual_sistema = strtotime( $hora_real );

	            $hora_final = strtotime( $row_dispo_elemento_gral[ "HoraHasta" ] );
	            $hora_actual = strtotime( $row_dispo_elemento_gral[ "HoraDesde" ] );

	            $primer_horario = 0;
	            $primer_horario_disponible = "";
	            $verifica_abierto_servicio_hora = "";

	            while ( $hora_actual <= $hora_final ):

	            $hora_fecha_actual = $Fecha . " " . date( 'H:i:s', $hora_actual );
	            $hora_puede_reservar = strtotime( '+' . $minutos_anticipacion_turno . ' minute', strtotime( $hora_real ) );

	            if ( $Agenda == "S"  ):
	              $hora_puede_reservar = strtotime( '+0 minute', strtotime( $hora_real ) );
	            endif;

	            /*
	            if($IDServicio==1116){
	              echo "Condi " .  date("Y-m-d H:i:s",$hora_puede_reservar) ."<=".$hora_fecha_actual;
	              echo "ANTI: " . $minutos_anticipacion_turno;
	              if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):
	                  echo "SI:".$hora_actual;
	              endif;
	            }
	            */


	            /*****************************************************************************************************
	            Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
	            Valido que ésta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
	            ******************************************************************************************************/
	            if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):

	              //valido si ya paso el tiempo limite despues de pasado el turno aun se puede reservar, ej: el de las 4 lo puedo tomar hasta las 4:10
	              $minutoPosterior = ( int )$dbo->getFields( "Disponibilidad", "MinutoPosteriorTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
	            $flag_hora_disponible_limite = 0;
	            if ( $minutoPosterior > 0 && $Fecha == date( "Y-m-d" ) && ( empty( $Agenda ) && empty( $MostrarTodoDia ) ) ):
	              $tiempo_limite_reserva = strtotime( '+' . $minutoPosterior . ' minutes', strtotime( $hora_fecha_actual ) );
	            if ( strtotime( date( "Y-m-d H:i:s" ) ) >= $tiempo_limite_reserva ):
	              $flag_hora_disponible_limite = 1;
	            endif;
	            endif;

	            if ( $flag_hora_disponible_limite == 0 ):



	              if ( strlen( $horaInicial ) != 8 ):
	                $horaInicial .= ":00";
	            endif;


	            $flag_hora_disponible = 0;
	            // Si el servicio es una clase y necesita reservar cancha verifico que exista al menos un elemento (cancha) disponible para mostrar la hora

	            if ( $id_servicio_cancha > 0 ):
	              // Consulto el servicio del club asociado a este servicio maestro
	              $IDServicioCanchaClub = $dbo->getFields( "Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'" );
	            // Valido si existe una cancha disponible en el horario de la clase
	            $IDElemento_cancha = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicioCanchaClub, $Fecha, $horaInicial, $IDElemento );
	            if ( empty( $IDElemento_cancha ) ):
	              $flag_hora_disponible = 1;
	            endif;
	            endif;

							$hora_mostrar = $horaInicial;
	            $hora[ "Hora" ] = $horaInicial;

	            $zonahoraria = date_default_timezone_get();
	            $offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
	            $hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


	            //echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
	            //exit;

	            $datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "' ", "array" );


	            // Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
	            $multiples_cupos = "N";
							$IDElementoConsultar=$IDElemento;


							if ( ( int )$datos_disponibilidad[ "Cupos" ] > 1 ){
									$multiples_cupos = "S";
		            	//Consulto cuantos reservas se han tomado en esta hora para saber si ya llegó al limite de cupos
		            	$cupos_reservados = self::valida_cupos_disponibles( $IDClub, $IDServicio, $IDElemento, $Fecha, $horaInicial );
			            //Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
			            $array_otro_elemento = explode( ",", $condicion_multiple_elemento );
			            if ( count( $array_otro_elemento ) > 1 ): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
			              foreach ( $array_otro_elemento as $id_elemento_multiple ):
			                	if ( $id_elemento_multiple != $IDElemento && !empty( $id_elemento_multiple ) ):
			                  	$sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "' ";
			            				$qry_reserva_elemento_mult = $dbo->query( $sql_reserva_elemento_multp );
			            				if ( $dbo->rows( $qry_reserva_elemento_mult ) > 0 && $CuposporHora >= 1):
			              				$multiples_cupos = "N";
			            				endif;
			            			endif;
			            	endforeach;
			            endif;

			            $cupo_disponibles = "";
			            $cupos_reservados+=$array_reservas_por_hora[$horaInicial][$IDElemento];
			            //Valido si todavia existe cupo en esta hora
			            if ( $cupos_reservados < $datos_disponibilidad[ "Cupos" ] ):
			              $cupo_total = "N"; // aun hay cupos disponibles
			            	$cupos_disponibles = ( int )$datos_disponibilidad[ "Cupos" ] - ( int )$cupos_reservados;
			            	$label_cupo_disponibles = "" . $cupos_disponibles . " cupos";
			            else :
			              $cupo_total = "S"; // ya no hay cupos
			            endif;
	            }
							else{
								$label_cupo_disponibles = "";
							}





	            //Cuando es Agenda lo muestro como si tuviera el cupo total para que en el app aparezca lo sinscritos hasta el momento
	            if ( $Agenda == "S" ):
	              $cupo_total = "S";
	            endif;



	            //Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
	            $hora_real_momento = strtotime( date( "Y-m-d H:i:s" ) ); //calculo de nuevo la fecha y hora real del sistema ya que pudo ser modificada con un tiempo de anticipacion anteriormente
	            $IDAuxiliarReserva="";

							// Si tiene Auxiliar y es admin mustro el auxiliar seleccionado
							$NombreAuxiliarReserva = "";
							$nombre_auxiliar = "";
							if ( !empty( $Admin ) ):
								$IDAuxiliarReserva = $dbo->getFields( "ReservaGeneral", "IDAuxiliar", "IDReservaGeneral = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "'" );
							if ( !empty( $IDAuxiliarReserva ) ):
								$array_aux = explode( ",", $IDAuxiliarReserva );
							if ( count( $array_aux ) > 0 ):
								foreach ( $array_aux as $id_aux ):
									if ( !empty( $id_aux ) )
										$nombre_auxiliar .= $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $id_aux . "'" ) . " - ";
									?>
									<?php
							endforeach;
							endif;
							$NombreAuxiliarReserva = "<span style='color:#696'> / " . $nombre_auxiliar . "</span>";
							endif;



							//Si es una clase consulto el padre de la reserva
							$TipoReservaA = $dbo->getFields( "ReservaGeneral", "Tipo", "IDReservaGeneral = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "'" );


							if ( $TipoReservaA == "Automatica" ):
								$IDBeneficiario = $dbo->getFields( "ReservaGeneral", "IDSocioBeneficiario", "IDReservaGeneral = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "'" );
							/*
							if(!empty($IDBeneficiario)):
								$condicion_benef = " and IDBeneficiario = '".$IDBeneficiario."' ";
							else:
								$condicion_benef = " and IDBeneficiario = '0' ";
							endif;
							*/
							$sql_id_reserva_padre_e = "SELECT * FROM ReservaGeneralAutomatica WHERE  IDReservaGeneralAsociada = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "' Limit 1";
							$qry_id_reserva_padre_e = $dbo->query( $sql_id_reserva_padre_e );
							$row_id_reserva_padre_e = $dbo->fetchArray( $qry_id_reserva_padre_e );

							//$sql_reserva_padre_e = "SELECT * FROM ReservaGeneral WHERE Fecha = '".$Fecha."' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '".$hora["Hora"]."' and Tipo <> 'Automatica' and IDSocio = '".$array_socio["$horaInicial"]["IDSocio"]."' ".$condicion_benef ." ORDER BY Hora Limit 1";
							$sql_reserva_padre_e = "SELECT * FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_id_reserva_padre_e[ "IDReservaGeneral" ] . "' Limit 1";
							$qry_reserva_padre_e = $dbo->query( $sql_reserva_padre_e );
							$row_reserva_padre_e = $dbo->fetchArray( $qry_reserva_padre_e );
							$id_servicio_maestro_reserva = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva_padre_e[ "IDServicio" ] . "'" );
							$id_servicio_cancha_e = $dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro_reserva . "'" );
							//Si la reserva es una clase agrego la palabra clase
							if ( $id_servicio_cancha_e > 0 ):
								//Si se hizo una reserva automatica muestro el nombre del elemento reservado
								$id_elemento_reservado = $dbo->getFields( "ReservaGeneral", "IDServicioElemento", "IDReservaGeneral = '" . $row_reserva_padre_e[ "IDReservaGeneral" ] . "'" );
							$elemento_reservado = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $id_elemento_reservado . "'" );
							if ( !empty( $elemento_reservado ) ):
								$NombreAuxiliarReserva .= "<span style='color:#696'> / " .  $elemento_reservado  . "</span>";
							endif;
							endif;
							endif;



							//verifico si tiene una reserva automatica para mostrarla
							$id_reserva_automatica = $dbo->getFields( "ReservaGeneralAutomatica", "IDReservaGeneralAsociada", " IDReservaGeneral = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "'" );
							if ( !empty( $id_reserva_automatica ) ):
								$detalle_reserva_auto = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $id_reserva_automatica . "' ", "array" );
							$NombreAuxiliarReserva .= "<span style='color:#696'> / " . $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $detalle_reserva_auto[ "IDServicioElemento" ] . "'" ) . "</span>";
							endif;

							endif;


	            if ( ( in_array( $horaInicial, $array_hora_reservada ) && $multiples_cupos == "N" ) || ( $hora_real_momento < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {



	              if ( $Agenda == "S" ):
	                //Si es para agenda no ponto las etiquetas html
	                $NombreAuxiliarReserva = strip_tags( $NombreAuxiliarReserva );
	              endif;



	              $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "NombreSocio" ] . $NombreAuxiliarReserva;
	              $hora[ "IDSocio" ] = $array_socio[ "$horaInicial" ][ "IDSocio" ];
	              $hora[ "ModalidadEsquiSocio" ] = $array_socio[ "$horaInicial" ][ "ModalidadEsquiSocio" ];
	              $hora[ "IDReserva" ] = $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ];
	              $hora[ "IDSocioBeneficiario" ] = $array_socio[ "$horaInicial" ][ "IDSocioBeneficiario" ];
	              $hora[ "IDInvitadoBeneficiario" ] = $array_socio[ "$horaInicial" ][ "IDInvitadoBeneficiario" ];

	              //verifo si el elemento lo han reservado en horas anteriorees para
	              if ( $primer_horario == 0 || $primer_horario == 1 || $primer_horario == 2 ):
	                $primer_horario_disponible = "reservado_socio";
	              endif;

	            } else {




	              //Verifico que no tenga fecha de cierre en esta hora
	              $verifica_abierto_servicio_hora = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $horaInicial );

	              //Validacion Especial y temporal cuando es una clase de lagartos y la hora es mayor a 8pm no se muestra las 7 8 y 9 am del dia siguiente a menos que la hora de las 7 esté tomada
	              if ( ( $IDClub == 7 || $IDClub == 8 ) && ( $IDServicio == 43 || $IDServicio == 41 ) && empty( $verifica_abierto_servicio_hora ) ) { //Clases tenis especial
	                $fecha_hoy_sistema = date( 'Y-m-d' );
	                $fecha_manana = strtotime( '+1 day', strtotime( $fecha_hoy_sistema ) );
	                $fecha_corta_manana = date( 'Y-m-d', $fecha_manana );

	                if ( $horaInicial == "06:00:00" || $horaInicial == "07:00:00" || $horaInicial == "08:00:00" || $horaInicial == "09:00:00" ) {
	                  //echo $Fecha."==".$fecha_corta_manana;
	                  if ( $Fecha == date( "Y-m-d" ) || ( $Fecha == $fecha_corta_manana && date( "H" ) >= 20 ) ) {
	                    if ( $Fecha == date( "Y-m-d" ) ) {
	                      //verifico si ya tiene algo reservado antes de la hora si es asi no bloque los horarios
	                      $sql_reserva_elemento_antes = "SELECT * FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora <= '" . $hora[ "Hora" ] . "' and IDServicioElemento = '" . $IDElemento . "'  ORDER BY Hora ";
	                      $result_reserva_elemento_antes = $dbo->query( $sql_reserva_elemento_antes );
	                      if ( $dbo->rows( $result_reserva_elemento_antes ) > 0 ):
	                        $verifica_abierto_servicio_hora = "";
	                      else :
	                        $verifica_abierto_servicio_hora = "Hora no disponible: " . $Fecha . " Motivo:No disponible.";
	                      endif;
	                    } elseif ( $primer_horario_disponible != "reservado_socio" ) { // Si la primera hora está reservada, no bloqueo estos horarios
	                      $verifica_abierto_servicio_hora = "Hora no disponible: " . $Fecha . " Motivo:No disponible.";
	                    }



	                  }
	                }
	              }


	              //Especial AeroClub si un avion tiene reserva encualquier hora del dia se bloquea en los demas Servicios
	              $flag_avion_disponible=0;
	              if($IDClub==36 && ($IDServicio==3608 ||$IDServicio==4371 ) ):
	                // SI esta reservado en crucero lo bloqueo en local
	                if($IDServicio==4371 ){ // Crucero
	                    $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and IDServicio = '3608' Limit 1 ";
	                }
	                else{ // Local
	                    $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and IDServicio = '4371' Limit 1 ";
	                }

	                $r_reserva_elemento_avion = $dbo->query($sql_reserva_elemento_avion);
	                if($dbo->rows($r_reserva_elemento_avion)>0):
	                  $flag_avion_disponible=1;
	                endif;
	              endif;




	              if ( !empty( $verifica_abierto_servicio_hora ) ):

	                //extraigo la razon
	                $mensaje_cierre = explode( ":", $verifica_abierto_servicio_hora );
	              $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] = $mensaje_cierre[ 2 ];
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              elseif ( $flag_hora_disponible == 1 ):
	                $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] = "No hay cancha disponible para clase";
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              elseif($flag_avion_disponible==1):
	                $hora[ "Disponible" ] = "N";
	                $hora[ "Socio" ] = "Avion ya reservado";
	                $hora[ "IDSocio" ] = "";
	                $hora[ "ModalidadEsquiSocio" ] = "";
	                $hora[ "IDReserva" ] = "";
	              else :




	                //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
	                if ( !empty( $IDTipoReserva ) ):
	                  $datos_tipo_reserva = $dbo->fetchAll( "ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array" );
	              $cantidad_turnos = $datos_tipo_reserva[ "NumeroTurnos" ];
	              else :
	                $cantidad_turnos = 1;
	              endif;

	              if ( $cantidad_turnos > 1 ):
									//verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
	                $array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_sin_reserva( $Fecha, $horaInicial, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos );

	              endif;
	              if ( count( $array_disponible ) != ( int )( $cantidad_turnos - 1 ) && $cantidad_turnos > 1 ):
	                $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] = "No Disponible.";
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              else :



	                //Si permite multiples cupos y hay cupos disponibles pongo la hora como disponible
	                if ( $multiples_cupos == "S" && $cupo_total == "S" ):
	                  if ( $Agenda == "S" || $datos_servicio_config["VerInscitosClaseApp"]=="S"):
	                    unset( $array_socio_multiple );
	                        //Consulto nombre de socios incritos
	                        $sql_socio_multiple = "SELECT RG.*
	                                            FROM ReservaGeneral RG
	                                            WHERE RG.IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' AND Fecha = '" . $Fecha . "' and IDEstadoReserva = 1 and Hora = '" . $horaInicial . "' and IDServicioElemento = '".$IDElemento."'";
	                        $result_socio_multiple = $dbo->query( $sql_socio_multiple );
	                        while ( $row_socio_multiple = $dbo->fetchArray( $result_socio_multiple ) ):
	                            $array_socio_multiple[] = $row_socio_multiple["NombreSocio"];
															$IDAuxiliarReserva.=$row_socio_multiple["IDAuxiliar"];
	                        endwhile;
	                        if ( count( $array_socio_multiple ) > 0 ):
	                            $mensaje_cupo_lleno = implode( " / ", $array_socio_multiple );
	                        else :
	                          $mensaje_cupo_lleno = "Sin inscripciones";
	                        endif;
	                    else :
	                          $mensaje_cupo_lleno = "Se llego al limite de cupos ";
	                    endif;
	              $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] = $mensaje_cupo_lleno;
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              else :

	                //Valido cuantos cupos por bloque son permitidos (pj pueden haber disponibles 4 masajistas pero solo hay dos camillas entonces el limite es 2 por bloque)
	                if ( $CuposporHora > 0 ):
	                  //Consulto cuantas reservas hay en esta hora en este servicio
	                  $sql_reserva_servicio = "SELECT ReservaGeneral.* FROM ReservaGeneral  WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' AND Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) and Hora = '" . $horaInicial . "'";
	              $result_reserva_servicio = $dbo->query( $sql_reserva_servicio );
	              $total_reservas_hora = ( int )$dbo->rows( $result_reserva_servicio );
	              endif;



	              if ( $CuposporHora > 0 && $total_reservas_hora >= $CuposporHora ):
	                $hora[ "Disponible" ] = "N";
	              $hora[ "Socio" ] =  "Se llego al maximo por hora ";
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              else :

	                $hora[ "Disponible" ] = "S";
	              $hora[ "Socio" ] = "" . $label_cupo_disponibles;
	              $hora[ "IDSocio" ] = "";
	              $hora[ "ModalidadEsquiSocio" ] = "";
	              $hora[ "IDReserva" ] = "";
	              $hora[ "IDSocioBeneficiario" ] = "";
	              endif;
	              endif;

	              //if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
	              //$hora["Disponible"] = "S";
	              //$hora["Socio"] = "";
	              //$hora["IDSocio"] = "";
	              //$hora["ModalidadEsquiSocio"] = "";
	              //$hora["IDReserva"] = "";

	              //else:
	              /*
	              $hora["Disponible"] = "N";
	              $hora["Socio"] = "Hora no disponible";
	              $hora["IDSocio"] = "";
	              $hora["IDReserva"] = "";
	              */
	              //$hora["Disponible"] = "S";
	              //$hora["Socio"] = "";
	              //$hora["IDSocio"] = "";
	              //$hora["IDReserva"] = "";
	              //endif;

	              endif;

	              endif;



	            }

	            //Averiguo el numero de dias de anticipacion
	            $hora[ "MaximoPersonaTurno" ] = $datos_disponibilidad[ "MaximoPersonaTurno" ];
	            $hora[ "NumeroInvitadoClub" ] = $datos_disponibilidad[ "NumeroInvitadoClub" ];
	            $hora[ "NumeroInvitadoExterno" ] = $datos_disponibilidad[ "NumeroInvitadoExterno" ];

	            //Repeticion reserva
	            $hora[ "IDDisponibilidad" ] = $datos_disponibilidad[ "IDDisponibilidad" ];
	            $hora[ "PermiteRepeticion" ] = $datos_disponibilidad[ "PermiteRepeticion" ];
	            $hora[ "MedicionRepeticion" ] = $datos_disponibilidad[ "MedicionRepeticion" ];
	            $hora[ "FechaFinRepeticion" ] = $datos_disponibilidad[ "FechaFinRepeticion" ];

	            //Consulto los datos de georeferenciacion
	            $datos_disponibilidad_geo = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $datos_disponibilidad[ "IDDisponibilidad" ] . "' ", "array" );
	            $hora[ "Georeferenciacion" ] = $datos_disponibilidad_geo[ "Georeferenciacion" ];
	            //Consulto los demas datos de la configuracion del servicio
	            $datos_geo_servicio = $dbo->fetchAll( "Servicio", " IDServicio = '" . $IDServicio . "' ", "array" );
	            $hora[ "Latitud" ] = $datos_servicio_actual[ "Latitud" ];
	            $hora[ "Longitud" ] = $datos_servicio_actual[ "Longitud" ];
	            $hora[ "Rango" ] = $datos_servicio_actual[ "Rango" ];
	            $hora[ "MensajeFueraRango" ] = $datos_servicio_actual[ "MensajeFueraRango" ];
	            $hora[ "LabelDisponible" ] = "Disponible " . $label_cupo_disponibles;


	            $hora[ "IDElemento" ] = $IDElemento;

	            // Consulto las modalidades que pueda tener
	            $nom_modalidad = array();
	            $array_modalidad_elemento = SIMWebserviceQuemado::get_modalidades( $IDClub, "", $IDElemento );

	            if ( count( $array_modalidad_elemento ) > 0 ):
								foreach ( $array_modalidad_elemento[ "response" ] as $id_modalidad => $datos_modalidad ):
	                $nom_modalidad[] = $datos_modalidad[ "Descripcion" ];
	            	endforeach;
	            $nombre_modalidad = implode( "-", $nom_modalidad );
	            endif;

	            // FIn Modalidades

	            $datos_elemento = $dbo->fetchAll( "ServicioElemento", " IDServicioElemento = '" . $IDElemento . "' ", "array" );

	            if($IDClub==72 && $IDServicio==8649 && $hora_mostrar>='17:00:00'){
	              $nombre_elemento_adicional="En este horario no hay servicio de caddies";
	            }
	            else{
	              $nombre_elemento_adicional="";
	            }


	            $hora[ "NombreElemento" ] = $datos_elemento["Nombre"] . " " .$nombre_elemento_adicional;
	            $hora[ "IDUsuario" ] = $IDUsuario;
	            $hora[ "PermiteReservarUsuario" ] = $PermiteReservarUsuario;

	            $hora[ "ColorLetra" ] = $datos_elemento["ColorLetra"];
	            $hora[ "ColorFondo" ] = $datos_elemento["ColorFondo"];

	            if(!empty($datos_elemento["Foto"]))
	              $FotoElemento=ELEMENTOS_ROOT . $datos_elemento["Foto"];
	            else
	              $FotoElemento="";

	            $hora[ "Foto" ] = $FotoElemento;
	            $hora[ "ModalidadElemento" ] = $nombre_modalidad;
	            $hora[ "MaximoInvitadosSalon" ] = $datos_disponibilidad[ "MaximoInvitadosSalon" ];
	            $hora[ "OrdenElemento" ] = $dbo->getFields( "ServicioElemento", "Orden", "IDServicioElemento = '" . $IDElemento . "'" );
	            $hora[ "PermiteListaEspera" ] = $datos_geo_servicio[ "PermiteListaEspera" ];


	            //si a la reserva ya se le marco cumplida no muesro el boton
	            $MostrarAsistencia="S";

	            if($array_socio[ "$horaInicial" ][ "Cumplida" ]=="S" || $array_socio[ "$horaInicial" ][ "Tipo" ]=="Automatica")
	              $MostrarAsistencia="N";


	            $hora[ "MostrarBotonCumplida" ] = $MostrarAsistencia;
	            $hora[ "IDAuxiliar" ] = $IDAuxiliarReserva;

	            $response_inscritos = array();
	            // Es una clase grupal
	            if($datos_disponibilidad[ "Cupos" ] > 1){
	              $hora[ "MostrarBotonInscritos" ] = $datos_servicio_configuracion["MostrarBotonInscritos"];
	              $hora[ "LabelBotonInscritos" ] = $datos_servicio_configuracion["LabelBotonInscritos"];
	              $sql_inscritos_hora="SELECT RG.IDReservageneral
	                                   FROM ReservaGeneral RG
	                                   WHERE IDServicio = '".$IDServicio."' and Fecha = '" . $Fecha . "'
	                                   and IDEstadoReserva = 1  and Hora = '" . $horaInicial . "' and S.IDClub = '".$IDClub."'";


	              $r_inscritos_hora = $dbo->query($sql_inscritos_hora);
	              while($row_inscritos_hora=$dbo->fetchArray($r_inscritos_hora)){
	                $datos_inscrito[ "IDReserva" ] = $row_inscritos_hora[ "IDReservageneral" ];
	                $datos_inscrito[ "IDSocio" ] = $row_inscritos_hora[ "IDSocio" ];
	                $datos_inscrito[ "Socio" ] = $row_inscritos_hora[ "NombreSocio" ] . "-". $row_inscritos_hora[ "AccionSocio" ];
	                array_push( $response_inscritos, $datos_inscrito );

	              }
	              $hora[ "Inscritos" ] = $response_inscritos;
	            }
	            else{
	              $hora[ "MostrarBotonInscritos" ] = "N";
	              $hora[ "LabelBotonInscritos" ] = "";
	              $hora[ "Inscritos" ] = array();
	            }


	            array_push( $response_disponibilidad, $hora );



	            endif;
	            endif;
	            $primer_horario++;
	            $array_horas_elemento[] = $horaInicial;
	            $segundos_horaInicial = strtotime( $horaInicial );
	            $segundos_minutoAnadir = $minutoAnadir * 60;
	            $array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
	            $hora_actual = strtotime( $nuevaHora );
	            $horaInicial = $nuevaHora;



	            endwhile;

	        }
	      }
	    }

	    endwhile;


	    $orden_letra = "";
	    foreach ( $response_disponibilidad as $id_array => $datos_array ):
	      $orden_letra = SIMResources::$abecedario[ $datos_array[ "OrdenElemento" ] ];
	    $array_ordenado_hora[ $orden_letra . "_" . $datos_array[ "Hora" ] . $datos_array[ "IDElemento" ] ] = $datos_array;
	    endforeach;



			if(count($array_ordenado_hora)>0)
	    	ksort( $array_ordenado_hora );

	    $response_array_ordenado = array();

				if(count($array_ordenado_hora)<=0)
					$array_ordenado_hora=array();

				foreach ( $array_ordenado_hora as $id_array => $datos_array ):
		      array_push( $response_array_ordenado, $datos_array );
		    endforeach;





	    array_push( $response_disponibilidades, $response_array_ordenado );

	    // Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
	    if ( !empty( $UnElemento ) ):
	      $servicio_hora[ "Disponibilidad" ] = $response_array_ordenado;
	    else :
	      $servicio_hora[ "Disponibilidad" ] = $response_disponibilidades;
	    endif;

	    //$servicio_hora["Disponibilidad"] = $response_disponibilidades;
	    $servicio_hora[ "name" ] = $nombre_elemento_consulta ;

	    array_push( $response, $servicio_hora );


	    $respuesta[ "message" ] = $message;
	    $respuesta[ "success" ] = true;
	    $respuesta[ "response" ] = $response;

	  } //End if
	  else {
	    $respuesta[ "message" ] = "No se encontraron registros";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	  } //end else

	  //inserta _log
	  //$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: ".$IDClub. " IDServicio:" . $IDServicio . " . Fecha: ".$Fecha." Elemento: ".$IDElemento."','".json_encode($respuesta)."')");


	  return $respuesta;

	}




	function get_hora_disponible( $IDClub, $IDServicio, $Fecha, $Hora, $Admin = "" ) {
		$dbo = & SIMDB::get();

		$fecha_disponible = 0;
		$verifica_disponibilidad_especifica = 0;
		$verifica_disponibilidad_general = 0;

		// Verifico que el club y servicio este disponible en la fecha consultada
		$verificacion = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio );
		if ( !empty( $verificacion ) ):
			$respuesta[ "message" ] = $verificacion;
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;

		if ( empty( $Admin ) ){
			$TipoConsultaDispo="App";
		}

		//Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar
		$array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio,$Fecha, $TipoConsultaDispo);

		foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
			if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
				$fecha_disponible = 1;
		endif;
		endforeach;


		if ( $fecha_disponible == 0 ):
			$respuesta[ "message" ] = "Esta fecha aún no está disponible";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;





		$response = array();
		$response_disponibilidades = array();
		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {

			$message = $dbo->rows( $qry ) . " Encontrados";
			$servicio_hora[ "IDClub" ] = $IDClub;
			$servicio_hora[ "IDServicio" ] = $IDServicio;
			$servicio_hora[ "Fecha" ] = $Fecha;
			//$response_disponibilidad = SIMWebserviceQuemado::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

			//Horas Disponibles Elemento
			$response_disponibilidad = array();



			$r = $dbo->fetchArray( $qry );


			$sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
			$result_elementos_servicio = $dbo->query( $sql_elementos_servicio );
			$total_elementos = $dbo->rows( $result_elementos_servicio );


			while ( $r_elementos_servicio = $dbo->FetchArray( $result_elementos_servicio ) ):
				unset( $array_hora_reservada );
			$IDElemento = $r_elementos_servicio[ "IDServicioElemento" ];


			$dia_fecha = date( 'w', strtotime( $Fecha ) );


			// Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
			$sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' ".$condicion_dispo_solo_admin." Order by HoraDesde Limit 1";
			$qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
			$row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );
			//$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
			$horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera[ "HoraDesde" ];


			//Verifico si tene disponibilidad  general el elemento
			$sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_dispo_solo_admin;
			$qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );
			if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ) {


				$verifica_disponibilidad_general = 1;
				while ( $row_dispo_elemento_gral = $dbo->fetchArray( $qry_dispo_elemento_gral ) ) {

					$horaInicial = $row_dispo_elemento_gral[ "HoraDesde" ];
					//$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
					$minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );

					// Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
					if ( $Fecha == date( "Y-m-d" ) ):
						$medicion_tiempo = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
					$valor_tiempo_anticipacion = ( int )$dbo->getFields( "Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
					if ( $medicion_tiempo == "Horas" ):
						$valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
					endif;
					else :
						$valor_tiempo_anticipacion = 0;
					endif;



					//Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
					$medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
					$valor_anticipacion_turno = ( int )$dbo->getFields( "Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
					switch ( $medicion_tiempo_anticipacion ):
					case "Dias":
						$minutos_anticipacion_turno = ( 60 * 24 ) * $valor_anticipacion_turno;
						break;
					case "Horas":
						$minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
						break;
					case "Minutos":
						$minutos_anticipacion_turno = $valor_anticipacion_turno;
						break;
					default:
						$minutos_anticipacion_turno = 0;
						endswitch;



						//Si es administrador no tiene limite de anticipacion
						if ( $Admin == "S" ) {
							$valor_tiempo_anticipacion = 0;
							$minutos_anticipacion_turno = 0;
						}


						$hora_real = date( 'Y-m-d H:i:s' );
						$hora_empezar_reserva = strtotime( '-' . $valor_tiempo_anticipacion . ' minute', strtotime( $horaInicial_reserva ) );
						//$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
						$hora_actual_sistema = strtotime( $hora_real );




						$hora_final = strtotime( $row_dispo_elemento_gral[ "HoraHasta" ] );
						$hora_actual = strtotime( $row_dispo_elemento_gral[ "HoraDesde" ] );


						while ( $hora_actual <= $hora_final ):

							$hora_fecha_actual = $Fecha . " " . date( 'H:i:s', $hora_actual );
						$hora_puede_reservar = strtotime( '+' . $minutos_anticipacion_turno . ' minute', strtotime( $hora_real ) );
						/*****************************************************************************************************
						Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
						Valido que ésta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
						******************************************************************************************************/
						if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):



							if ( strlen( $horaInicial ) != 8 ):
								$horaInicial .= ":00";
						endif;

						$hora[ "Hora" ] = $horaInicial;
						$zonahoraria = date_default_timezone_get();
						$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
						$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


						//echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
						//exit;

						$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "' ", "array" );
						//Verifico que esta hora la tenga disponible algun elemento y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos

						// De acuerdo al numero de elementos del servicio disponibles en esta hora verifico si en esta hora ya está reservado
						$sql_reserva_hora = "SELECT * FROM ReservaGeneral WHERE IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Hora = '" . $hora[ "Hora" ] . "'  ORDER BY Hora ";
						$qry_reserva_hora = $dbo->query( $sql_reserva_hora );
						$total_horas_reservadas = $dbo->rows( $qry_reserva_hora );
						$total_horas_reservadas = $dbo->rows( $qry_reserva_hora );

						$contador_elementos_disponibles = 0;
						// Verifico cuantos elementos tienen esta hora disponible
						$sql_dispo_hora = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $hora[ "Hora" ] . "' >= HoraDesde and '" . $hora[ "Hora" ] . "'<=HoraHasta)  and Activo <>'N' Order by HoraDesde";
						$qry_dispo_hora = $dbo->query( $sql_dispo_hora );
						$row_dispo_hora = $dbo->fetchArray( $qry_dispo_hora );
						if ( !empty( $row_dispo_hora[ "IDServicioElemento" ] ) ):
							$array_elementos_hora = explode( "|", $row_dispo_hora[ "IDServicioElemento" ] );
						foreach ( $array_elementos_hora as $id_elemento_hora ):
							if ( !empty( $id_elemento_hora ) ):
								$contador_elementos_disponibles++;
						endif;
						endforeach;
						endif;
						$total_elementos = $contador_elementos_disponibles;

						if ( $total_horas_reservadas >= $total_elementos || ( $hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {
							$hora[ "Disponible" ] = "N";
							$hora[ "Socio" ] = "Reservado";
						} else {
							$hora[ "Disponible" ] = "S";
							$hora[ "Socio" ] = "";
						}

						$hora[ "MaximoPersonaTurno" ] = $datos_disponibilidad[ "MaximoPersonaTurno" ];
						$hora[ "NumeroInvitadoClub" ] = $datos_disponibilidad[ "NumeroInvitadoClub" ];
						$hora[ "NumeroInvitadoExterno" ] = $datos_disponibilidad[ "NumeroInvitadoExterno" ];

						//Repeticion reserva
						$hora[ "IDDisponibilidad" ] = $datos_disponibilidad[ "IDDisponibilidad" ];
						$hora[ "PermiteRepeticion" ] = $datos_disponibilidad[ "PermiteRepeticion" ];
						$hora[ "MaximoRepeticion" ] = $datos_disponibilidad[ "NumeroRepeticion" ] . " " . $datos_disponibilidad[ "MedicionRepeticion" ];


						//$hora["IDElemento"] = $IDElemento;
						//$hora["NombreElemento"] = $dbo->getFields( "ServicioElemento" , "Nombre" , "IDServicioElemento = '" . $IDElemento . "'" );
						array_push( $response_disponibilidad, $hora );
						endif;

						$array_horas_elemento[] = $horaInicial;
						$segundos_horaInicial = strtotime( $horaInicial );
						$segundos_minutoAnadir = $minutoAnadir * 60;
						$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
						$hora_actual = strtotime( $nuevaHora );
						$horaInicial = $nuevaHora;


						endwhile;

				}
			}

			endwhile;



			//Ordeno el array y que aparezca solo una hora para todo elementos
			foreach ( $response_disponibilidad as $id_array => $datos_array ):
				$array_ordenado_hora[ $datos_array[ "Hora" ] ] = $datos_array;
			endforeach;

			ksort( $array_ordenado_hora );

			$response_array_ordenado = array();
			foreach ( $array_ordenado_hora as $id_array => $datos_array ):
				array_push( $response_array_ordenado, $datos_array );
			endforeach;

			//array_push($response_array_ordenado, $array_ordenado_hora);


			$servicio_hora[ "Disponibilidad" ] = $response_array_ordenado;

			//$servicio_hora["Disponibilidad"] = $response_disponibilidades;


			array_push( $response, $servicio_hora );


			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else


		//inserta _log
		//$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode( $respuesta ) . "')" );


		return $respuesta;

	}



	function get_beneficiarios( $IDClub, $IDSocio,$Fecha="",$Hora="",$Tipo="" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDSocio ) ) {
			$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'", "array" );
			if ( !empty( $datos_socio[ "IDSocio" ] ) ) {
				//Consulto el nucleo familiar
				if ( !empty( $datos_socio[ "AccionPadre" ] ) ): // Es beneficiario
					$condicion_nucleo = " and (AccionPadre = '" . $datos_socio[ "AccionPadre" ] . "' or Accion = '" . $datos_socio[ "AccionPadre" ] . "')";
				$tipo_socio = "Beneficiario";
				else : // es Cabeza familia
					$condicion_nucleo = " and ( AccionPadre = '" . $datos_socio[ "Accion" ] . "' and AccionPadre <> '' )";
				$tipo_socio = "Socio";
				endif;

				if ( $IDClub == 7 ): //Especial lagartos no mostrar suegros ni papa
					$condicion_especial = " and  ( Parentesco not like '%suegr%' and Parentesco not like 'padre' )";
				endif;


				$response_beneficiario = array();
				$sql_nucleo = "SELECT IDClub, IDSocio, Foto, Nombre, Apellido, Accion, AccionPadre, CodigoBarras FROM Socio WHERE IDClub = '" . $IDClub . "' and IDSocio <> '" . $datos_socio[ "IDSocio" ] . "' and IDEstadoSocio <> 2 " . $condicion_nucleo . $condicion_especial;
				$qry_nucleo = $dbo->query( $sql_nucleo );
				while ( $datos_nucleo = $dbo->fetchArray( $qry_nucleo ) ):
					$foto_nucleo = "";
				$foto_cod_barras_nucleo = "";

				$socio_beneficiario[ IDBeneficiario ] = $datos_nucleo[ IDSocio ];
				$socio_beneficiario[ Nombre ] = utf8_encode( $datos_nucleo[ Nombre ] ) . " " . utf8_encode( $datos_nucleo[ Apellido ] );
				$socio_beneficiario[ TipoBeneficiario ] = "Socio";

				array_push( $response_beneficiario, $socio_beneficiario );
				endwhile;


				//Consulto los invitados vigentes del socio
				//$sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaInicio >= CURDATE() Union
				//				SELECT IDInvitado FROM SocioAutorizacion WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaInicio >= CURDATE()";

				/*
				$sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaFin >= CURDATE() Union
								SELECT IDInvitado FROM SocioAutorizacion WHERE IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and FechaFin >= CURDATE()";

				*/

				if(!empty($Fecha)){
					$condicion_fecha = " and FechaIngreso = '".$Fecha."' ";
					$condicion_fecha_especial = " and FechaFin >= '".$Fecha."' ";
				}
				else{
					$condicion_fecha = " and FechaIngreso >= CURDATE() ";
					$condicion_fecha_especial = " and FechaFin >= CURDATE() ";
				}

				$sql_invitado = "SELECT IDInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  " . $condicion_fecha_especial;
				$qry_invitado = $dbo->query( $sql_invitado );
				while ( $datos_invitado = $dbo->fetchArray( $qry_invitado ) ):
					$invitado_beneficiario[ "IDBeneficiario" ] = $datos_invitado[ "IDInvitado" ];
					$invitado_beneficiario[ "Nombre" ] =  $dbo->getFields( "Invitado", "Nombre", "IDInvitado = '" . $datos_invitado[ "IDInvitado" ] . "'" ) . " " . $dbo->getFields( "Invitado", "Apellido", "IDInvitado = '" . $datos_invitado[ "IDInvitado" ] . "'" ) ;
					$invitado_beneficiario[ "TipoBeneficiario" ] = "Invitado";
					array_push( $response_beneficiario, $invitado_beneficiario );
				endwhile;

				//Consulto los invitados vigentes del socio
				$sql_invitado = "SELECT IDSocioInvitado,Nombre FROM SocioInvitado WHERE IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "' " . $condicion_fecha;
				$qry_invitado = $dbo->query( $sql_invitado );
				while ( $datos_invitado = $dbo->fetchArray( $qry_invitado ) ):
					$invitado_beneficiario[ "IDBeneficiario" ] = $datos_invitado[ "IDSocioInvitado" ];
					$invitado_beneficiario[ "Nombre" ] =  $datos_invitado[ "Nombre" ] ;
					$invitado_beneficiario[ "TipoBeneficiario" ] = "Invitado";
					array_push( $response_beneficiario, $invitado_beneficiario );
				endwhile;


				if(count($response_beneficiario)<=0){
					$response_beneficiario=array();
					$invitado_beneficiario[ "IDBeneficiario" ] ="";
					$invitado_beneficiario[ "Nombre" ] = "No tienes asociados beneficiarios";
					$invitado_beneficiario[ "TipoBeneficiario" ] = "";
					array_push( $response_beneficiario, $invitado_beneficiario );
				}


				$response[ "IDClub" ] = $datos_socio[ "IDClub" ];
				$response[ "IDSocio" ] = $datos_socio[ "IDSocio" ];
				$response[ "Socio" ] = utf8_encode( $datos_socio[ "Nombre" ] . " " . $datos_socio[ "Apellido" ] );
				$response[ "Beneficiarios" ] = $response_beneficiario;
				$respuesta[ "message" ] = "ok";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;



			} else {
				$respuesta[ "message" ] = "Atencion el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}
		} else {
			$respuesta[ "message" ] = "25. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		return $respuesta;


	}



	function get_campos( $IDClub, $IDSocio, $IDServicio ) {
		$dbo = & SIMDB::get();

		$response = array();
		$sql = "SELECT SE.* FROM ServicioElemento SE, Servicio S WHERE SE.IDServicio = S.IDServicio and SE.Publicar = 'S' and S.IDClub = '" . $IDClub . "' and SE.IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$elemento[ "IDClub" ] = $IDClub;
				$elemento[ "IDServicio" ] = $r[ "IDServicio" ];
				$elemento[ "IDCampo" ] = $r[ "IDServicioElemento" ];
				$elemento[ "Nombre" ] = $r[ "Nombre" ];

				array_push( $response, $elemento );

			} //ednw hile
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}

	//Funcion para saber si en una fecha determinada existe por lo menos 1 elemento dismponible
	function verifica_elemento_disponible( $IDClub, $IDServicio, $Fecha ) {
		$dbo = & SIMDB::get();

		$flag_disponible = 1;

		//Consulto cuantos elementos tiene el servicio
		$sql_elemento_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "'";
		$qry_elemento_servicio = $dbo->query( $sql_elemento_servicio );
		$total_elemento_servicio = ( int )$dbo->rows( $qry_elemento_servicio );

		//Consulto si tienen fechas de cierre total
		$sql_fecha_cierre = "SELECT * FROM ServicioCierre Where IDServicio = '" . $IDServicio . "' and FechaInicio <= '" . $Fecha . "' and FechaFin >= '" . $Fecha . "' and HoraInicio='00:00:00' and HoraFin = '23:00:00'";
		$qry_fecha_cierre = $dbo->query( $sql_fecha_cierre );
		$r_fecha_cierre = $dbo->fetchArray( $qry_fecha_cierre );
		$array_elementos_cierre = explode( "|", $r_fecha_cierre[ "IDServicioElemento" ] );
		$total_elemento_cierre = count( $array_elementos_cierre ) - 2;

		//Si todos los elementos estan cerrados queiere decir que no hay ninguno disponible
		if ( $total_elemento_servicio == $total_elemento_cierre ):
			$flag_disponible = 0;
		endif;


		return $flag_disponible;

	}


	function get_fecha_disponibilidad_servicio( $IDClub, $IDServicio, $Fecha = "", $Tipo = "" ) {
		$dbo = & SIMDB::get();

		$response = array();


		if ( !empty( $IDServicio ) ) {


			$sql_servicio = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "'";
			$qry_servicio = $dbo->query( $sql_servicio );
			if ( $dbo->rows( $qry_servicio ) > 0 ) {
				$message = $dbo->rows( $qry_servicio ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry_servicio ) ) {
					$servicio[ "IDServicio" ] = $r[ "IDServicioElemento" ];
					$servicio[ "IDClub" ] = $IDClub;
					$servicio[ "IDServicio" ] = $r[ "IDServicio" ];
					$servicio[ "Nombre" ] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );

					//Servicios Reservas
					$response_fechas = array();




					if ( !empty( $Fecha ) ):
						//$fecha_actual = date('Y-m-j',$Fecha);
						$fecha_actual = $Fecha;
					$dias_adelante = 0;
					elseif ( $IDClub == "25" || $IDClub == "20"): //para el gun y medellin deja fechas de todo un año, se deb cambiar por parametro
						$fecha_actual = date( 'Y-m-j' );
					$dias_adelante = 460;
					elseif ( $IDClub == "36" || $IDClub == 16 || $IDClub == 54 ): //para aeroclub 3 meses
						$fecha_actual = date( 'Y-m-j' );
					$dias_adelante = 90;
				 elseif ( $IDClub == "78" && ($IDServicio == "11975" || $IDServicio == "11976" || $IDServicio == "11977" || $IDServicio == "11978" || $IDServicio == "11979" || $IDServicio == "11980" ||$IDServicio == "11981") ):
						$fecha_actual = date( 'Y-m-j' );
						$dias_adelante = 30;
					elseif ( $IDClub == "38" ): //para aeroclub 3 meses
						$fecha_actual = date( 'Y-m-j' );
					$dias_adelante = 30;
					else :
						$fecha_actual = date( 'Y-m-j' );
					$dias_adelante = 15;
					endif;

					if ( $IDClub == "20" && $Tipo == "App" ) // Solo para app muestro 15 dias
						$dias_adelante = 7;

					//Para mesa de yeguas solo mosttrar dos fechas
					if ( $IDClub == "9" && $IDServicio != "2432" && $IDServicio != "2427" )
						$dias_adelante = 3;

						//Para bogota tenis
						if ( $IDClub == "72" && $IDServicio == "8511" )
							$dias_adelante = 30;

							//Para bogota tenis
						if ( $IDClub == "77" && $IDServicio == "11686" )
							$dias_adelante = 30;

						//Para country en clase golf 30 dias
						if ( $IDClub == "44" && ($IDServicio == "3866" || $IDServicio == "3878" || $IDServicio == "5001"))
							$dias_adelante = 30;

							//Para country en sala belleza
							if ( $IDClub == "44" && ($IDServicio == "3897" || $IDServicio == "11732" || $IDServicio == "11733" || $IDServicio == "11734" || $IDServicio == "11735" || $IDServicio == "11736" || $IDServicio == "12470"))
								$dias_adelante = 90;

					// Para areroclub los servicios de avion local, crucero y simulador es dos dias de antelacion
					if ( $IDClub == "36" && ($IDServicio==3608 || $IDServicio==4371 || $IDServicio==3609)){
							$fecha_empezar = strtotime( '+2 day', strtotime( $fecha_actual ) );
							$fecha_actual = date( 'Y-m-j', $fecha_empezar );

					}




					//Especial Arrayanes Colombia el ultima dia del mes se habilta todo el mes en tenis
					if ( $IDClub == "11" && $IDServicio == 227 ):
						//$fecha_actual = date( 'Y-m-j' );
						//$dias_adelante = 31;
					endif;


					//$fecha_actual = date('Y-m-j');
					$fecha_final = strtotime( '+' . $dias_adelante . ' day', strtotime( $fecha_actual ) );
					$fecha_final = date( 'Y-m-j', $fecha_final );
					$fechaInicio = strtotime( $fecha_actual );
					$fechaFin = strtotime( $fecha_final );

					$contador = 1;
					$primera_fecha = 1;
					$flag_disponible_hoy = 0;



					for ( $i = $fechaInicio; $i <= $fechaFin; $i += 86400 ) {
						$fecha_validar = date( "Y-m-d", $i );
						$fecha_fin_validar = date( "Y-m-d", $fechaFin );
						//Consulto la disponibilidad en este dia
						$dia_semana = date( 'w', strtotime( $fecha_validar ) );
						$sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_semana . "|%' and Activo <>'N'  Order By HoraDesde ASC, HoraHasta DESC Limit 1";
						$qry_disponibilidad = $dbo->query( $sql_dispo_elemento_gral );
						$r_disponibilidad = $dbo->fetchArray( $qry_disponibilidad );
						//Consulto la hora maxima del dia para reservar
						$sql_dispo_max = "Select HoraHasta From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_semana . "|%' and Activo <>'N'  Order By HoraHasta DESC Limit 1";
						$qry_dispo_max = $dbo->query( $sql_dispo_max );
						$r_dispo_max = $dbo->fetchArray( $qry_dispo_max );
						$HoraHastaFinal = $r_dispo_max[ "HoraHasta" ];

						$total_disponibilidades = ( int )$dbo->rows( $qry_disponibilidad );


						// Si la fecha es hoy valido que la hora hasta todavia este disponible
						if ( $fecha_validar == date( "Y-m-d" ) ):
							//echo strtotime(date("H:i:s")) ."<=". strtotime($r_disponibilidad["HoraHasta"]);
							if ( strtotime( date( "H:i:s" ) ) <= strtotime( $HoraHastaFinal ) ):
								$flag_disponible_hoy = 0;
							else :
								$flag_disponible_hoy = 1;
						endif;
						else :
							$flag_disponible_hoy = 0;
						endif;

						// si no permite reservar el mismo dias
						//if($r[ "ReservaMismoDia" ]=="N" && $fecha_validar == date( "Y-m-d" )){
							//$flag_disponible_hoy = 1;
						//}

						if ( $flag_disponible_hoy == 0 ):

							//verifico con cuanto tiempo de anticipacion se puede reservar
							$medicion_tiempo = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $r_disponibilidad[ "IDDisponibilidad" ] . "'" );
						$valor_anticipacion = ( int )$dbo->getFields( "Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $r_disponibilidad[ "IDDisponibilidad" ] . "'" );
						switch ( $medicion_tiempo ):
						case "Dias":
							$minutos_anticipacion = ( 60 * 24 ) * $valor_anticipacion;
							break;
						case "Horas":
							$minutos_anticipacion = 60 * $valor_anticipacion;
							break;
						case "Minutos":
							$minutos_anticipacion = $valor_anticipacion;
							break;
							endswitch;

							//Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
							$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'" );
							if ( $id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30 ): //Golf
								$dias_antes = 7;
							else :
								$dias_antes = 8;
							endif;

							//semana santa atc
							//if($IDClub==26){
								//$dias_antes = 10;
							//}


							//consulto si el servicio tiene configurado un dia y hora especifico en la semana para abrir reservas
							$dias_semana_eng = array( "1" => "Monday", "2" => "Tuesday", "3" => "Wednesday", "4" => "Thursday", "5" => "Friday", "6" => "Saturday", "7" => "Sunday" );
							if ( $r[ "DiaApertura" ] > 0 && $r[ "HoraApertura" ] != '00:00:00' ):
								$prox_apertura = strtotime( '-' . $dias_antes . ' day', strtotime( $fecha_validar . " " . $r[ "HoraApertura" ] ) );
							$fecha_pro_validacion = new DateTime( date( "Y-m-d", $prox_apertura ) );
							$fecha_pro_validacion->modify( 'next ' . $dias_semana_eng[ $r[ "DiaApertura" ] ] );
							$hora_inicio_reserva = strtotime( $fecha_pro_validacion->format( 'Y-m-d' ) . " " . $r[ "HoraApertura" ] );
							else :
								$hora_inicio_reserva = strtotime( '-' . $minutos_anticipacion . ' minute', strtotime( $fecha_validar . " " . $r_disponibilidad[ "HoraDesde" ] ) );
							endif;


							//Especial Arrayanes Colombia el ultima dia del mes se habilta todo el mes en tenis
							//if ( $IDClub == "11" && ( $IDServicio == 227 || $IDServicio == 115 ) ):

							if ( $IDClub == "11" && ( $IDServicio == 115 ) ):
								/*
								$fecha_ultimo_dia = new DateTime();
							  $fecha_ultimo_dia->modify( 'last day of this month' );
								$fecha_ultimo_dia->format( 'Y-m-d' );

								if ( strtotime( $fecha_validar ) <= strtotime( $fecha_ultimo_dia->format( 'Y-m-d' ) ) ):
								else :
									$hora_inicio_reserva = strtotime( $fecha_ultimo_dia->format( 'Y-m-d' ) );
								endif;
								*/
							endif;

							//$hora_inicio_reserva = strtotime ($fecha_validar . " " . $r_disponibilidad["HoraDesde"]);
							//$fechahora_actual =  strtotime ( '-'.$minutos_anticipacion.' minute' , strtotime ( date("Y-m-d H:i:s") ) ) ;

							$fechahora_actual = strtotime( date( "Y-m-d H:i:s" ) );

							//echo date("Y-m-d H:i:s");
							//exit;



							//echo ".";exit;
							if ( $total_disponibilidades <= 0 ) {
								$fecha_reservar = "nodisponible";
								$hora_reservar = "nodisponible";
								$TiempoRestanteDias = "nodisponible";
								$TiempoRestanteHoras = "nodisponible";
								$TiempoRestanteMinutos = "nodisponible";
								$TiempoRestanteSegundos = "nodisponible";
							} elseif ( $hora_inicio_reserva < $fechahora_actual ) {
								$activo = "S";
								$fecha_reservar = $fecha_validar;
								$hora_reservar = $r_disponibilidad[ "HoraDesde" ];
								$TiempoRestanteDias = 0;
								$TiempoRestanteHoras = 0;
								$TiempoRestanteMinutos = 0;
								$TiempoRestanteSegundos = 0;

								//Validacion Especial Medellin entre las 10pm y 5:30am no se puede reservar tenis medellin
								$fecha_hora_actual = date( "Y-m-d H:i:s" );
								$fecha_inicio_nopermitido = date( "Y-m-d 22:00:00" );
								//$fecha_fin_nopermitido = strtotime ( '+450 minute' , strtotime ( $fecha_inicio_nopermitido ) ) ;
								$fecha_fin_nopermitido = date( "Y-m-d 05:30:00" );

								//if($IDClub==20 && $IDServicio==571 && strtotime($fecha_hora_actual)>=strtotime($fecha_inicio_nopermitido) &&  strtotime($fecha_hora_actual)<=$fecha_fin_nopermitido):
								if ( $IDClub == 20 && ($IDServicio == 571 || $IDServicio == 549 || $IDServicio == 551 || $IDServicio == 14898 || $IDServicio == 14899) && ( strtotime( $fecha_hora_actual ) >= strtotime( $fecha_inicio_nopermitido ) || strtotime( $fecha_hora_actual ) <= strtotime( $fecha_fin_nopermitido ) ) ):
									//Calculo tiempo restante para poder reservar
									$activo = "N";
								$fecha_final = $fecha_fin_nopermitido;
								$diff = $fecha_fin_nopermitido - strtotime( $fecha_hora_actual );
								$dias = $diff / ( 60 * 60 * 24 );
								$horas = ( $dias - intval( $dias ) ) * 24;
								$min = ( $horas - intval( $horas ) ) * 60;
								$seg = ( $min - intval( $min ) ) * 60;
								$TiempoRestanteDias = intval( $dias );
								$TiempoRestanteHoras = intval( $horas );
								$TiempoRestanteMinutos = intval( $min );
								$TiempoRestanteSegundos = intval( $seg );
								$fecha_reservar = date( "Y-m-d", $fecha_fin_nopermitido );
								$hora_reservar = date( "H:i:s", $fecha_fin_nopermitido );
								endif;
								//Fin Validacion Especial Medellin

								//Validacion Especial Comercio entre solo si esta entre 8am y 4pm se puede reservar
								$fecha_hora_actual = date( "Y-m-d H:i:s" );
								$fecha_inicio_sipermitido = date( "Y-m-d 08:00:00" );
								//$fecha_fin_nopermitido = strtotime ( '+450 minute' , strtotime ( $fecha_inicio_nopermitido ) ) ;
								$fecha_fin_sipermitido = date( "Y-m-d 13:00:00" );



								//Validacion Especial Guaymaral Clases de tenis  abre del dia 1 al 15 y del 15 al 30
								if ( $IDClub == 8 && $IDServicio == 41 ):
									$minima_fecha = date( "Y-m" ) . "-14";
								$maxima_fecha = new DateTime();
								$maxima_fecha->modify( 'last day of this month' );
								$maxima_fecha->format( 'Y-m-d' );
								if ( ( int )date( "d" ) <= 14 && strtotime( $fecha_validar ) <= strtotime( $minima_fecha ) ):
									$activo = "S";
								elseif ( ( int )date( "d" ) >= 15 && strtotime( $fecha_validar ) <= strtotime( $maxima_fecha->format( 'Y-m-d' ) ) ):
									$activo = "S";
								else :

									if ( ( int )date( "d" ) <= 14 ):
										$fecha_fin_nopermitido = date( "Y-m-15" );
									elseif ( ( int )date( "d" ) >= 15 ):
										$fecha_mes_actual = date( 'Y-m-01' );
								$fecha_fin_nopermitido = strtotime( '+1 month', strtotime( $fecha_mes_actual ) );
								$fecha_fin_nopermitido = date( 'Y-m-d', $fecha_fin_nopermitido );
								endif;

								$fecha_fin_nopermitido = strtotime( $fecha_fin_nopermitido );

								//Calculo tiempo restante para poder reservar
								$activo = "N";
								$fecha_final = $fecha_fin_nopermitido;
								$diff = $fecha_fin_nopermitido - strtotime( $fecha_hora_actual );
								$dias = $diff / ( 60 * 60 * 24 );
								$horas = ( $dias - intval( $dias ) ) * 24;
								$min = ( $horas - intval( $horas ) ) * 60;
								$seg = ( $min - intval( $min ) ) * 60;
								$TiempoRestanteDias = intval( $dias );
								$TiempoRestanteHoras = intval( $horas );
								$TiempoRestanteMinutos = intval( $min );
								$TiempoRestanteSegundos = intval( $seg );
								$fecha_reservar = date( "Y-m-d", $fecha_fin_nopermitido );
								$hora_reservar = date( "H:i:s", $fecha_fin_nopermitido );

								endif;
								endif;
								//Fin Validacion Especial Guaymaral

								//Validacion Especial Condado el dia actual no se puede reservar en squash
								/*
								if ( $IDClub == 51 && $IDServicio == 7721 && $fecha_validar==date("Y-m-d")):
									//Calculo tiempo restante para poder reservar
									$activo = "N";
									$TiempoRestanteDias = intval( $dias );
									$TiempoRestanteHoras = intval( $horas );
									$TiempoRestanteMinutos = intval( $min );
									$TiempoRestanteSegundos = intval( $seg );
								endif;
								*/
								//Fin Validacion Especial Condado


								$elemento_disponible_dia = self::verifica_elemento_disponible( $IDClub, $IDServicio, $fecha_validar );
								if ( $elemento_disponible_dia == 0 ):
									$fecha_reservar = "nodisponible";
								$hora_reservar = "nodisponible";
								$TiempoRestanteDias = "nodisponible";
								$TiempoRestanteHoras = "nodisponible";
								$TiempoRestanteMinutos = "nodisponible";
								$TiempoRestanteSegundos = "nodisponible";
								endif;

							}
							else {



								$fecha_para_reservar = strtotime( '-' . ( $minutos_anticipacion ) . ' minute', strtotime( $fecha_validar ) );
								$fecha_reservar = date( 'Y-m-j', $fecha_para_reservar );

								$dia_semana_reservar = date( 'N', strtotime( $fecha_reservar ) );


								$activo = "N";
								$hora_reservar = $r_disponibilidad[ "HoraDesde" ];
								//Calculo tiempo restante para poder reservar
								$fecha_final = $fecha_reservar . " " . $hora_inicio_reserva;
								$fecha_actual = date( "Y-m-d H:i:s" );
								//$diff = strtotime($fechahora_actual) - strtotime($hora_inicio_reserva);

								//consulto si el servicio tiene configurado un dia y hora especifico en la semana para abrir reservas
								if ( $r[ "DiaApertura" ] > 0 && $r[ "HoraApertura" ] != '00:00:00' ):
									$primer_dia_semana = strtotime( '-' . $dias_antes . ' day', strtotime( $fecha_validar . " " . $r[ "HoraApertura" ] ) );
								$fecha_pro_validacion = new DateTime( date( "Y-m-d", $primer_dia_semana ) );
								$fecha_pro_validacion->modify( 'next ' . $dias_semana_eng[ $r[ "DiaApertura" ] ] );
								$hora_inicio_reserva = strtotime( $fecha_pro_validacion->format( 'Y-m-d' ) . " " . $r[ "HoraApertura" ] );
								endif;

								$diff = $hora_inicio_reserva - $fechahora_actual;
								$dias = $diff / ( 60 * 60 * 24 );
								$horas = ( $dias - intval( $dias ) ) * 24;
								$min = ( $horas - intval( $horas ) ) * 60;
								$seg = ( $min - intval( $min ) ) * 60;
								if ( $fecha_validar == "2016-03-18" ):
									//echo $tiempo_restante = "Quedan ".intval($dias)." dias ".intval($horas)."  horas ".intval($min)." minutos ".intval($seg)." segundos";
									//exit;
									endif;

								$fecha_reservar = date( 'Y-m-d', $hora_inicio_reserva );
								$hora_reservar = date( 'H:i:s', $hora_inicio_reserva );


								// si la fecha es pasada la marco como no disponible
								if ( $dias < 0 || $horas < 0 || $min < 0 ):
									$activo = "N";
								$fecha_reservar = "nodisponible";
								$hora_reservar = "nodisponible";
								$TiempoRestanteDias = "nodisponible";
								$TiempoRestanteHoras = "nodisponible";
								$TiempoRestanteMinutos = "nodisponible";
								$TiempoRestanteSegundos = "nodisponible";
								else :
									$TiempoRestanteDias = intval( $dias );
								$TiempoRestanteHoras = intval( $horas );
								$TiempoRestanteMinutos = intval( $min );
								$TiempoRestanteSegundos = intval( $seg );

								endif;

							}


							if ( $fecha_validar == "2017-09-09" && $IDClub == "11" && ( $IDServicio == 352 || $IDServicio == 517 || $IDServicio == 818 || $IDServicio == 824 || $IDServicio == 1297 ) ):
								$activo = "S";
							$fecha_reservar = $fecha_validar;
							$hora_reservar = $r_disponibilidad[ "HoraDesde" ];
							$TiempoRestanteDias = 0;
							$TiempoRestanteHoras = 0;
							$TiempoRestanteMinutos = 0;
							$TiempoRestanteSegundos = 0;
							endif;





							$servicio_fecha[ "Fecha" ] = $fecha_validar;
							$servicio_fecha[ "Activo" ] = $activo;
							$servicio_fecha[ "FechaReservar" ] = $fecha_reservar;
							$servicio_fecha[ "HoraReservar" ] = $hora_reservar;
							$zonahoraria = date_default_timezone_get();
							$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
							$servicio_fecha[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );
							$servicio_fecha[ "TiempoRestanteDias" ] = $TiempoRestanteDias;
							$servicio_fecha[ "TiempoRestanteHoras" ] = $TiempoRestanteHoras;
							$servicio_fecha[ "TiempoRestanteMinutos" ] = $TiempoRestanteMinutos;
							$servicio_fecha[ "TiempoRestanteSegundos" ] = $TiempoRestanteSegundos;

							// si la fecha no esta isponible no la envio o si el servicio esta marcado solo para mostrar las disponibles
							if ( $fecha_reservar != "nodisponible" ):
								if ( ( $r[ "SoloFechaDisponible" ] == "S" && $activo == "S" ) || $r[ "SoloFechaDisponible" ] != "S" ) {
									array_push( $response_fechas, $servicio_fecha );
								}
							endif;

							$contador++;
							$primera_fecha++;
							endif;

					}

					$servicio[ "Fechas" ] = $response_fechas;


					array_push( $response, $servicio );

				} //ednw hile
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			} //end else
		} else {
			$respuesta[ "message" ] = "4. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		//inserta _log
		//$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_fecha_disponibilidad_servicio','IDClub: ".$IDClub. " IDServicio:" . $IDServicio . " . Fecha: ".date("Y-m-d")."','".json_encode($respuesta)."')");


		return $respuesta;


	}



	function get_disponibilidad_fecha( $IDClub, $IDCampo, $Fecha, $Hora ) {
		$dbo = & SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDCampo . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3)  ORDER BY Hora ";
		$qry = $dbo->query( $sql );

		$servicio_hora[ "IDClub" ] = $IDClub;
		$servicio_hora[ "IDCampo" ] = $IDCampo;
		$servicio_hora[ "Fecha" ] = $Fecha;
		$servicio_hora[ "Hora" ] = $Hora;

		//Si existen dos reservas es que estan reservados los dos tee de lo contrario no esta reservados o solo un tee esta reservado
		if ( $dbo->rows( $qry ) > 1 ):
			//Ya esta reservado
			$servicio_hora[ "Disponibilidad" ] = "No";
		$message = " No Disponible";
		else :
			//No esta reservado devuelkque diponible en si
			$servicio_hora[ "Disponibilidad" ] = "Si";
		$message = "Disponible";
		endif;

		array_push( $response, $servicio_hora );



		$respuesta[ "message" ] = $message;
		$respuesta[ "success" ] = true;
		$respuesta[ "response" ] = $response;


		return $respuesta;

	}

	function get_disponiblidad_fecha_hora( $IDClub, $IDServicio, $Fecha, $Hora ) {
		$dbo = & SIMDB::get();

		$Hora = SIMWebserviceQuemado::validar_formato_hora( $Hora );

		$array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio );
		foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
			if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
				$fecha_disponible = 1;
		endif;
		endforeach;

		if ( $fecha_disponible == 0 ):
			$respuesta[ "message" ] = "Esta fecha aún no está disponible..";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;



		$response = array();
		$sql = "SELECT * FROM ServicioElemento WHERE IDServicio = '" . $IDServicio . "'   ORDER BY IDServicio ";
		$qry = $dbo->query( $sql );

		$servicio_hora[ "IDClub" ] = $IDClub;
		$servicio_hora[ "IDServicio" ] = $IDServicio;
		$servicio_hora[ "Fecha" ] = $Fecha;
		$servicio_hora[ "Hora" ] = $Hora;
		$zonahoraria = date_default_timezone_get();
		$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
		$servicio_hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );

		$sql = "SELECT * FROM ServicioElemento WHERE IDServicio = '" . $IDServicio . "'   ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		$response_elemento = array();
		while ( $row_elemento = $dbo->fetchArray( $qry ) ):

			//Verifico si tiene disponibilidad  general el elemento
			$dia_fecha = date( 'w', strtotime( $Fecha ) );
		$sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) and IDServicioElemento like '%" . $row_elemento[ IDServicioElemento ] . "|%' and Activo <>'N'  Order by HoraDesde";
		$qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );
		if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ):
			$elemento[ IDElemento ] = $row_elemento[ IDServicioElemento ];
		$elemento[ Nombre ] = $row_elemento[ Nombre ];
		//verifico disponibilidad
		$sql_reserva = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDServicioElemento = '" . $row_elemento[ IDServicioElemento ] . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3)  ORDER BY Hora ";
		$qry_reserva = $dbo->query( $sql_reserva );
		if ( $dbo->rows( $qry_reserva ) >= 1 ):
			$row_datos_reserva = $dbo->fetchArray( $qry_reserva );
		$elemento[ Disponible ] = "N";
		$elemento[ "Socio" ] = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $row_datos_reserva[ "IDSocio" ] . "'" ) );
		$elemento[ "IDSocio" ] = $row_datos_reserva[ "IDSocio" ];
		$elemento[ "ModalidadEsquiSocio" ] = $dbo->getFields( "TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_datos_reserva[ "IDTipoModalidadEsqui" ] . "'" );
		else :
			$elemento[ Disponible ] = "S";
		$elemento[ "Socio" ] = "";
		$elemento[ "IDSocio" ] = "";
		$elemento[ "ModalidadEsquiSocio" ] = "";
		endif;
		array_push( $response_elemento, $elemento );
		endif;
		endwhile;


		$servicio_hora[ "Disponibilidad" ] = $response_elemento;


		$message = " Disponibilidad";

		array_push( $response, $servicio_hora );



		$respuesta[ "message" ] = $message;
		$respuesta[ "success" ] = true;
		$respuesta[ "response" ] = $response;


		return $respuesta;

	}


	function validar_permiso_reserva( $IDSocio ) {
		$dbo = & SIMDB::get();
		$permiso_reserva = "S";
		$sql_socio = "Select PermiteReservar From Socio Where IDSocio = '" . $IDSocio . "' limit 1";
		$result_socio = $dbo->query( $sql_socio );
		$row_socio = $dbo->fetchArray( $result_socio );
		if ( $row_socio[ "PermiteReservar" ] == "N" ):
			$permiso_reserva = "N";
		endif;
		return $permiso_reserva;
	}


	function get_disponibilidad_campo( $IDClub, $IDCampo, $Fecha, $IDServicio = "", $Admin = "", $NumeroTurnos = "" ) {


		$dbo = & SIMDB::get();
		//Consulto el servicio maestro si es golf lo envio al metodo de horas de campos de golf que es especial
		$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'" );
		if ( $id_servicio_maestro == 15 || $id_servicio_maestro == 30 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 ): // Golf con opcion de escoger grupos para reservas turnos seguidos
			$respuesta = SIMWebserviceQuemado::get_disponibilidad_campo_turno_seguido( $IDClub, $IDCampo, $Fecha, $IDServicio, $Admin, $NumeroTurnos );
		return $respuesta;
		endif;




		$fecha_disponible = 0;

		$verifica_disponibilidad_especifica = 0;
		$verifica_disponibilidad_general = 0;




		//consulto los datos del servicio
		//$IDServicio = $dbo->getFields( "ServicioElemento" , "IDServicio" , "IDServicioElemento = '" . $IDCampo . "'" );



		// Verifico que el club y servicio este disponible en la fecha consultada
		$verificacion = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio );
		if ( !empty( $verificacion ) ):
			$respuesta[ "message" ] = $verificacion;
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;


		//Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar

		$array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio );
		foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
			if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
				$fecha_disponible = 1;
		endif;
		endforeach;

		if ( $fecha_disponible == 0 && empty( $Admin ) ):
			$respuesta[ "message" ] = "la fecha selecionada aún no está disponible.";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;





		$response = array();
		$response_disponibilidades = array();
		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			$servicio_hora[ "IDClub" ] = $IDClub;
			$servicio_hora[ "IDServicio" ] = $IDServicio;
			//$servicio_hora["IDCampo"] = $IDCampo;
			$servicio_hora[ "Fecha" ] = $Fecha;
			//$response_disponibilidad = SIMWebserviceQuemado::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

			//Horas Disponibles Elemento
			$response_disponibilidad = array();





			if ( !empty( $IDCampo ) )
				$condicion_elemento = " and IDServicioElemento = '" . $IDCampo . "'";

			$r = $dbo->fetchArray( $qry );


			$sql_elementos_servicio = "Select * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
			$result_elementos_servicio = $dbo->query( $sql_elementos_servicio );
			$response_disponibilidad_tee = array();
			while ( $r_elementos_servicio = $dbo->FetchArray( $result_elementos_servicio ) ):



				unset( $array_hora_reservada );
			$IDElemento = $r_elementos_servicio[ "IDServicioElemento" ];


			//Consulto lo que tiene reservado el elemento en la fecha indicada en tee1
			$sql_reserva_elemento_tee1 = "SELECT ReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee1' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";

			$qry_reserva_elemento_tee1 = $dbo->query( $sql_reserva_elemento_tee1 );
			while ( $row_reserva_elemento_tee1 = $dbo->fetchArray( $qry_reserva_elemento_tee1 ) ) {
				$array_hora_reservada_tee1[ $IDElemento ][] = $row_reserva_elemento_tee1[ "Hora" ];
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ] = $row_reserva_elemento_tee1;
				if ( $row_reserva_elemento_tee1[ "IDReservaGrupos" ] > 0 ):
					$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "Tee1" ][ "NombreSocio" ] = utf8_encode( $dbo->getFields( "ReservaGrupos", "Nombre", "IDReservaGrupos = '" . $row_reserva_elemento_tee1[ "IDReservaGrupos" ] . "'" ) );
				else :
					$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "Tee1" ][ "NombreSocio" ] = $row_reserva_elemento_tee1[ "NombreSocio" ];
				endif;
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "IDSocio" ] = $row_reserva_elemento_tee1[ "IDSocio" ];
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "IDReservaGeneral" ] = $row_reserva_elemento_tee1[ "IDReservaGeneral" ];
			}

			//print_r($array_socio["06:00:00"]["Tee1"]["NombreSocio"]);

			//Consulto lo que tiene reservado el elemento en la fecha indicada en tee10
			$sql_reserva_elemento_tee10 = "SELECT ReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee10' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) ORDER BY Hora ";
			$qry_reserva_elemento_tee10 = $dbo->query( $sql_reserva_elemento_tee10 );
			while ( $row_reserva_elemento_tee10 = $dbo->fetchArray( $qry_reserva_elemento_tee10 ) ) {
				$array_hora_reservada_tee10[ $IDElemento ][] = $row_reserva_elemento_tee10[ "Hora" ];
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ] = $row_reserva_elemento_tee10;
				if ( $row_reserva_elemento_tee10[ "IDReservaGrupos" ] > 0 ):
					$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "Tee10" ][ "NombreSocio" ] = utf8_encode( $dbo->getFields( "ReservaGrupos", "Nombre", "IDReservaGrupos = '" . $row_reserva_elemento_tee10[ "IDReservaGrupos" ] . "'" ) );
				else :
					$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "Tee10" ][ "NombreSocio" ] = $row_reserva_elemento_tee10[ "NombreSocio" ];
				endif;
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "IDSocio" ] = $row_reserva_elemento_tee10[ "IDSocio" ];
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "IDReservaGeneral" ] = $row_reserva_elemento_tee10[ "IDReservaGeneral" ];
			}



			//Horas generales del servicio
			/*
			$horaInicial=$r["HoraDesde"];
			$minutoAnadir=$r["IntervaloHora"];
			$hora_final = strtotime( $r["HoraHasta"] );
			$hora_actual = $r["HoraDesde"];
			*/

			$dia_fecha = date( 'w', strtotime( $Fecha ) );


			// Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
			$sql_dispo_elemento_primera = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Limit 1";
			$qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
			$row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );
			//$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
			$horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera[ "HoraDesde" ];


			for ( $i = 1; $i <= 2; $i++ ):

				$verifica_abierto_servicio = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento );
			if ( empty( $verifica_abierto_servicio ) ) {




				//Verifico si tene disponibilidad  general el elemento
				$sql_dispo_elemento_gral = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N'";
				$qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );
				if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ) {





					$verifica_disponibilidad_general = 1;
					while ( $row_dispo_elemento_gral = $dbo->fetchArray( $qry_dispo_elemento_gral ) ) {



						$horaInicial = $row_dispo_elemento_gral[ "HoraDesde" ];
						//$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
						$minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );

						// Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
						if ( $Fecha == date( "Y-m-d" ) ):
							$medicion_tiempo = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						$valor_tiempo_anticipacion = ( int )$dbo->getFields( "Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						if ( $medicion_tiempo == "Horas" ):
							$valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
						elseif ( $medicion_tiempo == "Dias" ):
							$valor_tiempo_anticipacion = 0;
						endif;
						else :
							$valor_tiempo_anticipacion = 0;
						endif;


						//Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
						$medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						$valor_anticipacion_turno = ( int )$dbo->getFields( "Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						switch ( $medicion_tiempo_anticipacion ):
						case "Dias":
							$minutos_anticipacion_turno = ( 60 * 24 ) * $valor_anticipacion_turno;
							break;
						case "Horas":
							$minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
							break;
						case "Minutos":
							$minutos_anticipacion_turno = $valor_anticipacion_turno;
							break;
						default:
							$minutos_anticipacion_turno = 0;
							endswitch;



							//Si es administrador no tiene limite de anticipacion
							if ( $Admin == "S" ) {
								$valor_tiempo_anticipacion = 0;
								$minutos_anticipacion_turno = 0;
							}




							$hora_real = date( 'Y-m-d H:i:s' );
							$hora_empezar_reserva = strtotime( '-' . $valor_tiempo_anticipacion . ' minute', strtotime( $horaInicial_reserva ) );
							//$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
							$hora_actual_sistema = strtotime( $hora_real );




							$hora_final = strtotime( $row_dispo_elemento_gral[ "HoraHasta" ] );
							$hora_actual = strtotime( $row_dispo_elemento_gral[ "HoraDesde" ] );

							while ( $hora_actual <= $hora_final ):

								$hora_fecha_actual = $Fecha . " " . date( 'H:i:s', $hora_actual );
							$hora_puede_reservar = strtotime( '+' . $minutos_anticipacion_turno . ' minute', strtotime( $hora_real ) );
							/*****************************************************************************************************
							Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
							Valido que ésta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
							******************************************************************************************************/
							if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):

								//Verifico si el tee esta disponible en este horario para mostrarlo
								if ( ( $row_dispo_elemento_gral[ "Tee1" ] == "S" && $i == 1 ) || ( $row_dispo_elemento_gral[ "Tee10" ] == "S" && $i == 2 ) ):


									if ( strlen( $horaInicial ) != 8 ):
										$horaInicial .= ":00";
							endif;

							$hora[ "Hora" ] = $horaInicial;
							$zonahoraria = date_default_timezone_get();
							$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
							$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );



							//echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
							//exit;



							$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "' ", "array" );

							// Si el tee es 1
							if ( $i == 1 ):
								//Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
								if ( ( in_array( $horaInicial, $array_hora_reservada_tee1[ $IDElemento ] ) ) || ( $hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {
									$hora[ "Disponible" ] = "N";

									$hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "Tee1" ][ "NombreSocio" ];
									$hora[ "IDSocio" ] = $array_socio[ "$horaInicial" ][ "IDSocio" ];
									$hora[ "IDReserva" ] = $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ];
								} else {
									$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
								}
							endif;

							// Si el tee es 10
							if ( $i == 2 ):
								//Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
								if ( ( in_array( $horaInicial, $array_hora_reservada_tee10[ $IDElemento ] ) ) || ( $hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {
									$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = $array_socio_tee10[ "$horaInicial" ][ "NombreSocio" ];
									$hora[ "Socio" ] = $array_socio_tee10[ "$horaInicial" ][ "Tee10" ][ "NombreSocio" ];
									$hora[ "IDSocio" ] = $array_socio_tee10[ "$horaInicial" ][ "IDSocio" ];
									$hora[ "IDReserva" ] = $array_socio_tee10[ "$horaInicial" ][ "IDReservaGeneral" ];
								} else {
									$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
								}
							endif;




							$hora[ "IDCampo" ] = $IDCampo;

							if ( $i == 1 ):
								$hora[ "Tee" ] = "Tee1";
							else :
								$hora[ "Tee" ] = "Tee10";
							endif;


							$hora[ "MaximoPersonaTurno" ] = $datos_disponibilidad[ "MaximoPersonaTurno" ];
							$hora[ "NumeroInvitadoClub" ] = $datos_disponibilidad[ "NumeroInvitadoClub" ];
							$hora[ "NumeroInvitadoExterno" ] = $datos_disponibilidad[ "NumeroInvitadoExterno" ];


							//Repeticion reserva
							$hora[ "IDDisponibilidad" ] = $datos_disponibilidad[ "IDDisponibilidad" ];
							$hora[ "PermiteRepeticion" ] = $datos_disponibilidad[ "PermiteRepeticion" ];
							$hora[ "MaximoRepeticion" ] = $datos_disponibilidad[ "NumeroRepeticion" ] . " " . $datos_disponibilidad[ "MedicionRepeticion" ];


							$hora[ "IDElemento" ] = $IDElemento;
							$hora[ "NombreElemento" ] = $hora[ "Tee" ] . "-" . $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'" );



							$hora2[ "Hora" ] = "08:00:00";
							$hora2[ "GMT" ] = "-05:00";
							$hora2[ "Disponible" ] = "S";
							$hora2[ "Socio" ] = "";
							$hora2[ "IDSocio" ] = "";
							$hora2[ "ModalidadEsquiSocio" ] = "";
							$hora2[ "IDReserva" ] = "";
							$hora2[ "MaximoPersonaTurno" ] = "0";
							$hora2[ "NumeroInvitadoClub" ] = "0";
							$hora2[ "NumeroInvitadoExterno" ] = "0";
							$hora2[ "IDDisponibilidad" ] = "14";
							$hora2[ "PermiteRepeticion" ] = "N";
							$hora2[ "MedicionRepeticion" ] = "";
							$hora2[ "FechaFinRepeticion" ] = "null";
							$hora2[ "Georeferenciacion" ] = "N";
							$hora2[ "Latitud" ] = "4.7939569";
							$hora2[ "Longitud" ] = "-74.0758342";
							$hora2[ "Rango" ] = "10000";
							$hora2[ "MensajeFueraRango" ] = "No estas en el club para poder hacer la reserva.";
							$hora2[ "IDElemento" ] = "59";
							$hora2[ "NombreElemento" ] = "Wilson";
							$hora2[ "ModalidadElemento" ] = " null";
							$hora2[ "MaximoInvitadosSalon" ] = "0";
							$hora2[ "OrdenElemento" ] = "0";


							array_push( $response_disponibilidad_tee, $hora );
							endif;
							endif;

							$array_horas_elemento[] = $horaInicial;
							$segundos_horaInicial = strtotime( $horaInicial );
							$segundos_minutoAnadir = $minutoAnadir * 60;
							$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
							$hora_actual = strtotime( $nuevaHora );
							$horaInicial = $nuevaHora;



							endwhile;



					}
				}

			}
			endfor;

			endwhile;




			//

			foreach ( $response_disponibilidad_tee as $id_array => $datos_array ):
				$array_ordenado_hora[ $datos_array[ "Hora" ] . $datos_array[ "NombreElemento" ] ] = $datos_array;
			endforeach;

			ksort( $array_ordenado_hora );

			$response_array_ordenado = array();
			foreach ( $array_ordenado_hora as $id_array => $datos_array ):
				array_push( $response_array_ordenado, $datos_array );
			endforeach;

			array_push( $response_disponibilidades, $response_array_ordenado );

			// Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
			if ( !empty( $UnElemento ) ):
				$servicio_hora[ "Disponibilidad" ] = $response_array_ordenado;
			else :
				$servicio_hora[ "Disponibilidad" ] = $response_disponibilidades;
			endif;
			//$servicio_hora["Disponibilidad"] = $response_disponibilidades;
			array_push( $response, $servicio_hora );







			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;



		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else


		//inserta _log
		$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode( $respuesta ) . "')" );

		return $respuesta;


	}


	function get_disponibilidad_campo_turno_seguido( $IDClub, $IDCampo, $Fecha, $IDServicio = "", $Admin = "", $NumeroTurnos = "" ) {
		$dbo = & SIMDB::get();


		if ( empty( $NumeroTurnos ) )
			$NumeroTurnos = 1;



		$fecha_disponible = 0;

		$verifica_disponibilidad_especifica = 0;
		$verifica_disponibilidad_general = 0;




		//consulto los datos del servicio
		//$IDServicio = $dbo->getFields( "ServicioElemento" , "IDServicio" , "IDServicioElemento = '" . $IDCampo . "'" );



		// Verifico que el club y servicio este disponible en la fecha consultada
		$verificacion = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio );
		if ( !empty( $verificacion ) ):
			$respuesta[ "message" ] = $verificacion;
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;


		//Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar
		$array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio );
		foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
			if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
				$fecha_disponible = 1;
		endif;
		endforeach;

		if ( $fecha_disponible == 0 && empty( $Admin ) ):
			$respuesta[ "message" ] = "Esta fecha aún no está disponible";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;





		$response = array();
		$response_disponibilidades = array();
		$sql = "SELECT * FROM Servicio WHERE IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			$servicio_hora[ "IDClub" ] = $IDClub;
			$servicio_hora[ "IDServicio" ] = $IDServicio;
			//$servicio_hora["IDCampo"] = $IDCampo;
			$servicio_hora[ "Fecha" ] = $Fecha;
			//$response_disponibilidad = SIMWebserviceQuemado::consultar_disponibilidad($qry,"",$IDServicio,$Fecha);

			//Horas Disponibles Elemento
			$response_disponibilidad = array();





			if ( !empty( $IDCampo ) )
				$condicion_elemento = " and IDServicioElemento = '" . $IDCampo . "'";

			$r = $dbo->fetchArray( $qry );

			$nombre_elemento_consulta = string;
			$sql_elementos_servicio = "SELECT * From ServicioElemento Where IDServicio = '" . $IDServicio . "' " . $condicion_elemento;
			$result_elementos_servicio = $dbo->query( $sql_elementos_servicio );
			$response_disponibilidad_tee = array();
			while ( $r_elementos_servicio = $dbo->FetchArray( $result_elementos_servicio ) ):


				$nombre_elemento_consulta = $r_elementos_servicio[ "Nombre" ];
			unset( $array_hora_reservada );
			$IDElemento = $r_elementos_servicio[ "IDServicioElemento" ];


			//Consulto lo que tiene reservado el elemento en la fecha indicada en tee1
			$sql_reserva_elemento_tee1 = "SELECT ReservaGeneral.*, Socio.Accion, Socio.Nombre, Socio.Apellido, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio
			FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee1' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";

			$qry_reserva_elemento_tee1 = $dbo->query( $sql_reserva_elemento_tee1 );
			while ( $row_reserva_elemento_tee1 = $dbo->fetchArray( $qry_reserva_elemento_tee1 ) ) {

			if($IDClub==70){
				$agrega_datos="(".utf8_encode($row_reserva_elemento_tee1[ "Accion" ]).")";
			}

				if ( $row_reserva_elemento_tee1[ "IDEstadoReserva" ] == 3 ):
					$nombre_reserva = "En proceso de reserva";
				else :
					$nombre_reserva =  $row_reserva_elemento_tee1[ "Nombre" ]  . " " .  $row_reserva_elemento_tee1[ "Apellido" ]  . " " . $agrega_datos;
				endif;

				$array_hora_reservada_tee1[ $IDElemento ][] = $row_reserva_elemento_tee1[ "Hora" ];
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ] = $row_reserva_elemento_tee1;
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "Tee1" ][ "NombreSocio" ] = $nombre_reserva;
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "IDSocio" ] = $row_reserva_elemento_tee1[ "IDSocio" ];
				$array_socio[ $row_reserva_elemento_tee1[ "Hora" ] ][ "IDReservaGeneral" ] = $row_reserva_elemento_tee1[ "IDReservaGeneral" ];
			}


			//print_r($array_socio["06:00:00"]["Tee1"]["NombreSocio"]);

			//Consulto lo que tiene reservado el elemento en la fecha indicada en tee10
			$sql_reserva_elemento_tee10 = "SELECT ReservaGeneral.*, Socio.Accion, Socio.Nombre, Socio.Apellido, CONCAT(Socio.Nombre, ' ', Socio.Apellido ) as Socio
																		FROM ReservaGeneral, Socio WHERE IDServicioElemento = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Tee = 'Tee10' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub  ORDER BY Hora ";
			$qry_reserva_elemento_tee10 = $dbo->query( $sql_reserva_elemento_tee10 );
			while ( $row_reserva_elemento_tee10 = $dbo->fetchArray( $qry_reserva_elemento_tee10 ) ) {

				if($IDClub==70){
					$agrega_datos="(".utf8_encode($row_reserva_elemento_tee10[ "Accion" ]).")";
				}

				if ( $row_reserva_elemento_tee10[ "IDEstadoReserva" ] == 3 ):
					$nombre_reserva_tee10 = "En proceso de reserva";
				else :
					$nombre_reserva_tee10 =  $row_reserva_elemento_tee10[ "Nombre" ]  . " " .  $row_reserva_elemento_tee10[ "Apellido" ] . " " . $agrega_datos;
				endif;

				$array_hora_reservada_tee10[ $IDElemento ][] = $row_reserva_elemento_tee10[ "Hora" ];
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ] = $row_reserva_elemento_tee10;
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "Tee10" ][ "NombreSocio" ] = $nombre_reserva_tee10;
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "IDSocio" ] = $row_reserva_elemento_tee10[ "IDSocio" ];
				$array_socio_tee10[ $row_reserva_elemento_tee10[ "Hora" ] ][ "IDReservaGeneral" ] = $row_reserva_elemento_tee10[ "IDReservaGeneral" ];
			}



			//Horas generales del servicio
			/*
			$horaInicial=$r["HoraDesde"];
			$minutoAnadir=$r["IntervaloHora"];
			$hora_final = strtotime( $r["HoraHasta"] );
			$hora_actual = $r["HoraDesde"];
			*/

			$dia_fecha = date( 'w', strtotime( $Fecha ) );


			// Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
			$sql_dispo_elemento_primera = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Limit 1";
			$qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
			$row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );
			//$horaInicial=$row_dispo_elemento_primera["HoraDesde"];
			$horaInicial_reserva = $Fecha . " " . $row_dispo_elemento_primera[ "HoraDesde" ];



			for ( $i = 1; $i <= 2; $i++ ):

				$verifica_abierto_servicio = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento );
			if ( empty( $verifica_abierto_servicio ) ) {




				//Verifico si tene disponibilidad  general el elemento
				$sql_dispo_elemento_gral = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N'";
				$qry_dispo_elemento_gral = $dbo->query( $sql_dispo_elemento_gral );
				if ( $dbo->rows( $qry_dispo_elemento_gral ) > 0 ) {

					//Para las horas con par por tee
					//Tee1
					$sql_dispo = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Tee1 = 'S' and Activo <>'N'";
					$qry_dispo = $dbo->query( $sql_dispo );
					while ( $row_dispo_elemento_gral_par = $dbo->fetchArray( $qry_dispo ) ) {
						$array_par_tee1[ $row_dispo_elemento_gral_par[ "HoraDesde" ] ] = $row_dispo_elemento_gral_par[ "HoraPar" ];
					}
					$sql_dispo = "SELECT * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Tee10 = 'S' and Activo <>'N'";
					$qry_dispo = $dbo->query( $sql_dispo );
					while ( $row_dispo_elemento_gral_par = $dbo->fetchArray( $qry_dispo ) ) {
						$array_par_tee10[ $row_dispo_elemento_gral_par[ "HoraDesde" ] ] = $row_dispo_elemento_gral_par[ "HoraPar" ];
					}


					$verifica_disponibilidad_general = 1;
					while ( $row_dispo_elemento_gral = $dbo->fetchArray( $qry_dispo_elemento_gral ) ) {



						$horaInicial = $row_dispo_elemento_gral[ "HoraDesde" ];
						//$horaInicial_reserva=$Fecha . " " .$row_dispo_elemento_gral["HoraDesde"];
						$minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );

						// Si la fecha es el dia actual verifico el tiempo de anticipacion para reservar
						if ( $Fecha == date( "Y-m-d" ) ):
							$medicion_tiempo = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						$valor_tiempo_anticipacion = ( int )$dbo->getFields( "Disponibilidad", "Anticipacion", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						if ( $medicion_tiempo == "Horas" ):
							$valor_tiempo_anticipacion = $valor_tiempo_anticipacion * 60; // Lo convierto a minutos
						elseif ( $medicion_tiempo == "Dias" ):
							$valor_tiempo_anticipacion = 0;
						endif;
						else :
							$valor_tiempo_anticipacion = 0;
						endif;


						//Valido que la siguiente hora se pueda reservar dependiendo el parametro de AnticipacionTurno
						$medicion_tiempo_anticipacion = $dbo->getFields( "Disponibilidad", "MedicionTiempoAnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						$valor_anticipacion_turno = ( int )$dbo->getFields( "Disponibilidad", "AnticipacionTurno", "IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "'" );
						switch ( $medicion_tiempo_anticipacion ):
						case "Dias":
							$minutos_anticipacion_turno = ( 60 * 24 ) * $valor_anticipacion_turno;
							break;
						case "Horas":
							$minutos_anticipacion_turno = 60 * $valor_anticipacion_turno;
							break;
						case "Minutos":
							$minutos_anticipacion_turno = $valor_anticipacion_turno;
							break;
						default:
							$minutos_anticipacion_turno = 0;
							endswitch;



							//Si es administrador no tiene limite de anticipacion
							if ( $Admin == "S" ) {
								$valor_tiempo_anticipacion = 0;
								$minutos_anticipacion_turno = 0;
							}



							//Consulto hace una hora para mostrar los turnos anterior segun solicitud de lagartos
							/*
							$hace_una_hora = strtotime ( '-1 hour' , strtotime ( date("Y-m-d H:i:s") ) ) ;
							if($Fecha==date("Y-m-d")):
								$hora_real = date('Y-m-d H:i:s',$hace_una_hora);
							else:
								$hora_real = date('Y-m-d H:i:s');
							endif;
							*/

							$hora_real = date( 'Y-m-d H:i:s' );

							$hora_empezar_reserva = strtotime( '-' . $valor_tiempo_anticipacion . ' minute', strtotime( $horaInicial_reserva ) );
							//$hora_empezar_reserva = date ( 'H:i:s' , $hora_empezar_reserva );
							$hora_actual_sistema = strtotime( $hora_real );




							$hora_final = strtotime( $row_dispo_elemento_gral[ "HoraHasta" ] );
							$hora_actual = strtotime( $row_dispo_elemento_gral[ "HoraDesde" ] );
							$hora_par = $row_dispo_elemento_gral[ "HoraPar" ];

							while ( $hora_actual <= $hora_final ):

								$hora_fecha_actual = $Fecha . " " . date( 'H:i:s', $hora_actual );
							$hora_puede_reservar = strtotime( '+' . $minutos_anticipacion_turno . ' minute', strtotime( $hora_real ) );
							/*****************************************************************************************************
							Valido que solo devuelva las fecha/hora mayor a la actual, esto por si le cambian la hora al celular
							Valido que ésta hora este disponible para reervar en el tiempo limite deacuerdo al parametro AnticipacionTurno
							******************************************************************************************************/
							if ( strtotime( $hora_fecha_actual ) >= strtotime( $hora_real ) && $hora_puede_reservar <= strtotime( $hora_fecha_actual ) ):

								//Verifico si el tee esta disponible en este horario para mostrarlo
								if ( ( $row_dispo_elemento_gral[ "Tee1" ] == "S" && $i == 1 ) || ( $row_dispo_elemento_gral[ "Tee10" ] == "S" && $i == 2 ) ):


									if ( strlen( $horaInicial ) != 8 ):
										$horaInicial .= ":00";
							endif;

							$hora[ "Hora" ] = $horaInicial;
							$zonahoraria = date_default_timezone_get();
							$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
							$hora[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );



							//echo "<br>" . date ( 'Y-m-d H:i:s' , $hora_puede_reservar );
							//exit;



							$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "' ", "array" );
							$total_invitados = 0;
							$reservado_por_socio = "";

							// Si el tee es 1
							if ( $i == 1 ):
								//Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
								if ( ( in_array( $horaInicial, $array_hora_reservada_tee1[ $IDElemento ] ) ) || ( $hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {
									$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = $array_socio[ "$horaInicial" ][ "Tee1" ][ "NombreSocio" ];
									$hora[ "IDSocio" ] = $array_socio[ "$horaInicial" ][ "IDSocio" ];
									$hora[ "IDReserva" ] = $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ];
									$reservado_por_socio = "S";
									//Permite a otros socios agregarse a un grupo de juego cuando quede un cupo
									if ( $r[ "PermiteAgregarGrupo" ] == "S" ):
										$sql_invitados = "SELECT IDReservaGeneralInvitado FROM ReservaGeneralInvitado WHERE IDReservaGeneral = '" . $array_socio[ "$horaInicial" ][ "IDReservaGeneral" ] . "'";
									$result_invitado = $dbo->query( $sql_invitados );
									$total_invitados = $dbo->rows( $result_invitado );
									endif;
								} else {

									//Verifico que no tenga fecha de cierre en esta hora
									$verifica_abierto_servicio_hora = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $hora[ "Hora" ], "Tee1" );
									if ( !empty( $verifica_abierto_servicio_hora ) ):
										//extraigo la razon
										$mensaje_cierre = explode( ":", $verifica_abierto_servicio_hora );

									$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = $mensaje_cierre[ 2 ];
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :



										//if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
										if ( $NumeroTurnos == 1 ):
											//Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
											$hora_par_disponible = self::valida_hora_con_par( $array_par_tee1, $horaInicial, "Tee1", $IDElemento, $Fecha, $hora_real );

									if ( $hora_par_disponible == "S" ):
										$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;
									else :
										//verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
										$array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_disponible_golf( $Fecha, $hora[ "Hora" ], $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, "Tee1", "", $array_par_tee1 );

									if ( count( $array_disponible ) == $NumeroTurnos ):
										//Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
										$hora_par_disponible = self::valida_hora_con_par( $array_par_tee1, $horaInicial, "Tee1", $IDElemento, $Fecha, $hora_real );
									if ( $hora_par_disponible == "S" ):
										$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;
									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;
									endif;
									/*
									else:
										$hora["Disponible"] = "N";
										$hora["Socio"] = "Hora no disponible";
										$hora["IDSocio"] = "";
										$hora["IDReserva"] = "";
									endif;
									**/

									endif;
								}
							endif;

							// Si el tee es 10
							if ( $i == 2 ):
								//Verifico que no este reservada y que pueda reservar en esta hora dependiendo las horas/minutos de anticipacion permitidos
								if ( ( in_array( $horaInicial, $array_hora_reservada_tee10[ $IDElemento ] ) ) || ( $hora_actual_sistema < $hora_empezar_reserva && $valor_tiempo_anticipacion > 0 ) ) {
									$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = $array_socio_tee10[ "$horaInicial" ][ "NombreSocio" ];
									$hora[ "Socio" ] = $array_socio_tee10[ "$horaInicial" ][ "Tee10" ][ "NombreSocio" ];
									$hora[ "IDSocio" ] = $array_socio_tee10[ "$horaInicial" ][ "IDSocio" ];
									$hora[ "IDReserva" ] = $array_socio_tee10[ "$horaInicial" ][ "IDReservaGeneral" ];
									$reservado_por_socio = "S";
									//Permite a otros socios agregarse a un grupo de juego cuando quede un cupo
									if ( $r[ "PermiteAgregarGrupo" ] == "S" ):
										$sql_invitados = "SELECT IDReservaGeneralInvitado FROM ReservaGeneralInvitado WHERE IDReservaGeneral = '" . $array_socio_tee10[ "$horaInicial" ][ "IDReservaGeneral" ] . "'";
									$result_invitado = $dbo->query( $sql_invitados );
									$total_invitados = $dbo->rows( $result_invitado );
									endif;


								} else {

									//Verifico que no tenga fecha de cierre en esta hora
									$verifica_abierto_servicio_hora = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $hora[ "Hora" ], "Tee10" );
									if ( !empty( $verifica_abierto_servicio_hora ) ):
										//extraigo la razon
										$mensaje_cierre = explode( ":", $verifica_abierto_servicio_hora );

									$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = $mensaje_cierre[ 2 ];
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :

										//if(strtotime($hora_fecha_actual) >= strtotime(date("Y-m-d H:i:s"))):
										if ( $NumeroTurnos == 1 ):
											//Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
											$hora_par_disponible = self::valida_hora_con_par( $array_par_tee10, $horaInicial, "Tee10", $IDElemento, $Fecha, $hora_real );
									if ( $hora_par_disponible == "S" ):
										$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;
									else :
										//verifico si es posible reservar en esta hora cuando el turno sea mas de 1, valido si los siguientes turnos estan disponible
										$array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_disponible_golf( $Fecha, $hora[ "Hora" ], $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, "Tee10", "", $array_par_tee10 );
									if ( count( $array_disponible ) == $NumeroTurnos ):
										//Si esta hora el par de una hora(p.j 05:50 con 08:35) verifico si ya paso la hora para poder reserva si ya paso la hora de terminacion
										$hora_par_disponible = self::valida_hora_con_par( $array_par_tee10, $horaInicial, "Tee10", $IDElemento, $Fecha, $hora_real );
									if ( $hora_par_disponible == "S" ):
										$hora[ "Disponible" ] = "S";
									$hora[ "Socio" ] = "";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;

									else :
										$hora[ "Disponible" ] = "N";
									$hora[ "Socio" ] = "No Disponible";
									$hora[ "IDSocio" ] = "";
									$hora[ "IDReserva" ] = "";
									endif;
									endif;
									/*
									else:
										$hora["Disponible"] = "N";
										$hora["Socio"] = "Hora no disponible";
										$hora["IDSocio"] = "";
										$hora["IDReserva"] = "";
									endif;
									*/
									endif;
								}
							endif;




							$hora[ "IDCampo" ] = $IDCampo;

							if ( $i == 1 ):
								$hora[ "Tee" ] = "Tee1";
							else :
								$hora[ "Tee" ] = "Tee10";
							endif;


							//Maximo y minimo deacuerso a los turnos
							//$minimo_invitado = ($datos_disponibilidad["NumeroInvitadoClub"] * $NumeroTurnos)-1;
							//$maximo_invitado = ($datos_disponibilidad["NumeroInvitadoExterno"] * $NumeroTurnos)-1;
							$minimo_invitado = ( $datos_disponibilidad[ "NumeroInvitadoClub" ] * $NumeroTurnos );
							$maximo_invitado = ( $datos_disponibilidad[ "MaximoInvitados" ] * $NumeroTurnos );

							$hora[ "MaximoPersonaTurno" ] = $datos_disponibilidad[ "MaximoPersonaTurno" ];
							$hora[ "NumeroInvitadoClub" ] = "$minimo_invitado";
							$hora[ "NumeroInvitadoExterno" ] = $datos_disponibilidad[ "NumeroInvitadoExterno" ];
							$hora[ "Maximoo" ] = $datos_disponibilidad[ "MaximoInvitados" ]."*".$NumeroTurnos."IN".$total_invitados;

							//Permite a otros socios agregarse a un grupo de juego cuando quede un cupo

							if ( $r[ "PermiteAgregarGrupo" ] == "S" && $reservado_por_socio == "S" ):
								$cupos_disponibles_grupo = ( int )$maximo_invitado - ( int )$total_invitados;
							$hora[ "CuposDisponibles" ] = $cupos_disponibles_grupo;
							else :
								$hora[ "CuposDisponibles" ] = 0;
							endif;



							//Repeticion reserva
							$hora[ "IDDisponibilidad" ] = $datos_disponibilidad[ "IDDisponibilidad" ];
							$hora[ "PermiteRepeticion" ] = $datos_disponibilidad[ "PermiteRepeticion" ];
							$hora[ "MaximoRepeticion" ] = $datos_disponibilidad[ "NumeroRepeticion" ] . " " . $datos_disponibilidad[ "MedicionRepeticion" ];


							$hora[ "IDElemento" ] = $IDElemento;
							$hora[ "NombreElemento"] = $hora[ "Tee" ] . "-" . $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $IDElemento . "'" );

							//Consulto los datos de georeferenciacion
							$datos_disponibilidad_geo = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $datos_disponibilidad[ "IDDisponibilidad" ] . "' ", "array" );
							$hora[ "Georeferenciacion" ] = $datos_disponibilidad_geo[ "Georeferenciacion" ];
							//Consulto los demas datos de la configuracion del servicio
							$datos_geo_servicio = $dbo->fetchAll( "Servicio", " IDServicio = '" . $IDServicio . "' ", "array" );
							$hora[ "Latitud" ] = $datos_geo_servicio[ "Latitud" ];
							$hora[ "Longitud" ] = $datos_geo_servicio[ "Longitud" ];
							$hora[ "Rango" ] = $datos_geo_servicio[ "Rango" ];
							$hora[ "MensajeFueraRango" ] = $datos_geo_servicio[ "MensajeFueraRango" ];


							array_push( $response_disponibilidad_tee, $hora );
							endif;
							endif;


							$array_horas_elemento[] = $horaInicial;
							$segundos_horaInicial = strtotime( $horaInicial );
							$segundos_minutoAnadir = $minutoAnadir * 60;
							$array_horas = $nuevaHora = date( "H:i", $segundos_horaInicial + $segundos_minutoAnadir );
							$hora_actual = strtotime( $nuevaHora );
							$horaInicial = $nuevaHora;



							endwhile;



					}
				}

			} else {
				$respuesta[ "message" ] = $verifica_abierto_servicio;
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
			}

			endfor;

			endwhile;



			//

			foreach ( $response_disponibilidad_tee as $id_array => $datos_array ):
				$array_ordenado_hora[ $datos_array[ "Hora" ] . $datos_array[ "NombreElemento" ] ] = $datos_array;
			endforeach;

			ksort( $array_ordenado_hora );

			$response_array_ordenado = array();
			foreach ( $array_ordenado_hora as $id_array => $datos_array ):
				array_push( $response_array_ordenado, $datos_array );
			endforeach;

			array_push( $response_disponibilidades, $response_array_ordenado );

			// Si $UnElemento no es vacio no ordeno el array ya que se consulto un solo elemnto de los contrario ordeno todos los elemnetos buscados
			if ( !empty( $UnElemento ) ):
				$servicio_hora[ "Disponibilidad" ] = $response_array_ordenado;
			else :
				$servicio_hora[ "Disponibilidad" ] = $response_disponibilidades;
			endif;
			//$servicio_hora["Disponibilidad"] = $response_disponibilidades;
			$servicio_hora[ "name" ] = $nombre_elemento_consulta;

			array_push( $response, $servicio_hora );







			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;



		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else


		//inserta _log
		$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('get_disponiblidad_elemento_servicio','IDClub: " . $IDClub . " IDServicio:" . $IDServicio . " . Fecha: " . $Fecha . " Elemento: " . $IDElemento . "','" . json_encode( $respuesta ) . "')" );


		return $respuesta;


	}


	function valida_hora_con_par( $array_par, $horaInicial, $tee, $IDElemento, $Fecha, $hora_real ) {
		$dbo = & SIMDB::get();
		$disponible = "S";
		//Valido el tee contrario
		if ( $tee == "Tee1" )
			$tee = "Tee10";
		else
			$tee = "Tee1";

		$FechaHoravalida = $Fecha . " " . $horaInicial;
		$FechaHoraPar = $Fecha . " " . $array_par[ $horaInicial ];

		//$hora_real = "2018-06-02 06:12:00";

		if ( !empty( $array_par[ $horaInicial ] ) && $array_par[ $horaInicial ] != "00:00:00" && strtotime( $FechaHoravalida ) >= strtotime( $FechaHoraPar ) ):
			//verifico si esta reservado y si la hora ya pasó
			$hora_inicio_par = $Fecha . " " . $array_par[ $horaInicial ];
		//$hora_inicio_par = "2018-06-02" . " " .$array_par[$horaInicial];
		$sql_reserva_hora = "SELECT IDReservaGeneral FROM ReservaGeneral, Socio WHERE  Fecha = '" . $Fecha . "' and Hora = '" . $array_par[ $horaInicial ] . "' and Tee = '" . $tee . "' and  (IDEstadoReserva = 1 or IDEstadoReserva=3) AND Socio.IDSocio = ReservaGeneral.IDSocio AND Socio.IDClub = ReservaGeneral.IDClub";
		$qry_reserva_hora = $dbo->query( $sql_reserva_hora );


		//if($horaInicial=="10:03:00")
		//echo $sql_reserva_hora;


		if ( ( int )$dbo->rows( $qry_reserva_hora ) > 0 ):
			$disponible = "N";
		elseif ( strtotime( $hora_real ) > strtotime( $hora_inicio_par ) ):
			$disponible = "S";
		else :
			$disponible = "N";
		endif;
		else :
			$disponible = "S";
		endif;

		return $disponible;
	}


	function get_reserva_asociada( $IDClub, $IDSocio, $IDReserva ) {
		$dbo = & SIMDB::get();
		$response = array();


		$sql = "SELECT * FROM ReservaGeneral WHERE IDSocio = '" . $IDSocio . "' and IDReservaGeneral =  '" . $IDReserva . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $row_reserva = $dbo->fetchArray( $qry ) ):
				$reserva[ "IDClub" ] = $IDClub;
			$reserva[ "IDSocio" ] = $IDSocio;
			$reserva[ "IDReserva" ] = $row_reserva[ "IDReservaGeneral" ];
			$reserva[ "IDServicio" ] = $row_reserva[ "IDServicio" ];
			$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva[ "IDServicio" ] . "'" );
			$reserva[ "NombreServicio" ] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
			$reserva[ "IDElemento" ] = $row_reserva[ "IDServicioElemento" ];
			$reserva[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva[ "IDServicioElemento" ] . "'" );
			$reserva[ "Fecha" ] = $row_reserva[ "Fecha" ];
			$reserva[ "Tee" ] = $row_reserva[ "Tee" ];

			$estado_reserva = $row_reserva[ "IDEstadoReserva" ];



			if ( strlen( $row_reserva[ "Hora" ] ) != 8 ):
				$row_reserva[ "Hora" ] .= ":00";
			endif;

			$reserva[ "Hora" ] = $row_reserva[ "Hora" ];

			$zonahoraria = date_default_timezone_get();
			$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
			$reserva[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


			//Reserva automaticas
			$response_otra_reserva = array();
			$sql_otra_reserva = $dbo->query( "Select * From  ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "'" );
			while ( $r_otra_reserva = $dbo->fetchArray( $sql_otra_reserva ) ):

				//Si la reserva es Tipo = Repetir solo muestro esta en el resumen las demas no para no generar confusion
				if ( $r_otra_reserva[ "Tipo" ] == "Repetir" ):
					unset( $response_otra_reserva );
			$response_otra_reserva = array();
			endif;


			$datos_reserva = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $r_otra_reserva[ "IDReservaGeneralAsociada" ] . "' ", "array" );

			$otra_reserva[ IDReservaGeneral ] = $datos_reserva[ "IDReservaGeneral" ];
			$otra_reserva[ "IDReserva" ] = $datos_reserva[ "IDReservaGeneral" ];
			$otra_reserva[ "IDServicio" ] = $datos_reserva[ "IDServicio" ];
			$id_servicio_maestro_otro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $datos_reserva[ "IDServicio" ] . "'" );

			$nombre_servicio_personalizado = $dbo->getFields( "ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro_otro . "'" );
			if ( empty( $nombre_servicio_personalizado ) )
				$nombre_servicio_personalizado = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro_otro . "'" );



			$otra_reserva[ "NombreServicio" ] = $NombreServicio;
			$otra_reserva[ "IDElemento" ] = $row_reserva[ "IDServicioElemento" ];
			if ( $estado_reserva == "3" ):
				//$otra_reserva["NombreElemento"] = "Se asignará elemento automaticamente de ser necesario";
				$otra_reserva[ "NombreElemento" ] = $nombre_servicio_personalizado;

			else :
				$otra_reserva[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $datos_reserva[ "IDServicioElemento" ] . "'" );
			endif;
			$otra_reserva[ "Fecha" ] = $datos_reserva[ "Fecha" ];
			$otra_reserva[ "Tee" ] = $datos_reserva[ "Tee" ];
			if ( strlen( $datos_reserva[ "Hora" ] ) != 8 ):
				$datos_reserva[ "Hora" ] .= ":00";
			endif;

			$otra_reserva[ "Hora" ] = $datos_reserva[ "Hora" ];
			$zonahoraria = date_default_timezone_get();
			$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
			$otra_reserva[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );

			array_push( $response_otra_reserva, $otra_reserva );
			endwhile;

			// Muestro las asociadas solo en los servicios donde se reserva otro elemnto, por ejemplo en clase de tenis se asocioa un cancha de tenis
			$ServicioAsociado = (int)$dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
			if($ServicioAsociado>0)
				$reserva[ "ReservaAsociada" ] = $response_otra_reserva;
			else
				$reserva[ "ReservaAsociada" ] = "";


			array_push( $response, $reserva );
			endwhile;

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;


	}


	function get_reservas_socio( $IDClub, $IDSocio, $Limite = 0, $IDReserva = "", $IDUsuario="" ) {
		$dbo = & SIMDB::get();

		$response = array();

		$array_id_consulta[] = $IDSocio;

		$socio_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
		// Si esta en blanco quiere decir que es socio cabeza y debe consultar las reservas de sus beneficiarios
		if ( $socio_padre == "" ):
			$accion_padre = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
		$sql_beneficiarios = "SELECT * FROM Socio WHERE ( AccionPadre = '" . $accion_padre . "' and AccionPadre <> '') and IDClub = '" . $IDClub . "' ORDER BY Nombre Desc ";
		$qry_beneficiarios = $dbo->query( $sql_beneficiarios );
		while ( $r_beneficiario = $dbo->fetchArray( $qry_beneficiarios ) ):
			$array_id_consulta[] = $r_beneficiario[ IDSocio ];
		endwhile;
		endif;

		if ( count( $array_id_consulta ) > 0 && empty( $IDReserva ) ):
			$where_beneficiario = "and (IDSocio in (" . implode( ",", $array_id_consulta ) . ") or IDSocioBeneficiario in (" . implode( ",", $array_id_consulta ) . ") or IDSocioReserva = '" . $IDSocio . "')";
		endif;

		if ( !empty( $IDReserva ) )
			$condicion_reserva = " and IDReservaGeneral = '" . $IDReserva . "' ";

		if ( $Limite != 0 )
			$condicion_limite = " Limit " . $Limite;


		if(empty($IDUsuario))
				$condicion_fecha = " and Fecha >= CURDATE() ";
		else
				$condicion_fecha = "  ";


		$sql = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva = 1  " . $condicion_fecha. $where_beneficiario . " " . $condicion_reserva . "ORDER BY Fecha ASC, Hora ASC  " . $condicion_limite;
		$qry = $dbo->query( $sql );


		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";

			while ( $row_reserva = $dbo->fetchArray( $qry ) ):

					//si es el dia actual solo muestro las que estan pendientes

					$mostra_reserva=1;
					$fecha_hoy=date("Y-m-d");
					if($row_reserva["Fecha"]==$fecha_hoy && $row_reserva["Hora"]<=date("H:i:s") && empty($IDUsuario)){
						$mostra_reserva=0;
						if($dbo->rows( $qry )==1){
						$reserva[ "IDClub" ] = "";
						$reserva[ "IDSocio" ] = "";
						$reserva[ "IDReserva" ] = "";
						$reserva[ "IDServicio" ] = "";
						$id_servicio_maestro = "";
						$reserva[ "NombreServicio" ] = "";
						$reserva[ "IDElemento" ] = "";
						$reserva[ "NombreElemento" ] = "";
						$reserva[ "Fecha" ] = "";
						$reserva[ "Tee" ] = "";
						array_push( $response, $reserva );
						$respuesta[ "message" ] = "No tienes reservas programadas.";
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = $response;
						return $respuesta;
					}

					}

					//$mostra_reserva=1;

				if($mostra_reserva==1){


						$datos_servicio = $dbo->fetchAll( "Servicio", " IDServicio = '" . $row_reserva[ "IDServicio" ] . "' ", "array" );

							// Verifico si es una reserva asociada para no mostrarla en el resultado
							$sql_auto = "SELECT * FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAsociada = '" . $row_reserva[ "IDReservaGeneral" ] . "' and IDEstadoReserva = 1";
						$qry_auto = $dbo->query( $sql_auto );
						if ( $dbo->rows( $qry_auto ) <= 0 ) {



							$reserva[ "IDClub" ] = $IDClub;
							$reserva[ "IDSocio" ] = $row_reserva["IDSocio"];
							$reserva[ "Socio" ] = utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocio"] . "'")  . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocio"] . "'" ) );
							$reserva[ "IDReserva" ] = $row_reserva[ "IDReservaGeneral" ];
							$reserva[ "IDServicio" ] = $row_reserva[ "IDServicio" ];
							$id_servicio_maestro = $datos_servicio["IDServicioMaestro"];

							$iconoservicio = $datos_servicio["Icono"];
							$foto = "";
							if ( !empty( $iconoservicio ) ) {
								$foto = SERVICIO_ROOT . $iconoservicio;
							} else {
								$icono_maestro = $dbo->getFields( "ServicioMaestro", "Icono", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
								if ( !empty( $icono_maestro ) ) {
									$foto = SERVICIO_ROOT . $icono_maestro;
								}
							}

							$reserva[ "Icono" ] = $foto;




							$nombre_servicio_personalizado = $dbo->getFields( "ServicioClub", "TituloServicio", "IDClub = '" . $IDClub . "' and IDServicioMaestro = '" . $id_servicio_maestro . "'" );
							if ( empty( $nombre_servicio_personalizado ) )
								$nombre_servicio_personalizado = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );

							if ( ( int )$row_reserva[ "IDServicioTipoReserva" ] > 0 && $IDClub <> "9" ):
								$nombre_servicio_personalizado .= " (" . $dbo->getFields( "ServicioTipoReserva", "Nombre", "IDServicioTipoReserva = '" . $row_reserva[ "IDServicioTipoReserva" ] . "'" ) . ")";
							endif;

							$reserva[ "NombreServicio" ] = $nombre_servicio_personalizado;
							$reserva[ "NombreServicioPersonalizado" ] = $nombre_servicio_personalizado;


							//Para el polo se asigna cancha y equipo
							if ( $row_reserva[ "IDClub" ] == "37" &&  $row_reserva[ "IDServicio" ] == "3575" ):
								if ( !empty( $row_reserva[ "Cancha" ] ) && !empty( $row_reserva[ "Equipo" ] ) ):
									$otros_datos_reserva = " Cancha " . $row_reserva[ "Cancha" ] . " - " . $row_reserva[ "Equipo" ];
							else :
								$otros_datos_reserva = "Pendiente de asignar cancha y equipo";
							endif;
							endif;


							if((int)$row_reserva[ "IDSocioBeneficiario" ]>0){
								$socio_benef=utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'")  . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $row_reserva["IDSocioBeneficiario"] . "'" ) );
								$otros_datos_reserva = "(".$socio_benef.")";
							}
							else{
								$otros_datos_reserva = "(".$reserva[ "Socio" ].")";
							}

							if(!empty($datos_servicio["IdentificadorServicio"])){
									$otros_datos_reserva = " " . $row_reserva[ "IdentificadorServicio" ]."-".$row_reserva[ "ConsecutivoServicio" ];
							}


							$reserva[ "IDAuxiliar" ] = $row_reserva[ "IDAuxiliar" ];
							$reserva[ "IDElemento" ] = $row_reserva[ "IDServicioElemento" ];
							$reserva[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva[ "IDServicioElemento" ] . "'" ) . " " . $otros_datos_reserva;
							$reserva[ "Fecha" ] = $row_reserva[ "Fecha" ];
							$reserva[ "Tee" ] = $row_reserva[ "Tee" ];
							$reserva[ "CantidadInvitadoSalon" ] = $row_reserva[ "CantidadInvitadoSalon" ];
							$reserva[ "PagadaOnline" ] = $row_reserva[ "Pagado" ];
							$reserva[ "FechaTransaccion" ] = $row_reserva[ "FechaTransaccion" ];
							$reserva[ "MensajeTransaccion" ] = "Mensaje transacción: " . $row_reserva[ "MensajeTransaccion" ];

							$reserva[ "LabelElementoSocio" ] = utf8_encode($datos_servicio["LabelElementoSocio"]);
							$reserva[ "LabelElementoExterno" ] = utf8_encode($datos_servicio["LabelElementoExterno"]);
							$reserva[ "PermiteEditarAuxiliar" ] = $datos_servicio["PermiteEditarAuxiliar"];
							$reserva[ "PermiteListaEsperaAuxiliar" ] = $datos_servicio["PermiteListaEsperaAuxiliar"];
							$reserva[ "MultipleAuxiliar" ] = $datos_servicio["MultipleAuxiliar"];
							$labelauxiliar = $dbo->getFields( "Club", "LabelAuxiliar", "IDClub = '" . $IDClub . "'" );
							if ( empty( $labelauxiliar ) )
								$labelauxiliar = $dbo->getFields( "ServicioMaestro", "LabelAuxiliar", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );

							$reserva[ "LabelAuxiliar" ] = utf8_encode($labelauxiliar);





							$response_auxiliar_reserva = array();
							if ( !empty( $row_reserva[ "IDAuxiliar" ] ) ):
								$Array_Auxiliar = explode( ",", $row_reserva[ "IDAuxiliar" ] );
								if ( count( $Array_Auxiliar ) > 0 ):
									foreach ( $Array_Auxiliar as $id_auxiliar ):
										if ( !empty( $id_auxiliar ) ):
											$array_datos_auxiliar[ "IDAuxiliar" ] = $id_auxiliar;
											$array_datos_auxiliar[ "Nombre" ] =  $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $id_auxiliar . "'" ) ;
											$id_tipo_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $id_auxiliar . "'" );
											$array_datos_auxiliar[ "Tipo" ] = $dbo->getFields( "AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'" );
											array_push( $response_auxiliar_reserva, $array_datos_auxiliar );
										endif;
									endforeach;
								endif;

								$reserva[ "ListaAuxiliar" ] = $response_auxiliar_reserva;

								$reserva[ "IDAuxiliar" ] = $row_reserva[ "IDAuxiliar" ];
								$reserva[ "Auxiliar" ] = utf8_encode( $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $row_reserva[ "IDAuxiliar" ] . "'" ) );
								$id_tipo_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $row_reserva[ "IDAuxiliar" ] . "'" );
								$reserva[ "TipoAuxiliar" ] = $dbo->getFields( "AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'" );
							else :
								unset( $reserva[ 'IDAuxiliar' ] );
								unset( $reserva[ 'Auxiliar' ] );
								unset( $reserva[ 'TipoAuxiliar' ] );
								$reserva[ "ListaAuxiliar" ]=array();
							endif;


							if ( !empty( $row_reserva[ "IDTipoModalidadEsqui" ] ) ):
								$reserva[ "IDTipoModalidad" ] = $row_reserva[ "IDTipoModalidadEsqui" ];
							$reserva[ "Modalidad" ] = $dbo->getFields( "TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva[ "IDTipoModalidadEsqui" ] . "'" );
							else :
								unset( $reserva[ 'IDTipoModalidad' ] );
							unset( $reserva[ 'Modalidad' ] );
							endif;

							if ( strlen( $row_reserva[ "Hora" ] ) != 8 ):
								$row_reserva[ "Hora" ] .= ":00";
							endif;

							$reserva[ "Hora" ] = $row_reserva[ "Hora" ];

							$zonahoraria = date_default_timezone_get();
							$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
							$reserva[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


							if ( $row_reserva[ "IDDisponibilidad" ] <= 0 ):
								$id_disponibilidad = $dbo->getFields( "ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r[ "IDServicio" ] . "' and Activo <>'N'" );
							else :
								$id_disponibilidad = $row_reserva[ "IDDisponibilidad" ];
							endif;

							$invitadoclub = $dbo->getFields( "Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
							$invitadoexterno = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );

							if ( !empty( $invitadoclub ) ):
								$reserva[ "NumeroInvitadoClub" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
							else :
								$reserva[ "NumeroInvitadoClub" ] = "";
							endif;
							if ( !empty( $invitadoexterno ) ):
								$reserva[ "NumeroInvitadoExterno" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
							else :
								$reserva[ "NumeroInvitadoExterno" ] = "";
							endif;




							if ( $row_reserva[ "IDInvitadoBeneficiario" ] > 0 ):
								$reserva[ "Beneficiario" ] = utf8_encode( $dbo->getFields( "Invitado", "Nombre", "IDInvitado = '" . $row_reserva[ "IDInvitadoBeneficiario" ] . "'" ) . " " . $dbo->getFields( "Invitado", "Apellido", "IDInvitado = '" . $row_reserva[ "IDInvitadoBeneficiario" ] . "'" ) );
							else:
								$reserva[ "Beneficiario" ] = "";
							endif;
							if ( $row_reserva[ "IDSocioBeneficiario" ] > 0 ):
								$reserva[ "Beneficiario" ] = strtoupper( utf8_encode( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $row_reserva[ "IDSocioBeneficiario" ] . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $row_reserva[ "IDSocioBeneficiario" ] . "'" ) ) );
							else:
								$reserva[ "Beneficiario" ] = "";
							endif;



							//Invitados Reserva
							$response_invitados_reserva = array();
							$sql_invitados_reserva = $dbo->query( "Select * From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_reserva[ "IDReservaGeneral" ] . "'" );
							$total_invitado = $dbo->rows( $sql_invitados_reserva );
							while ( $r_invitados_reserva = $dbo->fetchArray( $sql_invitados_reserva ) ):
								$id_reserva_general_invitado = $r_invitados_reserva[ "IDReservaGeneralInvitado" ];
							$invitado_reserva[ IDReservaGeneralInvitado ] = $r_invitados_reserva[ "IDReservaGeneralInvitado" ];
							$invitado_reserva[ IDSocio ] = $r_invitados_reserva[ "IDSocio" ];
							$invitado_reserva[ NombreSocio ] =  strtoupper( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $r_invitados_reserva[ "IDSocio" ] . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $r_invitados_reserva[ "IDSocio" ] . "'" )  );
							$invitado_reserva[ NombreExterno ] =  $r_invitados_reserva[ "Nombre" ] ;
							if ( $r_invitados_reserva[ "IDSocio" ] == 0 ):
								$tipo_invitado = "Externo";
							else :
								$tipo_invitado = "Socio";
							endif;

							$invitado_reserva[ TipoInvitado ] = $tipo_invitado;

							array_push( $response_invitados_reserva, $invitado_reserva );
							endwhile;

							/*
							//Verifico si el servicio es golf y en invitados falta 1 agrego el socio por que pertenece a la reserva
							if( ($id_servicio_maestro==15 || $id_servicio_maestro==27 || $id_servicio_maestro==28 || $id_servicio_maestro==30) ): //Golf
								//Consulto cuantos invitados son minimo para saber si falta 1 y agregar el socio como invitado
								if ($id_disponibilidad>0):
									$minimo_invitado_reserva = (int)$dbo->getFields( "Disponibilidad" , "MinimoInvitados" , "IDDisponibilidad = '" . $id_disponibilidad . "'");
								endif;

								if($total_invitado<$minimo_invitado_reserva):
									$invitado_reserva[IDReservaGeneralInvitado]=$id_reserva_general_invitado;
									$invitado_reserva[IDSocio]=$IDSocio;
									$invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$IDSocio."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$IDSocio."'"));
									$tipo_invitado = "Socio";
									$invitado_reserva[TipoInvitado]=$tipo_invitado;
									array_push($response_invitados_reserva, $invitado_reserva);
								endif;
							endif;
							*/

							$reserva[ "Invitados" ] = $response_invitados_reserva;

							//Reservas asociadas
							$response_reserva_asociada = array();
							$array_asociada = SIMWebserviceQuemado::get_reserva_asociada( $IDClub, $IDSocio, $row_reserva[ "IDReservaGeneral" ] );
							foreach ( $array_asociada[ "response" ][ "0" ][ "ReservaAsociada" ] as $datos_reserva ):
								array_push( $response_reserva_asociada, $datos_reserva );
							endforeach;
							$reserva[ "ReservaAsociada" ] = $response_reserva_asociada;





							array_push( $response, $reserva );
							unset($row_reserva);
						} // fin verificar si fue un areserva automatica
			}

			endwhile;

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {

			if($IDClub==51){ //Para condado muestro false
				$respuesta[ "message" ] = "No tienes reservas programadas.";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = $response;
			}
			else{
					$reserva[ "IDClub" ] = "";
					$reserva[ "IDSocio" ] = "";
					$reserva[ "IDReserva" ] = "";
					$reserva[ "IDServicio" ] = "";
					$id_servicio_maestro = "";
					$reserva[ "NombreServicio" ] = "";
					$reserva[ "IDElemento" ] = "";
					$reserva[ "NombreElemento" ] = "";
					$reserva[ "Fecha" ] = "";
					$reserva[ "Tee" ] = "";
					array_push( $response, $reserva );
					$respuesta[ "message" ] = "No tienes reservas programadas.";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = $response;
			}
		} //end else

		return $respuesta;

	}

	function get_reservas_empleado( $IDClub, $IDUsuario, $Limite = 0, $IDReserva = "" ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDReserva ) )
			$condicion_reserva = " and IDReservaGeneral = '" . $IDReserva . "' ";

		if ( $Limite != 0 )
			$condicion_limite = " Limit " . $Limite;

		$sql = "SELECT * FROM ReservaGeneral WHERE IDClub = '" . $IDClub . "' and IDEstadoReserva = 1 and Fecha >= CURDATE() and IDUsuarioReserva = '" . $IDUsuario . "' ORDER BY Fecha Desc  " . $condicion_limite;
		$qry = $dbo->query( $sql );


		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";

			while ( $row_reserva = $dbo->fetchArray( $qry ) ):



				// Verifico si es una reserva asociada para no mostrarla en el resultado
				$sql_auto = "SELECT * FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAsociada = '" . $row_reserva[ "IDReservaGeneral" ] . "' and IDEstadoReserva = 1";
			$qry_auto = $dbo->query( $sql_auto );
			if ( $dbo->rows( $qry_auto ) <= 0 ) {



				$reserva[ "IDClub" ] = $IDClub;
				$reserva[ "IDSocio" ] = $IDSocio;
				$reserva[ "IDReserva" ] = $row_reserva[ "IDReservaGeneral" ];
				$reserva[ "IDServicio" ] = $row_reserva[ "IDServicio" ];
				$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $row_reserva[ "IDServicio" ] . "'" );
				$reserva[ "NombreServicio" ] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
				$reserva[ "IDElemento" ] = $row_reserva[ "IDServicioElemento" ];
				$reserva[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva[ "IDServicioElemento" ] . "'" );
				$reserva[ "Fecha" ] = $row_reserva[ "Fecha" ];
				$reserva[ "Tee" ] = $row_reserva[ "Tee" ];



				if ( !empty( $row_reserva[ "IDAuxiliar" ] ) ):
					$reserva[ "IDAuxiliar" ] = $row_reserva[ "IDAuxiliar" ];
				$reserva[ "Auxiliar" ] = $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $row_reserva[ "IDAuxiliar" ] . "'" );
				$id_tipo_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $row_reserva[ "IDAuxiliar" ] . "'" );
				$reserva[ "TipoAuxiliar" ] = $dbo->getFields( "AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'" );
				else :
					unset( $reserva[ 'IDAuxiliar' ] );
				unset( $reserva[ 'Auxiliar' ] );
				unset( $reserva[ 'TipoAuxiliar' ] );
				endif;


				if ( !empty( $row_reserva[ "IDTipoModalidadEsqui" ] ) ):
					$reserva[ "IDTipoModalidad" ] = $row_reserva[ "IDTipoModalidadEsqui" ];
				$reserva[ "Modalidad" ] = $dbo->getFields( "TipoModalidadEsqui", "Nombre", "IDTipoModalidadEsqui = '" . $row_reserva[ "IDTipoModalidadEsqui" ] . "'" );
				else :
					unset( $reserva[ 'IDTipoModalidad' ] );
				unset( $reserva[ 'Modalidad' ] );
				endif;

				if ( strlen( $row_reserva[ "Hora" ] ) != 8 ):
					$row_reserva[ "Hora" ] .= ":00";
				endif;

				$reserva[ "Hora" ] = $row_reserva[ "Hora" ];

				$zonahoraria = date_default_timezone_get();
				$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
				$reserva[ "GMT" ] = SIMWebserviceQuemado::timezone_offset_string( $offset );


				if ( $row_reserva[ "IDDisponibilidad" ] <= 0 ):
					$id_disponibilidad = $dbo->getFields( "ServicioDisponibilidad", "IDDisponibilidad", "IDServicio = '" . $r[ "IDServicio" ] . "' and Activo <>'N'" );
				else :
					$id_disponibilidad = $row_reserva[ "IDDisponibilidad" ];
				endif;

				$invitadoclub = $dbo->getFields( "Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				$invitadoexterno = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );

				if ( !empty( $invitadoclub ) ):
					$reserva[ "NumeroInvitadoClub" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoClub", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				else :
					$reserva[ "NumeroInvitadoClub" ] = "";
				endif;
				if ( !empty( $invitadoexterno ) ):
					$reserva[ "NumeroInvitadoExterno" ] = $dbo->getFields( "Disponibilidad", "NumeroInvitadoExterno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				else :
					$reserva[ "NumeroInvitadoExterno" ] = "";
				endif;

				if ( $row_reserva[ "IDInvitadoBeneficiario" ] > 0 ):
					$reserva[ "Beneficiario" ] = $dbo->getFields( "Invitado", "Nombre", "IDInvitado = '" . $row_reserva[ "IDInvitadoBeneficiario" ] . "'" ) . " " . $dbo->getFields( "Invitado", "Apellido", "IDInvitado = '" . $row_reserva[ "IDInvitadoBeneficiario" ] . "'" );
				endif;
				if ( $row_reserva[ "IDSocioBeneficiario" ] > 0 ):
					$reserva[ "Beneficiario" ] = strtoupper( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $row_reserva[ "IDSocioBeneficiario" ] . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $row_reserva[ "IDSocioBeneficiario" ] . "'" ) );
				endif;



				//Invitados Reserva
				$response_invitados_reserva = array();
				$sql_invitados_reserva = $dbo->query( "Select * From ReservaGeneralInvitado Where IDReservaGeneral = '" . $row_reserva[ "IDReservaGeneral" ] . "'" );
				$total_invitado = $dbo->rows( $sql_invitados_reserva );
				while ( $r_invitados_reserva = $dbo->fetchArray( $sql_invitados_reserva ) ):
					$id_reserva_general_invitado = $r_invitados_reserva[ "IDReservaGeneralInvitado" ];
				$invitado_reserva[ IDReservaGeneralInvitado ] = $r_invitados_reserva[ "IDReservaGeneralInvitado" ];
				$invitado_reserva[ IDSocio ] = $r_invitados_reserva[ "IDSocio" ];
				$invitado_reserva[ NombreSocio ] = strtoupper( $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $r_invitados_reserva[ "IDSocio" ] . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $r_invitados_reserva[ "IDSocio" ] . "'" ) );
				$invitado_reserva[ NombreExterno ] = strtoupper( $r_invitados_reserva[ "Nombre" ] );
				if ( $r_invitados_reserva[ "IDSocio" ] == 0 ):
					$tipo_invitado = "Externo";
				else :
					$tipo_invitado = "Socio";
				endif;

				$invitado_reserva[ TipoInvitado ] = $tipo_invitado;

				array_push( $response_invitados_reserva, $invitado_reserva );
				endwhile;

				/*
				//Verifico si el servicio es golf y en invitados falta 1 agrego el socio por que pertenece a la reserva
				if( ($id_servicio_maestro==15 || $id_servicio_maestro==27 || $id_servicio_maestro==28 || $id_servicio_maestro==30) ): //Golf
					//Consulto cuantos invitados son minimo para saber si falta 1 y agregar el socio como invitado
					if ($id_disponibilidad>0):
						$minimo_invitado_reserva = (int)$dbo->getFields( "Disponibilidad" , "MinimoInvitados" , "IDDisponibilidad = '" . $id_disponibilidad . "'");
					endif;

					if($total_invitado<$minimo_invitado_reserva):
						$invitado_reserva[IDReservaGeneralInvitado]=$id_reserva_general_invitado;
						$invitado_reserva[IDSocio]=$IDSocio;
						$invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$IDSocio."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$IDSocio."'"));
						$tipo_invitado = "Socio";
						$invitado_reserva[TipoInvitado]=$tipo_invitado;
						array_push($response_invitados_reserva, $invitado_reserva);
					endif;
				endif;
				*/

				$reserva[ "Invitados" ] = $response_invitados_reserva;

				//Reservas asociadas
				$response_reserva_asociada = array();
				$array_asociada = SIMWebserviceQuemado::get_reserva_asociada( $IDClub, $IDSocio, $row_reserva[ "IDReservaGeneral" ] );
				foreach ( $array_asociada[ "response" ][ "0" ][ "ReservaAsociada" ] as $datos_reserva ):
					array_push( $response_reserva_asociada, $datos_reserva );
				endforeach;
				$reserva[ "ReservaAsociada" ] = $response_reserva_asociada;





				array_push( $response, $reserva );
			} // fin verificar si fue un areserva automatica
			endwhile;






			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No tienes reservas programadas.";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}



	function verificar_disponibilidad_auxiliar( $IDClub, $IDServicio, $Fecha, $Hora, $IDAuxiliar ) {
		$dbo = & SIMDB::get();
		// Consulto los auxiliares reservados en esta fecha y hora
		$sql_reserva_auxiliar = $dbo->query( "Select * From AuxiliarReserva Where IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDAuxiliar = '" . $IDAuxiliar . "'" );
		if ( $dbo->rows( $sql_reserva_auxiliar ) > 0 ):
			return "1"; // Si esta reservado
		else :
			return "0"; // NO esta reservado
		endif;

	}


	function get_auxiliares( $IDClub, $IDServicio, $Fecha, $Hora, $VerSoloDisponibles="S" ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) ) {
			$Hora = SIMWebserviceQuemado::validar_formato_hora( $Hora );

			$dia_fecha = date( 'w', strtotime( $Fecha ) );
			$sql_dispo_aux_gral = "SELECT AUXD.*
														 From AuxiliarDisponibilidadDetalle AUXD, AuxiliarDisponibilidad AD
														 Where AUXD.IDAuxiliarDisponibilidad=AD.IDAuxiliarDisponibilidad and  AUXD.IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and '" . $Hora . "'>=HoraDesde and '" . $Hora . "'<=HoraHasta and AD.Activo='S'";
			$qry_dispo_aux_gral = $dbo->query( $sql_dispo_aux_gral );
			$response_auxiliar = array();
			if ( $dbo->rows( $qry_dispo_aux_gral ) > 0 ) {
				while ( $row_dispo_aux_gral = $dbo->fetchArray( $qry_dispo_aux_gral ) ) {
	        $array_auxiliares_disponible = explode( "|", $row_dispo_aux_gral[ "IDAuxiliar" ] );
	        if ( count( $array_auxiliares_disponible ) > 0 ):
	          foreach ( $array_auxiliares_disponible as $IDAuxiliar ):
	            if($IDAuxiliar!=""){
	              //Verifico si existe el auxiliar
	              $id_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliar", "IDAuxiliar = '" . $IDAuxiliar . "'" );
	              if ( !empty( $id_auxiliar ) ):
	                $flag_disponible = SIMWebserviceQuemado::verificar_disponibilidad_auxiliar( $IDClub, $IDServicio, $Fecha, $Hora, $IDAuxiliar );
	                if ( $flag_disponible == "0" && !empty( $IDAuxiliar ) ):
	                    //verifico que el auxiliar no este asignado en alguna reserva a esta hora
	                    $id_reserva = "";

											//aumento 30 min mas y 30 min menos para las reservas en que la hora no es constante
											if($IDClub==12){
												$fecha_hora_reserva = $Fecha . " " . $Hora;
												$masminutos = strtotime ( '+30 minute' , strtotime ( $fecha_hora_reserva ) ) ;
												$menosminutos = strtotime ( '-30 minute' , strtotime ( $fecha_hora_reserva ) ) ;
												$nuevahoramas = date ( 'H:i:s' , $masminutos );
												$nuevahoramenos = date ( 'H:i:s' , $menosminutos );
												$condicion_hora="Hora >= '" . $nuevahoramenos . "' and Hora <= '".$nuevahoramas."'";
											}
											else{
												$condicion_hora="Hora = '" . $Hora . "'";
											}


	                    $id_reserva = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '%" . $IDAuxiliar . ",%' and Fecha = '" . $Fecha . "' and ( ".$condicion_hora." )" );
	                    if ( !in_array( $IDAuxiliar, $array_id_aux ) ):
														//Valido si solo se quiere consultar solo los diponibles o mostrar todos para la lista de espera
														if( ($VerSoloDisponibles=="S" && empty( $id_reserva )) || $VerSoloDisponibles=="N"){
							                      $auxiliar[ "IDAuxiliar" ] = $IDAuxiliar;
							                      $auxiliar[ "Nombre" ] = $dbo->getFields( "Auxiliar", "Nombre", "IDAuxiliar = '" . $IDAuxiliar . "'" );
																		$Foto=$dbo->getFields( "Auxiliar", "Foto", "IDAuxiliar = '" . $IDAuxiliar . "'" );
																		$auxiliar[ "Foto" ] = (empty($Foto)) ? "" : ELEMENTOS_ROOT.$Foto;
																		$auxiliar[ "Disponible" ] = empty( $id_reserva ) ? "S":"N";

																		$orden=$dbo->getFields( "Auxiliar", "Orden", "IDAuxiliar = '" . $IDAuxiliar . "'" );
																		//Si el orden esta repetido le pongo uno aleatorio por que si no lo hago y esta repetido no aparece
																		if(in_array($orden,$array_orden) || $orden==""){
																			$orden=rand(100,10000);
																		}
																		$array_orden[]=$orden;
																		$auxiliar[ "Orden" ] = $orden;

							                      //$tipo_auxiliar = $dbo->getFields( "Auxiliar", "IDAuxiliarTipo", "IDAuxiliar = '" . $IDAuxiliar . "'" );
							                      //$auxiliar[ "Tipo" ] = $dbo->getFields( "AuxiliarTipo", "Nombre", "IDAuxiliarTipo = '" . $tipo_auxiliar . "'" );
							                      $array_id_aux[] = $IDAuxiliar;
							                      array_push( $response_auxiliar, $auxiliar );
													}
	                    endif;
	                  endif;
	              endif;
	            }
	        endforeach;
	        endif;
	      }


				if ( count( $response_auxiliar ) > 0 ):


					foreach ($response_auxiliar as $key_aux => $value_aux) {
							if((int)$value_aux["Orden"]==0)
								$orden_aux=rand(1,1000);
							else
								$orden_aux=$value_aux["Orden"];

							$array_aux_orden[$orden_aux]=$value_aux;
					}
					ksort($array_aux_orden);
					unset($response_auxiliar);
					foreach ($array_aux_orden as $key_aux => $value_aux) {
							$response_auxiliar[]=$value_aux;
					}



					$auxiliar_disponible[ "IDClub" ] = $IDClub;
				$auxiliar_disponible[ "Auxiliares" ] = $response_auxiliar;
				array_push( $response, $auxiliar_disponible );
				$respuesta[ "message" ] = count( $response_auxiliar ) . " Encontrados";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
				else :
					$respuesta[ "message" ] = "No se encontraron profesores disponibles";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				endif;

			} else {
				$respuesta[ "message" ] = "No se encontraron profesores disponibles";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			} //end else

		} else {
			$respuesta[ "message" ] = "5. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function get_modalidades( $IDClub, $IDTipoModalidadEsqui, $IDElemento ) {
		$dbo = & SIMDB::get();

		$response = array();

		if ( !empty( $IDTipoModalidadEsqui ) ):
			$condicion = " and IDTipoModalidadEsqui = '" . $IDTipoModalidadEsqui . "' ";
		endif;

		if ( !empty( $IDElemento ) ):
			// consulto las modalidades del elemento
			$sql_servicio_modalidad = "SELECT * FROM  ServicioElementoModalidad Where IDServicioElemento = '" . $IDElemento . "'";
		$qry_servicio_modalidad = $dbo->query( $sql_servicio_modalidad );
		while ( $r_servicio_modalidad = $dbo->fetchArray( $qry_servicio_modalidad ) ):
			$array_servicio_modalidad[] = $r_servicio_modalidad[ "IDTipoModalidadEsqui" ];
		endwhile;
		if ( count( $array_servicio_modalidad ) > 0 ):
			$id_modalidades = implode( ",", $array_servicio_modalidad );
		else :
			$id_modalidades = 0;
		endif;
		$condicion = " and IDTipoModalidadEsqui in (" . $id_modalidades . ")";

		endif;

		if ( !empty( $IDClub ) ) {
			$response = array();
			$sql = "SELECT TME.* FROM TipoModalidadEsqui TME " . $tabla_join . " WHERE TME.Publicar = 'S' and TME.IDClub = '" . $IDClub . "' " . $condicion . " ORDER BY TME.Nombre";
			$qry = $dbo->query( $sql );
			if ( $dbo->rows( $qry ) > 0 ) {
				$message = $dbo->rows( $qry ) . " Encontrados";
				while ( $r = $dbo->fetchArray( $qry ) ) {
					$seccion[ "IDClub" ] = $r[ "IDClub" ];
					$seccion[ "IDTipoModalidad" ] = $r[ "IDTipoModalidadEsqui" ];
					$seccion[ "Modalidad" ] = $r[ "Nombre" ];
					$seccion[ "Descripcion" ] = $r[ "Descripcion" ];
					array_push( $response, $seccion );

				} //ednw hile
				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
			} //End if
			else {
				$respuesta[ "message" ] = "No se encontraron registros";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			} //end else


		} else {
			$respuesta[ "message" ] = "6. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function verificar_socio_grupo_fecha( $IDClub, $IDSocioInvitado, $Fecha, $IDServicio ) {

		$dbo = & SIMDB::get();

		$respuesta_valida_invitado = SIMWebserviceQuemado::verificar_socio_grupo( $IDClub, $IDSocioInvitado, $Fecha, $IDServicio );
		if ( $respuesta_valida_invitado == 1 ):
			$nombre_socio_invitado = $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocioInvitado . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocioInvitado . "'" );
		$respuesta[ "message" ] = "El invitado: " . $nombre_socio_invitado . ", solo puede estar en un grupo por dia.";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		else :
			$respuesta[ "message" ] = "valido";
		$respuesta[ "success" ] = true;
		$respuesta[ "response" ] = "";
		endif;

		return $respuesta;
	}



	function verificar_socio_grupo( $IDClub, $IDSocio, $Fecha, $IDServicio ) {

		$dbo = & SIMDB::get();

		$flag_valido = 0;

			$id_disponibilidad = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $IDServicio, $Fecha, $IDElemento, $Hora );
			$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array" );
			$MaximoReservaSocioServicio = $datos_disponibilidad["MaximoReservaDia"];

		if ( $MaximoReservaSocioServicio<=1){
			//Consulto si el socio esta en otro grupo de invitados el mismo dia de la reserva o si es dueño de una reserva de tenis el mismo dia
			//$sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.IDServicio = '" . $IDServicio . "' ORDER BY IDReservaGeneralInvitado Desc ";
			$sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "' or RG.IDSocio='".$IDSocio."') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.IDServicio = '" . $IDServicio . "' ORDER BY IDReservaGeneralInvitado Desc ";
			$qry_socio_grupo = $dbo->query( $sql_socio_grupo );
			if ( $dbo->rows( $qry_socio_grupo ) > 0 ):
				$flag_valido = 1;
			endif;

		}



		//Consulto que tampoco sea dueño de una reserva


		return $flag_valido;
	}




	//Funcion para traer las reservas en una fecha determinada de un elemento y un servicio determinado
	//creado por John Escobar
	//12 de Noviembre e 2015
	function get_reservas_servicio( $IDClub, $IDServicio, $Fecha = "", $IDServicioElemento = "", $IDSocio = "",$Orden = "" ) {

		$dbo = & SIMDB::get();

		if(!empty($Orden)){
			$order = $Orden;
		}else{
			$order = " ReservaGeneral.Fecha Desc, ReservaGeneral.Hora ASC ";
		}


		$response = array();

		$where = "";
		if ( !empty( $Fecha ) )
			$where .= " AND ReservaGeneral.Fecha = '" . $Fecha . "' ";

		if ( !empty( $IDServicioElemento ) )
			$where .= " AND ReservaGeneral.IDServicioElemento = '" . $IDServicioElemento . "' ";

		if ( !empty( $IDSocio ) ) {
			$where .= " AND ( Accion = '" . $IDSocio . "' OR Nombre LIKE '%" . $IDSocio . "%' OR Apellido LIKE '%" . $IDSocio . "%'  )   ";
			if ( empty( $Fecha ) )
				$where .= " AND Fecha >= CURDATE()  ";

			$order = " ReservaGeneral.Fecha ASC, ReservaGeneral.Hora ASC ";
		}


		$sql = "SELECT ReservaGeneral.*, Socio.Nombre, Socio.Apellido, Socio.Accion, Socio.Predio
						FROM ReservaGeneral, Socio
						WHERE ReservaGeneral.IDClub = '" . $IDClub . "' AND ReservaGeneral.IDEstadoReserva = 1
						AND ReservaGeneral.IDServicio = '" . $IDServicio . "' AND ReservaGeneral.IDSocio = Socio.IDSocio
						AND Socio.IDClub = '" . $IDClub . "' " . $where . "  ORDER BY " . $order;


		/*
		$sql = "SELECT ReservaGeneral.*
						FROM ReservaGeneral
						WHERE ReservaGeneral.IDClub = '" . $IDClub . "' AND ReservaGeneral.IDEstadoReserva = 1
						AND ReservaGeneral.IDServicio = '" . $IDServicio . "'	" . $where . "
						ORDER BY " . $order;
		*/

		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $row_reserva = $dbo->fetchArray( $qry ) ):
				$reserva[ "IDClub" ] = $IDClub;
			$reserva[ "IDSocio" ] = $row_reserva[ "IDSocio" ];
			$reserva[ "IDReserva" ] = $row_reserva[ "IDReservaGeneral" ];
			$reserva[ "Socio" ] = array( "Nombre" => $row_reserva[ "Nombre" ], "Apellido" => $row_reserva[ "Apellido" ], "Accion" => $row_reserva[ "Accion" ], "Predio" => $row_reserva[ "Predio" ] );
			$reserva[ "IDServicio" ] = $row_reserva[ "IDServicio" ];
			$reserva[ "IDElemento" ] = $row_reserva[ "IDServicioElemento" ];
			$reserva[ "NombreElemento" ] = $dbo->getFields( "ServicioElemento", "Nombre", "IDServicioElemento = '" . $row_reserva[ "IDServicioElemento" ] . "'" );
			$reserva[ "Fecha" ] = $row_reserva[ "Fecha" ];
			$reserva[ "Tee" ] = $row_reserva[ "Tee" ];

			if ( strlen( $row_reserva[ "Hora" ] ) != 8 ):
				$row_reserva[ "Hora" ] .= ":00";
			endif;

			$reserva[ "Hora" ] = $row_reserva[ "Hora" ];
			array_push( $response, $reserva );
			endwhile;

			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else









		return $respuesta;

	} //end function



	function set_preferencias( $IDClub, $IDSocio, $SeccionesContenido, $SeccionesEvento, $SeccionesGaleria, $SeccionesClasificado, $SeccionesContenido2, $SeccionesEvento2, $SeccionesContenido3,$IDUsuario ) {


		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && ( !empty( $IDSocio ) || !empty( $IDUsuario ) ) ) {

			if(!empty( $IDUsuario )){
				return SIMWebserviceQuemado::set_preferencias_empleado($IDClub, $IDUsuario, $SeccionesContenido, $SeccionesEvento,$SeccionesGaleria);
				exit;
			}

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {
				//borro las secciones asociadas al socio
				$sql_borra_seccion = $dbo->query( "Delete From SocioSeccion Where IDSocio  = '" . $IDSocio . "'" );

				//borro las secciones asociadas al socio
				$sql_borra_seccion = $dbo->query( "Delete From SocioSeccion2 Where IDSocio  = '" . $IDSocio . "'" );

				//borro las secciones asociadas al socio
				$sql_borra_seccion = $dbo->query( "Delete From SocioSeccion3 Where IDSocio  = '" . $IDSocio . "'" );

				//borro las secciones asociadas al socio
				$sql_borra_seccion_even = $dbo->query( "Delete From SocioSeccionEvento Where IDSocio  = '" . $IDSocio . "'" );

				//borro las secciones asociadas al socio
				$sql_borra_seccion_even = $dbo->query( "Delete From SocioSeccionEvento2 Where IDSocio  = '" . $IDSocio . "'" );


				//borro las secciones asociadas al socio
				$sql_borra_seccion_gal = $dbo->query( "Delete From SocioSeccionGaleria Where IDSocio  = '" . $IDSocio . "'" );

				//borro las secciones asociadas al socio
				$sql_borra_seccion_gal = $dbo->query( "Delete From SocioSeccionClasificados Where IDSocio  = '" . $IDSocio . "'" );


				if ( !empty( $SeccionesContenido ) ):
					$array_secciones_not = explode( ",", $SeccionesContenido );
				if ( count( $array_secciones_not ) > 0 ):
					foreach ( $array_secciones_not as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "Seccion", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into SocioSeccion (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesContenido2 ) ):
					$array_secciones_not2 = explode( ",", $SeccionesContenido2 );
				if ( count( $array_secciones_not2 ) > 0 ):
					foreach ( $array_secciones_not2 as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "Seccion2", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into SocioSeccion2 (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesContenido3 ) ):
					$array_secciones_not3 = explode( ",", $SeccionesContenido3 );
				if ( count( $array_secciones_not3 ) > 0 ):
					foreach ( $array_secciones_not3 as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "Seccion3", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into SocioSeccion3 (IDSocio, IDSeccion) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesEvento ) ):
					$array_secciones_even = explode( ",", $SeccionesEvento );
				if ( count( $array_secciones_even ) > 0 ):
					foreach ( $array_secciones_even as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionEvento", "IDSeccionEvento", "IDClub = '" . $IDClub . "' and IDSeccionEvento = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into SocioSeccionEvento (IDSocio, IDSeccionEvento) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesEvento2 ) ):
					$array_secciones_even = explode( ",", $SeccionesEvento2 );
				if ( count( $array_secciones_even ) > 0 ):
					foreach ( $array_secciones_even as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionEvento2", "IDSeccionEvento2", "IDClub = '" . $IDClub . "' and IDSeccionEvento2 = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into SocioSeccionEvento2 (IDSocio, IDSeccionEvento2) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesGaleria ) ):
					$array_secciones_gal = explode( ",", $SeccionesGaleria );
				if ( count( $array_secciones_gal ) > 0 ):
					foreach ( $array_secciones_gal as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionGaleria", "IDSeccionGaleria", "IDClub = '" . $IDClub . "' and IDSeccionGaleria = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_gal = $dbo->query( "Insert Into SocioSeccionGaleria (IDSocio, IDSeccionGaleria) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesClasificado ) ):
					$array_secciones_cla = explode( ",", $SeccionesClasificado );
				if ( count( $array_secciones_cla ) > 0 ):
					foreach ( $array_secciones_cla as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionClasificados", "IDSeccionClasificados", "IDClub = '" . $IDClub . "' and IDSeccionClasificados = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_cla = $dbo->query( "Insert Into SocioSeccionClasificados (IDSocio, IDSeccionClasificados) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;


				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "7. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function set_preferencias_empleado( $IDClub, $IDUsuario, $SeccionesContenido, $SeccionesEvento, $SeccionesGaleria ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDUsuario ) ) {

			//verifico que el Usuario exista y pertenezca al club
			$id_Usuario = $dbo->getFields( "Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'" );

			if ( !empty( $id_Usuario ) ) {
				//borro las secciones asociadas al Usuario
				$sql_borra_seccion = $dbo->query( "Delete From UsuarioSeccion Where IDUsuario  = '" . $IDUsuario . "'" );

				//borro las secciones asociadas al Usuario
				$sql_borra_seccion_even = $dbo->query( "Delete From UsuarioSeccionEvento Where IDUsuario  = '" . $IDUsuario . "'" );

				//borro las secciones asociadas al Usuario
				$sql_borra_seccion_gal = $dbo->query( "Delete From UsuarioSeccionGaleria Where IDUsuario  = '" . $IDUsuario . "'" );


				if ( !empty( $SeccionesContenido ) ):
					$array_secciones_not = explode( ",", $SeccionesContenido );
				if ( count( $array_secciones_not ) > 0 ):
					foreach ( $array_secciones_not as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "Seccion", "IDSeccion", "IDClub = '" . $IDClub . "' and IDSeccion = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into UsuarioSeccion (IDUsuario, IDSeccion) Values ('" . $IDUsuario . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesEvento ) ):
					$array_secciones_even = explode( ",", $SeccionesEvento );
				if ( count( $array_secciones_even ) > 0 ):
					foreach ( $array_secciones_even as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionEvento", "IDSeccionEvento", "IDClub = '" . $IDClub . "' and IDSeccionEvento = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_not = $dbo->query( "Insert Into UsuarioSeccionEvento (IDUsuario, IDSeccionEvento) Values ('" . $IDUsuario . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;

				if ( !empty( $SeccionesGaleria ) ):
					$array_secciones_gal = explode( ",", $SeccionesGaleria );
				if ( count( $array_secciones_gal ) > 0 ):
					foreach ( $array_secciones_gal as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionGaleria", "IDSeccionGaleria", "IDClub = '" . $IDClub . "' and IDSeccionGaleria = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_gal = $dbo->query( "Insert Into UsuarioSeccionGaleria (IDUsuario, IDSeccionGaleria) Values ('" . $IDUsuario . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;


				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el Usuario no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "7. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		return $respuesta;

	}



	function set_socio_favorito( $IDClub, $IDSocio, $SocioFavorito, $EstadoFavorito = "" ) {

		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {
				//borro los favoritos del socio
				//$sql_borra_favorito = $dbo->query("Delete From SocioFavorito Where IDSocio  = '".$IDSocio."'");

				if ( !empty( $EstadoFavorito ) ):
					$array_socio_favorito_estado = explode( ",", $EstadoFavorito );
				endif;

				if ( !empty( $SocioFavorito ) ):
					$array_socio_favorito = explode( ",", $SocioFavorito );
				endif;

				$contador_socio = 0;
				if ( count( $array_socio_favorito ) > 0 ):
					foreach ( $array_socio_favorito as $id_socio ):
						if ( $array_socio_favorito_estado[ $contador_socio ] == "S" && ( int )$id_socio > 0 ):
							$inserta_socio_favorito = $dbo->query( "Insert Into SocioFavorito (IDSocio, IDSocio2) Values ('" . $IDSocio . "', '" . $id_socio . "')" );
						elseif ( $array_socio_favorito_estado[ $contador_socio ] == "N" ):
							$delete_socio_favorito = $dbo->query( "Delete From SocioFavorito Where IDSocio = '" . $IDSocio . "' and IDSocio2 = '" . $id_socio . "'" );
				endif;
				$contador_socio++;
				endforeach;
				endif;

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "8. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function elimina_reserva_general( $IDClub, $IDSocio, $IDReserva, $Admin = "", $Razon = "" ) {

		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDReserva ) ) {


			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				//Verifico que este en el tiempo limite para reservar
				$id_disponibilidad = ( int )$dbo->getFields( "ReservaGeneral", "IDDisponibilidad", "IDReservaGeneral = '" . $IDReserva . "'" );

				if ( $id_disponibilidad > 0 ):
					$tiempo_cancelacion = ( int )$dbo->getFields( "Disponibilidad", "TiempoCancelacion", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				$medicion_cancelacion = $dbo->getFields( "Disponibilidad", "MedicionTiempo", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				switch ( $medicion_cancelacion ):
				case "Dias":
					$minutos_anticipacion = ( 60 * 24 ) * $tiempo_cancelacion;
					break;
				case "Horas":
					$minutos_anticipacion = 60 * $tiempo_cancelacion;
					break;
				case "Minutos":
					$minutos_anticipacion = $tiempo_cancelacion;
					break;
				default:
					$minutos_anticipacion = 2;

					endswitch;
					else :
						$tiempo_cancelacion = 2;
					$medicion_cancelacion = "Horas";
					$minutos_anticipacion = 120;
					endif;



					$fecha_reserva = $dbo->getFields( "ReservaGeneral", "Fecha", "IDReservaGeneral = '" . $IDReserva . "'" );

					$hora_reserva = $dbo->getFields( "ReservaGeneral", "Hora", "IDReservaGeneral = '" . $IDReserva . "'" );
					$aux_reserva = $dbo->getFields( "ReservaGeneral", "IDAuxiliar", "IDReservaGeneral = '" . $IDReserva . "'" );

					$id_servicio = $dbo->getFields( "ReservaGeneral", "IDServicio", "IDReservaGeneral = '" . $IDReserva . "'" );


					//Especial Country para reservas de cancha en cualquier momento si es con profesor segun configuracion
					if ( ($IDClub == 44 || $IDClub == 8 ) && empty( $aux_reserva ) && $id_servicio == 3941):
						$tiempo_cancelacion = 0;
						$medicion_cancelacion = "minutos";
						$minutos_anticipacion = 0;
					endif;
					//FIN ESPECIAL country


					$hora_inicio_reserva = strtotime( '-' . $minutos_anticipacion . ' minute', strtotime( $fecha_reserva . " " . $hora_reserva ) );
					$fechahora_actual = strtotime( date( "Y-m-d H:i:s" ) );

					$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $id_servicio . "'" );
					$envia_push_eliminacion = $dbo->getFields( "Servicio", "PushEliminaReserva", "IDServicio = '" . $id_servicio . "'" );
					$id_servicio_cancha = $dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );

					//$fechahora_actual =  strtotime ( "2016-03-29 07:00:00" );

					//Verifico que la reserva exista
					$id_reservada_existe = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDReservaGeneral = '" . $IDReserva . "'" );
					if ( empty( $id_reservada_existe ) ):
						$respuesta[ "message" ] = "La reserva ya fue eliminada";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					endif;


					//Especial atc se puede borrar pero si es antes de 3 horas le sale un mensaje
					if ( $IDClub == 26 ):
						$mensaje_eliminacion = "";
					$id_servicio = $dbo->getFields( "ReservaGeneral", "IDServicio", "IDReservaGeneral = '" . $IDReserva . "'" );
					$hora_inicio_reserva_esp = strtotime( '-180 minute', strtotime( $fecha_reserva . " " . $hora_reserva ) );
					if ( $fechahora_actual > $hora_inicio_reserva_esp && empty( $Admin ) ):
						switch ( $id_servicio ):
						case "1490":
					$mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelación ha sido fuera del tiempo límite, en caso de que el turno de coliseo no sea utilizado se le cobrará el costo de coliseo.";
					break;
					case "2106":
					$mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelación ha sido fuera del tiempo límite, en caso de que él profesor no sea utilizado en ese horario se le cobrará el costo de la clase.";
					break;

					case "1446":
					case "1484":
					case "2109":
					case "2110":
					case "3450":
					case "4350":
					case "5035":
					case "5039":
					case "7973":
					case "3941":
					$mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelación ha sido fuera del tiempo límite, en caso de que el turno no sea utilizado en ese horario se le cobrará el costo del turno.";
					break;
					endswitch;
					endif;
					endif;
					//FIN Especial atc se puede borrar pero si es antes de 3 horas le sale un mensaje

					//Especial BTCC si elimina antes de 12 horas prof o minitor sale mensaje
					if ( $IDClub == 72 && empty( $aux_reserva ) && $id_servicio == 8649 ):
						$hora_inicio_reserva_esp = strtotime( '-720 minute', strtotime( $fecha_reserva . " " . $hora_reserva ) );
						if ( $fechahora_actual > $hora_inicio_reserva_esp && empty( $Admin ) ):
							$mensaje_eliminacion = "Estimado Usuario,Debido a que su cancelación ha sido fuera del tiempo límite (12 horas antes), APPlícala le recuerde que debe pagar la tarifa del servicio con caddie incluido.";
						endif;
					endif;
					//FIN Especial BTCC



					//Especial Country para reservas de 6am y 7am  solo hasta las 8pm del dia anterior cuando tiene profesor
					if ( ($IDClub == 44 || $IDClub == 8 ) && empty( $Admin ) ):
						$dia_manana = date('Y-m-d',time()+84600);
						$fecha_hoy_v=date("Y-m-d");
						if ( (   ( date( "H:i:s" ) >= "20:00:00"  && $dia_manana == $fecha_reserva )  || $fecha_hoy_v == $fecha_reserva ) &&  ($id_servicio == "3941" || $id_servicio == "36")  &&  ($hora_reserva == '06:00:00' || $hora_reserva == '07:00:00' )  && !empty( $aux_reserva )):
							$respuesta[ "message" ] = "Lo sentimos solo se permite eliminar la reserva con profesor/monitor hasta antes de las 8pm para turnos de 6am y 7am ";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
							return $respuesta;
						endif;
					endif;


					$EliminadaFueraTiempo="N";
					//Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
					if ( $fechahora_actual > $hora_inicio_reserva && empty( $Admin ) && $IDClub == 44 && ($id_servicio==3901 || $id_servicio == 3902 || $id_servicio == 8169 || $id_servicio == 3866 || $id_servicio == 3878 || $id_servicio == 5001 || $id_servicio == 3843)){
						$mensaje_eliminacion = "Su reserva esta siendo cancelada fuera de las horas permitidas de cancelación, recuerde que se cobrará el total en caso de no cubrir este turno.";
						$EliminadaFueraTiempo=S;
						$Admin=1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
					}

					//Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
					if ( $fechahora_actual > $hora_inicio_reserva && empty( $Admin ) && $IDClub == 44 && ($id_servicio==3905 )){
						$mensaje_eliminacion = "Recuerde que puede cancelar su reserva hasta 12 horas antes, de lo contrario será facturado el 50% del valor total del servicio a menos que este sea tomado por otro socio";
						$EliminadaFueraTiempo=S;
						$Admin=1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
					}

					//Especial country masajes tiene un tiempo de eliminacion y si se elimina fuera de ese tiempo muetra un mensaje
					if ( $fechahora_actual > $hora_inicio_reserva && empty( $Admin ) && $IDClub == 72 ){
						$mensaje_eliminacion = "Su reserva esta siendo cancelada fuera de las horas permitidas de cancelación. Recuerde que deberá pagar el total del servicio, a menos que otro socio use el turno.";
						$EliminadaFueraTiempo=S;
						$Admin=1; //asigno un valor a esta variable para que en la siguiente condicion permita eliminar
					}

					if($tiempo_cancelacion==1){
						$medicion_cancelacion=str_replace("s","",$medicion_cancelacion);
					}

					if ( $fechahora_actual > $hora_inicio_reserva && empty( $Admin ) ):
						$respuesta[ "message" ] = "No se puede eliminar la reserva debe ser minimo: " . $tiempo_cancelacion . " " . $medicion_cancelacion . " antes";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;

					else :

						$datos_reserva_eli = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array" );
					if ( $datos_reserva_eli[ "IDTipoPago" ] == 1 && $datos_reserva_eli[ "EstadoTransaccion" ] != "A" && empty( $Admin ) ): //Para pagos con payu no dejo que se elimine cuando se devuelva solo hata confirmar el estado del pago
						$respuesta[ "message" ] = "Esperando respuesta de la transaccion";
					//$respuesta["message"] = "Delete From ReservaGeneral Where IDReservaGeneral  = '".$row_reserva_auto["IDReservaGeneral"]."'";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;

					//verifico en la disponibilidad si la reserva permite la eliminación cuando fue creada por el starter
					$permite_eliminar_reserva_creada_starter = $dbo->getFields( "Disponibilidad", "PermiteEliminarCreadaStarter", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
					//verifico que la reserva haya sido creada por el socio si fue por el starter verifico en la disponibilidad si se puede eliminar por el socio
					$reservada_creada_por = $dbo->getFields( "ReservaGeneral", "UsuarioTrCr", "IDReservaGeneral = '" . $IDReserva . "'" );
					if ( $reservada_creada_por == "Starter" && empty( $Admin ) && $permite_eliminar_reserva_creada_starter == "N" ):
						$respuesta[ "message" ] = "No se puede eliminar la reserva fue creada por el Starter y solo el starter puede eliminarla";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					else :
						$borra_automatica = 0;
					//Copio Reserva
					/*
					$sql_copia_reserva = $dbo->query("INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, IDServicioTipoReserva, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
					Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, IDServicioTipoReserva, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '".$Razon."', NOW(), NOW()
					From ReservaGeneral
					Where IDReservaGeneral  = '".$IDReserva."'");
					*/
					$sql_copia_reserva = $dbo->query( "
						INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral,IDClub,IDSocio,IDSocioReserva,IDUsuarioReserva,IDServicio,IDServicioElemento,IDEstadoReserva	,IDDisponibilidad,IDAuxiliar,IDTipoModalidadEsqui,IDServicioTipoReserva,IDReservaGrupos,IDInvitadoBeneficiario,IDSocioBeneficiario,IDUsuarioCumplida,IDTipoPago,Cumplida,CumplidaCabeza,FechaCumplida,ObservacionCumplida,CantidadInvitadoSalon,Fecha,Hora	,Tee,Observaciones,Tipo,Notificado,NumeroInscripcion,CodigoPago,EstadoTransaccion,FechaTransaccion,CodigoRespuesta,MedioPago,TipoMedioPago,Pagado,PagoPayu,UsuarioTrCr,FechaTrCr,Razon,MensajeEliminacion,EliminadaFueraTiempo,UsuarioTrEd,FechaTrEd)
						Select IDReservaGeneral,IDClub,IDSocio,IDSocioReserva,IDUsuarioReserva,IDServicio,IDServicioElemento,IDEstadoReserva	,IDDisponibilidad,IDAuxiliar,IDTipoModalidadEsqui,IDServicioTipoReserva,IDReservaGrupos,IDInvitadoBeneficiario,IDSocioBeneficiario,IDUsuarioCumplida,IDTipoPago,Cumplida,CumplidaCabeza,FechaCumplida,ObservacionCumplida,CantidadInvitadoSalon,Fecha,Hora	,Tee,Observaciones,Tipo,Notificado,NumeroInscripcion,CodigoPago,EstadoTransaccion,FechaTransaccion,CodigoRespuesta,MedioPago,TipoMedioPago,Pagado,PagoPayu,UsuarioTrCr,FechaTrCr,'" . $Razon . "','" . $mensaje_eliminacion . "','".$EliminadaFueraTiempo."',NOW(),NOW()
						From ReservaGeneral
						Where IDReservaGeneral  = '" . $IDReserva . "'" );

					//borro reserva
					$sql_borra_reserva = $dbo->query( "Delete From ReservaGeneral Where IDReservaGeneral  = '" . $IDReserva . "'" );
					//borro invitados a esa reserva
					$sql_borra_reserva_invitados = $dbo->query( "Delete From ReservaGeneralInvitado Where IDReservaGeneral  = '" . $IDReserva . "'" );

					//Verifico si tiene una reserva asociada para borrarla tambien
					//$sql_asociada = "Select * From ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "' and IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and Fecha = '" . $fecha_reserva . "'";
					$sql_asociada = "Select * From ReservaGeneralAutomatica Where IDReservaGeneral = '" . $IDReserva . "' and IDClub = '" . $IDClub . "' and Fecha = '" . $fecha_reserva . "'";
					$result_asociada = $dbo->query( $sql_asociada );
					while ( $row_asociada = $dbo->fetchArray( $result_asociada ) ):
						$sql_copia_reserva = $dbo->query( "INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
							Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '" . $Razon . "', NOW(), NOW()
							From ReservaGeneral
							Where IDReservaGeneral  = '" . $row_asociada[ "IDReservaGeneralAsociada" ] . "'" );
					//borro reserva
					$sql_borra_reserva = $dbo->query( "Delete From ReservaGeneral Where IDReservaGeneral  = '" . $row_asociada[ "IDReservaGeneralAsociada" ] . "'" );
					//borro invitados a esa reserva
					$sql_borra_reserva_invitados = $dbo->query( "Delete From ReservaGeneralInvitado Where IDReservaGeneral  = '" . $row_asociada[ "IDReservaGeneralAsociada" ] . "'" );
					$borra_automatica = 1;
					endwhile;

					//Si la reserva es una clase elimino la cancha que se reservó con la clase

					if ( $id_servicio_cancha > 0 && $borra_automatica == 0 ):
						// Consulto el servicio del club asociado a este servicio maestro
						$IDServicioCanchaClub = $dbo->getFields( "Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'" );
					// Borro la cancha asociada
					//Copio Reserva
					$sql_reserva_auto = "Select * FRom ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicio = '" . $IDServicioCanchaClub . "' and IDEstadoReserva = 1 and Fecha = '" . $fecha_reserva . "' and Hora = '" . $hora_reserva . "' and Tipo = 'Automatica' limit 1";
					$result_reserva_auto = $dbo->query( $sql_reserva_auto );
					$row_reserva_auto = $dbo->fetchArray( $result_reserva_auto );

					$sql_copia_reserva_auto = $dbo->query( "INSERT IGNORE INTO ReservaGeneralEliminada (IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, Razon, UsuarioTrCr, FechaTrCr)
								Select IDReservaGeneral, IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDAuxiliar, IDTipoModalidadEsqui, Fecha, Hora, Tee, Observaciones, Tipo, Notificado, '" . $Razon . "', NOW(), NOW()
								From ReservaGeneral
								Where IDReservaGeneral  = '" . $row_reserva_auto[ "IDReservaGeneral" ] . "'" );
					//borro reserva
					$sql_borra_reserva_auto = $dbo->query( "Delete From ReservaGeneral Where IDReservaGeneral  = '" . $row_reserva_auto[ "IDReservaGeneral" ] . "'" );

					endif;

					SIMUtil::notificar_elimina_reserva( $IDReserva, $IDTipoReserva );

					//Si el elemento reservado es una persona (profesor, peluquero, masajista, etc) y esta creado como empleado en app empleados envio notificacion push
					SIMUtil::push_notifica_reserva_elimina( $IDClub, $IDReserva, "Empleado" );

					if ( $envia_push_eliminacion == "S" ):
						SIMUtil::push_notifica_reserva_elimina_socio( $IDClub, $IDReserva, $Razon );
					endif;

					//Envio mensaje a lista de espera
					//SIMUtil::push_notifica_libera_reserva($IDClub,$IDReserva);

					$codigo_canje = SIMUtil::push_notifica_codigo_pago( $IDReserva );
					if ( !empty( $codigo_canje ) ):
						$msg_respuesta = " Se genero el siguiente codigo para que lo pueda utilizar en su proxima reserva: " . $codigo_canje . " Lo puede consultar tambien en el modulo de Notificaciones";
					endif;


					$respuesta[ "message" ] = "Reserva eliminada correctamente. " . $msg_respuesta . $mensaje_eliminacion;
					//$respuesta["message"] = "Delete From ReservaGeneral Where IDReservaGeneral  = '".$row_reserva_auto["IDReservaGeneral"]."'";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = NULL;
					endif;
					endif;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "9. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_contacto( $IDClub, $IDSocio, $Telefono, $Ciudad, $Direccion, $Email, $Comentario, $Nombre ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $Email ) && !empty( $Comentario ) ) {

			$sql_seccion_not = $dbo->query( "INSERT INTO Contacto (IDClub, IDSocio, Telefono, Ciudad, Direccion, Email, Comentario, Nombre, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $Telefono . "','" . $Ciudad . "','" . $Direccion . "','" . $Email . "','" . $Comentario . "','".$Nombre."',WebService',NOW())" );
			SIMUtil::notificar_contactenos($IDClub, $IDSocio, $Telefono, $Ciudad, $Direccion, $Email, $Comentario, $Nombre);
			$respuesta[ "message" ] = "Guardado";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = NULL;

		} else {
			$respuesta[ "message" ] = "10. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function set_pqr( $IDClub, $IDArea, $IDSocio, $TipoPqr, $Asunto, $Comentario, $Archivo, $File = "", $IDTipoPqr = "", $NombreColaborador,$ApellidoColaborador ) {


			//Valido el pseo del archivo
			$tamano_archivo = $File["Archivo"]["size"];
			if ( $tamano_archivo >= 6000000 ){
				$respuesta[ "message" ] = "El archivo supera el limite de peso permitido de 6 megas, por favor verifique";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
			}



		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDArea ) && !empty( $IDSocio ) && !empty( $Comentario ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "'" );

			if ( !empty( $id_socio ) ) {

				//UPLOAD de imagenes

				if ( isset( $File ) ) {

					$files = SIMFile::upload( $File[ "Archivo" ], PQR_DIR, "IMAGE" );
					if ( empty( $files ) && !empty( $File[ "Archivo" ][ "name" ] ) ):
						$respuesta[ "message" ] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;
					$Archivo = $files[ 0 ][ "innername" ];


				} //end if

				//Consulto el siguiente consecutivo del pqr
				$sql_max_numero = "Select MAX(Numero) as NumeroMaximo From Pqr Where IDClub = '" . $IDClub . "'";
				$result_numero = $dbo->query( $sql_max_numero );
				$row_numero = $dbo->fetchArray( $result_numero );
				$siguiente_consecutivo = ( int )$row_numero[ "NumeroMaximo" ] + 1;

				//Valido que el pqr no exista por que en algunos casos quedó repetido
				$sql_pqr_existe = "Select *
							   From Pqr
							   Where IDTipoPqr = '" . $IDTipoPqr . "' and IDArea = '" . $IDArea . "' and IDSocio = '" . $IDSocio . "' and Tipo = '" . $TipoPqr . "' and Asunto = '" . $Asunto . "' and Descripcion='" . $Comentario . "'";
				$result_pqr_existe = $dbo->query( $sql_pqr_existe );
				if ( $dbo->rows( $result_pqr_existe ) <= 0 ):
					$sql_pqr = $dbo->query( "
					Insert Into Pqr (IDClub, Numero, IDTipoPqr, IDArea, IDSocio, IDPqrEstado, Tipo, Asunto, Descripcion, Archivo1, Fecha,  NombreColaborador,ApellidoColaborador, UsuarioTrCr, FechaTrCr)
					Values ('" . $IDClub . "','" . $siguiente_consecutivo . "','" . $IDTipoPqr . "','" . $IDArea . "','" . $IDSocio . "', '1','" . $TipoPqr . "','" . $Asunto . "','" . $Comentario . "',
					'" . $Archivo . "',NOW(),'".$NombreColaborador."','".$ApellidoColaborador."','WebService',NOW())" );
				$id_pqr = $dbo->lastID();
				SIMUtil::noticar_nuevo_pqr( $id_pqr );
				SIMUtil::noticar_respuesta_aut_pqr( $id_pqr );
				endif;

				//Espcial pqr a ws
				if($IDClub==8){
					 $respuesta_ws=SIMWebserviceQuemado::crear_pqr_ws($IDClub,$id_pqr);
					 $resp=json_decode($respuesta_ws);
					 if($resp->code!=0){
						 $respuesta[ "message" ] = "Hubo un problema al guardar la solicitud";
						 $respuesta[ "success" ] = false;
						 $respuesta[ "response" ] = NULL;
						 return $respuesta;
					 }
				}

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "11. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_pqr_respuesta( $IDClub, $IDSocio, $IDPqr, $Comentario,$IDPqrEstado ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDSocio ) && !empty( $Comentario ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$sql_pqr = $dbo->query( "INSERT INTO Detalle_Pqr (IDPqr, IDSocio, Fecha, Respuesta, UsuarioTrCr, FechaTrCr)
									Values ('" . $IDPqr . "','" . $IDSocio . "',NOW(), '" . $Comentario . "','WebService',NOW())" );

				if(!empty($IDPqrEstado)){
					$sql_estado="UPDATE Pqr Set Estado = '".$IDPqrEstado."' WHERE IDPqr='".$IDPqr."'";
					$dbo->query($sql_estado);
				}

				SIMUtil::noticar_respuesta_pqr( $IDPqr, $Comentario );

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "12. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_foto_socio( $IDClub, $IDSocio, $Archivo, $File = "" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				//UPLOAD de imagenes

				if ( isset( $File ) ) {

					$files = SIMFile::upload( $File[ "Archivo" ], SOCIO_DIR, "IMAGE" );
					if ( empty( $files ) && !empty( $File[ "Archivo" ][ "name" ] ) ):
						$respuesta[ "message" ] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;
					$Archivo = $files[ 0 ][ "innername" ];


				} //end if


				$FotoActualizar="S";


				$sql_actualiza_foto = $dbo->query( "Update Socio Set Foto = '" . $Archivo . "', FotoActualizadaSocio = '".$FotoActualizar."', FechaActualizacionFoto = NOW() Where IDSocio = '" . $IDSocio . "' " );
				$respuesta[ "message" ] = "Tu foto ha sido guardada con exito";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "13. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function set_foto_empleado( $IDClub, $IDUsuario, $Archivo, $File = "" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDUsuario ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_usuario = $dbo->getFields( "Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'" );

			if ( !empty( $id_usuario ) ) {

				if ( isset( $File ) ) {

					$files = SIMFile::upload( $File[ "Archivo" ], USUARIO_DIR, "IMAGE" );
					if ( empty( $files ) && !empty( $File[ "Archivo" ][ "name" ] ) ):
						$respuesta[ "message" ] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;
					$Archivo = $files[ 0 ][ "innername" ];


				} //end if

				$sql_actualiza_foto = $dbo->query( "Update Usuario Set Foto = '" . $Archivo . "', FotoActualizadaEmpleado = 'N', FechaActualizacionFoto = NOW() Where IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'" );
				$respuesta[ "message" ] = "foto guardada";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "13. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function get_actualizar_foto_socio( $IDClub, $IDSocio ) {
		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM Socio WHERE IDSocio = '" . $IDSocio . "'";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( $r[ "FotoActualizadaSocio" ] == "N" ):
					$respuesta[ "message" ] = "Lo sentimos la foto ya fue actualizada";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = $response;
				else :
					$respuesta[ "message" ] = "ok, puede actualizar foto";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
				endif;
			} //ednw hile

		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado socio";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}

	function get_actualizar_foto_empleado( $IDClub, $IDUsuario ) {
		$dbo = & SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM Usuario WHERE IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "' ORDER BY RAND()";
		$qry = $dbo->query( $sql );
		if ( $dbo->rows( $qry ) > 0 ) {
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ( $r = $dbo->fetchArray( $qry ) ) {
				if ( $r[ "FotoActualizadaEmpleado" ] == "N" ):
					$respuesta[ "message" ] = "Lo sentimos la foto ya fue actualizada";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = $response;
				else :
					$respuesta[ "message" ] = "ok, puede actualizar foto";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;
				endif;
			} //ednw hile

		} //End if
		else {
			$respuesta[ "message" ] = "No se ha encontrado usuario";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	}



	function set_invitado( $IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso,$ValoresFormulario,$IDUsuario="" ) {
		$dbo = & SIMDB::get();


		if(empty($IDUsuario))
			$IDUsuario="Socio";

		if ( !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $FechaIngreso ) ) {

			$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
			$NumeroDocumento = trim( str_replace( ",", "", $NumeroDocumento ) );

			$hoy = date( "Y-m-d" );

			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) ) {

				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {


					// CAMBIO Sep 12 2016: Se consulta las invitaciones que puede hacer el socio Titular
					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido_socio = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'" );
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );


					if ( !empty( $datos_socio[ "AccionPadre" ] ) ): // es un beneficiario
						$id_socio_titular = $dbo->getFields( "Socio", "IDSocio", "Accion = '" . $datos_socio[ "AccionPadre" ] . "'" );
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $id_socio . "'" );


					if ( empty( $numero_invitados_dia_permitido ) || $numero_invitados_dia_permitido == 0 )
						$numero_invitados_dia_permitido = $numero_invitados_dia_permitido_socio;


					//Consulto los id socio de mi vinculo
					$sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio[ "AccionPadre" ] . "' or Accion = '" . $datos_socio[ "AccionPadre" ] . "' and IDClub = '" . $IDClub . "'";
					$qry_socio_vinculo = $dbo->query( $sql_socio_vinculo );
					while ( $row_socio_vinculo = $dbo->fetchArray( $qry_socio_vinculo ) ):
						$array_socio_vinculo[] = $row_socio_vinculo[ "IDSocio" ];
					endwhile;
					if ( count( $array_socio_vinculo ) > 0 ):
						$id_otro_socio = implode( ",", $array_socio_vinculo );
					$condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
					endif;
					else :
						$id_socio_titular = $IDSocio;
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'" );
					//Consulto los id socio de mi vinculo
					$sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio[ "Accion" ] . "' and IDClub = '" . $IDClub . "'";
					$qry_socio_vinculo = $dbo->query( $sql_socio_vinculo );
					while ( $row_socio_vinculo = $dbo->fetchArray( $qry_socio_vinculo ) ):
						$array_socio_vinculo[] = $row_socio_vinculo[ "IDSocio" ];
					endwhile;
					if ( count( $array_socio_vinculo ) > 0 ):
						$id_otro_socio = implode( ",", $array_socio_vinculo );
					$condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
					endif;
					endif;


					// Consulto si el dia de la reserva esta asignado como fecha especial para no tomar en cuenta invitaciones
					$id_fecha_Especial = $dbo->getFields( "FechaEspecialInvitado", "IDFechaEspecialInvitado", "Fecha = '" . $FechaIngreso . "' and IDClub = '" . $IDClub . "'" );
					if ( !empty( $id_fecha_Especial ) ):
						// Dejo los parametros ilimitados
						$numero_invitados_dia_permitido = 100;
					$numero_invitados_dia_permitido_socio = 100;
					endif;


					//Consulto cuantas veces la persona ha sido invitada en el mes
					$mes_invitacion = substr( $FechaIngreso, 5, 2 );
					$year_invitacion = substr( $FechaIngreso, 0, 4 );
					$dia_invitacion = substr( $FechaIngreso, 8, 2 );


					//Consulto cuantos invitadoa ha hecho para el dia
					$sql_invitados_dia_soc = $dbo->query( "Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "') and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
					$numero_invitaciones_soc = $dbo->rows( $sql_invitados_dia_soc );
					if ( ( $numero_invitaciones_soc ) >= $numero_invitados_dia_permitido_socio ):
						$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia permitido";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;

					$valida_regla=self::valida_regla_invitacion_v1($IDClub,$IDSocio, $NumeroDocumento,$FechaIngreso);
					if($valida_regla!="ok"){
						$respuesta[ "message" ] = $valida_regla;
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
						return $respuesta;
					}





					if ( ( int )$numero_invitados_dia_permitido > 0 && $numero_invitados_dia_permitido_socio > 0 ) {



						$sql_numero_invitacion = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );


						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );

						//Cambio Sep 12: Se suma el total de invitados por accion padre
						//Consulto cuantas personas ha invitado el socio en el dia
						//$sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where IDSocio = '".$IDSocio."' and YEAR(FechaIngreso) = '".$year_invitacion."' and MONTH(FechaIngreso) = '".$mes_invitacion."' and DAY(FechaIngreso) = '".$dia_invitacion."' and IDClub = '".$IDClub."' and Estado = 'I'");
						//$numero_invitados_dia = $dbo->rows($sql_invitados_dia);
						$sql_invitados_dia = $dbo->query( "Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "' " . $condicion_otro_socio . ") and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );

						$numero_invitados_dia_permitido_accion = 10;
						$numero_invitados_mes_permitido = 5000;
						$numero_mismo_invitado_mes = "3000";
						$cumplimiento_obligatorio_limite = "S";

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido_accion || $cumplimiento_obligatorio_limite == "N" ) {



							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {

									//Verifico que el invitado no este invitado mas de una vez el mismo dia
									$sql_invitacion_dia = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "' and IDClub = '".$IDClub."'" );
									$numero_invitaciones_dia = $dbo->rows( $sql_invitacion_dia );

									if ( ( int )$numero_invitaciones_dia <= 0 ) {


										//Lo creo como invitado
										$id_invitado_creado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '".$IDClub."'" );
										if((int)$id_invitado_creado<=0){
											$sql_invitado = $dbo->query( "INSERT INTO Invitado (IDClub,NumeroDocumento,Nombre) Values ('" . $IDClub . "', '" . $NumeroDocumento . "', '" . $Nombre . "','WebService',NOW())" );
										}


										$sql_seccion_not = $dbo->query( "Insert Into SocioInvitado (IDClub, IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', '".$IDUsuario."',NOW())" );
										$id_solicitud = $dbo->lastID();

										///Guardo el invitado en la base general de invitados , para guardar la demas informacion
										$IDInvitadoGral=$dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub='" . $IDClub . "'" );
										if((int)$IDInvitadoGral<=0){
											$inserta_invitado = "INSERT INTO Invitado (IDClub,NumeroDocumento, Nombre, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
																			 VALUES('" . $IDClub . "', '" . trim( $NumeroDocumento ) . "','" . strtoupper($Nombre) . "','1','Socio . ".$IDSocio."',NOW())";
											$dbo->query( $inserta_invitado );
											$id_nvo_invitado = $dbo->lastID();
											//Actualizo el dato de la invitacion con el id generado
											$actualiza_inv="UPDATE SocioInvitado SET IDInvitado = '".$id_nvo_invitado."'WHERE IDSocioInvitado = '".$id_solicitud."'";
											$dbo->query( $actualiza_inv );
										}

										//Guardo los datos de los campos
										$datos_formulario= json_decode($ValoresFormulario, true);
										if (count($datos_formulario)>0):
											foreach($datos_formulario as $detalle_datos):
												$sql_datos_form = $dbo->query("Insert Into InvitadosOtrosDatos (IDInvitacion, IDCampoFormularioInvitado, Valor) Values ('". $id_solicitud ."','". $detalle_datos["IDCampoFormularioInvitado"]."','".$detalle_datos["Valor"]."')");
												$OtrosDatosFormulario .= " " . $detalle_datos["Valor"];

												if (filter_var(trim($detalle_datos["Valor"]), FILTER_VALIDATE_EMAIL)) {
															$parametros_codigo_qr=$NumeroDocumento;
															SIMUtil::enviar_codigo_qr_invitado( $id_solicitud, $parametros_codigo_qr, "Invitado", trim($detalle_datos["Valor"]) );
												}

											endforeach;
										endif;

										$respuesta[ "message" ] = "Guardado";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = NULL;

										//envio notificacion
										SIMUtil::notificar_nuevo_invitado( $IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso, $id_solicitud );


									} else {
										$respuesta[ "message" ] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
									}
								} else {
									$respuesta[ "message" ] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}
							} else {
								$respuesta[ "message" ] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
						} else {
							$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia.";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
						}
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "14. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function verifica_bloqueo_invitado( $NumeroDocumento, $IDClub = "" ) {
		$dbo = & SIMDB::get();
		$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub='" . $IDClub . "'" );
		$sql_observacion_bloqueo = "Select * From ObservacionInvitado Where IDInvitado = '" . $id_invitado . "' and FechaInicioBloqueo <= CURDATE() AND FechaFinBloqueo >= CURDATE() Order by IDObservacionInvitado Desc";
		$result_observacion_bloqueo = $dbo->query( $sql_observacion_bloqueo );
		$total_bloqueo = $dbo->rows( $result_observacion_bloqueo );
		if ( ( int )$total_bloqueo > 0 )
			$bloqueo = "S";
		else
			$bloqueo = "N";

		return $bloqueo;

	}



	function set_autorizacion_contratista( $IDClub, $IDSocio, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa, $Admin = "", $HoraInicio = "", $HoraSalida = "", $Observaciones = "", $IDUsuario = "", $Telefono = "", $FechaNacimiento = "", $TipoSangre = "", $Predio = "", $ObservacionSocio = "",$ValoresFormulario="" ) {
		$dbo = & SIMDB::get();


		$bloque_administrativo = self::verifica_bloqueo_invitado( $NumeroDocumento, $IDClub );
		if ( $bloque_administrativo == "S" ):
			$respuesta[ "message" ] = "Lo sentimos el contratista tiene un bloqueo por parte del club, no es posible realizar la autorizacion";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;


		if ( !empty( $FechaIngreso ) && !empty( $FechaSalida ) && !empty( $TipoAutorizacion ) && !empty( $TipoDocumento ) && !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $Apellido ) ) {

			$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
			$NumeroDocumento = str_replace( ",", "", $NumeroDocumento );

			$hoy = date( "Y-m-d" );
			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) && strtotime( $FechaSalida ) >= strtotime( $FechaIngreso ) ) {


				if ( !empty( $IDSocio ) ) {

					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'" );

					if ( ( int )$numero_invitados_dia_permitido > 0 ) {

						//Consulto cuantas veces la persona ha sido invitada en el mes
						$mes_invitacion = substr( $FechaIngreso, 5, 2 );
						$year_invitacion = substr( $FechaIngreso, 0, 4 );
						$dia_invitacion = substr( $FechaIngreso, 8, 2 );

						//verifico si el invitado ya esta creado

						$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . trim( $NumeroDocumento ) . "'" );

						//Si el invitado no existe en la tabla maestra lo creo
						if ( empty( $id_invitado ) || ( int )$id_invitado == 0 ):

							//Para MY el estado debe ser bloqueado para que puedan completar informacion
							if($IDClub==9)
								$IDEstadoInvitado = 3;
							else
								$IDEstadoInvitado = 1;


							$inserta_invitado = "INSERT INTO Invitado (IDClub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, ObservacionGeneral, Telefono, FechaNacimiento, TipoSangre, Predio, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
															 VALUES('" . $IDClub . "', '" . $TipoDocumento . "','" . trim( $NumeroDocumento ) . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $Observaciones . "','" . $Telefono . "','" . $FechaNacimiento . "','" . $TipoSangre . "','" . $Predio . "','".$IDEstadoInvitado."','App',NOW())";
						$dbo->query( $inserta_invitado );
						$id_invitado = $dbo->lastID();
						else :
							//Actualizo las observaciones y predio unicamente
							if(!empty($Observaciones))
								$CampoObservacion = " ,ObservacionGeneral = '" . $Observaciones . "'";

								if(!empty($Observaciones))
									$CampoObservacion = " ,ObservacionGeneral = '" . $Observaciones . "'";

								if(!empty($FechaNacimiento) && $FechaNacimiento!="0000-00-00")
									$CampoObservacion .= " ,FechaNacimiento = '" . $FechaNacimiento . "'";

								if(!empty($TipoSangre) )
									$CampoObservacion .= " , TipoSangre = '" . $TipoSangre . "'";

								if(!empty($Telefono) )
									$CampoObservacion .= " , Telefono = '" . $Telefono . "'";

								if(!empty($Predio) )
									$CampoObservacion .= " , Predio = '" . $Predio . "'";

								if(!empty($Email) )
									$CampoObservacion .= " , Email = '" . $Email . "'";

							$sql_edit_invitado = "UPDATE Invitado Set Nombre = '" . strtoupper($Nombre) . "', Apellido  = '" . strtoupper($Apellido) . "'
							 											".$CampoObservacion."  Where IDInvitado = '" . $id_invitado . "'";
						$dbo->query( $sql_edit_invitado );
						endif;

						//Si es cabeza de familia guardo el id del Socio
						if ( $CabezaInvitacion == "S" ):
							$IDPadre = $id_invitado;
						endif;

						$sql_numero_invitacion = $dbo->query( "Select IDSocioAutorizacion From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );
						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select IDSocioAutorizacion From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );
						//Consulto cuantas personas ha invitado el socio en el dia
						$sql_invitados_dia = $dbo->query( "Select IDSocioAutorizacion From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );

						$numero_invitados_mes_permitido = 50000;
						$numero_mismo_invitado_mes = "30000";
						$cumplimiento_obligatorio_limite = "S";




						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N" ) {
							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {
									//Verifico que el invitado no este invitado mas de una vez el mismo dia
									//echo "Select * From SocioAutorizacion Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'";
									//exit;

									//$sql_invitacion_dia = $dbo->query("Select * From SocioAutorizacion Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'");
									//$numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);

									// lo dejo en 0 para que pueda invitar mas de una vez la misma persona ya que un empleado puede entrara a varias predios en MY
									$numero_invitaciones_dia = 0;

									if ( ( int )$numero_invitaciones_dia <= 0 ) {

										//verifico si el vehiculo ya esta creado
										if ( !empty( $Placa ) ):
											$id_vehiculo = $dbo->getFields( "Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'" );
										//Si el vehiculo no existe en la tabla maestra lo creo
										if ( empty( $id_vehiculo ) || ( int )$id_vehiculo == 0 ):
											$inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																					 Values('" . $id_invitado . "','" . $Placa . "')";
										$dbo->query( $inserta_vehiculo );
										$id_vehiculo = $dbo->lastID();
										endif;
										endif;


										//genero el codigo de autorizacion
										$CodigoAutorizacion = SIMUtil::genera_codigo_autorizacion( "C" );
										$CodigoAutorizacion=trim($TipoSangre);

										if ( !empty( $IDUsuario ) )
											$creado_por = $IDUsuario;
										else
											$creado_por = "Socio";

										//Inserto invitacion
										$sql_inserta_inv = $dbo->query(
											"Insert Into SocioAutorizacion (IDClub, IDSocio, IDInvitado, IDVehiculo, TipoAutorizacion, FechaInicio, HoraInicio, FechaFin, HoraFin, CodigoAutorizacion, Predio, ObservacionSocio, UsuarioTrCr, FechaTrCr)
											Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $id_vehiculo . "', '" . $TipoAutorizacion . "', '" . $FechaIngreso . "',
											'" . $HoraInicio . "','" . $FechaSalida . "', '" . $HoraSalida . "', '" . $CodigoAutorizacion . "','" . $Predio . "', '" . $ObservacionSocio . "','" . $creado_por . "',NOW())" );
										$id_invitado_inserta = $dbo->lastID();

										//Guardo los datos de los campos
										$datos_formulario= json_decode($ValoresFormulario, true);
										if (count($datos_formulario)>0):
											foreach($datos_formulario as $detalle_datos):
												$sql_datos_form = $dbo->query("Insert Into SocioAutorizacionOtrosDatos (IDSocioAutorizacion, IDCampoFormularioContratista, Valor) Values ('". $id_invitado_inserta ."','". $detalle_datos["IDCampoFormularioContratista"]."','".$detalle_datos["Valor"]."')");
												$OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
											endforeach;
										endif;



										//Guardo el padre de la invitacion
										if ( !empty( $id_invitado_inserta ) ):
											//Generar Codigo QR
											//$parametros_codigo_qr = URLROOT . "plataform/invitadosespeciales.php?IDInvitacion=".$id_invitado_inserta."&Placa=".$Placa;
											$parametros_codigo_qr = $NumeroDocumento . "\r\n";
										if ( empty( $Admin ) && $IDClub != 34 ):
											SIMUtil::enviar_codigo_qr( $id_invitado_inserta, $parametros_codigo_qr, "Contratista" );
										endif;
										endif;

										$respuesta[ "message" ] = "guardado.";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = NULL;


									} else {
										$respuesta[ "message" ] = "Lo sentimos " . $Nombre . " " . $Apellido . " ya tiene una invitacion para el dia seleccionado.";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
									}
								} else {
									$respuesta[ "message" ] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}
							} else {
								$respuesta[ "message" ] = "Lo sentimos, " . $Nombre . " " . $Apellido . "  ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
						} else {
							$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
						}

					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas o la fecha inicio no puede ser menor a la fecha fin " .  "Inicio " . $FechaIngreso ."FIN:". $FechaSalida ;
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "Inv. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_contratista_update_autorizacion( $IDClub, $IDSocio, $IDInvitacion, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa, $Admin = "", $HoraInicio = "", $HoraSalida = "", $Observaciones = "", $IDUsuario = "", $Telefono = "", $FechaNacimiento = "", $TipoSangre = "", $Predio = "", $ObservacionSocio,$ValoresFormulario, $CodigoAutorizacion ) {
		$dbo = & SIMDB::get();


		$bloque_administrativo = self::verifica_bloqueo_invitado( $NumeroDocumento, $IDClub );
		if ( $bloque_administrativo == "S" ):
			$respuesta[ "message" ] = "Lo sentimos el contratista tiene un bloqueo por parte del club, no es posible realizar la autorizacion";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		endif;


		if ( !empty( $IDInvitacion ) && !empty( $FechaIngreso ) && !empty( $FechaSalida ) && !empty( $TipoAutorizacion ) && !empty( $TipoDocumento ) && !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $Apellido ) ) {

			$hoy = date( "Y-m-d" );
			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) && strtotime( $FechaSalida ) >= strtotime( $FechaIngreso ) ) {

				$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
				$NumeroDocumento = trim( str_replace( ",", "", $NumeroDocumento ) );

				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {

					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'" );

					if ( ( int )$numero_invitados_dia_permitido > 0 ) {

						//Consulto cuantas veces la persona ha sido invitada en el mes
						$mes_invitacion = substr( $FechaIngreso, 5, 2 );
						$year_invitacion = substr( $FechaIngreso, 0, 4 );
						$dia_invitacion = substr( $FechaIngreso, 8, 2 );

						//verifico si el invitado ya esta creado
						$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "'" );
						//Si el invitado no existe en la tabla maestra lo creo
						if ( empty( $id_invitado ) || ( int )$id_invitado == 0 ):
							$inserta_invitado = "Insert Into Invitado (IDClub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, Telefono, FechaNacimiento, TipoSangre, Predio, UsuarioTrCr, FechaTrCr)
															 Values('" . $IDClub . "','" . $IDTipoDocumento . "','" . ( int )$NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $Telefono . "','" . $FechaNacimiento . "'
															 ,'" . $TipoSangre . "','" . $Predio . "','App',NOW())";
						$dbo->query( $inserta_invitado );
						$id_invitado = $dbo->lastID();
						else :

							$CampoObservacion="";

							if(!empty($Observaciones))
								$CampoObservacion = " ,ObservacionGeneral = '" . $Observaciones . "'";

							if(!empty($FechaNacimiento) && $FechaNacimiento!="0000-00-00")
								$CampoObservacion .= " ,FechaNacimiento = '" . $FechaNacimiento . "'";

							if(!empty($TipoSangre) )
								$CampoObservacion .= " , TipoSangre = '" . $TipoSangre . "'";

							if(!empty($Telefono) )
								$CampoObservacion .= " , Telefono = '" . $Telefono . "'";

							if(!empty($Predio) )
								$CampoObservacion .= " , Predio = '" . $Predio . "'";

							if(!empty($Email) )
								$CampoObservacion .= " , Email = '" . $Email . "'";



							$sql_invitado_update = $dbo->query( "UPDATE Invitado
														   SET IDTipoDocumento = '" . $TipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "',
														   Apellido = '" . strtoupper($Apellido) . "' ".$CampoObservacion."
														   Where IDInvitado = '" . $id_invitado . "'" );
						endif;



						$sql_numero_invitacion = $dbo->query( "Select * From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );
						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select * From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );
						//Consulto cuantas personas ha invitado el socio en el dia
						$sql_invitados_dia = $dbo->query( "Select * From SocioAutorizacion Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );

						$numero_invitados_mes_permitido = 50000;
						$numero_mismo_invitado_mes = "30000";
						$cumplimiento_obligatorio_limite = "S";

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N" ) {
							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {
									//Verifico que el invitado no este invitado mas de una vez el mismo dia

									$sql_invitacion_dia = $dbo->query( "Select * From SocioAutorizacion Where IDInvitado = '" . $id_invitado . "' and FechaInicio = '" . $FechaIngreso . "'" );
									$numero_invitaciones_dia = $dbo->rows( $sql_invitacion_dia );
									if ( ( int )$numero_invitaciones_dia <= 100 ) {

										//verifico si el vehiculo ya esta creado
										if ( !empty( $Placa ) ):
											$id_vehiculo = $dbo->getFields( "Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'" );
										//Si el vehiculo no existe en la tabla maestra lo creo
										if ( empty( $id_vehiculo ) || ( int )$id_vehiculo == 0 ):
											$inserta_vehiculo = "INSERT INTO Vehiculo (IDInvitado, Placa)
																					 Values('" . $id_invitado . "','" . $Placa . "')";
										$dbo->query( $inserta_vehiculo );
										$id_vehiculo = $dbo->lastID();
										endif;
										endif;

										if ( !empty( $IDUsuario ) )
											$creado_por = $IDUsuario;
										else
											$creado_por = "Socio";


										//Actualizo invitacion
										$sql_inserta_inv = $dbo->query( "UPDATE SocioAutorizacion set  IDVehiculo = '" . $id_vehiculo . "', TipoAutorizacion = '" . $TipoAutorizacion . "', FechaInicio = '" . $FechaIngreso . "', FechaFin = '" . $FechaSalida . "', Predio = '" . $Predio . "', ObservacionSocio = '" . $ObservacionSocio . "', CodigoAutorizacion = '".$CodigoAutorizacion."', UsuarioTrEd = '" . $creado_por . "', FechaTrEd = NOW() Where IDSocioAutorizacion = '" . $IDInvitacion . "'" );
										$respuesta[ "message" ] = "actualizado";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = NULL;


									} else {
										$respuesta[ "message" ] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
									}
								} else {
									$respuesta[ "message" ] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}
							} else {
								$respuesta[ "message" ] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
						} else {
							$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
						}

					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "SA. Atencion faltan parametros.";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function set_invitadoV1( $IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso ) {
		$dbo = & SIMDB::get();



		if ( !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $FechaIngreso ) ) {

			$hoy = date( "Y-m-d" );
			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) && strtotime( $FechaSalida ) >= strtotime( $FechaIngreso ) ) {

				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {

					// Consulto las reglas que aplica al socio para invitaciones
					$array_datos_regla = SIMUtil::consulta_regla_invitacion( $IDSocio, $IDClub );

					if ( ( int )$array_datos_regla[ "IDRegla" ] > 0 ) {




						//Consulto cuantas veces la persona ha sido invitada en el mes
						$mes_invitacion = substr( $FechaIngreso, 5, 2 );
						$year_invitacion = substr( $FechaIngreso, 0, 4 );
						$dia_invitacion = substr( $FechaIngreso, 8, 2 );
						$sql_numero_invitacion = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );
						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );
						//Consulto cuantas personas ha invitado el socio en el dia
						$sql_invitados_dia = $dbo->query( "Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );



						//$numero_invitados_mes_permitido = $dbo->getFields( "Club" , "MaximoInvitadoSocio" , "IDClub = '".$IDClub."'" );
						//$numero_mismo_invitado_mes = $dbo->getFields( "Club" , "MaximoRepeticionInvitado" , "IDClub = '".$IDClub."'" );

						$numero_invitados_mes_permitido = $array_datos_regla[ "MaximoInvitadoSocio" ];
						$numero_mismo_invitado_mes = $array_datos_regla[ "MaximoRepeticionInvitado" ];
						$numero_invitados_dia_permitido = $array_datos_regla[ "MaximoInvitadoDia" ];
						$cumplimiento_obligatorio_limite = $array_datos_regla[ "CumplimientoInvitados" ];

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );




						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N" ) {

							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {

									//Verifico que el invitado no este invitado mas de una vez el mismo dia
									$sql_invitacion_dia = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "'" );
									$numero_invitaciones_dia = $dbo->rows( $sql_invitacion_dia );
									// lo dejo en 0 para que pueda invitar mas de una vez la misma persona ya que un empleado puede entrara a varias predios en MY
									$numero_invitaciones_dia = 0;

									if ( ( int )$numero_invitaciones_dia <= 0 ) {
										$sql_seccion_not = $dbo->query( "Insert Into SocioInvitado (IDClub, IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', 'WebService',NOW())" );
										$respuesta[ "message" ] = "Guardado";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = NULL;
									} else {
										$respuesta[ "message" ] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
									}
								} else {
									$respuesta[ "message" ] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}
							} else {
								$respuesta[ "message" ] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
						} else {
							$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
						}
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "15. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function set_invitado_update( $IDClub, $IDSocio, $IDInvitado, $NumeroDocumento, $Nombre, $FechaIngreso ) {
		$dbo = & SIMDB::get();



		if ( !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $FechaIngreso ) ) {

			$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
			$NumeroDocumento = trim( str_replace( ",", "", $NumeroDocumento ) );

			$hoy = date( "Y-m-d" );

			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) ) {

				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {


					// CAMBIO Sep 12 2016: Se consulta las invitaciones que puede hacer el socio Titular
					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido_socio = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'" );
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );


					if ( !empty( $datos_socio[ "AccionPadre" ] ) ): // es un beneficiario
						$id_socio_titular = $dbo->getFields( "Socio", "IDSocio", "Accion = '" . $datos_socio[ "AccionPadre" ] . "'" );
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $id_socio . "'" );


					if ( empty( $numero_invitados_dia_permitido ) || $numero_invitados_dia_permitido == 0 )
						$numero_invitados_dia_permitido = $numero_invitados_dia_permitido_socio;


					//Consulto los id socio de mi vinculo
					$sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio[ "AccionPadre" ] . "' or Accion = '" . $datos_socio[ "AccionPadre" ] . "' and IDClub = '" . $IDClub . "'";
					$qry_socio_vinculo = $dbo->query( $sql_socio_vinculo );
					while ( $row_socio_vinculo = $dbo->fetchArray( $qry_socio_vinculo ) ):
						$array_socio_vinculo[] = $row_socio_vinculo[ "IDSocio" ];
					endwhile;
					if ( count( $array_socio_vinculo ) > 0 ):
						$id_otro_socio = implode( ",", $array_socio_vinculo );
					$condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
					endif;
					else :
						$id_socio_titular = $IDSocio;
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroInvitados", "IDSocio = '" . $IDSocio . "'" );
					//Consulto los id socio de mi vinculo
					$sql_socio_vinculo = "Select IDSocio From Socio Where AccionPadre = '" . $datos_socio[ "Accion" ] . "' and IDClub = '" . $IDClub . "'";
					$qry_socio_vinculo = $dbo->query( $sql_socio_vinculo );
					while ( $row_socio_vinculo = $dbo->fetchArray( $qry_socio_vinculo ) ):
						$array_socio_vinculo[] = $row_socio_vinculo[ "IDSocio" ];
					endwhile;
					if ( count( $array_socio_vinculo ) > 0 ):
						$id_otro_socio = implode( ",", $array_socio_vinculo );
					$condicion_otro_socio = " or IDSocio in (" . $id_otro_socio . ")";
					endif;
					endif;


					// Consulto si el dia de la reserva esta asignado como fecha especial para no tomar en cuenta invitaciones
					$id_fecha_Especial = $dbo->getFields( "FechaEspecialInvitado", "IDFechaEspecialInvitado", "Fecha = '" . $FechaIngreso . "' and IDClub = '" . $IDClub . "'" );
					if ( !empty( $id_fecha_Especial ) ):
						// Dejo los parametros ilimitados
						$numero_invitados_dia_permitido = 100;
					$numero_invitados_dia_permitido_socio = 100;
					endif;


					//Consulto cuantas veces la persona ha sido invitada en el mes
					$mes_invitacion = substr( $FechaIngreso, 5, 2 );
					$year_invitacion = substr( $FechaIngreso, 0, 4 );
					$dia_invitacion = substr( $FechaIngreso, 8, 2 );


					//Consulto cuantos invitadoa ha hecho para el dia
					$sql_invitados_dia_soc = $dbo->query( "Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "') and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
					$numero_invitaciones_soc = $dbo->rows( $sql_invitados_dia_soc );
					if ( ( $numero_invitaciones_soc ) >= $numero_invitados_dia_permitido_socio ):
						$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia permitido";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					endif;





					if ( ( int )$numero_invitados_dia_permitido > 0 && $numero_invitados_dia_permitido_socio > 0 ) {



						$sql_numero_invitacion = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );


						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select * From SocioInvitado Where IDSocio = '" . $IDSocio . "' and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "' and Estado = 'I'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );

						//Cambio Sep 12: Se suma el total de invitados por accion padre
						//Consulto cuantas personas ha invitado el socio en el dia
						//$sql_invitados_dia = $dbo->query("Select * From SocioInvitado Where IDSocio = '".$IDSocio."' and YEAR(FechaIngreso) = '".$year_invitacion."' and MONTH(FechaIngreso) = '".$mes_invitacion."' and DAY(FechaIngreso) = '".$dia_invitacion."' and IDClub = '".$IDClub."' and Estado = 'I'");
						//$numero_invitados_dia = $dbo->rows($sql_invitados_dia);
						$sql_invitados_dia = $dbo->query( "Select * From SocioInvitado Where (IDSocio = '" . $IDSocio . "' " . $condicion_otro_socio . ") and YEAR(FechaIngreso) = '" . $year_invitacion . "' and MONTH(FechaIngreso) = '" . $mes_invitacion . "' and DAY(FechaIngreso) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );

						$numero_invitados_dia_permitido_accion = 10;
						$numero_invitados_mes_permitido = 5000;
						$numero_mismo_invitado_mes = "3000";
						$cumplimiento_obligatorio_limite = "S";

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido_accion || $cumplimiento_obligatorio_limite == "N" ) {



							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {

									//Verifico que el invitado no este invitado mas de una vez el mismo dia
									$sql_invitacion_dia = $dbo->query( "Select * From SocioInvitado Where NumeroDocumento = '" . $NumeroDocumento . "' and FechaIngreso = '" . $FechaIngreso . "'" );
									$numero_invitaciones_dia = $dbo->rows( $sql_invitacion_dia );

									if ( ( int )$numero_invitaciones_dia <= 0 ) {
										$sql_seccion_not = $dbo->query( "Insert Into SocioInvitado (IDClub, IDSocio, NumeroDocumento, Nombre, FechaIngreso, UsuarioTrCr, FechaTrCr) Values ('" . $IDClub . "','" . $IDSocio . "', '" . $NumeroDocumento . "', '" . $Nombre . "', '" . $FechaIngreso . "', 'WebService',NOW())" );
										$respuesta[ "message" ] = "Guardado";
										$respuesta[ "success" ] = true;
										$respuesta[ "response" ] = NULL;

										//envio notificacion
										SIMUtil::notificar_nuevo_invitado( $IDClub, $IDSocio, $NumeroDocumento, $Nombre, $FechaIngreso );


									} else {
										$respuesta[ "message" ] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
									}
								} else {
									$respuesta[ "message" ] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
									$respuesta[ "success" ] = false;
									$respuesta[ "response" ] = NULL;
								}
							} else {
								$respuesta[ "message" ] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
							}
						} else {
							$respuesta[ "message" ] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia.";
							$respuesta[ "success" ] = false;
							$respuesta[ "response" ] = NULL;
						}
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "14. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function set_contratista_update( $IDClub, $IDSocio, $TipoAutorizacion, $FechaIngreso, $FechaSalida, $TipoDocumento, $NumeroDocumento, $Nombre, $Apellido, $Email, $Placa ) {
		$dbo = & SIMDB::get();



		if ( !empty( $NumeroDocumento ) && !empty( $Nombre ) && !empty( $Apellido ) ) {

			$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
			$NumeroDocumento = trim( str_replace( ",", "", $NumeroDocumento ) );

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {


				$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento."'" );
				if ( !empty( $id_invitado ) ) {


					if(!empty($Email) )
						$CampoObservacion .= " , Email = '" . $Email . "'";

					$sql_invitado_update = $dbo->query( "Update Invitado
														   Set IDTipoDocumento = '" . $TipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "',
														   Apellido = '" . strtoupper($Apellido) . "' ".$CampoObservacion."
														   Where IDInvitado = '" . $id_invitado . "'" );
					//verifico si el vehiculo ya esta creado
					if ( !empty( $Placa ) ):
						$id_vehiculo = $dbo->getFields( "Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'" );
					//Si el vehiculo no existe en la tabla maestra lo creo
					if ( empty( $id_vehiculo ) || ( int )$id_vehiculo == 0 ):
						$inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
													 Values('" . $id_invitado . "','" . $Placa . "')";
					$dbo->query( $inserta_vehiculo );
					$id_vehiculo = $dbo->lastID();
					endif;
					endif;

					$respuesta[ "message" ] = "Guardado";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = NULL;
				} else {
					$respuesta[ "message" ] = "El contratista no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "16. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function cancela_invitacion( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$datos_tipo_reserva = $dbo->fetchAll( "SocioInvitado", " IDSocioInvitado = '" . $IDInvitacion . "' ", "array" );
				if ( !empty( $datos_tipo_reserva[ "IDSocioInvitado" ] ) ) {
					if ( $datos_tipo_reserva[ "Estado" ] != "I" ) {
						$sql_cancela_invitacion = $dbo->query( "delete  From SocioInvitado Where IDSocioInvitado = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1" );
						$respuesta[ "message" ] = "invitacion cancelada";
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = NULL;
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no se puede cancelar la invitacion, el invitado ya ingreso";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}
				} else {
					$respuesta[ "message" ] = "Lo sentimos, la invitacion no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "17. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function cancela_autorizacion_invitado( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$datos_tipo_reserva = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
				if ( !empty( $datos_tipo_reserva[ "IDSocioInvitadoEspecial" ] ) ) {
					if ( $datos_tipo_reserva[ "Ingreso" ] != "S" ) {
						//$mensajecancelacion= "delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '".$IDInvitacion."' and IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."'  Limit 1";
						$sql_cancela_invitacion = $dbo->query( "delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1" );
						// Si es cabeza de grupo borro las invitaciones asociadas al cabeza de grupo
						if ( $datos_tipo_reserva[ "CabezaInvitacion" ] == "S" ):
							//$sql_cancela_invitacion_hijos = $dbo->query("delete From SocioInvitadoEspecial Where IDPadre = '".$datos_tipo_reserva["IDInvitado"]."' and IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and FechaInicio = '".$datos_tipo_reserva["FechaInicio"]."' and FechaFin = '".$datos_tipo_reserva["FechaFin"]."'");
							endif;

						$respuesta[ "message" ] = "invitacion cancelada.";
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = NULL;
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no se puede cancelar la invitacion, el invitado ya ingreso";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}
				} else {
					$respuesta[ "message" ] = "Lo sentimos, la invitacion no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "17. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function valida_segunda_clave($IDClub,$IDSocio,$Clave){
		$dbo =& SIMDB::get();
			if( !empty( $IDSocio ) ){


					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' and SegundaClave = '".sha1($Clave )."' and (IDEstadoSocio <> 2 and IDEstadoSocio <> 3 )", "array" );
					if(!empty($datos_socio["IDSocio"]) && $datos_socio["TipoSocio"]<>"Estudiante" ){
										$response["IDClub"] = $datos_socio["IDClub"];
										$response["IDSocio"] = $datos_socio["IDSocio"];
										$response["Socio"] = utf8_encode( $datos_socio["Nombre"] . " " . $datos_socio["Apellido"] );
										$respuesta["message"] = "ok";
										$respuesta["success"] = true;
										$respuesta["response"] = $response;
					}
					else{
							$respuesta["message"] = "Segunda Clave Incorrecta";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
					}
				}
				else{
					$respuesta["message"] = "25. Atencion faltan parametros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}


				return $respuesta;


	}

	function set_presalida( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$datos_tipo_reserva = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
				if ( !empty( $datos_tipo_reserva[ "IDSocioInvitadoEspecial" ] ) ) {

					$sql_presalida = $dbo->query( "Update  SocioInvitadoEspecial Set IDSocioPresalida = '" . $IDSocio . "', Presalida = 'S', FehaPresalida = NOW() Where IDSocioInvitadoEspecial = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1" );
					$respuesta[ "message" ] = "Presalida realizada con exito";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = "";
				} else {
					$respuesta[ "message" ] = "Lo sentimos, la invitacion no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "17. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function set_presalida_contratista( $IDClub, $IDSocio, $IDInvitacion ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDSocio ) && !empty( $IDInvitacion ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$datos_tipo_reserva = $dbo->fetchAll( "SocioAutorizacion", " IDSocioAutorizacion = '" . $IDInvitacion . "' ", "array" );
				if ( !empty( $datos_tipo_reserva[ "IDSocioAutorizacion" ] ) ) {

					$sql_presalida = $dbo->query( "Update  SocioAutorizacion Set IDSocioPresalida = '" . $IDSocio . "', Presalida = 'S', FehaPresalida = NOW() Where IDSocioAutorizacion = '" . $IDInvitacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1" );
					$respuesta[ "message" ] = "Presalida realizada con exito";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = "";
				} else {
					$respuesta[ "message" ] = "Lo sentimos, la invitacion no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "17. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function cancela_autorizacion_contratista( $IDClub, $IDSocio, $IDAutorizacion ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDSocio ) && !empty( $IDAutorizacion ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				$datos_tipo_reserva = $dbo->fetchAll( "SocioAutorizacion", " IDSocioAutorizacion = '" . $IDAutorizacion . "' ", "array" );
				if ( !empty( $datos_tipo_reserva[ "IDSocioAutorizacion" ] ) ) {
					if ( $datos_tipo_reserva[ "Ingreso" ] != "S" ) {
						$sql_cancela_invitacion = $dbo->query( "delete  From SocioAutorizacion Where IDSocioAutorizacion = '" . $IDAutorizacion . "' and IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'  Limit 1" );
						$respuesta[ "message" ] = "autorizacion cancelada";
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = NULL;
					} else {
						$respuesta[ "message" ] = "Lo sentimos, no se puede cancelar la autorizacion, el invitado ya ingreso";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}
				} else {
					$respuesta[ "message" ] = "Lo sentimos, la autorizacion no existe";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "17. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function valida_regla_invitacion_acceso($IDClub,$IDSocio, $IDInvitado, $FechaIngreso){
		$dbo = & SIMDB::get();
		$mes_invitacion = substr( $FechaIngreso, 5, 2 );
		$year_invitacion = substr( $FechaIngreso, 0, 4 );
		$dia_invitacion = substr( $FechaIngreso, 8, 2 );
		$resultado="ok";
		if($IDClub==70){
			$datos_socio = $dbo->fetchAll( "Socio", " IDClub = '" . $IDClub . "' and IDSocio = '".$IDSocio."' ", "array" );
			//Consulto regla invitacion por categoria de socio
			//$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' ", "array" );

			$sql_regla = "Select * From Regla Where IDClub = '" . $IDClub . "' and (IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' or IDCategoria = '".$datos_socio["IDCategoria"]."') ";
			$qry_regla = $dbo->query($sql_regla);
			$datos_regla = $dbo->fetchArray($qry_regla);


			if (empty($datos_regla["IDRegla"])):
				//Consulto regla invitacion por parentesco de socio
				//$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDParentesco like '%".$datos_socio["IDParentesco"]."|%' ", "array" );
			endif;
			if($datos_regla["IDRegla"]>0){

					if($datos_regla["MaximoInvitadoDia"]>=0){
						//Consulto que el socio no supere el maximo de invitaciones que tiene en el dia
						$sql_inv="SELECT count(IDSocioInvitadoEspecial) as TotalDia FROM SocioInvitadoEspecial WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and FechaInicio = '".$FechaIngreso."'";
						$result_inv=$dbo->query($sql_inv);
						$row_inv_dia=$dbo->fetchArray($result_inv);
						if($row_inv_dia["TotalDia"]>$datos_regla["MaximoInvitadoDia"]){
							$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoDia"] ." invitaciones permitidas por dia";
						}

					}
				if($datos_regla["MaximoRepeticionInvitado"]>=0){
						//Consulto cuantas veces el invitado ha sido invitado por el socio en el mes
						$sql_inv="SELECT count(IDSocioInvitadoEspecial) as TotalMesInvitado FROM SocioInvitadoEspecial WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and  MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDInvitado = '".$IDInvitado."'";
						$result_inv=$dbo->query($sql_inv);
						$row_inv_dia=$dbo->fetchArray($result_inv);
						if($row_inv_dia["TotalMesInvitado"]>=$datos_regla["MaximoRepeticionInvitado"]){
							$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoRepeticionInvitado"] ." invitaciones permitidas por mes para el mismo invitado";
						}
					}
				if($datos_regla["MaximoInvitadoSocio"]>=0){
							//Consulto cuantas invitaciones el socio ha realizado al mes
							$sql_inv="SELECT count(IDSocioInvitadoEspecial) as TotalInvitacionesMes FROM SocioInvitadoEspecial WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and  MONTH(FechaInicio) = '" . $mes_invitacion . "'";
							$result_inv=$dbo->query($sql_inv);
							$row_inv_dia=$dbo->fetchArray($result_inv);
							if($row_inv_dia["TotalInvitacionesMes"]>$datos_regla["MaximoInvitadoSocio"]){
								$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoSocio"] ." invitaciones permitidas por mes";
							}
					}
			}
		}
		else{
			$resultado="ok";
		}

		return $resultado;

	}

	function valida_regla_invitacion_v1($IDClub,$IDSocio, $NumeroDocumento, $FechaIngreso){
		$dbo = & SIMDB::get();
		$mes_invitacion = substr( $FechaIngreso, 5, 2 );
		$year_invitacion = substr( $FechaIngreso, 0, 4 );
		$dia_invitacion = substr( $FechaIngreso, 8, 2 );
		$resultado="ok";
		if($IDClub==70){
			$datos_socio = $dbo->fetchAll( "Socio", " IDClub = '" . $IDClub . "' and IDSocio = '".$IDSocio."' ", "array" );
			//Consulto regla invitacion por categoria de socio
			//$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' ", "array" );

			$sql_regla = "Select * From Regla Where IDClub = '" . $IDClub . "' and (IDCategoria like '%|".$datos_socio["IDCategoria"]."|%' or IDCategoria = '".$datos_socio["IDCategoria"]."') ";
			$qry_regla = $dbo->query($sql_regla);
			$datos_regla = $dbo->fetchArray($qry_regla);


			if (empty($datos_regla["IDRegla"])):
				//Consulto regla invitacion por parentesco de socio
				//$datos_regla = $dbo->fetchAll( "Regla", " IDClub = '" . $IDClub . "' and IDParentesco like '%".$datos_socio["IDParentesco"]."|%' ", "array" );
			endif;
			if($datos_regla["IDRegla"]>0){

					if($datos_regla["MaximoInvitadoDia"]>=0){
						//Consulto que el socio no supere el maximo de invitaciones que tiene en el dia
						$sql_inv="SELECT count(IDSocioInvitado) as TotalDia FROM SocioInvitado WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and FechaIngreso = '".$FechaIngreso."'";
						$result_inv=$dbo->query($sql_inv);
						$row_inv_dia=$dbo->fetchArray($result_inv);
						if($row_inv_dia["TotalDia"]>$datos_regla["MaximoInvitadoDia"]){
							$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoDia"] ." invitaciones permitidas por dia";
						}

					}
				if($datos_regla["MaximoRepeticionInvitado"]>=0){
						//Consulto cuantas veces el invitado ha sido invitado por el socio en el mes
						$sql_inv="SELECT count(IDSocioInvitado) as TotalMesInvitado FROM SocioInvitado WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and  MONTH(FechaIngreso) = '" . $mes_invitacion . "' and NumeroDocumento = '".$NumeroDocumento."'";
						$result_inv=$dbo->query($sql_inv);
						$row_inv_dia=$dbo->fetchArray($result_inv);
						if($row_inv_dia["TotalMesInvitado"]>=$datos_regla["MaximoRepeticionInvitado"]){
							$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoRepeticionInvitado"] ." invitaciones permitidas por mes para el mismo invitado";
						}
					}
				if($datos_regla["MaximoInvitadoSocio"]>=0){
							//Consulto cuantas invitaciones el socio ha realizado al mes
							$sql_inv="SELECT count(IDSocioInvitado) as TotalInvitacionesMes FROM SocioInvitado WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' and  MONTH(FechaIngreso) = '" . $mes_invitacion . "'";
							$result_inv=$dbo->query($sql_inv);
							$row_inv_dia=$dbo->fetchArray($result_inv);
							if($row_inv_dia["TotalInvitacionesMes"]>$datos_regla["MaximoInvitadoSocio"]){
								$resultado="Lo sentimos supera el maximo de " . $datos_regla["MaximoInvitadoSocio"] ." invitaciones permitidas por mes";
							}
					}
			}
		}
		else{
			$resultado="ok";
		}

		return $resultado;

	}


	function set_autorizacion_invitado( $IDClub, $IDSocio, $FechaIngreso, $FechaSalida, $DatosInvitado, $IDUsuario="",$ValoresFormulario="",$Masivo="" ) {

		$dbo = & SIMDB::get();


		$datos_invitado = json_decode( $DatosInvitado, true );


		if ( !empty( $FechaIngreso ) && !empty( $FechaSalida ) && count( $datos_invitado ) > 0 ) {



			$hoy = date( "Y-m-d" );

			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) && strtotime( $FechaSalida ) >= strtotime( $FechaIngreso ) ) {



				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {



					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'" );

					if ( ( int )$numero_invitados_dia_permitido > 0 ) {



						//Consulto cuantas veces la persona ha sido invitada en el mes
						$mes_invitacion = substr( $FechaIngreso, 5, 2 );
						$year_invitacion = substr( $FechaIngreso, 0, 4 );
						$dia_invitacion = substr( $FechaIngreso, 8, 2 );

						//Recorro los datos de los invitados
						if ( count( $datos_invitado ) > 0 ):

							//genero el codigo de autorizacion
							$CodigoAutorizacion = SIMUtil::genera_codigo_autorizacion( "I" );


						foreach ( $datos_invitado as $detalle_datos ):
							$IDTipoDocumento = $detalle_datos[ "IDTipoDocumento" ];
						$NumeroDocumento = $detalle_datos[ "NumeroDocumento" ];
						$Nombre = $detalle_datos[ "Nombre" ];
						$Apellido = $detalle_datos[ "Apellido" ];
						$Email = $detalle_datos[ "Email" ];
						$TipoInvitado = $detalle_datos[ "TipoInvitado" ];
						$Placa = $detalle_datos[ "Placa" ];
						$CabezaInvitacion = $detalle_datos[ "CabezaInvitacion" ];
						$MenorEdad = $detalle_datos[ "MenorEdad" ];

						$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
						$NumeroDocumento = str_replace( ",", "", $NumeroDocumento );

						if ( empty( $Email ) )
							$Email = "sin mail";

						if ( empty( $Placa ) )
							$Placa = "sin placa";



						$bloque_administrativo = self::verifica_bloqueo_invitado( $NumeroDocumento, $IDClub );
						if ( $bloque_administrativo == "S" ):
							$respuesta[ "message" ] = "Lo sentimos el invitado tiene un bloqueo por parte del club, no es posible realizar la invitacion";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
						return $respuesta;
						endif;




						if ( $MenorEdad == "S" || ( empty( $IDTipoDocumento ) && empty( $NumeroDocumento ) && empty( $Email ) ) ):
							$NumeroDocumento = "MenorEdad" . $IDClub.rand( 1, 1000000000 );
						$IDTipoDocumento = 1;
						else :
							$NumeroDocumento = ( int )$NumeroDocumento;
						endif;




						//verifico si el invitado ya esta creado
						$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "'" );

						if(!empty($IDUsuario))
							$UsuarioCrea=$IDUsuario . " " . $dbo->getFields( "Usuario", "Nombre", "IDUsuario = '" . $IDUsuario . "'" );
						else
							$UsuarioCrea="Socio";

							//Para MY el estado debe ser bloqueado para que puedan completar informacion
							if($IDClub==9)
								$IDEstadoInvitado = 3;
							else
								$IDEstadoInvitado = 1;

						//Si el invitado no existe en la tabla maestra lo creo
						if ( empty( $id_invitado ) || ( int )$id_invitado == 0 ):
							$inserta_invitado = "INSERT INTO Invitado (IDCLub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, MenorEdad, IDEstadoInvitado, UsuarioTrCr, FechaTrCr)
															 Values('" . $IDClub . "', '" . $IDTipoDocumento . "','" . $NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $MenorEdad . "','".$IDEstadoInvitado."','".$UsuarioCrea."',NOW())";

						$dbo->query( $inserta_invitado );
						$id_invitado = $dbo->lastID();
						else :

							if(!empty($Email) )
								$CampoObservacion .= " , Email = '" . $Email . "'";


							// Si ya existe actualizo los datos basicos
							$sql_actualizao_datos_invitado = "UPDATE Invitado Set Nombre='".strtoupper($Nombre)."',Apellido='".strtoupper($Apellido)."' ".$CampoObservacion." Where IDInvitado = '" . $id_invitado . "'";
						$dbo->query( $sql_actualizao_datos_invitado );
						endif;

						//Si es cabeza de familia guardo el id del Socio
						if ( $CabezaInvitacion == "S" ):
							$IDPadre = $id_invitado;
						endif;



							$valida_regla=self::valida_regla_invitacion_acceso($IDClub,$IDSocio, $id_invitado,$FechaIngreso);
							if($valida_regla!="ok"){
								$respuesta[ "message" ] = $valida_regla;
								$respuesta[ "success" ] = false;
								$respuesta[ "response" ] = NULL;
								return $respuesta;
							}



						//$sql_numero_invitacion = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '".$id_invitado."' and MONTH(FechaInicio) = '".$mes_invitacion."' and IDClub = '".$IDClub."'");
						//$numero_invitaciones = $dbo->rows($sql_numero_invitacion);
						//Consulto cuantas personas ha invitado el socio en el mes
						//$sql_invitados_mes = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '".$IDSocio."' and YEAR(FechaInicio) = '".$year_invitacion."' and MONTH(FechaInicio) = '".$mes_invitacion."' and IDClub = '".$IDClub."'");
						//$numero_invitados_mes = $dbo->rows($sql_invitados_mes);
						//Consulto cuantas personas ha invitado el socio en el dia
						//$sql_invitados_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDSocio = '".$IDSocio."' and YEAR(FechaInicio) = '".$year_invitacion."' and MONTH(FechaInicio) = '".$mes_invitacion."' and DAY(FechaInicio) = '".$dia_invitacion."' and IDClub = '".$IDClub."'");
						//$numero_invitados_dia = $dbo->rows($sql_invitados_dia);

						$numero_invitaciones = 0;
						$numero_invitados_mes = 0;

						$numero_invitados_mes_permitido = 500;
						$numero_mismo_invitado_mes = "100";
						$cumplimiento_obligatorio_limite = "S";

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						//if ((int)$numero_invitados_dia<(int)$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite=="N"){
						//if ((int)$numero_invitaciones<(int)$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite=="N"){
						//if ((int)$numero_invitados_mes_permitido>(int)$numero_invitados_mes || $cumplimiento_obligatorio_limite=="N"){
						//Verifico que el invitado no este invitado mas de una vez el mismo dia

						//$sql_invitacion_dia = $dbo->query("Select * From SocioInvitadoEspecial Where IDInvitado = '".$id_invitado."' and FechaInicio = '".$FechaIngreso."'");
						//$numero_invitaciones_dia = $dbo->rows($sql_invitacion_dia);
						$numero_invitaciones_dia = 0;
						//if((int)$numero_invitaciones_dia<=100){





						//Inserto invitacion
						$sql_inserta_inv = $dbo->query( "INSERT INTO SocioInvitadoEspecial (IDClub, IDSocio, IDInvitado, IDPadre, IDPadreInvitacion, IDVehiculo, CodigoAutorizacion, CabezaInvitacion,  TipoInvitacion, FechaInicio, FechaFin, UsuarioTrCr, FechaTrCr)
																						Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $IDPadre . "','" . $IDInvitacionGenerada . "', '" . $id_vehiculo . "', '" . $CodigoAutorizacion . "','" . $CabezaInvitacion . "',
																							'" . $TipoInvitado . "', '" . $FechaIngreso . "', '" . $FechaSalida . "', '".$UsuarioCrea."',NOW())" );
						$id_invitado_inserta = $dbo->lastID();
						$nombre_enviar=$Nombre . " " .$Apellido;

						SIMUtil::notificar_nuevo_invitado( $IDClub, $IDSocio, $NumeroDocumento, $nombre_enviar , $FechaIngreso,$id_invitado_inserta );

						//Guardo los datos de los campos
						$datos_formulario= json_decode($ValoresFormulario, true);
						if (count($datos_formulario)>0):
							foreach($datos_formulario as $detalle_datos):
								$sql_datos_form = $dbo->query("Insert Into SocioInvitadoEspecialOtrosDatos (IDSocioInvitadoEspecial, IDCampoFormularioInvitado, Valor) Values ('". $id_invitado_inserta ."','". $detalle_datos["IDCampoFormularioInvitado"]."','".$detalle_datos["Valor"]."')");
								$OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
							endforeach;
						endif;

						//Inserto el vehiculo de la invitacion
						if ( !empty( $Placa ) ):
							$inserta_vehiculo_inv = "Insert Into VehiculoInvitacion (IDSocioInvitadoEspecial, IDVehiculo, Placa)
																						 Values('" . $id_invitado_inserta . "','" . $id_vehiculo . "','" . $Placa . "')";
						$dbo->query( $inserta_vehiculo_inv );
						endif;

						//verifico si el vehiculo ya esta creado
						if ( !empty( $Placa ) ):
							$id_vehiculo = $dbo->getFields( "Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'" );
						//Si el vehiculo no existe en la tabla maestra lo creo
						if ( empty( $id_vehiculo ) || ( int )$id_vehiculo == 0 ):
							$inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																					 Values('" . $id_invitado . "','" . $Placa . "')";
						$dbo->query( $inserta_vehiculo );
						$id_vehiculo = $dbo->lastID();
						endif;
						endif;


						//Guardo el padre de la invitacion
						if ( ( $CabezaInvitacion == "S" || count( $datos_invitado ) == 1 ) && empty( $IDInvitacionGenerada ) ):
							//Generar Codigo QR
							//$parametros_codigo_qr = URLROOT . "plataform/invitadosespeciales.php?IDInvitacion=".$id_invitado_inserta."&Placa=".$Placa;
							$parametros_codigo_qr = $NumeroDocumento . "\r\n";
							if($Masivo!="S")
								SIMUtil::enviar_codigo_qr( $id_invitado_inserta, $parametros_codigo_qr, "Invitado" );

						if ( $CabezaInvitacion == "S" && empty( $IDInvitacionGenerada ) ):
							$IDInvitacionGenerada = $id_invitado_inserta;
						endif;
						endif;

						//}
						//else{
						//$array_errorres[] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
						//}
						//}
						//else{
						//$array_errorres[] = "Lo sentimos supera el numero maximo de ".$numero_invitados_mes_permitido." invitaciones por mes";
						//}
						//}
						//else{
						//$array_errorres[] = "Lo sentimos, esta persona ha sido invitadas mas de ".$numero_mismo_invitado_mes." veces en este mes.";
						//}
						//}
						//else{
						//$array_errorres[] = "Lo sentimos, supera el numero maximo de ".$numero_invitados_dia_permitido." invitaciones por dia";
						//}
						endforeach;
						endif;

						if ( count( $array_errorres ) > 0 ):
							$otros_mensajes = implode( ",", $array_errorres );
						endif;

						$respuesta[ "message" ] = "guardado " . $otros_mensajes;
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = NULL;

					} else {
						$respuesta[ "message" ] = "Lo sentimos, socio no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "Inv acceso. Atencion faltan parametros.";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		return $respuesta;

	}


	function set_autorizacion_invitado_update( $IDClub, $IDSocio, $IDInvitacion, $FechaIngreso, $FechaSalida, $DatosInvitado, $ValoresFormulario ) {

		$dbo = & SIMDB::get();

		$datos_invitado = json_decode( $DatosInvitado, true );


		if ( !empty( $FechaIngreso ) && !empty( $FechaSalida ) && !empty( $IDInvitacion ) && count( $datos_invitado ) > 0 ) {



			$hoy = date( "Y-m-d" );
			if ( strtotime( $FechaIngreso ) >= strtotime( $hoy ) && strtotime( $FechaSalida ) >= strtotime( $FechaIngreso ) ) {

				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

				if ( !empty( $id_socio ) ) {

					// Consulto las invitaciones que puede hacer el socio
					$numero_invitados_dia_permitido = $dbo->getFields( "Socio", "NumeroAccesos", "IDSocio = '" . $IDSocio . "'" );

					if ( ( int )$numero_invitados_dia_permitido > 0 ) {


						//Consulto cuantas veces la persona ha sido invitada en el mes
						$mes_invitacion = substr( $FechaIngreso, 5, 2 );
						$year_invitacion = substr( $FechaIngreso, 0, 4 );
						$dia_invitacion = substr( $FechaIngreso, 8, 2 );

						//Recorro los datos de los invitados
						if ( count( $datos_invitado ) > 0 ):
							//Borro las invitaciones para volverlas a crear
							$datos_invitacion_especial = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
						//$sql_borra_inv = $dbo->query("Delete From SocioInvitadoEspecial Where IDPadre = '".$datos_invitacion_especial["IDInvitado"]."'");
						//$sql_borra_inv = $dbo->query("Delete From SocioInvitadoEspecial Where IDSocioInvitadoEspecial = '".$IDInvitacion."'");

						foreach ( $datos_invitado as $detalle_datos ):
							//$IDInvitacion = $detalle_datos["IDInvitacion"];
							$IDTipoDocumento = $detalle_datos[ "IDTipoDocumento" ];
						$NumeroDocumento = $detalle_datos[ "NumeroDocumento" ];
						$Nombre = $detalle_datos[ "Nombre" ];
						$Apellido = $detalle_datos[ "Apellido" ];
						$Email = $detalle_datos[ "Email" ];
						$TipoInvitado = $detalle_datos[ "TipoInvitado" ];
						$Placa = $detalle_datos[ "Placa" ];
						$CabezaInvitacion = $detalle_datos[ "CabezaInvitacion" ];
						$MenorEdad = $detalle_datos[ "MenorEdad" ];

						$NumeroDocumento = str_replace( ".", "", $NumeroDocumento );
						$NumeroDocumento = str_replace( ",", "", $NumeroDocumento );

						if ( $MenorEdad == "S" || ( empty( $IDTipoDocumento ) && empty( $NumeroDocumento ) && empty( $Email ) ) ):
							$NumeroDocumento = "MenorEdad" . $IDClub.rand( 1, 1000000000 );
						$IDTipoDocumento = 1;
						else :
							$NumeroDocumento = ( int )$NumeroDocumento;
						endif;


						//verifico si el invitado ya esta creado
						$id_invitado = $dbo->getFields( "Invitado", "IDInvitado", "NumeroDocumento = '" . $NumeroDocumento . "'" );
						//Si el invitado no existe en la tabla maestra lo creo
						if ( empty( $id_invitado ) || ( int )$id_invitado == 0 ):
							$inserta_invitado = "Insert Into Invitado (IDCLub, IDTipoDocumento, NumeroDocumento, Nombre, Apellido, Email, MenorEdad, UsuarioTrCr, FechaTrCr)
															 Values('" . $IDClub . "','" . $IDTipoDocumento . "','" . $NumeroDocumento . "','" . strtoupper($Nombre) . "','" . strtoupper($Apellido) . "','" . $Email . "','" . $MenorEdad . "','App',NOW())";
						$dbo->query( $inserta_invitado );
						$id_invitado = $dbo->lastID();
						else :

							if(!empty($Email) )
								$CampoObservacion .= " , Email = '" . $Email . "'";


						$actualiza_invitado = "Update Invitado set IDTipoDocumento = '" . $IDTipoDocumento . "', NumeroDocumento = '" . $NumeroDocumento . "', Nombre = '" . strtoupper($Nombre) . "', Apellido = '" . strtoupper($Apellido) . "', UsuarioTrEd = 'App', FechaTrEd = NOW() ".$CampoObservacion." Where IDInvitado = '" . $id_invitado . "'";
						$dbo->query( $actualiza_invitado );
						endif;

						//Si es cabeza de familia guardo el id del Socio
						if ( $CabezaInvitacion == "S" ):
							$IDPadre = $id_invitado;
						endif;


						$sql_numero_invitacion = $dbo->query( "Select * From SocioInvitadoEspecial Where IDInvitado = '" . $id_invitado . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitaciones = $dbo->rows( $sql_numero_invitacion );
						//Consulto cuantas personas ha invitado el socio en el mes
						$sql_invitados_mes = $dbo->query( "Select * From SocioInvitadoEspecial Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_mes = $dbo->rows( $sql_invitados_mes );
						//Consulto cuantas personas ha invitado el socio en el dia
						$sql_invitados_dia = $dbo->query( "Select * From SocioInvitadoEspecial Where IDSocio = '" . $IDSocio . "' and YEAR(FechaInicio) = '" . $year_invitacion . "' and MONTH(FechaInicio) = '" . $mes_invitacion . "' and DAY(FechaInicio) = '" . $dia_invitacion . "' and IDClub = '" . $IDClub . "'" );
						$numero_invitados_dia = $dbo->rows( $sql_invitados_dia );

						$numero_invitados_mes_permitido = 500;
						$numero_mismo_invitado_mes = "300";
						$cumplimiento_obligatorio_limite = "S";

						// Consulto si en la configuracion del club se marco como obligatorio el limite de invitados si es no permito agregar el invitado
						//$cumplimiento_obligatorio_limite = $dbo->getFields( "Club" , "CumplimientoInvitados" , "IDClub = '".$IDClub."'" );

						if ( ( int )$numero_invitados_dia < ( int )$numero_invitados_dia_permitido || $cumplimiento_obligatorio_limite == "N" ) {
							if ( ( int )$numero_invitaciones < ( int )$numero_mismo_invitado_mes || $cumplimiento_obligatorio_limite == "N" ) {
								if ( ( int )$numero_invitados_mes_permitido > ( int )$numero_invitados_mes || $cumplimiento_obligatorio_limite == "N" ) {
									//Verifico que el invitado no este invitado mas de una vez el mismo dia

									$sql_invitacion_dia = $dbo->query( "Select * From SocioInvitadoEspecial Where IDInvitado = '" . $id_invitado . "' and FechaInicio = '" . $FechaIngreso . "'" );
									$numero_invitaciones_dia = $dbo->rows( $sql_invitacion_dia );
									if ( ( int )$numero_invitaciones_dia <= 1 ) {

										//verifico si el vehiculo ya esta creado
										if ( !empty( $Placa ) ):
											$id_vehiculo = $dbo->getFields( "Vehiculo", "IDVehiculo", "Placa = '" . $Placa . "'" );
										//Si el vehiculo no existe en la tabla maestra lo creo
										if ( empty( $id_vehiculo ) || ( int )$id_vehiculo == 0 ):
											$inserta_vehiculo = "Insert Into Vehiculo (IDInvitado, Placa)
																					 Values('" . $id_invitado . "','" . $Placa . "')";
										$dbo->query( $inserta_vehiculo );
										$id_vehiculo = $dbo->lastID();
										endif;
										endif;

										//Actualizo invitacion
										//$sql_actualiza_inv = $dbo->query("Update SocioInvitadoEspecial Set IDClub = '".$IDClub."', IDSocio = '".$IDSocio."', IDInvitado = '".$id_invitado."', IDPadre = '".$IDPadre."', IDVehiculo = '".$id_vehiculo."', CabezaInvitacion = '".$CabezaInvitacion."', TipoInvitacion = '".$TipoInvitado."', FechaInicio = '".$FechaIngreso."', FechaFin = '".$FechaSalida."', UsuarioTrEd = 'WebService', FechaTrEd = NOW() Where SocioInvitadoEspecial = '".$IDInvitacion."'");
										//Inserto invitacion
										$sql_inserta_inv = $dbo->query( "INSERT INTO SocioInvitadoEspecial (IDClub, IDSocio, IDInvitado, IDPadre, IDVehiculo, CabezaInvitacion, TipoInvitacion, FechaInicio, FechaFin, UsuarioTrCr, FechaTrCr)
																						Values ('" . $IDClub . "','" . $IDSocio . "', '" . $id_invitado . "', '" . $IDPadre . "', '" . $id_vehiculo . "', '" . $CabezaInvitacion . "', '" . $TipoInvitado . "', '" . $FechaIngreso . "', '" . $FechaSalida . "', 'WebService',NOW())" );
										$id_invitacion_update = $dbo->lastID();
										$nombre_enviar=$Nombre . " " .$Apellido;
										SIMUtil::notificar_nuevo_invitado( $IDClub, $IDSocio, $NumeroDocumento, $nombre_enviar , $FechaIngreso );

										//Guardo los datos de los campos
										$datos_formulario= json_decode($ValoresFormulario, true);
										if (count($datos_formulario)>0):
											foreach($datos_formulario as $detalle_datos):
												$sql_datos_form = $dbo->query("Insert Into SocioInvitadoEspecialOtrosDatos (IDSocioInvitadoEspecial, IDCampoFormularioInvitado, Valor) Values ('". $id_invitacion_update ."','". $detalle_datos["IDCampoFormularioInvitado"]."','".$detalle_datos["Valor"]."')");
												$OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
											endforeach;
										endif;


										//Inserto el vehiculo de la invitacion
										if ( !empty( $Placa ) ):
											$inserta_vehiculo_inv = "Insert Into VehiculoInvitacion (IDSocioInvitadoEspecial, IDVehiculo, Placa)
																						 Values('" . $id_invitado_inserta . "','" . $id_vehiculo . "','" . $Placa . "')";
										$dbo->query( $inserta_vehiculo_inv );
										endif;

									} else {
										$array_errorres[] = "Lo sentimos esta persona ya tiene una invitacion para el dia seleccionado";
									}
								} else {
									$array_errorres[] = "Lo sentimos supera el numero maximo de " . $numero_invitados_mes_permitido . " invitaciones por mes";
								}
							} else {
								$array_errorres[] = "Lo sentimos, esta persona ha sido invitadas mas de " . $numero_mismo_invitado_mes . " veces en este mes.";
							}
						} else {
							$array_errorres[] = "Lo sentimos, supera el numero maximo de " . $numero_invitados_dia_permitido . " invitaciones por dia";
						}
						endforeach;
						endif;

						if ( count( $array_errorres ) > 0 ):
							$otros_mensajes = implode( ",", $array_errorres );
						endif;

						$respuesta[ "message" ] = "guardado " . $otros_mensajes;
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = NULL;

					} else {
						$respuesta[ "message" ] = "Lo sentimos, no tiene permisos suficientes para realizar invitaciones";
						$respuesta[ "success" ] = false;
						$respuesta[ "response" ] = NULL;
					}

				} else {
					$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			} else {
				$respuesta[ "message" ] = "Lo sentimos, no se permite fechas antiguas";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "Invitado: Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}







	function buscar_elemento_disponible( $IDClub, $IDServicio, $Fecha, $Hora, $IDElementoPadre = "", $IDTipoReserva = "" ) {

		$dbo = & SIMDB::get();
		$IDElemento = "";
		$elemento_encontrado = 0;
		$validar_campo_aut = "S";
		$datos_elemento_padre = $dbo->fetchAll( "ServicioElemento", " IDServicioElemento = '" . $IDElementoPadre . "' ", "array" );
		// Verifico cuantos elementos tienen esta hora disponible
		$dia_fecha = date( 'w', strtotime( $Fecha ) );
		$sql_dispo_hora = "Select * From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) and Activo <>'N' Order by HoraDesde";
		$qry_dispo_hora = $dbo->query( $sql_dispo_hora );
		while ( $row_dispo_hora = $dbo->fetchArray( $qry_dispo_hora ) ):
			if ( !empty( $row_dispo_hora[ "IDServicioElemento" ] ) ):
				$array_elementos_hora = explode( "|", $row_dispo_hora[ "IDServicioElemento" ] );

		if ( count( $array_elementos_hora ) > 0 ):
			foreach ( $array_elementos_hora as $id_elemento_hora ):
				if ( !empty( $id_elemento_hora ) ):
					$array_id_elemento[] = $id_elemento_hora;
		endif;
		endforeach;
		$id_elemento_permitido = implode( ",", $array_id_elemento );



		/*
			Especial para Lagartos en donde unos profesores se les asigna unas canchas que no pueden ser reservadas automaticamente
		  pero a ellos si se les asigna solo en el horario de la mañana los fines de semana
		*/
		if($IDClub == 7 && ($IDServicio==43 || $IDServicio==221)){

			//revisar si esta en corea o lago y tiene cancha asignada
			$sql_elemento_asociado = "Select * From ServicioElementoAsociado Where IDServicioElementoPrincipal = '" . $IDElementoPadre . "' limit 1";
			$result_elemento_asociado = $dbo->query( $sql_elemento_asociado );
			if ( $dbo->rows( $result_elemento_asociado ) > 0 ):
				$row_elemento_asociado_cancha = $dbo->fetchArray( $result_elemento_asociado );
				$id_elemento_hora_cancha = $row_elemento_asociado_cancha[ "IDServicioElementoSecundario" ];
			endif;


			$id_elemento_corea="193,194,195,196,197,198,199"; //Canchas de corea
			$array_elemento_corea=array("193","194","195","196","197","198","199");
			//$id_elemento_corea="197,198,199"; //Canchas de corea
			$id_elemento_lago="200,201,202,203,204,205,206,207,208,209,210"; //Canchas de lago
			$array_elemento_lago=array("200","201","202","203","204","205","206","207","208","209","210"); //Canchas de lago
			if( ($dia_fecha==0 || $dia_fecha==6) ){
					 if(( $Hora == "06:00:00" || $Hora == "07:00:00" || $Hora == "08:00:00" )){
						//if(( $Hora >= "06:00:00")){
						switch($datos_elemento_padre["FinSemanaCancha"]){
								case "Corea":
									$id_elemento_permitido=$id_elemento_corea;
									if(in_array($id_elemento_hora_cancha,$array_elemento_corea))
										$validaciones="S";
									else
										$validaciones="N";
								break;
								case "Lago":
									$id_elemento_permitido=$id_elemento_lago;
									if(in_array($id_elemento_hora_cancha,$array_elemento_lago))
										$validaciones="S";
									else
										$validaciones="N";
								break;
								default:
									$id_elemento_permitido=$id_elemento_lago;
						}
					}
					else{
						$id_elemento_permitido=$id_elemento_lago;
						$validaciones="N";
					}


			}
			else{
					$validaciones="N";
					$id_elemento_corea="193,194,195,196,197,198,199"; //Canchas de corea
					//$id_elemento_corea="197,198,199"; //Canchas de corea
					switch($datos_elemento_padre["EntreSemanaCancha"]){
							case "Corea":
								$id_elemento_permitido=$id_elemento_corea;
								if(in_array($id_elemento_hora_cancha,$array_elemento_corea))
									$validaciones="S";
								else
									$validaciones="N";
							break;
							case "Lago":
								$id_elemento_permitido=$id_elemento_lago;
								if(in_array($id_elemento_hora_cancha,$array_elemento_lago))
									$validaciones="S";
								else
									$validaciones="N";
							break;
							default:
								$id_elemento_permitido=$id_elemento_lago;
					}
			}
		}


		unset( $array_elementos_hora );
		//ordeno el array por el orden definido a tomar en cuenta para reservar, ejemplo: primero reservar la cancha 18 y no la 1
		$sql_elemento_servicio = "Select IDServicioElemento,OrdenReserva From ServicioElemento Where IDServicioElemento in (" . $id_elemento_permitido . ") Order by OrdenReserva ASC";
		$result_elemento_servicio = $dbo->query( $sql_elemento_servicio );
		while ( $row_elemento_servicio = $dbo->fetchArray( $result_elemento_servicio ) ):
			$array_elementos_hora[] = $row_elemento_servicio[ "IDServicioElemento" ];
		endwhile;
		endif;
		ksort( $array_elementos_hora );
		$contador_elemento = 0;
		foreach ( $array_elementos_hora as $id_elemento_hora ):
			$contador_elemento++;
		//verifo que el elemento pueda ser reservado automaticamente por otro servicio (por ejemplo cancha al tomar una clase)
		$permite_reserva_automatica = $dbo->getFields( "ServicioElemento", "PermiteReservaAutomatica", "IDServicioElemento = '" . $id_elemento_hora . "'" );

			if($validaciones=="N"){
				$permite_reserva_automatica = "S";
				$validar_campo_aut = "S";
			}

			//Si se configura un elemento con otro fijo (por ejemplo un profesor de tenis con una cancha fija) se da prioridad para reservar esa cancha asi este configurada como reserva automatica en no
			if ( $contador_elemento == 1 && $validar_campo_aut == "S" && $validaciones != "N" ):
				$sql_elemento_asociado = "Select * From ServicioElementoAsociado Where IDServicioElementoPrincipal = '" . $IDElementoPadre . "' limit 1";
			  $result_elemento_asociado = $dbo->query( $sql_elemento_asociado );
				if ( $dbo->rows( $result_elemento_asociado ) > 0 ):
					$row_elemento_asociado = $dbo->fetchArray( $result_elemento_asociado );
					$id_elemento_hora = $row_elemento_asociado[ "IDServicioElementoSecundario" ];
					$permite_reserva_automatica = "S";
				endif;
			endif;


			//Validacion especial para Mesa de yeguas donde si se escoje cancha niño debe solo reservar las canchas de niños

			if ( $IDClub == 9 && $IDTipoReserva == 112 ):
				//Canchas de minitenis
				if ( $id_elemento_hora == "642" || $id_elemento_hora == "643" || $id_elemento_hora == "644" || $id_elemento_hora == "645" ):
					$permite_reserva_automatica = "S";
				else :
					$permite_reserva_automatica = "N";
			endif;
			endif;

			//FIN Validacion especial para Mesa de yeguas



			if ( !empty( $id_elemento_hora ) && $permite_reserva_automatica != "N" ):
				// verifico que no este reservado
				$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $id_elemento_hora . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'" );
			if ( empty( $id_reserva_disponible ) ):
				//verifico que no tenga cierre a esa hora
				$verifica_abierto_servicio_hora = SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $id_elemento_hora, $Hora );
			if ( empty( $verifica_abierto_servicio_hora ) ):
				$elemento_encontrado = 1;
			return $id_elemento_hora;
			endif;
			endif;
			endif;
			endforeach;
			endif;
			endwhile;
			return $IDElemento;
	}

	function set_separa_reserva( $IDClub, $IDSocio, $IDElemento, $IDServicio, $Tee, $Fecha, $Hora, $IDTipoReserva = '', $NumeroTurnos = "" ) {
		$dbo = & SIMDB::get();
		$flag_reserva_cancha_clase = 0;

		if ( empty( $NumeroTurnos ) ) {
			$NumeroTurnos = 1;
		}

		//Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
		if ( $IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517" ):
			$RepetirFechaFinal = strtotime( '+1 week', strtotime( $Fecha ) );
		$minima_fecha = date( "Y-m" ) . "-14";
		$maxima_fecha = new DateTime();
		$maxima_fecha->modify( 'last day of this month' );
		$maxima_fecha->format( 'Y-m-d' );
		if ( ( int )date( "d" ) <= 14 && ( int )date( "d", $RepetirFechaFinal ) <= 14 ):
			$permite_repetir = "S";
		elseif ( ( int )date( "d" ) >= 15 && $RepetirFechaFinal <= strtotime( $maxima_fecha->format( 'Y-m-d' ) ) ):
			$permite_repetir = "S";
		else :
			$permite_repetir = "N";
		endif;
		if ( $permite_repetir == "S" ):
			$mensaje_especial_repetir = " Se realizara una reserva automatica para el día " . date( "Y-m-d", $RepetirFechaFinal );
		$Repetir = "S";
		else :
			$mensaje_especial_repetir = " No se puede realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
		endif;
		endif;
		//Fin validación especial




		$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'" );
		// Si el servicio es una clase y necesita reservar cancha
		$id_servicio_cancha = $dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
		if ( $id_servicio_cancha > 0 ):
			// Consulto el servicio del club asociado a este servicio maestro
			$IDServicioCanchaClub = $dbo->getFields( "Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'" );
		// Valido si existe una cancha disponible en el horario de la clase
		$IDElemento_cancha = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicioCanchaClub, $Fecha, $Hora, $IDElemento );
		if ( empty( $IDElemento_cancha ) ):
			$respuesta[ "message" ] = "Lo sentimos no existe una cancha disponible para tomar la clase en este horario.";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		else :
			$flag_reserva_cancha_clase = 1;
		endif;
		endif;




		//Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
		if ( !empty( $IDTipoReserva ) ):
			$datos_tipo_reserva = $dbo->fetchAll( "ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array" );
		$cantidad_turnos = $datos_tipo_reserva[ "NumeroTurnos" ];

		if ( ( ( int )$cantidad_turnos > 1 ) ):
			//$cantidad_turnos-=1; // Quito uno para que no cuente la reserva primera

			// Separo las reservas
			$array_hora_siguiente_turno_diponible = SIMWebserviceQuemado::valida_siguiente_turno_sin_reserva( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos );

		if ( count( $array_hora_siguiente_turno_diponible ) != ( int )( $cantidad_turnos - 1 ) || !is_array( $array_hora_siguiente_turno_diponible ) ):
			$respuesta[ "message" ] = "Se necesitan: " . $cantidad_turnos . " turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion.";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		else :
			$flag_separa_siguiente_turno = 1;
		endif;
		endif;
		endif;


		//Si turnos es mayor a 1  verifico que los siguientes turnos esten disponibles y los separo
		if ( ( int )$NumeroTurnos > 1 ):
			if ( $id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30 ): //Golf
				$array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_disponible_golf( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, $Tee, "","" );
			else :
				$array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_sin_reserva( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos );
		endif;


		if ( count( $array_disponible ) != $NumeroTurnos ):
			$respuesta[ "message" ] = "Se necesitan " . $NumeroTurnos . " turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		return $respuesta;
		else :
			// separo todos los turnos necesarios
			foreach ( $array_disponible as $key_hora => $dato_hora ):
				$sql_inserta_reserva = $dbo->query( "Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, UsuarioTrCr, FechaTrCr)
														Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $Fecha . "', '" . $dato_hora . "','" . $Tee . "', 'WebService',NOW())" );
				$id_reserva_general = $dbo->lastID();


		endforeach;
		$respuesta[ "message" ] = "Guardado";
		$respuesta[ "success" ] = true;
		$respuesta[ "response" ] = $id_reserva_general;
		return $respuesta;
		endif;
		endif;

		// Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
		if ( empty( $IDElemento ) ):
			$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'" );
		$id_servicio_inicial = $dbo->getFields( "ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
		if ( $id_servicio_inicial == 5 ): // 5 = get_reserva_aleatoria
			$IDElemento = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicio, $Fecha, $Hora, $IDElemento );
		endif;
		endif;

		$Hora = SIMWebserviceQuemado::validar_formato_hora( $Hora );

		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				// verifico que todavia este disponible la reserva
				if ( !empty( $Tee ) ):
					$condicion_tee = " and Tee = '" . $Tee . "'";
				endif;

				//duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
				/*
				$suma_rand = rand(0,2);
				$rand_seg = rand(1,3)+$suma_rand;
				sleep($rand_seg);
				*/

				$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee" );


				if ( ( $id_servicio_maestro == "15" || $id_servicio_maestro == "27" || $id_servicio_maestro == "28" ) && empty( $Tee ) && !empty( $id_reserva_disponible ) ):
					$Tee = "Tee10";
					$condicion_tee = " and Tee = '" . $Tee . "'";
					$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee" );
					if ( !empty( $id_disponible_tee ) ):
						$Tee = "Tee1";
					$condicion_tee = " and Tee = '" . $Tee . "'";
					$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee" );
					endif;
				endif;


				// Obtener la disponibilidad utilizada al consultar la reserva
				$id_disponibilidad = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $IDServicio, $Fecha, $IDElemento, $Hora );
				$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array" );
				// Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
				$cupo_total = "S"; // ya no hay cupos
				$cupos_disponibilidad = $dbo->getFields( "Disponibilidad", "Cupos", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
				if ( ( int )$cupos_disponibilidad > 1 ):
					//Consulto cuantos reservas se han tomado en esta hora para saber si ya llegó al limite de cupos
					$cupos_reservados = self::valida_cupos_disponibles( $IDClub, $IDServicio, $IDElemento, $Fecha, $Hora );
				//Valido si todavia existe cupo en esta hora
				if ( $cupos_reservados <= $datos_disponibilidad[ "Cupos" ] ):
					$cupo_total = "N"; // aun hay cupos disponibles
				endif;
				$numero_inscripcion = rand( 0, 999999 );
				else :
					$numero_inscripcion = 0;
				endif;



				if ( empty( $id_reserva_disponible ) || $cupo_total == "N" ):
					//Guardo la reserva
					$sql_inserta_reserva = $dbo->query( "Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, NumeroInscripcion, UsuarioTrCr, FechaTrCr)
													Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $Fecha . "', '" . $Hora . "','" . $Tee . "', '" . $numero_inscripcion . "','WebService Separa',NOW())" );

				if ( !$sql_inserta_reserva ):
					$respuesta[ "message" ] = "La reserva solicitada ya fue o esta siendo tomada";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;



				endif;

				$id_reserva_general = $dbo->lastID();

				//Valido que no haya quedado dos separaciones
				if ( $cupos_disponibilidad <= 1 ):
					/*
					$suma_rand = rand(0,2);
					$rand_seg = rand(0,3)+$suma_rand;
					sleep($rand_seg);
					*/
					$sql_duplicada = "Select * From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (3) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee";
				$result_duplicada = $dbo->query( $sql_duplicada );
				if ( $dbo->rows( $result_duplicada ) > 1 ):
					$respuesta[ "message" ] = "Lo sentimos la reserva ya fue o esta siendo tomada!";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
				endif;
				endif;

				//Verifico que el elemnto no hay sido reservado a esta misma hora en otro servicio
				$condicion_multiple_elemento = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDElemento,"" );
				//Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
				$array_otro_elemento = explode( ",", $condicion_multiple_elemento );
				//duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
				//$suma_rand = rand(0,1);
				//$rand_seg = rand(1,1)+$suma_rand;
				//sleep($rand_seg);
				if ( count( $array_otro_elemento ) > 1 ): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
					foreach ( $array_otro_elemento as $id_elemento_multiple ):
						if ( $id_elemento_multiple != $IDElemento && !empty( $id_elemento_multiple ) ):
							$sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 or IDEstadoReserva = 3 ) and Hora = '" . $Hora . "' ";
				$qry_reserva_elemento_mult = $dbo->query( $sql_reserva_elemento_multp );
				if ( $dbo->rows( $qry_reserva_elemento_mult ) > 0 ):
					$respuesta[ "message" ] = "Lo sentimos la reserva ya fue o esta siendo tomada!!";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
				endif;
				endif;
				endforeach;
				endif;



				// SI el servicio es una clase y se solicta reservar una cancha realizo la reserva temporal
				if ( $flag_reserva_cancha_clase == 1 ):
					// Obtener la disponibilidad utilizada al consultar la reserva
					$id_disponibilidad_cancha = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $IDServicioCanchaClub, $Fecha, $IDElemento_cancha );
				$sql_inserta_reserva_cancha = $dbo->query( "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, Tipo, UsuarioTrCr, FechaTrCr)
					Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicioCanchaClub . "','" . $IDElemento_cancha . "', '3','" . $id_disponibilidad . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "',
									'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','Automatica','WebService',NOW())" );
				$id_reserva_cancha = $dbo->lastID();
				//Agrego la relacion de servicio padre (Clase)y servicios hijos (canchas) reservados
				$sql_reserva_automatica = $dbo->query( "INSERT INTO ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva )
														   Values ('" . $id_reserva_general . "','" . $id_reserva_cancha . "','" . $IDClub . ".','" . $IDSocio . "','" . $IDElemento_cancha . "','" . $Fecha . "','" . $Hora . "','3')" );
				endif;

				// Si se va a reservas mas turnos seguidos y la validacion fue exitosa borro las separacion hechas
				if ( $flag_separa_siguiente_turno == 1 && count( $array_hora_siguiente_turno_diponible ) > 0 ):
					foreach ( $array_hora_siguiente_turno_diponible as $Hora_siguiente ):
						// Borro la reserva separada
						$sql_inserta_reserva = $dbo->query( "Select * From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3" );
				while ( $row_turno_siguiente = $dbo->fetchArray( $sql_inserta_reserva ) ):
					$sql_reserva_automatica = $dbo->query( "Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																	  Values ('" . $id_reserva_general . "','" . $row_turno_siguiente[ "IDReservaGeneral" ] . "','" . $IDClub . "','" . $IDSocio . "','" . $row_turno_siguiente[ "IDServicioElemento" ] . "','" . $Fecha . "','" . $Hora_siguiente . "','3')" );
				endwhile;
				endforeach;
				endif;


				//Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
				if ( $IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517" ):
					$RepetirFechaFinal = strtotime( '+1 week', strtotime( $Fecha ) );
				$minima_fecha = date( "Y-m" ) . "-14";
				$maxima_fecha = new DateTime();
				$maxima_fecha->modify( 'last day of this month' );
				$maxima_fecha->format( 'Y-m-d' );
				if ( ( int )date( "d" ) <= 14 && ( int )date( "d", $RepetirFechaFinal ) <= 14 ):
					$permite_repetir = "S";
				elseif ( ( int )date( "d" ) >= 15 && $RepetirFechaFinal <= strtotime( $maxima_fecha->format( 'Y-m-d' ) ) ):
					$permite_repetir = "S";
				else :
					$permite_repetir = "N";
				endif;
				if ( $permite_repetir == "S" ):
					$mensaje_especial_repetir = " Se realizó un reserva automatica para el día " . date( "Y-m-d", $RepetirFechaFinal );
				$Repetir = "S";
				$Periodo = "Semana";
				$RepetirFechaFinal = date( "Y-m-d", $RepetirFechaFinal );
				$sql_inserta_reserva_prox = $dbo->query( "Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, NumeroInscripcion, Tipo, UsuarioTrCr, FechaTrCr)
													Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '3','" . $RepetirFechaFinal . "', '" . $Hora . "','" . $Tee . "', '" . $numero_inscripcion . "','Automatica','WebService',NOW())" );
				$id_reserva_aut = $dbo->lastID();
				$sql_reserva_automatica = $dbo->query( "Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva,Tipo )
														   Values ('" . $id_reserva_general . "','" . $id_reserva_aut . "','" . $IDClub . ".','" . $IDSocio . "','" . $IDElemento . "','" . $Fecha . "','" . $Hora . "','3','Repetir')" );
				if ( !$sql_inserta_reserva_prox ):
					//Agrego la relacion de servicio padre (Clase)y servicios hijos (canchas) reservados
					$respuesta[ "message" ] = "La reserva automatica de la proxima semana ya fue o esta siendo tomada";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
				endif;

				else :
					$mensaje_especial_repetir = " No se pudo realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
				endif;
				endif;
				//Fin validación especial



				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $id_reserva_general;

				else :
					$respuesta[ "message" ] = "Lo sentimos la reserva ya fue o esta siendo tomada " . $Tee . " " . $cupos_reservados;
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;

				endif;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "18. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_libera_reserva( $IDClub, $IDSocio, $IDElemento, $IDServicio, $Tee, $Fecha, $Hora ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				// Consulto la reserva
				$sql_reserva_general = $dbo->query( "Select * From ReservaGeneral Where  IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva = 3 and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'" );
				$row_reserva_general = $dbo->fetchArray( $sql_reserva_general );
				//Elimino la reserva
				//$sql_libera_reserva = $dbo->query("DELETE FROM ReservaGeneral WHERE IDClub = '".$IDClub."' and IDSocio = '".$IDSocio."' and IDServicio = '".$IDServicio."' and IDServicioElemento = '".$IDElemento."' and IDEstadoReserva = 3 and Fecha = '".$Fecha."' and Hora = '".$Hora."'");
				$sql_libera_reserva = $dbo->query( "DELETE FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_reserva_general[ "IDReservaGeneral" ] . "' " );
				//Elimino las relacionadas
				$sql_reserva_auto = $dbo->query( "Select * From ReservaGeneralAutomatica Where  IDReservaGeneral = '" . $row_reserva_general[ "IDReservaGeneral" ] . "'" );
				while ( $row_reserva_auto = $dbo->fetchArray( $sql_reserva_auto ) ):
					$sql_libera_reserva = $dbo->query( "DELETE FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAutomatica = '" . $row_reserva_auto[ "IDReservaGeneralAutomatica" ] . "'" );
				$sql_libera_reserva = $dbo->query( "DELETE FROM ReservaGeneral WHERE IDReservaGeneral = '" . $row_reserva_auto[ "IDReservaGeneralAsociada" ] . "'" );
				endwhile;

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = "reserva eliminada";

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "19. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function validar_turnos_seguidos( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDBeneficiario = "", $TipoBeneficiario = "", $PermiteReservaSeguidaNucleo ) {
		$dbo = & SIMDB::get();
		$flag_turno_seguido = 0;
		$array_confirmado = array();
		// Consulto los turnos reservados y confirmados del socio para no tomar los separados
		if ( !empty( $IDBeneficiario ) ):
			$condicion_beneficiario = " and  (IDSocioBeneficiario = '" . $IDBeneficiario . "' or IDInvitadoBeneficiario = '" . $IDBeneficiario . "' or IDInvitadoBeneficiario = '0')";
		else :
			$condicion_beneficiario = " and  IDSocioBeneficiario = '0' and IDInvitadoBeneficiario = '0'";
		endif;


		// Valido tambien para que los de la misma acción no puedan tomar turnos seguidos
		//Si en la configuracion esta marcada como "No" de lo contrario se permite turnos seguios asi sean de la misma accion
		if ( $PermiteReservaSeguidaNucleo == "N" ):
			$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
		$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
		if ( empty( $accion_padre ) ): // Es titular
			$array_socio[] = $IDSocio;
		$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		else :
			$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		endif;
		if ( count( $array_socio ) > 0 ):
			$id_socio_nucleo = implode( ",", $array_socio );
		endif;
		else :
			$id_socio_nucleo = $IDSocio;
		endif;




		//$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva	= 1 " . $condicion_beneficiario;
		$sql_confirmado = "Select * From  ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ")  and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1 " . $condicion_beneficiario;
		$qry_confirmado = $dbo->query( $sql_confirmado );
		while ( $r_confirmado = $dbo->fetchArray( $qry_confirmado ) ):
			$array_confirmado[] = $r_confirmado[ "Hora" ];
		endwhile;


		$array_horarios = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, "", "" );
		foreach ( $array_horarios[ "response" ][ 0 ][ "Disponibilidad" ][ 0 ] as $id_horario => $datos_horario ):
			if ( in_array( $IDSocio, $array_socio ) && in_array( $datos_horario[ "Hora" ], $array_confirmado ) ):
				$id_socio_turno = $IDSocio;
			elseif ( empty( $array_turnos_dia[ $datos_horario[ "Hora" ] ] ) ):
				$id_socio_turno = "";
		endif;
		if ( empty( $array_turnos_dia[ $datos_horario[ "Hora" ] ] ) ):
			$array_turnos_dia[ $datos_horario[ "Hora" ] ] = $id_socio_turno;
		endif;
		endforeach;


		for ( $i = 1; $i <= count( $array_turnos_dia ); $i++ ):
			current( $array_turnos_dia );
		//Primer Posicion
		if ( $i == 1 && key( $array_turnos_dia ) == $Hora && current( $array_turnos_dia ) == $IDSocio ): // Es el primer horario y lo valido
			$flag_turno_seguido = 1;
		endif;
		if ( key( $array_turnos_dia ) == $Hora ):
			// me devuelvo al turno anterior
			prev( $array_turnos_dia );
		if ( current( $array_turnos_dia ) == $IDSocio ):
			$flag_turno_seguido = 2;
		endif;
		//Adelanto dos turnos, si es el final solo uno
		next( $array_turnos_dia );
		if ( current( $array_turnos_dia ) == $IDSocio ):
			$flag_turno_seguido = 3;
		endif;
		if ( $i != count( $array_turnos_dia ) ):
			next( $array_turnos_dia );
		endif;
		if ( current( $array_turnos_dia ) == $IDSocio ):
			$flag_turno_seguido = 4;
		endif;
		endif;
		next( $array_turnos_dia );
		endfor;

		return $flag_turno_seguido;

	}


	function validar_regla_turnos( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva ) {
		$dbo = & SIMDB::get();
		$regla_no_cumplida = 0;
		$turno_automatico = 0;
		$turno_tomado = 0;
		$datos_tipo_reserva = $dbo->fetchAll( "ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array" );


		// Valido tambien para que los de la misma acción no puedan tomar turnos seguidos
		$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
		$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
		if ( empty( $accion_padre ) ): // Es titular
			$array_socio[] = $IDSocio;
		$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		else :
			$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		endif;
		if ( count( $array_socio ) > 0 ):
			$id_socio_nucleo = implode( ",", $array_socio );
		endif;

		// Consulto los turnos reservados automaticos y confirmados del socio para no tomar los separados
		//$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva	= 1";
		$sql_confirmado = "Select * From  ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1";
		$qry_confirmado = $dbo->query( $sql_confirmado );
		$turno_tomado = $dbo->rows( $qry_confirmado );
		while ( $row_confirmado = $dbo->fetchArray( $qry_confirmado ) ):
			if ( $row_confirmado[ "Tipo" ] == "Automatica" ):
				$turno_automatico++;
		endif;
		endwhile;

		if ( $turno_automatico > 0 ):
			$regla_no_cumplida = 1; // 1 = Ya tomo un turno con la opcion de 2, 3, etc  tuernos seguidos
		endif;

		//Valido si ya tiene una reserva en el dia no pueda reservar ninguna de turnos seguidos
		if ( ( int )$turno_tomado > 0 && ( int )$datos_tipo_reserva[ "NumeroTurnos" ] > 1 && $regla_no_cumplida == 0 ):
			$regla_no_cumplida = 2; // 2 = Ya tomo un turno ya no puede tomar uno en bloque
		endif;

		return $regla_no_cumplida;
	}


	function validar_regla_turnos_tenis( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva ) {
		$dbo = & SIMDB::get();
		$regla_no_cumplida = 0;
		$turno_dia = 0;
		$turno_tomado = 0;

		// Valido tambien para que los de la misma acción no puedan tomar mas de 2 turnos al dia por ejemplo
		$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
		$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
		if ( empty( $accion_padre ) ): // Es titular
			$array_socio[] = $IDSocio;
		$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		else :
			$sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
		$result_nucleo = $dbo->query( $sql_nucleo );
		while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
			$array_socio[] = $row_nucleo[ "IDSocio" ];
		endwhile;
		endif;
		if ( count( $array_socio ) > 0 ):
			$id_socio_nucleo = implode( ",", $array_socio );
		endif;

		// Consulto los turnos reservados confirmados del socio y su nucleo
		//$sql_confirmado="Select * From  ReservaGeneral Where IDSocio = '".$IDSocio."' and IDServicio  = '".$IDServicio."' and Fecha = '".$Fecha."' and IDEstadoReserva	= 1";
		$sql_confirmado = "Select * From  ReservaGeneral Where ( IDSocio in (" . $id_socio_nucleo . ") or IDSocioBeneficiario in (" . $id_socio_nucleo . ") )  and IDServicio  = '" . $IDServicio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva	= 1";
		$qry_confirmado = $dbo->query( $sql_confirmado );
		$turno_tomado = $dbo->rows( $qry_confirmado );
		while ( $row_confirmado = $dbo->fetchArray( $qry_confirmado ) ):
			$turno_dia++;
		endwhile;

		if ( $turno_dia >= 2 ):
			$regla_no_cumplida = 1; // 1 = Ya tomo un turno con la opcion de 2, 3, etc  tuernos seguidos
		endif;

		return $regla_no_cumplida;
	}



	function valida_siguiente_turno_disponible( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos ) {
		$dbo = & SIMDB::get();
		$hora_turno_siguiente = "";
		$flag_turno_disponible = 0;
		$contador_turnos = 1;
		$array_horarios = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "" );

		foreach ( $array_horarios[ "response" ][ 0 ][ "Disponibilidad" ][ 0 ] as $id_horario => $datos_horario ):
			if ( $flag_turno_siguiente == 1 ):
				$respuesta = SIMWebserviceQuemado::set_separa_reserva( $IDClub, $IDSocio, $IDElemento, $IDServicio, "", $Fecha, $datos_horario[ "Hora" ], "", $cantidad_turnos );
		if ( $respuesta == true ):
			$hora_turno_siguiente[] = $datos_horario[ "Hora" ]; // Si se pudo separar
		$contador_turnos++;
		if ( $contador_turnos <= $cantidad_turnos ):
			$Hora = $datos_horario[ "Hora" ];
		endif;
		else :
			unset( $hora_turno_siguiente ); // No se pudo separar
		endif;
		endif;

		if ( $datos_horario[ "Hora" ] == $Hora ):
			$flag_turno_siguiente = 1;
		else :
			$flag_turno_siguiente = 0;
		endif;
		endforeach;

		//Valido que se hayan podido separado los mismos turnos que se solicitaron
		if ( count( $hora_turno_siguiente ) != $cantidad_turnos ):
			unset( $hora_turno_siguiente );
		//echo "no se pudieron tomar todos";
		endif;


		return $hora_turno_siguiente;

	}

	function valida_siguiente_turno_sin_reserva( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos ) {
	  global $array_horas_elemento,$minutoAnadir;

	  $dbo = & SIMDB::get();
	  $hora_turno_siguiente = array();
	  $flag_turno_disponible = 0;
	  $contador_turnos = 1;
	  // Quito 1 turno por que necesito validar los siguientes
	  $cantidad_turnos--;
	  //if ( count( $array_horarios[ $IDElemento ] ) <= 0 ):
	    //$array_horarios[ $IDElemento ] = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "" );


			//if(count($array_horas_elemento)<=0){
				    $dia_fecha = date( 'w', strtotime( $Fecha ) );
				    // Consulto la primer hora disponible del dia para este elemnto para calcular desde cuando se puede reservar
				    $sql_dispo_elemento_primera = "Select IDDisponibilidad,HoraDesde From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Limit 1";
				    $qry_dispo_elemento_primera = $dbo->query( $sql_dispo_elemento_primera );
				    $row_dispo_elemento_primera = $dbo->fetchArray( $qry_dispo_elemento_primera );
				    $HoraDesde=$row_dispo_elemento_primera["HoraDesde"];

				    $minutoAnadir = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $row_dispo_elemento_primera[ "IDDisponibilidad" ] . "'" );

				    $sql_disponibilidad_dia = "SELECT HoraDesde,HoraHasta From ServicioDisponibilidad Where IDDisponibilidad > 0 and IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Order by HoraDesde Asc";
				    $qry_disponibilidad_dia = $dbo->query( $sql_disponibilidad_dia );
				    while($row_disponibilidad_dia = $dbo->fetchArray( $qry_disponibilidad_dia )){
				      $HoraDesde=$row_disponibilidad_dia["HoraDesde"];
				      $HoraHasta=$row_disponibilidad_dia["HoraHasta"];
				      while ( $HoraDesde <= $HoraHasta ){
				         //$array_horas_elemento[]=$HoraDesde.":00";
				         $array_horas_elemento[$HoraDesde]=$HoraDesde;
				         $NuevaHora= strtotime('+'.$minutoAnadir.' minutes',strtotime( $HoraDesde ));
				         $HoraDesde=date("H:i:s",$NuevaHora);
				      }

				    }
				  //endif;
		//}





	  //$array_horarios = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio($IDClub,$IDServicio,$Fecha,$IDElemento,"");

	  //foreach ( $array_horarios[ $IDElemento ][ "response" ][ 0 ][ "Disponibilidad" ][ 0 ] as $id_horario => $datos_horario ):
	  $contador_horas=0;
	  $contador_horas_disponibilidad=1;
	  foreach ( $array_horas_elemento as $id_horario => $datos_horario["Hora"] ):

	    //Verifico el intervalo para saber si el siguiente turno es seguido y no tomar el de una hora despues de un intervalo ej hora de almuerzo
	    if($contador_horas==0){
	      //Guardo array con las horas siguientes esperadas
	      $hora_real =  $Fecha . " " .$Hora;
	      for($i=1;$i<=$cantidad_turnos;$i++){
	          $hora_real=strtotime ( '+'.$minutoAnadir.' minute' , strtotime ( $hora_real ) ) ;
	          $hora_real = date('H:i:s',$hora_real);
	          $array_hora_esperada[$i]=$hora_real;
	      }
	    }


	    if ( $flag_turno_siguiente == 1 ):
	      //$respuesta = SIMWebserviceQuemado::set_separa_reserva($IDClub,$IDSocio,$IDElemento,$IDServicio,"",$Fecha,$datos_horario["Hora"],"",$cantidad_turnos);

	      //Hago esta validacion menos para simulador de areoclub que si permite horas no continuas
	      if($datos_horario["Hora"]==$array_hora_esperada[$contador_horas_disponibilidad] || $IDServicio==3609){

	      $condicion_multiple_elemento = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDElemento,"" );
	      $array_multiple_id = explode( ",", $condicion_multiple_elemento );
	      if ( count( $array_multiple_id ) > 1 ):
	        $condicion_elemento = " and IDServicioElemento in (" . $condicion_multiple_elemento . ")";
	      else :
	        $condicion_elemento = " and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "'";
	      endif;

	      // verifico si esta disponible la reserva
	      //$id_reserva_disponible = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDClub = '".$IDClub."' and IDServicio = '".$IDServicio."' and IDServicioElemento = '".$IDElemento."' and IDEstadoReserva in (1) and Fecha = '".$Fecha."' and Hora = '".$datos_horario["Hora"]."'" );

	      if($IDClub==36): // para aero club no verifico hora ya que el avion puede ser reservado todo el dia
	        $id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "'  " . $condicion_elemento );
	      else:
	        $id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDEstadoReserva in (1,3) and Fecha = '" . $Fecha . "' and Hora = '" . $datos_horario[ "Hora" ] . "' and IDSocio <> '".$IDSocio."' " . $condicion_elemento );
	      endif;

	      //Verifico que no haya fecha/hora de cierre en el turno siguiente
	      $hora_cerrada = self::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $datos_horario[ "Hora" ] );


	      if ( empty( $id_reserva_disponible ) && $hora_cerrada == "" ):
	        //$respuesta = SIMWebserviceQuemado::set_separa_reserva( $IDClub, $IDSocio, $IDElemento, $IDServicio, "", $Fecha, $datos_horario[ "Hora" ], "", "" );
					$respuesta=true;
	      else :
	        $respuesta = false;
	      endif;




	      if ( $respuesta == true ):
	        $hora_turno_siguiente[] = $datos_horario[ "Hora" ]; // Si se pudo separar

	      $contador_turnos++;
	      if ( $contador_turnos <= $cantidad_turnos ):
	        $Hora = $datos_horario[ "Hora" ];
	      endif;
	      else :
	        unset( $hora_turno_siguiente ); // No se pudo separar
	      endif;
	    }
	      $contador_horas_disponibilidad++;
	    endif;

	  //echo "<br>" . $datos_horario[ "Hora" ] ."==". $Hora;
	  if ( $datos_horario[ "Hora" ] == $Hora ):
	    $flag_turno_siguiente = 1;
	  else :
	    $flag_turno_siguiente = 0;
	  endif;

	  $contador_horas++;
	  endforeach;

	  //Valido que se hayan podido separado los mismos turnos que se solicitaron
	  if ( count( $hora_turno_siguiente ) != $cantidad_turnos ):
	    unset( $hora_turno_siguiente );
	  //echo "no se pudieron tomar todos";
	  endif;

		//echo "TOTAL " .count($hora_turno_siguiente);

	  return $hora_turno_siguiente;

	}

	function valida_siguiente_turno_disponible_golf( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos, $Tee, $TipoReserva = "", $array_tee ) {

		global $array_horarios_servicio;
		$dbo = & SIMDB::get();
		$hora_verify = $Hora;
		$hora_turno_siguiente = array();
		$flag_turno_disponible = 0;
		$contador_turnos = 1;
		if ( count( $array_horarios_servicio ) <= 0 ):
			//$array_horarios_servicio = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "","","","","","","" );
			$array_horarios_servicio = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $IDServicio, $Fecha, $IDElemento, "", "", "", "","", "", "" );
		endif;
		//print_r($array_horarios);

		foreach ( $array_horarios_servicio[ "response" ][ 0 ][ "Disponibilidad" ][ 0 ] as $id_horario => $datos_horario ):
			// valido solo las horas mayores a la que solicita para mejorar rendimiento
			$hora_disponible = strtotime( $datos_horario[ "Hora" ] );
		$hora_consultada = strtotime( $Hora );

		if ( $datos_horario[ "Tee" ] == $Tee && $hora_disponible >= $hora_consultada ): // Solo verifico el tee que recibe
			if ( $contador_turnos <= $cantidad_turnos ):

				//Si el tipo de reserva viene vacio es que se está separando o verificando, si es reserva no tengo en cuenta las separadas
				if ( $TipoReserva == "Reserva" ):
					$id_tipo_reserva = "1";
				else :
					$id_tipo_reserva = "1,3";
		endif;
		// verifico si esta disponible la reserva
		$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (" . $id_tipo_reserva . ") and Fecha = '" . $Fecha . "' and Hora = '" . $datos_horario[ "Hora" ] . "' and Tee = '" . $Tee . "'" );
		$hora_real = date( 'Y-m-d H:i:s' );

		//Verifico que no haya fecha/hora de cierre en el turno siguiente
		$hora_cerrada = self::verifica_club_servicio_abierto( $IDClub, $Fecha, $IDServicio, $IDElemento, $datos_horario[ "Hora" ], $Tee );

		$hora_par_disponible = self::valida_hora_con_par( $array_tee, $datos_horario[ "Hora" ], $Tee, $IDElemento, $Fecha, $hora_real );


		if ( empty( $id_reserva_disponible ) && $hora_par_disponible == "S" && $hora_cerrada == "" ):
			$hora_turno_siguiente[] = $datos_horario[ "Hora" ]; // Si se pudo separar
			$Hora = $datos_horario[ "Hora" ];
		else :
			unset( $hora_turno_siguiente ); // No se pudo separar
		endif;
		$contador_turnos++;
		endif;
		endif;
		endforeach;

		//Valido que se hayan podido separado los mismos turnos que se solicitaron
		if ( count( $hora_turno_siguiente ) != $cantidad_turnos ):
			unset( $hora_turno_siguiente );
		//echo "no se pudieron tomar todos";
		endif;

		return $hora_turno_siguiente;

	}


	function set_reserva_general( $IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Observaciones = "", $Admin = "", $Tee = "", $IDDisponibilidad = "", $PermiteRepeticion = "" ) {
		$dbo = & SIMDB::get();







		// Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
		if ( empty( $IDElemento ) ):
			$id_servicio_maestro = $dbo->getFields( "Servicio", "IDServicioMaestro", "IDServicio = '" . $IDServicio . "'" );
		$id_servicio_inicial = $dbo->getFields( "ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
		if ( $id_servicio_inicial == 5 ): // 5 = get_reserva_aleatoria
			$IDElemento = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicio, $Fecha, $Hora, $IDElemento );
		endif;
		endif;




		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {


				//verifico la disponibilidad que se utilizo
				$dia_fecha = date( 'w', strtotime( $Fecha ) );
				$sql_disponibilidad = $dbo->query( "Select IDDisponibilidad From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' Limit 1" );
				$row_disponibilidad = $dbo->fetchArray( $sql_disponibilidad );
				$id_disponibilidad = $row_disponibilidad[ "IDDisponibilidad" ];

				//Valido que no se pueda tomar varios turnos seguidos
				$flag_turno_seguido = SIMWebserviceQuemado::validar_turnos_seguidos( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub );


				// Si es Admin si puede reservas turnos seguidos
				if ( !empty( $Admin ) ):
					$flag_turno_seguido = 0;
				endif;

				if ( $flag_turno_seguido == 0 ):

					$fecha_disponible = 0;

				//Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar
				$array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio );
				foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
					if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
						$fecha_disponible = 1;
				endif;
				endforeach;

				if ( $fecha_disponible == 1 ):

					//Verifico que el socio no tenga mas de tres reservas en el mismo dia
					$sql_reservas_dia = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "'" );
				$total_reserva_socio = ( int )$dbo->rows( $sql_reservas_dia );

				// Si es Admin si puede reservar mas de un turno por dia
				if ( !empty( $Admin ) ):
					$total_reserva_socio = 1;
				$UsuarioCreacion = "Starter";
				else :
					$UsuarioCreacion = "SocioV2";
				endif;


				if ( $total_reserva_socio <= 1 ):




					// verifico que todavia este disponible la reserva
					$id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'" );
				if ( empty( $id_reserva_disponible ) ):

					// Borro la reserva separada
					$sql_inserta_reserva = $dbo->query( "DELETE FROM ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3" );

				//Guardo la reserva
				$sql_inserta_reserva = $dbo->query( "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, Fecha, Hora, Observaciones, Tee, UsuarioTrCr, FechaTrCr)
																			Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $UsuarioCreacion . "',NOW())" );

				$id_reserva_general = $dbo->lastID();

				$array_Invitados = $Invitados;
				if ( count( $array_Invitados ) > 0 ):
					foreach ( $array_Invitados as $id_valor => $valor ):
						// Guardo los invitados socios o externos
						$sql_inserta_invitado = $dbo->query( "INSERT INTO ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
																					Values ('" . $id_reserva_general . "','" . $valor[ "IDSocioInvitado" ] . "', '" . $valor[ "NombreInvitado" ] . "')" );
				endforeach;
				endif;

				$array_Campos = $Campos;
				if ( count( $array_Campos ) > 0 ):
					foreach ( $array_Campos as $id_valor_campo => $valor_campo ):
						// Guardo los campos personalizados
						$sql_inserta_campo = $dbo->query( "INSERT INTO ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
																					Values ('" . $id_reserva_general . "','" . $valor_campo[ "IDServicioCampo" ] . "', '" . $valor_campo[ "Valor" ] . "')" );
				endforeach;
				endif;







				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = "Guardado";
				else :
					$respuesta[ "message" ] = "Lo sentimos la reserva ya fue tomada";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;

				endif;


				else :
					$respuesta[ "message" ] = "Lo sentimos solo se permiten 1 reserva por dia";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				endif;

				else :
					$respuesta[ "message" ] = "Lo sentimos fecha no disponible";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				endif;
				else :
					$respuesta[ "message" ] = "Lo sentimos no se puede reservar turnos seguidos ";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;


				endif;
			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "20. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function validar_formato_hora( $Hora ) {
		$hora_militar = "";
		if ( strlen( $Hora ) > 8 ):
			$cadena = strtotime( $Hora );
		$cadena = date( "H:i:s", $cadena );
		$hora_militar = $cadena;
		else :
			$hora_militar = $Hora;
		endif;

		return $hora_militar;
	}

	function obtener_disponibilidad_utilizada( $IDServicio, $Fecha, $IDElemento, $Hora = "" ) {
		$dbo = & SIMDB::get();
		//verifico la disponibilidad que se utilizo
		if ( !empty( $Hora ) ):
			$condicion_hora = " and ('" . $Hora . "' >= HoraDesde and '" . $Hora . "'<=HoraHasta) ";
		endif;
		$dia_fecha = date( 'w', strtotime( $Fecha ) );
		$sql_disponibilidad = $dbo->query( "Select IDDisponibilidad From ServicioDisponibilidad Where IDServicio = '" . $IDServicio . "' and   IDDia like '%" . $dia_fecha . "|%' and IDServicioElemento like '%" . $IDElemento . "|%' and Activo <>'N' " . $condicion_hora . " Limit 1" );
		$row_disponibilidad = $dbo->fetchArray( $sql_disponibilidad );
		$id_disponibilidad = $row_disponibilidad[ "IDDisponibilidad" ];
		return $id_disponibilidad;
	}


	function busca_cabeza_grupo( $Invitados, $NumeroTurnos, $IDSocio ) {
		//Resto un turno ya que el primero debe ser el socio que realiza la reserva
		$NumeroTurnos -= 1;
		$array_cabeza_grupo = array();
		$total_cabeza = 1;
		$datos_invitado_turno = json_decode( $Invitados, true );
		foreach ( $datos_invitado_turno as $detalle_datos_turno ):
			$IDSocioInvitadoTurno = $detalle_datos_turno[ "IDSocio" ];
		$NombreSocioInvitadoTurno = $detalle_datos_turno[ "Nombre" ];
		if ( !empty( $IDSocioInvitadoTurno ) && $total_cabeza <= $NumeroTurnos ):
			$array_cabeza_grupo[] = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
		$total_cabeza++;
		endif;
		endforeach;

		//Verifico que los invitados sean socio para ponerlos como cabeza ya que si son externos el cabeza debe ser el socio que realiza la reserva
		if ( count( $array_cabeza_grupo ) < $NumeroTurnos ):
			for ( $i_cabeza = 0; $i_cabeza <= $NumeroTurnos; $i_cabeza++ ):
				if ( empty( $array_cabeza_grupo[ $i_cabeza ] ) ):
					$array_cabeza_grupo[ $i_cabeza ] = $IDSocio;
		endif;
		endfor;
		endif;

		return $array_cabeza_grupo;
	}


	function set_reserva_generalV2( $IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Observaciones = "", $Admin = "", $Tee = "", $IDDisponibilidad = "", $Repetir = "", $Periodo = "", $RepetirFechaFinal = "", $IDTipoModalidadEsqui = "", $IDAuxiliar = "", $IDTipoReserva = "", $NumeroTurnos = "", $IDReservaGrupos, $IDBeneficiario = "", $TipoBeneficiario = "", $IDUsuarioReserva = "", $CantidadInvitadoSalon = "", $ListaAuxiliar = "", $Altitud="",$Longitud="" ) {

	  $dbo = & SIMDB::get();

		$IP=SIMUtil::get_IP();

	  $datos_servicio = $dbo->fetchAll( "Servicio", " IDServicio= '" . $IDServicio . "' ", "array" );


		//Consulto el siguiente consecutivo
		if(!empty($datos_servicio["IdentificadorServicio"])){
			$sql_max_numero = "Select MAX(ConsecutivoServicio) as NumeroMaximo From ReservaGeneral Where IDClub = '".$IDClub."' and IDServicio = '".$IDServicio."'";
			$result_numero = $dbo->query($sql_max_numero);
			$row_numero = $dbo->fetchArray($result_numero);
			$siguiente_consecutivo = (int)$row_numero["NumeroMaximo"]+1;
			$IdentificadorServicio=$datos_servicio["IdentificadorServicio"];
			$ConsecutivoServicio=$siguiente_consecutivo;
		}



		//valido si esta en horario permitido para reservar
		if($datos_servicio["ValidarHorario"]=="S" &&  empty( $Admin ) && (date("H:i:s")<$datos_servicio["HoraInicio"]  || date("H:i:s")>$datos_servicio["HoraFin"] )){
			$respuesta[ "message" ] = "Lo sentimos, el horario para reserva es de ".$datos_servicio["HoraInicio"] ." " . $datos_servicio["HoraFin"];
		 	$respuesta[ "success" ] = false;
		  $respuesta[ "response" ] = NULL;
		 	return $respuesta;
		}

		//valido si se puede reservar para el mismo dia
		if($datos_servicio[ "ReservaMismoDia" ]=="N" && $Fecha == date( "Y-m-d" ) && empty( $Admin )){
			$respuesta[ "message" ] = "Lo sentimos, no es posible realizar reservas para el mismo día";
		 	$respuesta[ "success" ] = false;
		  $respuesta[ "response" ] = NULL;
		 	return $respuesta;
		}


	  $datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
	  $NombreSocioReserva=$datos_socio["Nombre"]." " . $datos_socio["Apellido"];
	  $AccionSocioReserva=$datos_socio["Accion"];

	  if(!empty($IDBeneficiario)){
	    $datos_beneficiario = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDBeneficiario . "' ", "array" );
	    $NombreBenefReserva=$datos_beneficiario["Nombre"]." " . $datos_beneficiario["Apellido"];
	    $AccionBenefReserva=$datos_beneficiario["Accion"];
	  }


	  $respuesta_sesion = SIMWebserviceQuemado::valida_cierre_sesion( $IDSocio );
	  if ( $respuesta_sesion == 1 && empty( $Admin ) ):
	    //borro el id para no mostrar mas este mensaje
	    $delete_cerrar_sesion = "delete from CierreSesionSocio Where IDSocio = '" . $IDSocio . "' Limit 1";
	  $dbo->query( $delete_cerrar_sesion );
	  $nom_socio_validar = $NombreSocioReserva;
	  $respuesta[ "message" ] = "Es usted " . $nom_socio_validar . "?  Si no es " . $nom_socio_validar . " por favor cierre sesion y vuelva a ingresar con su usuario y clave para poder tomar la reserva";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;


	  if ( !empty( $IDUsuarioReserva ) ):
	    //verifico si el usuario tienen permiso para hacer reservas
	    $permite_funcionario_reserva = $dbo->getFields( "Usuario", "PermiteReservar", "IDUsuario = '" . $IDUsuarioReserva . "'" );
	  if ( $permite_funcionario_reserva == "N" ):
	    $respuesta[ "message" ] = "Lo sentimos, no tiene permiso para realizar reservas para socios";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;
	  endif;



	  $id_servicio_maestro = $datos_servicio["IDServicioMaestro"];
	  // Si el servicio esta definido con servicio inicial = 5 que es get_reserva_aleatoria busco el primer elemento disponible
	  if ( empty( $IDElemento ) ):
	    $id_servicio_inicial = $dbo->getFields( "ServicioMaestro", "IDServicioInicial", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
	  if ( $id_servicio_inicial == 5 ): // 5 = get_reserva_aleatoria
	    $IDElemento = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicio, $Fecha, $Hora, $IDElemento );
	  endif;
	  endif;


	  if ( ( $id_servicio_maestro == "15" || $id_servicio_maestro == "27" || $id_servicio_maestro == "28" ) && empty( $Tee ) ):
	    $respuesta[ "message" ] = "Para poder reservar debe actualizar la app a la ultima version";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;


	  //Valido si el socio puede reservar
	  $permiso_reserva = SIMWebserviceQuemado::validar_permiso_reserva( $IDSocio );
	  if ( $permiso_reserva == "N" || $datos_socio["IDEstadoSocio"]!=1):
	    $respuesta[ "message" ] = "Lo sentimos no tiene permiso para realizar reservas.";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	    return $respuesta;
	  endif;

	  //Valido si solo permite reservar por edades
	  if($datos_servicio["ValidarEdad"]=="S"){
	    if((int)$IDBeneficiario>0){
	      $fecha_nacimiento = $datos_beneficiario["FechaNacimiento"];
	    }
	    else{
	      $fecha_nacimiento = $datos_socio["FechaNacimiento"];
	    }
	    $fecha_nacimiento = $datos_socio["FechaNacimiento"];
	  	$dia_actual = date("Y-m-d");
	  	$edad_diff = date_diff(date_create($fecha_nacimiento), date_create($dia_actual));
	  	$EdadSocio=$edad_diff->format('%y');
	    if($EdadSocio>=$datos_servicio["EdadMinima"] && $EdadSocio <= $datos_servicio["EdadMaxima"]){
	      $edadpermitida=="S";
	    }
	    else{
	      $respuesta[ "message" ] = "Lo sentimos no tiene la edad permitida para realizar la reserva";
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	      return $respuesta;
	    }
	  }


	  //Valido si el Beneficiario puede reservar
	  if((int)$IDBeneficiario>0){
	    $permiso_reserva = SIMWebserviceQuemado::validar_permiso_reserva( $IDBeneficiario );
	    if ( $permiso_reserva == "N" ):
	      $respuesta[ "message" ] = "Lo sentimos no tiene permiso para realizar reservas";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	    return $respuesta;
	    endif;
	  }


	  //Valido si el socio puede reservar	si es un canje o invitado
	  $permiso_reserva = self::validar_canje_activo( $IDSocio );
	  if ( $permiso_reserva == "1" ):
	    $respuesta[ "message" ] = "Lo sentimos no tiene permiso para realizar reservas, las fechas estan venciadas";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;




	  // Verifico si tiene sanciones
	  $sancion = SIMWebserviceQuemado::verifica_sancion_socio( $IDClub, $IDSocio, $IDServicio, $Fecha );
	  if ( $sancion && ( $IDClub == "8" || $IDClub == "15" ) ):
	    $respuesta[ "message" ] = "Lo sentimos  tiene una sancion vigente.";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;

	  // Si tiene invitados verifico que los invitados no tengan sanciones
	  $datos_invitado = json_decode( $Invitados, true );
	  if ( count( $datos_invitado ) > 0 ):
	    foreach ( $datos_invitado as $detalle_datos ):
	      $IDSocioInvitado = $detalle_datos[ "IDSocio" ];
	  		if ( !empty( $IDSocioInvitado ) ):
					$datos_invitado_reserva = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocioInvitado . "' ", "array" );
					$nombre_socio_sancion = $datos_invitado_reserva["Nombre"]. " " . $datos_invitado_reserva["Apellido"];
	    		$sancion = SIMWebserviceQuemado::verifica_sancion_socio( $IDClub, $IDSocioInvitado, $IDServicio, $Fecha );
	  			if ( $sancion && $IDClub == "8" ):
	  				$respuesta[ "message" ] = "Lo sentimos  el invitado " . $nombre_socio_sancion . " tiene una sancion vigente, la reserva no puede ser tomada";
	  				$respuesta[ "success" ] = false;
	  				$respuesta[ "response" ] = NULL;
	  				return $respuesta;
	  			endif;
					//edad

					if($datos_servicio["ValidarEdad"]=="S"){
						 $fecha_nacimiento_invitado=$dbo->getFields( "Socio", "FechaNacimiento", "IDSocio = '" . $IDSocioInvitado . "' and IDClub = '" . $IDClub . "'" );
				  	 $dia_actual = date("Y-m-d");
				  	 $edad_diff = date_diff(date_create($fecha_nacimiento_invitado), date_create($dia_actual));
				  	 $EdadSocioInvitado=$edad_diff->format('%y');
				    if($EdadSocioInvitado>=$datos_servicio["EdadMinima"] && $EdadSocioInvitado <= $datos_servicio["EdadMaxima"]){
				      $edadpermitida=="S";
				    }
				    else{
				      $respuesta[ "message" ] = "Lo sentimos el invitado: ".$nombre_socio_sancion." no tiene la edad permitida";
				      $respuesta[ "success" ] = false;
				      $respuesta[ "response" ] = NULL;
				      return $respuesta;
				    }
				  }
					//fin edad
	  		endif;
	  endforeach;
	  endif;


	  //Si es admin valido si el auxiliar boleador esta disponible de nuevo
	  if ( !empty( $Admin ) && !empty( $IDAuxiliar ) ):
	      $flag_aux_disp = 0;
	      $response_dispo_aux = self::get_auxiliares( $IDClub, $IDServicio, $Fecha, $Hora );
	      $response_dispo_aux[ "success" ];
	      if ( $response_dispo_aux[ "success" ] == 0 ):
	        $flag_aux_disp = 1;
	      else :
	        $flag_aux_disp = 1;
	          foreach ( $response_dispo_aux[ "response" ] as $datos_conf_aux ):
	              foreach ( $datos_conf_aux[ "Auxiliares" ] as $datos_aux ):
	                  if ( $IDAuxiliar == $datos_aux[ "IDAuxiliar" ] ):
	                      $flag_aux_disp = 0;
	                  endif;
	              endforeach;
	          endforeach;
	      endif;

	      if ( $flag_aux_disp == 1 ):
	          $respuesta[ "message" ] = "Lo sentimos, el auxiliar no esta disponible en ese horario";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	      endif;
	  endif;

	  //Verifico de nuevo que la lista de auxiliares seleccionados esten disponibles
	  if (  !empty( $ListaAuxiliar ) ):
	      $datos_auxiliares_revisar = json_decode( $ListaAuxiliar, true );
	      $response_dispo_aux = self::get_auxiliares( $IDClub, $IDServicio, $Fecha, $Hora );
	      foreach ( $response_dispo_aux[ "response" ] as $datos_conf_aux ):
	          foreach ( $datos_conf_aux[ "Auxiliares" ] as $datos_aux ):
	                  $array_aux_disponibles[]=$datos_aux["IDAuxiliar"];
	          endforeach;
	      endforeach;

	      if ( count( $datos_auxiliares_revisar ) > 0 ):
	          foreach ( $datos_auxiliares_revisar as $key_aux => $auxiliar_seleccionado ):
	              if ( !in_array($auxiliar_seleccionado["IDAuxiliar"],$array_aux_disponibles) ):
	                  $respuesta[ "message" ] = "El auxiliar ".$auxiliar_seleccionado["Nombre"]." no esta disponible en ese horario";
	                  $respuesta[ "success" ] = false;
	                  $respuesta[ "response" ] = NULL;
	                  return $respuesta;
	              endif;
	          endforeach;
	      endif;
	  endif;


	  //Especial Pereira restaurante 40 por dia sin importar la hora
	  if($IDServicio==5609 && $IDClub==15){
	      //Verifico cuantas personas estan inscritas
	      $LimiteCuposServicio=40;
	      $sql_invitados="SELECT SUM(CantidadInvitadoSalon) as TotalInvitado FROM ReservaGeneral WHERE IDServicio = '".$IDServicio."' and IDClub='".$IDClub."' and Fecha = '".$Fecha."'";
	      $result_invitado=$dbo->query($sql_invitados);
	      $row_invitado_servicio=$dbo->fetchArray($result_invitado);
	      if((int)$row_invitado_servicio["TotalInvitado"]>$LimiteCuposServicio){
	        $respuesta[ "message" ] = "Lo sentimos se llegó al máximo permitido de " . $LimiteCuposServicio . " personas al dia";
	        $respuesta[ "success" ] = false;
	        $respuesta[ "response" ] = NULL;
	        return $respuesta;
	      }
	      else{
	        //Verifico que los seleccionados no superen el permitido
	        $TotalNuevoInvitado=(int)$CantidadInvitadoSalon+(int)$row_invitado_servicio["TotalInvitado"];
	        if($TotalNuevoInvitado>$LimiteCuposServicio){
	          $CuposRestantes=(int)$LimiteCuposServicio-(int)$row_invitado_servicio["TotalInvitado"];
	          $respuesta[ "message" ] = "Lo sentimos solo quedan " . $CuposRestantes . " cupos";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	        }
	      }
	  }



	  //Validacion especial para Pradera en Esqui en la cual no se permite al grupo familiar tomar una reserva si alguein de su grupo eliminó una previamente
	  $MinutosRestriccion = $datos_servicio["BloquearMinutosGrupo"];
	  //if( ($IDClub==16) && $IDServicio==327):
	  if ( ( int )$MinutosRestriccion > 0 ):

	    //if($IDClub==8):
	    //$minutos_restriccion = 60;
	    $minutos_restriccion = ( int )$MinutosRestriccion;
	  //verifico si alguien del grupo ha eliminado reserva
	  $grupo_familiar = self::get_beneficiarios( $IDClub, $IDSocio );
	  if ( count( $grupo_familiar[ "response" ][ "Beneficiarios" ] ) > 0 ):
	    foreach ( $grupo_familiar[ "response" ][ "Beneficiarios" ] as $datos_nucleo ):
	      if ( $datos_nucleo[ "TipoBeneficiario" ] == "Socio" ):
	        $array_id_benef[] = $datos_nucleo[ "IDBeneficiario" ];
	  endif;
	  endforeach;
	  endif;
	  if ( count( $array_id_benef ) > 0 ):
	    $condicion_benef = " or IDSocio in (" . implode( ",", $array_id_benef ) . ") ";
	  endif;

	  $sql_eliminada = "Select * From ReservaGeneralEliminada Where (IDSocio = '" . $IDSocio . "' " . $condicion_benef . ")  and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' order by IDReservaGeneral Desc limit 1";
	  $result_eliminada = $dbo->query( $sql_eliminada );
	  if ( $dbo->rows( $result_eliminada ) > 0 ):
	    //verifico si ya cumplio el tiempo limite para poder intentar reservar
	    $row_reserva_eliminada = $dbo->fetchArray( $result_eliminada );
	  $FechaHoraEliminacion = strtotime( '+' . $minutos_restriccion . ' minute', strtotime( $row_reserva_eliminada[ "FechaTrCr" ] ) );
	  $FechaHoraActual = strtotime( date( "Y-m-d H:i:s" ) );
	  if ( $FechaHoraActual <= $FechaHoraEliminacion ):
	    $respuesta[ "message" ] = "La reserva no puede ser tomada ya que alguien de su grupo familiar hizo una reserva y la eliminó para esta fecha, puede volver a intentar a las: " . date( "H:i:s", $FechaHoraEliminacion );
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;
	  endif;
	  endif;

	  //Especial para atc solo dos turnos por semana
	  if ( $IDClub == 26 && empty( $Admin ) ):
	    if ( $IDServicio == "1490" || $IDServicio == "2106" || $IDServicio == "2109" || $IDServicio == "2110"
	    || $IDServicio == "4350" || $IDServicio == "1484" || $IDServicio == "5035" || $IDServicio == "5039" || $IDServicio == "7973" ): // tenis y clase tenis hasta 2
	      $ReservasPermitidaSemana = 2;
	  $condicion_reserva_verif = " and Tipo <> 'Automatica'";
	  elseif ( $IDServicio == "1462" ): // masajes manicure hasta 3
	    $ReservasPermitidaSemana = 3;
	  $condicion_reserva_verif = "";
	  else : // las demas
	    $ReservasPermitidaSemana = 100;
	    $condicion_reserva_verif = "";
	  endif;

	  $fecha_hoy_semana = date( "Y-m-d" );
	  $hora_hoy_semana = date( "H:i:s" );
	  $year = date( 'Y', strtotime( $Fecha ) );
	  $week = date( 'W', strtotime( $Fecha ) );
	  $dia_reserva_atc = date("w",strtotime($Fecha)) ;
	  $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
	  $fecha_lunes = $fechaInicioSemana; //Lunes
	  $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
	  // Valido tambien los de la misma acción
	  //$accion_padre = $dbo->getFields( "Socio", "AccionPadre", "IDSocio = '" . $IDSocio . "'" );
	  //$accion_socio = $dbo->getFields( "Socio", "Accion", "IDSocio = '" . $IDSocio . "'" );
	  $accion_padre = $datos_socio["AccionPadre"];
	  $accion_socio = $datos_socio["Accion"];

	  if ( empty( $accion_padre ) ): // Es titular
	    $array_socio[] = $IDSocio;
	  $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
	  $result_nucleo = $dbo->query( $sql_nucleo );
	  while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	    $array_socio[] = $row_nucleo[ "IDSocio" ];
	  endwhile;
	  else :
	    $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
	  $result_nucleo = $dbo->query( $sql_nucleo );
	  while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	    $array_socio[] = $row_nucleo[ "IDSocio" ];
	  endwhile;
	  endif;
	  if ( count( $array_socio ) > 0 ):
	    $id_socio_nucleo = implode( ",", $array_socio );
	  endif;


	  if( (int)$dia_reserva_atc>=1 && (int)$dia_reserva_atc<=5){
	    $fecha_inicio_valida = $fechaInicioSemana; //Lunes
	    $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 4 day' ) ); //Viernes
	    $mensaje_reserva=" entre semana";
	  }
	  else{
	    $proximo_sabado = strtotime('next Saturday');
	    $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
	    $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
	    $mensaje_reserva=" los fines de semana";
	  }




	  //Consulto las de hoy pasada la hora actual
	  $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	  $total_reservas_semana = $dbo->rows( $sql_reservas_sem );

	  //Consulto la de mañana en adelante
	  $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	  $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

	  if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
	    $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por semana por accion ";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;
	  endif;


	  //Especial para sabana solo dos turnos por fin semana
	  if ( $IDClub == 95 && empty( $Admin ) ):

	    if ( $IDServicio == "15964" || $IDServicio == "16047" ): // tenis y clase tenis hasta 2

	      $condicion_reserva_verif = " and Tipo <> 'Automatica'";
	      $fecha_hoy_semana = date( "Y-m-d" );
	      $hora_hoy_semana = date( "H:i:s" );
	      $year = date( 'Y', strtotime( $Fecha ) );
	      $week = date( 'W', strtotime( $Fecha ) );
	      $dia_reserva_atc = date("w",strtotime($Fecha)) ;
	      $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
	      $fecha_lunes = $fechaInicioSemana; //Lunes
	      $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
	      $accion_padre = $datos_socio["AccionPadre"];
	      $accion_socio = $datos_socio["Accion"];

	      if ( empty( $accion_padre ) ): // Es titular
	          $array_socio[] = $IDSocio;
	          $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
	          $result_nucleo = $dbo->query( $sql_nucleo );
	          while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	            $array_socio[] = $row_nucleo[ "IDSocio" ];
	          endwhile;
	      else :
	        $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
	        $result_nucleo = $dbo->query( $sql_nucleo );
	        while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	          $array_socio[] = $row_nucleo[ "IDSocio" ];
	        endwhile;
	      endif;

	      if ( count( $array_socio ) > 0 ):
	        $id_socio_nucleo = implode( ",", $array_socio );
	      endif;

	      if( (int)$dia_reserva_atc>=1 && (int)$dia_reserva_atc<=5){
	        $fecha_inicio_valida = $fechaInicioSemana; //Lunes
	        $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 4 day' ) ); //Viernes
	        $mensaje_reserva=" entre semana";
	        $ReservasPermitidaSemana = 20;

	      }
	      else{
					$ReservasPermitidaSemana=1;
					if($dia_reserva_atc==0){
						$fecha_inicio_valida = date("Y-m-d",strtotime($Fecha."- 1 days"));
					}
			    $fecha_fin_valida = $Fecha; //Domingo
			    $mensaje_reserva=" los fines de semana";
	      }

				//Consulto la de mañana en adelante
				$sql_revisar="Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif;
	      $sql_reservas_sem = $dbo->query( $sql_revisar );
	      $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );


	      if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
	        $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas " . $mensaje_reserva;
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	      return $respuesta;
				endif;

	  endif;
	endif;

	  /*
	  ///Especial atc no puede tener dos turnos el mismo dia
	  if ( $IDClub == 26 && empty( $Admin )) {
	    if ( $IDServicio == "1490" || $IDServicio == "2109" || $IDServicio == "2110" ){
	      $sql_reserva_otro="";
	      $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (1490,2109,2110) and IDEstadoReserva=1 ";
	      $mensaje_cruce="Ya tiene otra reserva en el mismo dia";
	      if(!empty($sql_reserva_otro)){
	          $r_reserva_otro=$dbo->query($sql_reserva_otro);
	          if($dbo->rows($r_reserva_otro)>=1){
	            $respuesta[ "message" ] = $mensaje_cruce;
	            $respuesta[ "success" ] = false;
	            $respuesta[ "response" ] = NULL;
	            return $respuesta;
	          }
	      }
	    }
	  }
	  ///FIN Especial atc no puede tener dos turnos el mismo dia

	  ///Especial atc si reserva clase ya debe tener una cancha
	  if ( $IDClub == 26 && empty( $Admin )) {
	    if ( $IDServicio == "2106" || $IDServicio == "5035" || $IDServicio == "7973"){
	      $sql_reserva_otro="";
	      $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (1490,2109,2110,4350) and IDEstadoReserva=1 ";
	      $mensaje_cruce="Primero debe tener una reserva de cancha antes de hacer la reserva de clase";
	      if(!empty($sql_reserva_otro)){
	          $r_reserva_otro=$dbo->query($sql_reserva_otro);
	          if($dbo->rows($r_reserva_otro)<=0){
	            $respuesta[ "message" ] = $mensaje_cruce;
	            $respuesta[ "success" ] = false;
	            $respuesta[ "response" ] = NULL;
	            return $respuesta;
	          }
	      }
	    }
	  }
	  ///Especial atc si reserva clase ya debe tener una cancha

	  ///Especial atc si reserva clase o cancha no debe tener escuela
	  if ( $IDClub == 26 && empty( $Admin )) {
	    if ( $IDServicio == "1484" || $IDServicio == "1490" || $IDServicio == "2106" || $IDServicio == "2109" || $IDServicio == "2110" || $IDServicio == "4350" || $IDServicio == "5035"
	        || $IDServicio == "2106" || $IDServicio == "5039" || $IDServicio == "7973"){
	      $sql_reserva_otro="";
	      $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."'  and IDServicio in (1446) and IDEstadoReserva=1 ";
	      $mensaje_cruce="Ya tienen una reserva de cancha o clase, no puede inscribirse a una escuela";
	      if(!empty($sql_reserva_otro)){
	          $r_reserva_otro=$dbo->query($sql_reserva_otro);
	          if($dbo->rows($r_reserva_otro)>0){
	            $respuesta[ "message" ] = $mensaje_cruce;
	            $respuesta[ "success" ] = false;
	            $respuesta[ "response" ] = NULL;
	            return $respuesta;
	          }
	      }
	    }
	    elseif($IDServicio == "1446"){
	      $sql_reserva_otro="";
	      $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and IDServicio in (1484,1490,2106,2109,2110,5035,2106,5039,7973) and IDEstadoReserva=1 ";
	      $mensaje_cruce="Ya tienen una reserva de escuela, no puede reservar una cancha o clase";
	      if(!empty($sql_reserva_otro)){
	          $r_reserva_otro=$dbo->query($sql_reserva_otro);
	          if($dbo->rows($r_reserva_otro)>0){
	            $respuesta[ "message" ] = $mensaje_cruce;
	            $respuesta[ "success" ] = false;
	            $respuesta[ "response" ] = NULL;
	            return $respuesta;
	          }
	      }

	    }
	  }
	  ///Especial atc si reserva clase ya debe tener una cancha
	  */



	  //Especial comercio pereira el lunes puede hacer la reserva de maximo 3 turnos por accion con un mismo Profesor despues del lunes si puede hacer las que quiera
	  $dia_actual_app=date("N");
	  if ( $IDClub == 48 && empty( $Admin ) && $dia_actual_app==1){
	        if ( $IDServicio == "4433" || $IDServicio == "4514" || $IDServicio == "7768" || $IDServicio == "4434" || $IDServicio == "4499" ){ // tenis y clase tenis hasta 3
	          $ReservasPermitidaSemana = 6;
	        }
	        else{
	          $ReservasPermitidaSemana = 100;
	        }

	      $fecha_hoy_semana = date( "Y-m-d" );
	      $hora_hoy_semana = date( "H:i:s" );
	      $year = date( 'Y', strtotime( $Fecha ) );
	      $week = date( 'W', strtotime( $Fecha ) );
	      $dia_reserva_atc = date("w",strtotime($Fecha)) ;
	      $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
	      $fecha_lunes = $fechaInicioSemana; //Lunes
	      $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
	      // Valido tambien los de la misma acción
	      $accion_padre = $datos_socio["AccionPadre"];
	      $accion_socio = $datos_socio["Accion"];
	      if ( empty( $accion_padre ) ): // Es titular
	        $array_socio[] = $IDSocio;
	      $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
	      $result_nucleo = $dbo->query( $sql_nucleo );
	      while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	        $array_socio[] = $row_nucleo[ "IDSocio" ];
	      endwhile;
	      else :
	        $sql_nucleo = "Select IDSocio From Socio Where (AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "') and IDClub = '" . $IDClub . "' ";
	      $result_nucleo = $dbo->query( $sql_nucleo );
	      while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	        $array_socio[] = $row_nucleo[ "IDSocio" ];
	      endwhile;
	      endif;
	      if ( count( $array_socio ) > 0 ):
	        $id_socio_nucleo = implode( ",", $array_socio );
	      endif;



	        $fecha_inicio_valida = $fechaInicioSemana; //Lunes
	        $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
	        $mensaje_reserva=" semana";


	      //Consulto las de hoy pasada la hora actual
	      $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento = '".$IDElemento."' " . $condicion_reserva_verif );
	      $total_reservas_semana = $dbo->rows( $sql_reservas_sem );

	      //Consulto la de mañana en adelante
	      $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDServicioElemento = '".$IDElemento."' " . $condicion_reserva_verif );
	      $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

	      if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
	        $respuesta[ "message" ] = "Lo sentimos solo se permite crear el dia de hoy: " . $ReservasPermitidaSemana . " reservas por accion ";
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	      return $respuesta;
	      endif;
	}
		//solo permite entre las 8 y 4pm
		if ( $IDClub == 48 && empty( $Admin ) ){
			$HoraActualC=date("H:i:s");
			if($Fecha==date("Y-m-d")){
					$respuesta[ "message" ] = "Lo sentimos no se puede hacer reservas para el mismo dia ";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
			}
			elseif($HoraActualC<="08:00:00" || $HoraActualC>="19:00:00" ){
				$respuesta[ "message" ] = "Lo sentimos solo se puede hacer reservas de 8am a 4pm ";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
				return $respuesta;
			}

		}
		//Fin Especial Comerio pereira


	  //Especial para Country solo dos turnos entre semana y 2 fin de semana
	  if ( $IDClub == 44 && empty( $Admin ) ):
	    if ( $IDServicio == "3941"  ): // tenis y clase tenis hasta 2
	      $ReservasPermitidaSemana = 2;
	      $condicion_reserva_verif = " and Tipo <> 'Automatica'";
	    else : // las demas
	      $ReservasPermitidaSemana = 100;
	      $condicion_reserva_verif = "";
	    endif;

	  $fecha_hoy_semana = date( "Y-m-d" );
	  $hora_hoy_semana = date( "H:i:s" );
	  $year = date( 'Y', strtotime( $Fecha ) );
	  $week = date( 'W', strtotime( $Fecha ) );
	  $dia_reserva = date("w",strtotime($Fecha)) ;
	  $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );

	  $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
	  if( (int)$dia_reserva>=1 && (int)$dia_reserva<=5){
	    $fecha_inicio_valida = $fechaInicioSemana; //Lunes
	    $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 4 day' ) ); //Viernes
	    //$fecha_fin_valida = "2019-03-08";
	    //$fecha_inicio_valida = "2019-03-04";
	    $mensaje_reserva=" entre semana";
	  }
	  else{
	    $proximo_sabado = strtotime('next Saturday');
	    $fecha_inicio_valida = date('Y-m-d', $proximo_sabado);
	    $fecha_fin_valida = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) ); //Domingo
	    $mensaje_reserva=" los fines de semana";
	    //si el proximo Lunes es festivo se permite 3 reservas el fin de semana
	    $proximo_Lunes = strtotime('next Monday');
	    $fecha_prox_lunes= date('Y-m-d', $proximo_Lunes);
	    $IDFestivo = $dbo->getFields( "Festivos", "IDFestivo", "Fecha = '" . $fecha_prox_lunes . "'" );
	    if(!empty($IDFestivo))
	      $ReservasPermitidaSemana = 3;
	  }



	      //Consulto las de hoy pasada la hora actual ENTRE SEMANA
	      $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	      $total_reservas_semana = $dbo->rows( $sql_reservas_sem );
	      //Consulto la de mañana en adelante
	      $sql_reservas_sem = $dbo->query( "SELECT * From ReservaGeneral Where ( IDSocio in (" . $IDSocio . ") and IDSocioBeneficiario = '".$IDBeneficiario."') and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_inicio_valida . "' and Fecha <= '" . $fecha_fin_valida . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	      $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

	      if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
	        $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas activas  " . $mensaje_reserva;
	        $respuesta[ "success" ] = false;
	        $respuesta[ "response" ] = NULL;
	        return $respuesta;
	      endif;



	  endif;

	  //Especial atc para Iluminados y Exteriores los sabados, Domingos solo se puede reservar por app hasta las 7am
	  if ( $IDClub == 26 && empty( $Admin ) ):
	    $dia_semana_reserva = date( "w", strtotime( $Fecha ) );
	    if ( date( "H:i:s" ) >= "07:00:00" &&  ( ( ( $IDServicio == "1490" || $IDServicio == "2109" ) && ( $dia_semana_reserva == "6" || $dia_semana_reserva == "0"   ))  )):
	      //$respuesta[ "message" ] = "Lo sentimos solo se permiten reservar por el app hasta las 7am para este dia ";
	      //$respuesta[ "success" ] = false;
	      //$respuesta[ "response" ] = NULL;
	      //return $respuesta;
	    endif;
	  endif;
	  //FIN ESPECIAL atc




	  //Especial Country para reservas de 6am y 7am  solo hasta las 8pm del dia anterior
	  if ( ($IDClub == 44 || $IDClub == 8 ) && empty( $Admin ) ):
	    $dia_manana = date('Y-m-d',time()+84600);
	    $fecha_hoy_v=date("Y-m-d");
	    if ( (   ( date( "H:i:s" ) >= "20:00:00"  && $dia_manana == $Fecha )  || $fecha_hoy_v == $Fecha ) &&  ($IDServicio == "3941" || $IDServicio == "36")  &&  ($Hora == '06:00:00' || $Hora == '07:00:00' )  && (!empty( $ListaAuxiliar ) && $ListaAuxiliar!="[]" )):
	      $respuesta[ "message" ] = "Lo sentimos solo se permiten reservar con profesor/monitor por el app hasta antes de las 8pm para turnos de 6am y 7am ".$ListaAuxiliar;
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	      return $respuesta;
	    endif;
	  endif;
	  //FIN ESPECIAL country

	  //Especial Country Sala belleza servicios que no se pueden cruzar
	  if ( ($IDClub == 44 ) && empty( $Admin ) ):
	    $sql_reserva_otro="";
	    switch($IDServicio){
	      case "11734": //maquillaje
	        //no se puede tener otra reserva en el mismo horario
	        $sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (3897,11732,11733,11736,12470) and IDEstadoReserva = 1";
	        $mensaje_cruce="Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar maquillaje a la misma hora";
	      break;
	      case "11736": //tratamientos quimicos
	        $sql_reserva_otro="SELECT IDReservageneral FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (11732,11733,11734,11736,12470) and IDEstadoReserva = 1";
	        $mensaje_cruce="Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar tratamiento quimicos a la misma hora";
	      break;
	      case "11733": // corte
	      case "11732": // cepillado
	        $sql_reserva_otro="SELECT IDReservageneral FROM ReservaGeneral WHERE IDSocio ='".$IDSocio."' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and IDServicio in (11736,11734) and IDEstadoReserva = 1 ";
	        $mensaje_cruce="Ya tiene otra reserva en sala de belleza a la misma hora no es posible solicitar peinado/corte/cepillado a la misma hora";
	      break;
	    }


	    if(!empty($sql_reserva_otro)){
	        $r_reserva_otro=$dbo->query($sql_reserva_otro);
	        if($dbo->rows($r_reserva_otro)>=1){
	          $respuesta[ "message" ] = $mensaje_cruce;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	        }
	    }
	  endif;
	  //FIN ESPECIAL country

	  //Especial Country Sala belleza Keratina y antifrizz se reserva turno a otras personas
	  if ( ($IDClub == 44 ) && $IDServicio ==11736 && ($IDTipoReserva=="1482" || $IDTipoReserva=="1483" || $IDTipoReserva=="1484") ){

	  }


	  //FIN ESPECIAL country



	  //Especial Comercio pereira cuando se selecciona auxiliar solo permite cuando es 1 hora
	  if ( ($IDClub == 48 ) ){
	    if($ListaAuxiliar=="null")
	      $ListaAuxiliar="";

	    if ( ($IDServicio == "4514") && $IDTipoReserva != 881){
	      if( (!empty( $ListaAuxiliar ) && $ListaAuxiliar!="[]")   ):
	        $con_aux="S";
	      elseif($IDAuxiliar!=""):
	        $con_aux="S";
	      endif;

	      if($con_aux=="S"){
	        $respuesta[ "message" ] = "Para reservas con monitor solo se pemite 1 hora no 2 horas. ";
	        $respuesta[ "success" ] = false;
	        $respuesta[ "response" ] = NULL;
	        return $respuesta;
	      }
	    }
	  }
	  //FIN COMERCIO

	  //Especial Lagartos la cancha nocturnas solo se puede hasta las 5:30pm
	  if ( ($IDClub == 7 && $IDServicio==221 && date("Y-m-d")==$Fecha && $Hora>="18:00:00" && date("H:i:s")>='17:30:00' ) && empty( $Admin ) ):
	      $respuesta[ "message" ] = "Lo sentimos solo se permiten reservar estas canchas antes de las 5:30pm";
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	      return $respuesta;
	  endif;
	  //FIN ESPECIAL Lagartos

	  // Especial lagartos si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis$Fecha = "2019-04-11";
	  if($IDServicio==43 || $IDServicio==221 || $IDServicio==629){
	    $bloqueo_incumplida="N";
	    $Hace8dias = strtotime ( '-7 day' , strtotime ( $Fecha ) ) ;
	    $Hace8dias = date ( 'Y-m-d' , $Hace8dias );
	    $sql_inc="SELECT IDReservaGeneral,IDSocioBeneficiario,IDSocio FROM ReservaGeneral WHERE Fecha='".$Hace8dias."' and (Cumplida = 'N' or Cumplida = 'P' ) and (IDSocio = '".$IDSocio."' or IDSocioBeneficiario = '".$IDSocio."') and IDServicio in (43, 221, 629)";
	    $result_incumplidat=$dbo->query($sql_inc);
	    if($dbo->rows($result_incumplidat)>0){
	      $row_datos_reserva_inc=$dbo->fetchArray($result_incumplidat);
	      if($row_datos_reserva_inc["IDSocioBeneficiario"]>0 && ($row_datos_reserva_inc["IDSocioBeneficiario"]==$IDSocio || $row_datos_reserva_inc["IDSocioBeneficiario"]==$IDBeneficiario))
	        $bloqueo_incumplida="S";
	      elseif($row_datos_reserva_inc["IDSocioBeneficiario"]<=0 && $row_datos_reserva_inc["IDSocio"]==$IDSocio)
	        $bloqueo_incumplida="S";

	        if($bloqueo_incumplida=="S"){
	          $respuesta[ "message" ] = "Lo sentimos, el dia ".$Hace8dias." tiene una reserva incumplida, no puede tomar reservas el dia de hoy para tenis";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	        }
	    }
	  }
	  // FIN Especial lagartos si hace 8 dias incumpli oreserva no lo deja en el dia actual para Tennis$Fecha = "2019-04-11";




	  //Especial para atc solo dos turnos por semana
	  if ( $IDClub == 7 && empty( $Admin ) ){
	    if ( $IDServicio == "2209" ): // Retos lagartos
	      $ReservasPermitidaSemana = 1;
	      $condicion_reserva_verif = " and Tipo <> 'Automatica'";


	        $fecha_hoy_semana = date( "Y-m-d" );
	        $hora_hoy_semana = date( "H:i:s" );
	        $year = date( 'Y', strtotime( $Fecha ) );
	        $week = date( 'W', strtotime( $Fecha ) );
	        $fechaInicioSemana = date( 'Y-m-d', strtotime( $year . 'W' . str_pad( $week, 2, '0', STR_PAD_LEFT ) ) );
	        $fecha_lunes = $fechaInicioSemana; //Lunes
	        $fecha_domingo = date( 'Y-m-d', strtotime( $fechaInicioSemana . ' 6 day' ) );; //Domingo
	        // Valido tambien los de la misma acción
	        $accion_padre = $datos_socio["AccionPadre"];
	        $accion_socio = $datos_socio["Accion"];

	        if ( empty( $accion_padre ) ): // Es titular
	          $array_socio[] = $IDSocio;
	          /*
	          $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
	          $result_nucleo = $dbo->query( $sql_nucleo );
	          while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	            $array_socio[] = $row_nucleo[ "IDSocio" ];
	          endwhile;
	          */
	        endif;
	        if ( count( $array_socio ) > 0 ):
	          $id_socio_nucleo = implode( ",", $array_socio );
	        endif;

	        //Consulto las de hoy pasada la hora actual
	        $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDSocioBeneficiario = '".$IDBeneficiario."' and (Fecha='" . date( "Y-m-d" ) . "' and Hora >= '" . date( "H:i:s" ) . "' ) and (Fecha >= '" . $fecha_lunes . "' and Fecha <= '" . $fecha_domingo . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	        $total_reservas_semana = $dbo->rows( $sql_reservas_sem );

	        //Consulto la de mañana en adelante
	        $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and IDSocioBeneficiario = '".$IDBeneficiario."' and  Fecha > '" . date( "Y-m-d" ) . "'  and (Fecha >= '" . $fecha_lunes . "' and Fecha <= '" . $fecha_domingo . "') and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	        $total_reservas_semana += ( int )$dbo->rows( $sql_reservas_sem );

	        if ( ( int )$total_reservas_semana >= ( int )$ReservasPermitidaSemana ):
	          $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por fin de semana ";
	        $respuesta[ "success" ] = false;
	        $respuesta[ "response" ] = NULL;
	        return $respuesta;
	        endif;
	      endif;
	}

	  //Especial para clubes que solo se permite x reserva por accion por dia
	  $maximo_turnos_dia = $datos_servicio["NumeroReservasPermitidaAccion"];
	  if ( ( int )$maximo_turnos_dia > 0 && empty( $Admin ) ):
	    unset( $array_socio );
	  $condicion_reserva_verif = " and Tipo <> 'Automatica'";
	  $ReservasPermitidaSemana = $maximo_turnos_dia;
	  // Valido tambien los de la misma acción
	  $accion_padre = $datos_socio["AccionPadre"];
	  $accion_socio = $datos_socio["Accion"];

	  if ( empty( $accion_padre ) ): // Es titular
	    $array_socio[] = $IDSocio;
	  $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_socio . "' and IDClub = '" . $IDClub . "' ";
	  $result_nucleo = $dbo->query( $sql_nucleo );
	  while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	    $array_socio[] = $row_nucleo[ "IDSocio" ];
	  endwhile;
	  else :
	    $sql_nucleo = "Select IDSocio From Socio Where AccionPadre = '" . $accion_padre . "' or Accion = '" . $accion_padre . "' and IDClub = '" . $IDClub . "' ";
	  $result_nucleo = $dbo->query( $sql_nucleo );
	  while ( $row_nucleo = $dbo->fetchArray( $result_nucleo ) ):
	    $array_socio[] = $row_nucleo[ "IDSocio" ];
	  endwhile;
	  endif;
	  if ( count( $array_socio ) > 0 ):
	    $id_socio_nucleo = implode( ",", $array_socio );
	  endif;

	  //$sql_reservas_sem = $dbo->query("Select * From ReservaGeneral Where IDSocio in (".$id_socio_nucleo.") and (Fecha='".$Fecha."' and Hora >= '".date("H:i:s")."' )  and IDServicio = '".$IDServicio."' and IDEstadoReserva = '1' " . $condicion_reserva_verif);
	  $sql_reservas_sem = $dbo->query( "Select * From ReservaGeneral Where IDSocio in (" . $id_socio_nucleo . ") and (Fecha='" . $Fecha . "')  and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_reserva_verif );
	  $total_reservas_dia_nucleo = $dbo->rows( $sql_reservas_sem );
	  if ( ( int )$total_reservas_dia_nucleo >= ( int )$ReservasPermitidaSemana ):
	    $respuesta[ "message" ] = "Lo sentimos solo se permiten " . $ReservasPermitidaSemana . " reservas por dia por accion ";
	  $respuesta[ "success" ] = false;
	  $respuesta[ "response" ] = NULL;
	  return $respuesta;
	  endif;

	  endif;

	  //Especial Guaymaral si es clase se reserva la de dentro de ocho dias automaticamente siempre y cuando este aciva la fecha
	  if ( $IDClub == 8 && $IDServicio == 41 && $IDTipoReserva == "517" ):
	    $RepetirFechaFinal = strtotime( '+1 week', strtotime( $Fecha ) );
	  $minima_fecha = date( "Y-m" ) . "-14";
	  $maxima_fecha = new DateTime();
	  $maxima_fecha->modify( 'last day of this month' );
	  $maxima_fecha->format( 'Y-m-d' );
	  if ( ( int )date( "d" ) <= 14 && ( int )date( "d", $RepetirFechaFinal ) <= 14 ):
	    $permite_repetir = "S";
	  elseif ( ( int )date( "d" ) >= 15 && $RepetirFechaFinal <= strtotime( $maxima_fecha->format( 'Y-m-d' ) ) ):
	    $permite_repetir = "S";
	  else :
	    $permite_repetir = "N";
	  endif;
	  if ( $permite_repetir == "S" ):
	    $mensaje_especial_repetir = " Se realizó un reserva automatica para el día " . date( "Y-m-d", $RepetirFechaFinal );
	  $Repetir = "S";
	  $Periodo = "Semana";
	  $RepetirFechaFinal = strtotime( '+8 day', strtotime( $Fecha ) );
	  $RepetirFechaFinal = date( "Y-m-d", $RepetirFechaFinal );
	  else :
	    $mensaje_especial_repetir = " No se pudo realizar la reserva automatica en la siguiente semana ya que la fecha aun no esta disponible";
	  endif;
	  endif;
	  //Fin validación especial

	  //Especial Aeroclub cuando es crucero separa varios días
	   //if ( $IDClub == 36 && $IDServicio == 3608 && ( $IDTipoReserva == 718 || $IDTipoReserva == 745 || $IDTipoReserva == 746 || $IDTipoReserva == 747 || $IDTipoReserva == 748 ) ):
	    if ( $IDClub == 36 && $IDServicio == 4371 && ( $IDTipoReserva == 787 || $IDTipoReserva == 788 || $IDTipoReserva == 789 || $IDTipoReserva == 790 || $IDTipoReserva == 791 ) ):
	    $datos_tipo_reserva = $dbo->fetchAll( "ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array" );
	    $cantidad_dias_agregar = $datos_tipo_reserva[ "NumeroDias" ];
	    if((int)$datos_tipo_reserva[ "NumeroDias" ]>1):
	        //$IDTipoReserva = "";
	        $Repetir = "S";
	        $Periodo = "Dia";
	        $HastaFechaFinal = strtotime( '+' . $cantidad_dias_agregar . ' day', strtotime( $Fecha ) );
	        $RepetirFechaFinal = date( "Y-m-d", $HastaFechaFinal );
	        // de una vez valido que el avion no haya sido reservado en los siguientes dias
	        $fechaInicioVal = strtotime( $Fecha );
	        $fechaFin = strtotime( $RepetirFechaFinal );
	        $condicion_multiple_elemento_av = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDElemento,"" );
	        $cuentafecha=0;
	        for ( $contador_fecha = $fechaInicioVal; $contador_fecha <= $fechaFin; $contador_fecha += 86400 ):

	          if($cuentafecha>0): // valido desde la segunda fecha en adelante
	            $fecha_validar.="S".$cuentafecha;
	            $fecha_validar_avion=date( "Y-m-d", $contador_fecha );
	            $sql_reserva_elemento_avion = "SELECT IDReservaGeneral FROM ReservaGeneral WHERE IDServicioElemento in (" . $condicion_multiple_elemento_av . ") and Fecha = '" . $fecha_validar_avion . "' and (IDEstadoReserva = 1 or IDEstadoReserva=3) Limit 1 ";
	            $r_reserva_elemento_avion = $dbo->query($sql_reserva_elemento_avion);
	            if($dbo->rows($r_reserva_elemento_avion)>0):
	              $respuesta[ "message" ] = "Lo sentimos el avion ya esta reservado el ".	$fecha_validar_avion;
	              $respuesta[ "success" ] = false;
	              $respuesta[ "response" ] = NULL;
	              return $respuesta;
	            endif;
	          endif;
	          $cuentafecha++;
	        endfor;
	    endif;
	  endif;
	  //Fin validación especial


	  //Especial Arrayanes Colombia para golf fines de semana solo permite reservas de socios con handicap
	  if ( $IDClub == 11 && $IDServicio == 122 && ( date( "w", strtotime( $Fecha ) ) == 0 || date( "w", strtotime( $Fecha ) ) == 6 ) && $Hora <= "11:20:00" ):
	      $datos_socio_valida_per = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
	      $id_socio_permiso = $dbo->getFields( "SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
	      if ( empty( $id_socio_permiso ) ):
	          $respuesta[ "message" ] = "Lo sentimos no tiene permisos para reservar los fines de semana ";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	      else:
	          // verifico que los invitados tambien tengan handicap
	          $nuevacadena_hand = str_replace( 'Optional("', "", $Invitados );
	          $nuevacadena_hand = str_replace( '")', "", $nuevacadena_hand );
	          $Invitados_hand = $nuevacadena_hand;
	          $datos_invitado_hand = json_decode( $Invitados_hand, true );

	           if ( count( $datos_invitado_hand ) > 0 ):
	              foreach ( $datos_invitado_hand as $detalle_datos ):
	                  $IDSocioInvitadoHand = $detalle_datos[ "IDSocio" ];
	                  if ( !empty( $IDSocioInvitadoHand ) ):
	                    $datos_socio_valida_per_hand = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocioInvitadoHand . "' ", "array" );
	                    $id_socio_permiso = $dbo->getFields( "SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per_hand[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
	                    if ( empty( $id_socio_permiso ) ):
	                      $respuesta[ "message" ] = "Lo sentimos su invitado " . utf8_decode($datos_socio_valida_per_hand["Nombre"]." ".$datos_socio_valida_per_hand["Apellido"]) . " " . "no tiene permisos para reservar los fines de semana";
	                      $respuesta[ "success" ] = false;
	                      $respuesta[ "response" ] = NULL;
	                      return $respuesta;
	                    endif;
	                  endif;
	                endforeach;
	          endif;
	      endif;
	   endif;
	//Fin validación especial

	//Especial Rancho Colombia para golf fines de semana solo permite reservas de socios con handicap
	if ( $IDClub == 12 && $IDServicio == 144 && ( date( "w", strtotime( $Fecha ) ) == 0 || date( "w", strtotime( $Fecha ) ) == 6 ) && $Hora <= "11:30:00" ):
			$id_socio_permiso = $dbo->getFields( "SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
			if ( empty( $id_socio_permiso ) ):
					$respuesta[ "message" ] = "Lo sentimos no tiene permisos para reservar los fines de semana ";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
			else:
					// verifico que los invitados tambien tengan handicap
					$nuevacadena_hand = str_replace( 'Optional("', "", $Invitados );
					$nuevacadena_hand = str_replace( '")', "", $nuevacadena_hand );
					$Invitados_hand = $nuevacadena_hand;
					$datos_invitado_hand = json_decode( $Invitados_hand, true );

					 if ( count( $datos_invitado_hand ) > 0 ):
							foreach ( $datos_invitado_hand as $detalle_datos ):
									$IDSocioInvitadoHand = $detalle_datos[ "IDSocio" ];
									if ( !empty( $IDSocioInvitadoHand ) ):
										$datos_socio_valida_per_hand = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocioInvitadoHand . "' ", "array" );
										$id_socio_permiso = $dbo->getFields( "SocioPermisoReserva", "IDSocioPermisoReserva", "NumeroDocumento = '" . $datos_socio_valida_per_hand[ "NumeroDocumento" ] . "' and IDClub = '" . $IDClub . "'" );
										if ( empty( $id_socio_permiso ) ):
											$respuesta[ "message" ] = "Lo sentimos su invitado " . utf8_decode($datos_socio_valida_per_hand["Nombre"]." ".$datos_socio_valida_per_hand["Apellido"]) . " " . "no tiene permisos para reservar los fines de semana";
											$respuesta[ "success" ] = false;
											$respuesta[ "response" ] = NULL;
											return $respuesta;
										endif;
									endif;
								endforeach;
					endif;
			endif;
	 endif;
//Fin validación especial

	//Validacion especial Polo solo 1 turno por elemento en practicas
	if($IDClub==37 && $IDServicio=="3575"){
	  $id_reserva_general_soc=(int)$dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDSocio = '" . IDSocio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 1 and IDServicioElemento = '".$IDElemento."'" );
	  if($id_reserva_general_soc>0){
	    $respuesta[ "message" ] = "Ya tiene una reserva en esta hora por favor verifique Mis Reservas";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	    return $respuesta;
	  }

	}


	//Especial para cuando el campo de repetir se pregunta en la reserva
	$array_Campos = $Campos;
	$array_Campos = json_decode( $Campos, true );
	if ( count( $array_Campos ) > 0 ):
	  foreach ( $array_Campos as $id_valor_campo => $valor_campo ):
	    if($valor_campo[ "IDCampo" ]==31 && (int)$valor_campo[ "Valor" ]>0){
	      $Repetir = "S";
	      $Periodo = "Dia";
	      $dias_repetir=$valor_campo[ "Valor" ]-1;
	      $RepetirFechaFinal = strtotime( '+'.$dias_repetir.' day', strtotime( $Fecha ) );
	      $RepetirFechaFinal = date( "Y-m-d", $RepetirFechaFinal );
	    }
	endforeach;
	endif;

	//Validacion especial Farallones solo se puede 1 depilación por hora
	/*
	if($IDClub==29 && $IDServicio=="1772"){
	  $id_reserva_general_soc=(int)$dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 1 and IDServicioTipoReserva = '618' " );
	  if($id_reserva_general_soc>0){
	    $respuesta[ "message" ] = "Lo sentimos ya existe una reserva de depilacion a esta hora y solo es posible 1 por hora, intente con otra hora";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	    return $respuesta;
	  }
	}
	*/


	  //Valido si la reserva pide un tipo (sencillo, doble, 2 turnos, etc) y si esta vacio le asigno alguno
	  $tipo_reserva_servicio = "Select * From ServicioTipoReserva Where IDServicio = '" . $IDServicio . "' and Activo = 'S' Order by Orden Desc";
	  $result_reserva_servicio = $dbo->query( $tipo_reserva_servicio );
	  if ( count( $dbo->rows( $result_reserva_servicio ) > 0 ) && empty( $IDTipoReserva ) ):
	    //le asigno algun tipo ya que es obligatorio
	    while ( $row_reserva_servicio = $dbo->fetchArray( $result_reserva_servicio ) ):
	      $IDTipoReserva = $row_reserva_servicio[ "IDServicioTipoReserva" ];
	  endwhile;
	  endif;



	  //Validacion del formato de hora, el app puede enviar con a.m o p.m
	  $Hora = SIMWebserviceQuemado::validar_formato_hora( $Hora );

	  //if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) && $Hora != "00:00:00" ) {
	    if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora )  ) {

	    //verifico que el socio exista y pertenezca al club
	    $id_socio = $datos_socio["IDSocio"];

	      if ( !empty( $id_socio ) ) {


	        // Obtener la disponibilidad utilizada al consultar la reserva
	        $id_disponibilidad = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $IDServicio, $Fecha, $IDElemento, $Hora );


	        //Valido que no se pueda tomar varios turnos seguidos
	        $PermiteReservaSeguida = $dbo->getFields( "Disponibilidad", "PermiteReservaSeguida", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	        $PermiteReservaSeguidaNucleo = $dbo->getFields( "Disponibilidad", "PermiteReservaSeguidaNucleo", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	        if ( $PermiteReservaSeguida != "S" ){
						$flag_turno_seguido = SIMWebserviceQuemado::validar_turnos_seguidos( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDBeneficiario, $TipoBeneficiario, $PermiteReservaSeguidaNucleo );
					}

	        else
	          $flag_turno_seguido = 0;






	        //Especial para medellin dobles no se permite los sabados
	        if ( $IDClub == 20 && ( date( "N", strtotime( $Fecha ) ) == "6" ) && ( $IDTipoReserva == 96 || $IDTipoReserva == 94 ) ):
	          $respuesta[ "message" ] = "Lo sentimos dobles no se puede los Sabados";
	        $respuesta[ "success" ] = false;
	        $respuesta[ "response" ] = NULL;
	        return $respuesta;
	        endif;


	        if ( ( $IDClub == "9" || $IDClub == "8" ) && empty( $Admin ) && $IDServicio == "89" ):
	          //Valido regla especial en Esqui si tiene dos turnos seguidos no permite reservar mas si no solo deja las configuradas (Caso especial Mesa de Yeguas)
	          $regla_no_cumplida = SIMWebserviceQuemado::validar_regla_turnos( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva );
	        if ( $regla_no_cumplida > 0 ):
	          switch ( $regla_no_cumplida ):
	          case "1":
	        $mensaje_regla_no_cumplida = "Lo sentimos, ya tomo dos turnos seguidos, no puede reservas mas turnos en este dia ";
	        break;
	        case "2":
	          $mensaje_regla_no_cumplida = "Lo sentimos, ya reservo un turno, no puede tomar turnos seguidos en este dia";
	          break;
	          endswitch;
	          $respuesta[ "message" ] = $mensaje_regla_no_cumplida;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          endif;

	          if (
	            ( ( $IDClub == "900" || $IDClub == "800" ) && empty( $Admin ) && ( $IDServicio == "240" || $IDServicio == "479" || $IDServicio == "89" ) ) ||
	            ( ( $IDClub == "20" ) && empty( $Admin ) && ( $IDServicio == "571" ) && date( "N", strtotime( $Fecha ) ) == 6 )
	          ):
	            //Valido regla especial tenis my solo dos turnos por accion en un mismo dia en Temporada alta
	            //Valido regla especial tenis MEdellin solo dos turnos por accion en un mismo dia los sabados
	            $regla_no_cumplida_tenis = SIMWebserviceQuemado::validar_regla_turnos_tenis( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDTipoReserva );
	          if ( ( int )$regla_no_cumplida_tenis > 0 ):
	            $mensaje_regla_no_cumplida_tenis = "Lo sentimos, solo se puede tomar dos turnos por accion en el dia";
	          $respuesta[ "message" ] = $mensaje_regla_no_cumplida_tenis;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          endif;



	          //Especial para Lagartos en clases natación solo permite tomar reservas antes de las 8am el mismo dia
	          /*
	          if ( ( $IDClub == "7" || $IDClub == "800" ) && empty( $Admin ) && $IDServicio == "94" ):
	            if ( date( "Y-m-d" ) == $Fecha && strtotime( date( "Y-m-d H:i:s" ) ) >= strtotime( date( "Y-m-d 08:00:00" ) ) ):
	              $respuesta[ "message" ] = "Lo sentimos, solo se puede reservar clases para hoy hasta antes de las 8 a.m.";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          endif;
	          */



	          //$rand_seg2 = rand(1,2);
	          //sleep($rand_seg2);




	          //Valido que se tengan los invitados minimos y maximos para reservar
	          // elimino la pabra optional segun bug detectado en una actualizacion en ios
	          $nuevacadena = str_replace( 'Optional("', "", $Invitados );
	          $nuevacadena = str_replace( '")', "", $nuevacadena );
	          $Invitados = $nuevacadena;
	          $datos_invitado = json_decode( $Invitados, true );

	          // Si el numero de turnos es mayor a 1 multiplico el minimo de la disponibilidad * el numero de turnos para saber el minimo y validar
	          if ( ( int )$NumeroTurnos > 1 ):
	            $MinimoInvitadosDisponibilidad = $dbo->getFields( "Disponibilidad", "MinimoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $MinimoInvitados = ( int )( $MinimoInvitadosDisponibilidad * $NumeroTurnos ) - 1; // Le resto 1 para que cuente al socio que hace la reserva
	          else :
	            $MinimoInvitadosDisponibilidad = $dbo->getFields( "Disponibilidad", "MinimoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $MinimoInvitados = ( int )$MinimoInvitadosDisponibilidad - 1;
	          endif;

	          if ( ( int )$NumeroTurnos > 1 ):
	            $MaximoInvitadosDisponibilidad = $dbo->getFields( "Disponibilidad", "MaximoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $MaximoInvitados = $MaximoInvitadosDisponibilidad * $NumeroTurnos;
	          else :
	            $MaximoInvitados = $dbo->getFields( "Disponibilidad", "MaximoInvitados", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          endif;


	          // Si es desde el administrador permito agregar los invitados
	          if ( !empty( $Admin )  ){
	            $MaximoInvitados=100;
	          }


	          $cantidad_invitado = json_decode( $Invitados, true );








	          // Si agrega un aux por ejemplo boleador lo cuento como invitado
	          if ( !empty( $IDAuxiliar ) ):


	            $IDAuxiliar = $IDAuxiliar . ",";
	          $cantidad_auxiliar = 1;
	          //Verifico si el auxiliar esta disponible en esta fecha hora
	          $id_reserva_aux = "";
	          if ( ( $IDClub == "8" || $IDClub == "10" ) && ( $IDServicio == "316" || $IDServicio == "317" ) ):
	            $id_reserva_aux = SIMWebserviceQuemado::validar_disponibilidad_auxiliar( $IDAuxiliar, $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub );
	          $mensaje_auxiliar_no_dispo = "La masajista seleccionada no esta disponible en esta fecha/hora, por favor seleccione otra";
	          else :
	            //Pongo un tiempo de espera por si ingresan varios al mismo tiempo
	            $id_reserva_aux = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDAuxiliar = '" . $IDAuxiliar . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)" );
	          $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora";
	          endif;
	          if ( !empty( $id_reserva_aux ) ):
	            $respuesta[ "message" ] = $mensaje_auxiliar_no_dispo;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          else :
	            $cantidad_auxiliar = 0;
	          endif;

	          //Cuando se puede escoger multiples auxiliares
	          $datos_auxiliares = json_decode( $ListaAuxiliar, true );
	          if ( count( $datos_auxiliares ) > 0 ):
	            $cantidad_auxiliar = count( $datos_auxiliares );
	          //$ArrayAuxiliar = implode(",",$datos_auxiliares);
	          foreach ( $datos_auxiliares as $key_aux => $auxiliar_seleccionado ):
	            $array_id_auxiliar[] = $auxiliar_seleccionado[ "IDAuxiliar" ];


	          endforeach;
	          if ( count( $array_id_auxiliar ) > 0 ):
	            $IDAuxiliar = implode( ",", $array_id_auxiliar ) . ",";
	          endif;
	          endif;



	          if ( !empty( $IDAuxiliar ) ):
	            //Actualizo la reserva separada con el dato del auxiliar
	            $update_reserva = "Update ReservaGeneral Set IDAuxiliar = '" . $IDAuxiliar . "', IDSocioBeneficiario='".$IDBeneficiario."' Where IDClub = '" . $IDClub . "' and Fecha='" . $Fecha . "' and Hora = '" . $Hora . "' and IDServicio = '" . $IDServicio . "' and IDSocio = '" . $IDSocio . "' and IDEstadoreserva = '3' ";
	            $dbo->query( $update_reserva );
	          endif;



	          if ( ( count( $datos_invitado ) + $cantidad_auxiliar ) >= ( int )$MinimoInvitados ):
	            if ( ( count( $datos_invitado ) + $cantidad_auxiliar ) <= ( int )$MaximoInvitados ):
	              //if (1==1):




	              // Si es Admin si puede reservas turnos seguidos
	              if ( !empty( $Admin ) ):
	                $flag_turno_seguido = 0;
	          endif;




	          if ( $flag_turno_seguido == 0 ):
	            $fecha_disponible = 0;
	          //Verifico que la fecha seleccionada verdaderamente este disponible, ésto por que se puede cambiar la fecha del cel y lo deja pasar
	          $array_disponibilidad = SIMWebserviceQuemado::get_fecha_disponibilidad_servicio( $IDClub, $IDServicio );
	          foreach ( $array_disponibilidad[ "response" ][ 0 ][ "Fechas" ] as $id_fecha => $datos_fecha ):
	            if ( $datos_fecha[ "Fecha" ] == $Fecha && $datos_fecha[ "Activo" ] == "S" ):
	              $fecha_disponible = 1;
	          endif;
	          endforeach;

	          // Si es Admin si puede reservas cualquier fecha
	          //Ene 27 El rancho solicitan que ellos no puedan tomar turnos si no esta activo el dia
	          if ( !empty( $Admin ) && $IDClub != "12" ):
	            $fecha_disponible = 1;
	          endif;

	          if ( !empty( $IDBeneficiario ) && !empty( $TipoBeneficiario ) ):
	            if ( $TipoBeneficiario == "Invitado" )
	              $IDInvitadoBeneficiario = $IDBeneficiario;
	            elseif ( $TipoBeneficiario == "Socio" )
	              $IDSocioBeneficiario = $IDBeneficiario;
	          endif;


	          //Si el numero maximo de invitados esta en 0 no dejo que la reserva sea a un invitado seleccionado por beneficiarios
	          if ( $MaximoInvitados <= 0 && ( int )$IDInvitadoBeneficiario > 0 ):
	            $respuesta[ "message" ] = "Lo sentimos el dia de hoy no es posible tomar reserva a nombre de un invitado";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;


	          if ( $fecha_disponible == 1 ):

	            if ( $IDClub == 1 || $IDClub == 23 || $IDClub == 16 || $IDClub == 44):
	              //Para Guaymaral si deja tomar otro turno asi tenga reserva de cancha automatica
	              $condicion_automatica = " and Tipo <> 'Automatica' ";
	          endif;

	          //Verifico que el socio no tenga mas de x reservas en el mismo dia dependiendo la conf de disponibilidad
	          //Para Mess Yeguas en temporada alta no pemite asi se la haya realizado a un invitado o benef para los demas clubes si lo permite
	          //Para Medellin si es sabado no permite mas de dos reservas asi sea para beneficiario
	          if ( $IDClub == "900" || $IDClub == 800 ):
	            $sql_reservas_dia = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and Tipo <> 'Automatica'" );
	          else :
	            $sql_reservas_dia = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDSocioBeneficiario = '" . ( int )$IDSocioBeneficiario . "' and IDEstadoReserva = '1' " . $condicion_automatica );
	          endif;

						//Para medellin se valida que no tenga ,mas de dos reservas en el dia en tenis y golf
						if($IDClub==20 && ($IDServicio == 571 || $IDServicio == 549 || $IDServicio == 551 || $IDServicio == 14898 || $IDServicio == 14899  )){
							$sql_reservas_dia = $dbo->query( "SELECT * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDEstadoReserva = '1' and Tipo <> 'Automatica' and IDServicio in (571,549,551,14898,14899 )" );
						}


	          $total_reserva_socio = ( int )$dbo->rows( $sql_reservas_dia );

	          //Valido que el beneficiario al que se esta tomando la reserva ya no tenga otra reserva y asi cumplir lo de maximo de reservas por dia tambien
	          $condicion_beneficiario = "";
	          if ( !empty( $IDBeneficiario ) ):

	            if ( !empty( $IDSocioBeneficiario ) ):
	              $sql_reservas_dia_benef = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica );
	              $total_reserva_socio += ( int )$dbo->rows( $sql_reservas_dia_benef );

	              $sql_reservas_dia_benef = $dbo->query( "Select * From ReservaGeneral Where IDSocio <> '" . $IDSocio . "' and IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica );
	              $total_reserva_socio += ( int )$dbo->rows( $sql_reservas_dia_benef );
	          endif;

	          //Invitado
	          if ( !empty( $IDInvitadoBeneficiario ) ):
	            $sql_reservas_dia_benef = $dbo->query( "Select * From ReservaGeneral Where IDInvitadoBeneficiario = '" . $IDInvitadoBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' " . $condicion_automatica );
	          $total_reserva_socio += ( int )$dbo->rows( $sql_reservas_dia_benef );
	          endif;


	          endif;
	          //Fin Validacion


	          //Valido si en la configuracion permite a un socio tomar otro turno dspues que cumpla el que tiene en el dia solo aplica si esta en el dia actual
	          $PermiteReservaDespuesdeprimerturno = $dbo->getFields( "Disponibilidad", "PermiteReservaCumplirTurno", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          if ( $PermiteReservaDespuesdeprimerturno == "S" && $Fecha == date( "Y-m-d" ) && $total_reserva_socio >= $MaximoReservaSocioServicio ):
	            $TiempoDespues = ( int )$dbo->getFields( "Disponibilidad", "TiempoDespues", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $MedicionTiempoDespues = $dbo->getFields( "Disponibilidad", "MedicionTiempoDespues", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $IntervaloTurno = $dbo->getFields( "Disponibilidad", "Intervalo", "IDDisponibilidad = '" . $id_disponibilidad . "'" );

	          switch ( $MedicionTiempoDespues ):
	        case "Dias":
	          $minutos_posterior_turno = ( 60 * 24 ) * $TiempoDespues;
	          break;
	        case "Horas":
	          $minutos_posterior_turno = 60 * $TiempoDespues;
	          break;
	        case "Minutos":
	          $minutos_posterior_turno = $TiempoDespues;
	          break;
	        default:
	          $minutos_posterior_turno = 0;
	          endswitch;

	          //Le sumo el intervalo del turno para calcular la siguiente hora que puede reservar despues de finalizar el turno
	          $minutos_posterior_turno += ( int )$IntervaloTurno;

	          //Consulto cual es la utima que reserva que tiene en el dia para calcula con esa hora
	          if ( !empty( $IDBeneficiario && !empty( $IDSocioBeneficiario )) ){
	            // es para un beneficiario
	              $sql_reserva_dia_hora = "Select * From ReservaGeneral Where IDSocioBeneficiario = '" . $IDSocioBeneficiario . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' Order by Hora Desc Limit 1";
	          }
	          else{
	              $sql_reserva_dia_hora = "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and IDEstadoReserva = '1' and IDSocioBeneficiario = '" . ( int )$IDBeneficiario . "' Order by Hora Desc Limit 1";
	          }

	          $result_reserva_dia_hora = $dbo->query( $sql_reserva_dia_hora );
	          $row_reserva_dia_hora = $dbo->fetchArray( $result_reserva_dia_hora );
	          $ultimo_turno_dia = $Fecha . " " . $row_reserva_dia_hora[ "Hora" ];
	          $hora_actual_peticion = date( 'Y-m-d H:i:s' );
	          $hora_volver_reservar = strtotime( '+' . $minutos_posterior_turno . ' minute', strtotime( $ultimo_turno_dia ) );
	          //echo "Puede reservar a las " . date("Y-m-d H:i:s",$hora_volver_reservar);
	          if ( strtotime( $hora_actual_peticion ) >= $hora_volver_reservar ):
	            $total_reserva_socio = 0;
	          else :
	            $mensaje_opcion_reserva = "Puede volver a reservar despues de: " . $TiempoDespues . " " . $MedicionTiempoDespues . " de cumplir la reserva del dia";
	          endif;
	          endif;




	          // Si es Admin si puede reservar mas de un turno por dia
	          if ( !empty( $Admin ) ):
	            if ( $IDClub != "12" && $IDClub != "8" ): //para el Rincon no permite asi sea admin
	              //verifico que si pueda reservar mientras no sea la misma hora en el mismo servicio
	              $sql_reservas_dia_hora = $dbo->query( "Select * From ReservaGeneral Where IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and IDServicio = '" . $IDServicio . "' and Hora = '" . $Hora . "' and IDServicioElemento <> '" . $IDElemento . "' and  IDSocioBeneficiario = '" . ( int )$IDBeneficiario . "' and IDEstadoReserva = '1' and IDServicioElemento = '" . $IDElemento . "'" );
	          $total_reserva_socio_hora = ( int )$dbo->rows( $sql_reservas_dia_hora );
	          if ( $total_reserva_socio_hora > 0 ):
	            $total_reserva_socio = 100;
	          else :
	            $total_reserva_socio = 0;
	          endif;
	          endif;
	          //$total_reserva_socio = 0;
	          $UsuarioCreacion = "Starter";
	          else :
	            if ( !empty( $IDUsuarioReserva ) )
	              $UsuarioCreacion = "Empleado";
	            else
	              $UsuarioCreacion = "Socio";
	          endif;

	          //Consulto el parametro en disponibilidad de cuantas veces puede reervar el socio el mismo servicio en el mismo dia
	          $MaximoReservaSocioServicio = $dbo->getFields( "Disponibilidad", "MaximoReservaDia", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          //if($total_reserva_socio<1):

	          //Especial Bogota tenis si es fin semana y reserva cancha despues de 12:15
	          if ( $IDClub == 72):
	            $dia_semana_reserva = date( "w", strtotime( $Fecha ) );
	            if (  $Hora >= "12:15:00" &&  ( ( ( $IDServicio == "8649" ) && ( $dia_semana_reserva == "6" || $dia_semana_reserva == "0"   ))  )):
	              $MaximoReservaSocioServicio=2;
	            endif;
	          endif;
	          //FIN BTCC



	          if ( $total_reserva_socio < $MaximoReservaSocioServicio ){



	            if ( $Repetir == "S" ):

	              //Consulto el limite de reservas que se pueda hacer para calcular la fecha final
	              $MedicionRepeticion = $dbo->getFields( "Disponibilidad", "MedicionRepeticion", "IDDisponibilidad = '" . $IDDisponibilidad . "'" );
	          switch ( $MedicionRepeticion ):
	        case "Dia":
	          $periodo_sumar = "day";
	          $dato_sumar=1;
	          break;
	        case "Semana":
	          $periodo_sumar = "week";
	          $dato_sumar=1;
	          break;
	        case "Quincenal":
	          $periodo_sumar = "day";
	          $dato_sumar=14;
	        break;
	        case "Mes":
	          $periodo_sumar = "month";
	          $dato_sumar=1;
	          break;
	        default:
	          $periodo_sumar = "day";
	          $dato_sumar=1;
	          endswitch;

	          //periodo a sumar dependiendo de lo que el socio escoja en el app
	          switch ( $Periodo ):
	        case "Dia":
	          $periodo_sumar_app = "day";
	          $dato_sumar=1;
	          break;
	        case "Semana":
	          $periodo_sumar_app = "week";
	          $dato_sumar=1;
	          break;
	          case "Quincenal":
	            $periodo_sumar_app = "day";
	            $dato_sumar=14;
	          break;
	        case "Mes":
	          $periodo_sumar_app = "month";
	          $dato_sumar=1;
	          break;
	        default:
	          $periodo_sumar_app = "day";
	          $dato_sumar=1;
	          endswitch;


	          $numero_repeticion = $dbo->getFields( "Disponibilidad", "NumeroRepeticion", "IDDisponibilidad = '" . $IDDisponibilidad . "'" );
	          // Este sirve para establecer el limite deacuerdo al admin en el parametro limite de repeticion
	          //$fechaFin = strtotime ( '+'.$numero_repeticion.' '.$periodo_sumar ,  strtotime($Fecha)  ) ;

	          //Toma la fecha final de lo que seleccione el usuario en el app
	          if ( !empty( $RepetirFechaFinal ) ):
	            //$fechaFin = strtotime( $RepetirFechaFinal );
	            $fechaFin = strtotime( '+1 day', strtotime( $RepetirFechaFinal ) );
	          else :
	            $fechaFin = strtotime( $Fecha );
	          endif;
	          else :
	            $numero_repeticion = 1;
	            $fechaFin = strtotime( $Fecha );
	            $periodo_sumar = "day";
	            $periodo_sumar_app =  "day";
	            $dato_sumar=1;
	          endif;


	          $fechaInicio = strtotime( $Fecha );
	          //$fechaFin=strtotime($fecha_fin_reserva );
	          //echo date("Y-m-d",$fechaFin);
	          //exit;


	          if ( !empty( $IDBeneficiario ) && !empty( $TipoBeneficiario ) ):
	            if ( $TipoBeneficiario == "Invitado" )
	              $IDInvitadoBeneficiario = $IDBeneficiario;
	            elseif ( $TipoBeneficiario == "Socio" )
	              $IDSocioBeneficiario = $IDBeneficiario;
	          endif;



	          for ( $contador_fecha = $fechaInicio; $contador_fecha <= $fechaFin; $contador_fecha += 86400 ):


	            $flag_reserva_cancha_clase = 0;
	          // verifico que todavia este disponible la reserva

	          if ( !empty( $Tee ) ):
	            $condicion_tee = " and Tee = '" . $Tee . "'";
	          endif;

	          // Verifico si el servicio en esta disponiblidad permite a varios socios tomar el mismo turno, por ejemplo clase de gimnasia
	          $cupo_total = "S"; // ya no hay cupos
	          $cupos_disponibilidad = $dbo->getFields( "Disponibilidad", "Cupos", "IDDisponibilidad = '" . $id_disponibilidad . "'" );
	          $datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $row_dispo_elemento_gral[ "IDDisponibilidad" ] . "' ", "array" );
	          if ( ( int )$cupos_disponibilidad > 1 ):
	            //Consulto cuantos reservas se han tomado en esta hora para saber si ya llegó al limite de cupos
	            $cupos_reservados = self::valida_cupos_disponibles( $IDClub, $IDServicio, $IDElemento, $Fecha, $horaInicial );
	          //Valido si todavia existe cupo en esta hora
	          if ( $cupos_reservados <= $datos_disponibilidad[ "Cupos" ] ):
	            $cupo_total = "N"; // aun hay cupos disponibles
	          endif;
	          $numero_inscripcion = rand( 0, 999999 );
	          else :
	            $numero_inscripcion = 0;
	          endif;




	          $id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee " );
	          if ( empty( $id_reserva_disponible ) || $cupo_total == "N" ):
	            $datos_invitado = json_decode( $Invitados, true );

	          //Verifico que el socio no este como invitado en el mismo servicio en otra hora
	          if ( $Fecha == date( "Y-m-d" ) ):
	            $hora_actual_sistema_valida = date( "H:i:s" );
	          else :
	            $hora_actual_sistema_valida = "01:00:00";
	          endif;

	          $sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $Fecha . "' and RG.Hora >='" . $hora_actual_sistema_valida . "' and RG.IDServicio = '" . $IDServicio . "' ORDER BY IDReservaGeneralInvitado Desc ";
	          $qry_socio_grupo = $dbo->query( $sql_socio_grupo );
	          if ( $dbo->rows( $qry_socio_grupo ) > 0 && $MaximoReservaSocioServicio<=1 ):
	            $nombre_socio_invitado = utf8_encode($dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocio . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocio . "'" ));
	          $respuesta[ "message" ] = $nombre_socio_invitado . ", ya esta agregado(a) en esta fecha como invitado en un grupo, no es posible realizar la reserva, por favor verifique";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          exit;
	          endif;


	          // Si es golf verifico que los invitado no este en mas de un grupo el mismo dia
	          if ( count( $datos_invitado ) > 0 && $MaximoReservaSocioServicio<=1):
	            foreach ( $datos_invitado as $detalle_datos ):
	              $IDSocioInvitado = $detalle_datos[ "IDSocio" ];
	          $NombreSocioInvitado = $detalle_datos[ "Nombre" ];
	          if ( !empty( $IDSocioInvitado ) ):
	            $respuesta_valida_invitado = SIMWebserviceQuemado::verificar_socio_grupo( $IDClub, $IDSocioInvitado, $Fecha, $IDServicio );
	          if ( $respuesta_valida_invitado == 1 ):
	            $nombre_socio_invitado = $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocioInvitado . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocioInvitado . "'" );
	          $respuesta[ "message" ] = "El invitado: " . utf8_encode( $nombre_socio_invitado ) . ", solo puede estar en un grupo por dia";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          exit;
	          endif;
	          endif;
	          endforeach;
	          endif;


	          // Si el servicio es una clase y necesita reservar cancha
	          $id_servicio_cancha = $dbo->getFields( "ServicioMaestro", "IDServicioMaestroReservar", "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
	          if ( $id_servicio_cancha > 0 ):
	            // Consulto el servicio del club asociado a este servicio maestro
	            $IDServicioCanchaClub = $dbo->getFields( "Servicio", "IDServicio", "IDServicioMaestro = '" . $id_servicio_cancha . "' and IDClub = '" . $IDClub . "'" );
	          // Valido si existe una cancha disponible en el horario de la clase
	          $IDElemento_cancha = SIMWebserviceQuemado::buscar_elemento_disponible( $IDClub, $IDServicioCanchaClub, $Fecha, $Hora, $IDElemento, $IDTipoReserva );
	          if ( empty( $IDElemento_cancha ) ):
	            $respuesta[ "message" ] = "Lo sentimos no hay una cancha disponible para tomar la clase en este horario ";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          else :
	            $flag_reserva_cancha_clase = 1;
	          endif;
	          endif;



	          /*
	          //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
	          //Si el servicio maestro tiene definido permitir turnos seguidos cuando los invitados sean mas de X personas
	          $numero_para_reservar_turnos = $dbo->getFields( "ServicioMaestro" , "InvitadoTurnos" , "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
	          if( ( (int)$numero_para_reservar_turnos>0 ) && count($datos_invitado)>=$numero_para_reservar_turnos):
	          //if($id_servicio_maestro==14): //Tennis
	            $cantidad_turnos = 1; // Para validar los siguientes X turnos esten disponibles
	            $array_hora_siguiente_turno_diponible = SIMWebserviceQuemado::valida_siguiente_turno_disponible($Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos );
	            if(count($array_hora_siguiente_turno_diponible)!=$cantidad_turnos):
	              $respuesta["message"] = "Se necesitan ".$cantidad_turnos." turnos mas seguidos y el siguiente turno no esta disponible, por favor seleccione otro opcion.";
	              $respuesta["success"] = false;
	              $respuesta["response"] = NULL;
	              return $respuesta;
	            else:
	              $flag_separa_siguiente_turno=1;
	            endif;
	          endif;
	          */


	          //Si Invitados son X y el servicio es de mas 2 turnos se valida que el siguiente turno este disponible
	          if ( !empty( $IDTipoReserva ) ):
	            $datos_tipo_reserva = $dbo->fetchAll( "ServicioTipoReserva", " IDServicioTipoReserva = '" . $IDTipoReserva . "' ", "array" );
	          $cantidad_turnos = $datos_tipo_reserva[ "NumeroTurnos" ];
	          $cantidad_minima_participantes = $datos_tipo_reserva[ "MinimoParticipantes" ];

	          //Consulto cuantos turnos automaticos se deben separar , pj en salones despues de una reserva se toma un turno mas para que se pueda realizar el aseo
	          $TurnoMantenimiento = ( int ) $datos_servicio["TurnoMantenimiento"];
	          $cantidad_turnos += $TurnoMantenimiento;

	          if ( ( count( $datos_invitado ) + $cantidad_auxiliar ) >= ( int )$cantidad_minima_participantes ):
	            // valido que no vengas mas de los participantes que es necesario
	            if ( ( count( $datos_invitado ) + $cantidad_auxiliar ) >= ( int )$cantidad_minima_participantes ):
	              if ( ( ( int )$cantidad_turnos > 1 ) ):
	                //$cantidad_turnos-=1; // Quito uno para que no cuente la reserva primera

	                // Separo las reservas
	          $array_hora_siguiente_turno_diponible = SIMWebserviceQuemado::valida_siguiente_turno_sin_reserva( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $cantidad_turnos );
	          if ( ( count( $array_hora_siguiente_turno_diponible ) != ( int )( $cantidad_turnos - 1 ) || !is_array( $array_hora_siguiente_turno_diponible )) && ( int )$cupos_disponibilidad <= 1):
	            $respuesta[ "message" ] = "Se necesitan " . $cantidad_turnos . ". turnos mas seguidos y el siguiente turno no esta disponible. Por favor seleccione otra opcion! " .$cupos_disponibilidad;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          else :
	            $flag_separa_siguiente_turno = 1;
	          endif;
	          endif;
	          else :
	            $respuesta[ "message" ] = "Lo sentimos, el maximo numero de invitados debe ser de " . $cantidad_minima_participantes;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          else :
	            $respuesta[ "message" ] = "Lo sentimos, el minimo numero de invitados debe ser de: " . $cantidad_minima_participantes;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          endif;


	          //Si turnos es mayor a 1 verifico que los siguientes turnos esten disponibles y los reservo
	          if ( ( int )$NumeroTurnos > 1 ):

	            if ( $id_servicio_maestro == 15 || $id_servicio_maestro == 27 || $id_servicio_maestro == 28 || $id_servicio_maestro == 30 ): //Golf
	              $array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_disponible_golf( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos, $Tee, "Reserva","" );
	            else :
	              $array_disponible = SIMWebserviceQuemado::valida_siguiente_turno_sin_reserva( $Fecha, $Hora, $IDSocio, $IDServicio, $IDClub, $IDElemento, $NumeroTurnos );
	          endif;

	          //Cuando es por grupos busco aleatoriamente de los invitados los socios que quedaran como cabeza de grupo
	          $array_cabeza_grupo = SIMWebserviceQuemado::busca_cabeza_grupo( $Invitados, $NumeroTurnos, $IDSocio );

	          if ( count( $array_disponible ) != $NumeroTurnos ):
	            $respuesta[ "message" ] = "Se necesitan: " . $NumeroTurnos . " turnos mas seguidos y el siguiente turno no esta disponible, por favor seleccione otra opcion.";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          else :
	            $contador_turno = 0;
	          // separo los siguientes turnos disponibles menos el primero que se realiza en el siguiente proceso
	          foreach ( $array_disponible as $key_hora => $dato_hora ):
	            if ( $contador_turno > 0 ):
	              $socios_cabeza = 0;
	          $contador_socio_cabeza_real = 0;
	          $IDSocioCabeza = $array_cabeza_grupo[ ( $contador_turno - 1 ) ];
	          if ( empty( $IDSocioCabeza ) )
	            $IDSocioCabeza = $IDSocio;

	          // Registro los socios cabeza como ingresados para que no queden como invitados
	          foreach ( $array_cabeza_grupo as $id_socio_cabeza => $datos_socio_cabeza ):
	            $array_invitado_agregado[] = $datos_socio_cabeza;
	          if ( $IDSocio <> $datos_socio_cabeza ):
	            $contador_socio_cabeza_real++;
	          endif;
	          endforeach;


	          $sql_inserta_reserva_turno = $dbo->query( "INSERT Into ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Tee, CantidadInvitadoSalon, NumeroInscripcion, Altitud, Longitud, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                                    Values ('" . $IDClub . "','" . $IDSocioCabeza . "', '" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "',
	                                                      '" . $dato_hora . "','" . $Tee . "', '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','".$Altitud."','".$Longitud."','".$NombreSocioReserva."','".$AccionSocioReserva."','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','WebService Automatica',NOW())" );

	          if ( !$sql_inserta_reserva_turno ):
	            $respuesta[ "message" ] = "No se pudo realizar la reserva, intente de nuevo (m1)";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          $id_reserva_general_turno = $dbo->lastID();


	          //Inserto los invitados
	          $datos_invitado_turno = json_decode( $Invitados, true );
	          //Reparto los jugadores por turnos
	          $total_invitados_turno = count( $datos_invitado_turno );

	          if ( $contador_socio_cabeza_real >= 1 )
	            $socios_cabeza = $contador_socio_cabeza_real + 1;
	          else
	            $socios_cabeza = 0;

	          $invitados_por_turno = ( ( int )( ( $total_invitados_turno + 1 ) - $socios_cabeza ) / $NumeroTurnos );



	          $contador_invitado_agregado = 1;
	          if ( count( $datos_invitado_turno ) > 0 ):
	            foreach ( $datos_invitado_turno as $detalle_datos_turno ):
	              $IDSocioInvitadoTurno = $detalle_datos_turno[ "IDSocio" ];
	          $NombreSocioInvitadoTurno = $detalle_datos_turno[ "Nombre" ];
	          // Guardo los invitados socios o externos
	          $datos_invitado_actual = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
	          if ( !in_array( $datos_invitado_actual, $array_invitado_agregado ) ):
	            if ( $contador_invitado_agregado <= ( int )$invitados_por_turno ):
	              $sql_inserta_invitado_turno = $dbo->query( "Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
	                                                            Values ('" . $id_reserva_general_turno . "','" . $IDSocioInvitadoTurno . "', '" . $NombreSocioInvitadoTurno . "')" );
	          $array_invitado_agregado[] = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
	          //Envio push al invitado para notificarle si es un invitado socio
	          if ( !empty( $IDSocioInvitadoTurno ) ) {
	            SIMUtil::push_socio_invitado( $IDClub, $id_reserva_general_turno, $IDSocioInvitadoTurno );
	          }
	          endif;
	          else :
	            $contador_invitado_agregado = 0;
	          endif;
	          $contador_invitado_agregado++;
	          endforeach;
	          endif;
	          // Borro la reserva separada
	          $sql_inserta_reserva = $dbo->query( "Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $dato_hora . "' and IDEstadoReserva  = 3" );
	          endif;


	          $contador_turno++;
	          endforeach;
	          //$respuesta["message"] = "Guardado";
	          //$respuesta["success"] = true;
	          //$respuesta["response"] = $id_reserva_general;
	          //return $respuesta;
	          endif;
	          endif;






	          // Si se va a reservas mas turnos seguidos y la validacion fue exitosa borro las separacion hechas
	          if ( $flag_separa_siguiente_turno == 1 && count( $array_hora_siguiente_turno_diponible ) > 0 ):
	            foreach ( $array_hora_siguiente_turno_diponible as $Hora_siguiente ):
	              // Borro la reserva separada
	              $sql_inserta_reserva = $dbo->query( "Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3" );
	          // Borro la reserva separada automaticas
	          $sql_inserta_reserva_aut = $dbo->query( "Delete From ReservaGeneralAutomatica Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and IDEstadoReserva  = 3" );

	          endforeach;
	          endif;


	          //Vuelvo a validar que nadie haya tomado la reserva nuevamente por los casos de milisegundos, para esto creo un espera de x segundos
	          $suma_rand = rand( 0, 1 );
	          $rand_seg = rand( 1, 1 ) + $suma_rand;
	          sleep( $rand_seg );

	          $id_reserva_disponible2 = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' $condicion_tee " );
	          if ( !empty( $id_reserva_disponible2 ) && ( ( int )$cupos_disponibilidad <= 1 || empty( $cupos_disponibilidad ) ) ):
	            $respuesta[ "message" ] = "Lo sentimos, la reserva ya fue tomada";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          if ( !empty( $IDAuxiliar ) ):
	            $suma_rand = rand( 0, 2 );
	          $rand_seg = rand( 1, 1 ) + $suma_rand;
	          sleep( $rand_seg );
	          //Verifico de nuevo que el auxiliar boleador no esté reservado

	          $id_reserva_aux = "";
	          $sql_aux = "Select *
	                            From ReservaGeneral
	                            Where IDAuxiliar = '" . $IDAuxiliar . "'
	                              and Fecha = '" . $Fecha . "'
	                              and Hora = '" . $Hora . "'
	                              and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)";
	          $r_aux = $dbo->query( $sql_aux );
	          while ( $row_aux = $dbo->fetchArray( $r_aux ) ):
	            if ( $row_aux[ "IDSocio" ] == $IDSocio && $row_aux[ "IDSocioBeneficiario" ] == ( int )$IDBeneficiario ):
	              $id_reserva_aux = "";
	            else :
	              $id_reserva_aux = "1";
	          endif;
	          endwhile;


	          /*$id_reserva_aux = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDAuxiliar = '" . $IDAuxiliar . "' and Fecha = '".$Fecha."' and Hora = '".$Hora."' and (IDSocio <> '".$IDSocio."' and IDSocioBeneficiario <> '".$IDSocioBeneficiario."') and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)" );
	           */
	          /*
	          $respuesta["message"] = $sql_aux;
	          $respuesta["success"] = false;
	          $respuesta["response"] = NULL;
	          return $respuesta;
	          */



	          $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora";
	          if ( !empty( $id_reserva_aux ) ):
	            $respuesta[ "message" ] = $mensaje_auxiliar_no_dispo;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          //Cuando viene con array
	          foreach ( $array_id_auxiliar as $id_auxiliar_valida ):
	            if ( ( int )$id_auxiliar_valida >= 0 ):
	              $id_auxiliar_valida = $id_auxiliar_valida . ",";
	          $id_reserva_aux = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '" . $id_auxiliar_valida . "%' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDSocio <> '" . $IDSocio . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)" );
	          $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora.";
	          if ( !empty( $id_reserva_aux ) ):
	            $respuesta[ "message" ] = $mensaje_auxiliar_no_dispo;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          endif;
	          endforeach;

	          endif;


	          //Verifico que el elemnto no hay sido reservado a esta misma hora en otro servicio
	          $condicion_multiple_elemento = SIMWebserviceQuemado::verifica_elemento_otro_servicio( $IDElemento,"" );
	          //Si el elemento ya tiene otra reserva en otro servicio marco esta como ya revarda asi tenga cupos disponibles
	          $array_otro_elemento = explode( ",", $condicion_multiple_elemento );
	          //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
	          $suma_rand = rand( 0, 1 );
	          $rand_seg = rand( 1, 1 ) + $suma_rand;
	          sleep( $rand_seg );
	          if ( count( $array_otro_elemento ) > 1 ): //Si es mas de 1 quiere decir que el elemento esta en mas de un servicio y hago la verificacion
	            foreach ( $array_otro_elemento as $id_elemento_multiple ):
	              if ( $id_elemento_multiple != $IDElemento && !empty( $id_elemento_multiple ) ):
	                $sql_reserva_elemento_multp = "SELECT * FROM ReservaGeneral WHERE IDServicioElemento in (" . $id_elemento_multiple . ") and Fecha = '" . $Fecha . "' and (IDEstadoReserva = 1 ) and Hora = '" . $Hora . "' ";
	          $qry_reserva_elemento_mult = $dbo->query( $sql_reserva_elemento_multp );
	          if ( $dbo->rows( $qry_reserva_elemento_mult ) > 0 && $cupos_disponibilidad <= 1):
	            $respuesta[ "message" ] = "La persona o elemento seleccionado ya fue reservado en otro servicio en esta misma fecha/hora";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;
	          endif;
	          endforeach;
	          endif;


	          //Guardo la reserva maestra
	          $sql_inserta_reserva = $dbo->query( "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva,
	                                                Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, Altitud, Longitud, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                          Values ('" . $IDClub . "','" . $IDSocio . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "',
	                                          '" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','".$Altitud."' , '".$Longitud."','".$NombreSocioReserva."',
	                                          '".$AccionSocioReserva."','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','" . $UsuarioCreacion . "',NOW())" );

	          if ( !$sql_inserta_reserva ):
	            $respuesta[ "message" ] = "No se pudo realizar la reserva, intente de nuevo (m2)";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;


	          $id_reserva_general = $dbo->lastID();




	          $datos_invitado = json_decode( $Invitados, true );
	          if ( count( $datos_invitado ) > 0 ):
	            foreach ( $datos_invitado as $detalle_datos ):
	              $IDSocioInvitado = $detalle_datos[ "IDSocio" ];
	          $NombreSocioInvitado = $detalle_datos[ "Nombre" ];
	          $datos_invitado_actual = $IDSocioInvitado . "-" . $NombreSocioInvitado;
	          if ( !in_array( $datos_invitado_actual, $array_invitado_agregado ) ):
	              // Guardo los invitados socios o externos
	              $sql_inserta_invitado = $dbo->query( "INSERT Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
	                                                  Values ('" . $id_reserva_general . "','" . $IDSocioInvitado . "', '" . $NombreSocioInvitado . "')" );


	              //// Para las reservas del polo de practicas los invitado se crean como socio invitado y se les crea la reserva
	              if($IDClub==37 && $IDServicio == 3575){
	                $sql_reserva_invitado="INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva,
																					Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                                Values ('" . $IDClub . "','" . $IDNuevoSocio . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "',
	                                                '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion . "','".$NombreSocioReserva."','".$AccionSocioReserva."','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','InvitadoPolo',NOW())";

	                if(empty( $IDSocioInvitado )){
	                  $sql_inserta_invitado_socio = $dbo->query( "Insert Into Socio (IDClub, IDCategoria, IDEstadoSocio, Accion, Nombre, NumeroDocumento, Email, Clave, TipoSocio, FechaInicioInvitado, FechaFinInvitado, ObservacionEspecial)
	                                                    Values ('" . $IDClub . "','43', '1','999999991','".$NombreSocioInvitado."','','invitadoreserva','','Invitado','".$Fecha."','".$Fecha."','Creado Automaticamente por practica de polo')" );
	                  $IDNuevoSocio=$dbo->lastID();

	                }else{
	                  $IDNuevoSocio=$IDSocioInvitado;
	                }
	                $numero_inscripcion_inv = rand( 0, 999999 );
	                //Crear la reserva para el invitado
	                $sql_reserva_invitado="INSERT INTO ReservaGeneral (IDClub, IDSocio, IDSocioReserva, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, CantidadInvitadoSalon, NumeroInscripcion, NombreSocio,
										AccionSocio,NombreBeneficiario,AccionBeneficiario, IP, IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                        Values ('" . $IDClub . "','" . $IDNuevoSocio . "','" . $IDNuevoSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "','" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "',
	                                        '" . $CantidadInvitadoSalon . "','" . $numero_inscripcion_inv . "','".$NombreSocioInvitado."','','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','InvitadoPolo',NOW())";
	                $dbo->query($sql_reserva_invitado);

	              }


	              //Envio push al invitado para notificarle si es un invitado socio
	              if ( !empty( $IDSocioInvitado ) ) {
	                SIMUtil::push_socio_invitado( $IDClub, $id_reserva_general, $IDSocioInvitado );
	              }

	          endif;
	          endforeach;
	          endif;


	          $array_Campos = $Campos;
	          $array_Campos = json_decode( $Campos, true );

	          if ( count( $array_Campos ) > 0 ):
	            foreach ( $array_Campos as $id_valor_campo => $valor_campo ):
	              // Guardo los campos personalizados
	              $sql_inserta_campo = $dbo->query( "INSERT Into ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
	                                                Values ('" . $id_reserva_general . "','" . $valor_campo[ "IDCampo" ] . "', '" . $valor_campo[ "Valor" ] . "')" );
	          endforeach;
	          endif;





	          // Si se va a reservas mas turnos seguidos y la validacion fue exitosa ingreso las demas reservas
	          if ( $flag_separa_siguiente_turno == 1 && count( $array_hora_siguiente_turno_diponible ) > 0 ):
	            foreach ( $array_hora_siguiente_turno_diponible as $Hora_siguiente ):

	              $validacion_auxiliar = 0;
	          if ( !empty( $IDAuxiliar ) ):

	            if ( !empty( $IDAuxiliar ) && count( $array_id_auxiliar ) <= 0 ):
	              $array_id_auxiliar = explode( ",", $IDAuxiliar );
	          endif;

	          //Cuando viene con array
	          foreach ( $array_id_auxiliar as $id_auxiliar_valida ):
	            if ( ( int )$id_auxiliar_valida >= 0 ):
	              $id_auxiliar_valida = $id_auxiliar_valida . ",";
	          $id_reserva_aux = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDAuxiliar like '" . $id_auxiliar_valida . "%' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "' and (IDEstadoReserva  = 1 or IDEstadoReserva  = 3)" );
	          $mensaje_auxiliar_no_dispo = "Lo sentimos el auxiliar/boleador/ seleccionado no esta disponible en esta fecha/hora: " . $Fecha . "/" . $Hora_siguiente;
	          if ( !empty( $id_reserva_aux ) ):
	            $validacion_auxiliar = 1;
	          $borra_reserva_primera = $dbo->query( "Delete From ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "'" );
	          $respuesta[ "message" ] = $mensaje_auxiliar_no_dispo;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          endif;
	          endforeach;
	          endif;





	          //Vuelvo a validar que nadie haya tomado la reserva nuevamente por los casos de milisegundos
	          $id_reserva_disponible3 = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicio . "' and IDServicioElemento = '" . $IDElemento . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora_siguiente . "'" );
	          if ( empty( $id_reserva_disponible3 ) ):
	            //Guardo la reserva si nadie la ha tomado
	            $sql_inserta_reserva_duplicar = $dbo->query( "INSERT INTO ReservaGeneral (IDClub, IDSocio,IDUsuarioReserva,  IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, NumeroInscripcion,Tipo, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                                      Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora_siguiente . "','" . $Observaciones . "'
	                                                        ,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','".$NombreSocioReserva."','".$AccionSocioReserva."','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','" . $UsuarioCreacion . "',NOW())" );

	          if ( !$sql_inserta_reserva_duplicar ):
	            $respuesta[ "message" ] = "No se pudo realizar la reserva, intente de nuevo (m3)";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          $id_reserva_general_duplicar = $dbo->lastID();
	          // Duplico los invitados de la reserva padre
	          $sql_invitado_duplicar = $dbo->query( "Insert into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre) Select '" . $id_reserva_general_duplicar . "', IDSocio, Nombre From ReservaGeneralInvitado Where IDReservaGeneral = '" . $id_reserva_general . "'" );
	          // Guardar relacion de reservas automaticas
	          $sql_reserva_automatica = $dbo->query( "Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
	                                            Values ('" . $id_reserva_general . "','" . $id_reserva_general_duplicar . "','" . $IDClub . "','" . $IDSocio . "','" . $IDElemento . "','" . $Fecha . "','" . $Hora_siguiente . "','1')" );
	          endif;

	          endforeach;
	          endif;


	          // SI el servicio es una clase y se solicta reservar una cancha realizo la reserva
	          if ( $flag_reserva_cancha_clase == 1 ):
	            //Verifico de nuevo que la cancha este disponible por que por milesimas de seg puede queadr 2 al tiempo

	            //duermo la ejecucion por lo meno x seg, esto para evitar reservas multiples por causa de milisegundos
	            $suma_rand = rand( 0, 1 );
	          $rand_seg = rand( 1, 1 ) + $suma_rand;
	          sleep( $rand_seg );

	          $id_reserva_disponible = $dbo->getFields( "ReservaGeneral", "IDReservaGeneral", "IDClub = '" . $IDClub . "' and IDServicio = '" . $IDServicioCanchaClub . "' and IDServicioElemento = '" . $IDElemento_cancha . "' and IDEstadoReserva in (1) and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "'" );

	          if ( empty( $id_reserva_disponible ) ):
	            // Obtener la disponibilidad utilizada al consultar la reserva
	            $id_disponibilidad_cancha = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $IDServicioCanchaClub, $Fecha, $IDElemento_cancha );
	          $sql_inserta_reserva_cancha = $dbo->query( "INSERT INTO ReservaGeneral (IDClub, IDSocio, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, NumeroInscripcion, Tipo, NombreSocio,AccionSocio,NombreBeneficiario,AccionBeneficiario,IP,IdentificadorServicio,ConsecutivoServicio,UsuarioTrCr, FechaTrCr)
	                                Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $IDServicioCanchaClub . "','" . $IDElemento_cancha . "', '1','" . $id_disponibilidad . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $IDTipoReserva . "','" . $Fecha . "', '" . $Hora . "','" . $Observaciones . "'
	                                  ,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','".$NombreSocioReserva."','".$AccionSocioReserva."','".$NombreBenefReserva."','".$AccionBenefReserva."','".$IP."','".$IdentificadorServicio."','".$ConsecutivoServicio."','" . $UsuarioCreacion . "',NOW())" );


	          if ( !$sql_inserta_reserva_cancha ):
	            $respuesta[ "message" ] = "La reserva solicitada ya fue o esta siendo tomada (m5)";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;




	          $id_reserva_cancha = $dbo->lastID();

	          // Guardar relacion de reservas automaticas
	          $sql_reserva_automatica = $dbo->query( "Insert Into ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
	                                      Values ('" . $id_reserva_general . "','" . $id_reserva_cancha . "','" . $IDClub . "','" . $IDSocio . "','" . $IDElemento_cancha . "','" . $Fecha . "','" . $Hora . "','1')" );
	          else :
	            //No se pudo tomar por que la cancha ya fue reservada por alguien mas en el mismo segundo
	            //Borro la reserva asociadas
	            $borra_reserva_primera = $dbo->query( "Delete From ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "'" );
	          $respuesta[ "message" ] = "Lo sentimos, no hay una cancha disponible para tomar la clase en este horario.";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          return $respuesta;
	          endif;

	          endif;


	          //Especial Country Sala belleza Keratina y antifrizz se reserva turno a otras personas
	          if ( ($IDClub == 44 ) && $IDServicio ==11736 && ($IDTipoReserva=="1482" || $IDTipoReserva=="1483" || $IDTipoReserva=="1484") ){
	            $mensaje_otra_persona="Se necesita otra profesional para completar la reserva pero no esta disponible, intente en otro horario";
	            $reserva_aut_otra=self::reserva_otra_elemento($IDClub,$IDSocio,$IDServicio,$IDTipoReserva,$Fecha,$Hora,$id_reserva_general);
	            if(!$reserva_aut_otra){
	              //Borro reserva maestra
	              $borra_reserva_primera = $dbo->query( "DELETE FROM ReservaGeneral Where IDReservaGeneral = '" . $id_reserva_general . "' Limit 1" );
	              $respuesta[ "message" ] = $reserva_aut_otra;
	              $respuesta[ "success" ] = false;
	              $respuesta[ "response" ] = NULL;
	              return $respuesta;

	            }
	          }
	          //FIN ESPECIAL country


	          // Borro la reserva separada Padre
	          //$sql_inserta_reserva = $dbo->query( "Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3" );
	            $sql_inserta_reserva = $dbo->query( "Delete From ReservaGeneral Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3" );
	          // Borro la reserva separada automaticas
	          $sql_inserta_reserva_aut = $dbo->query( "Delete From ReservaGeneralAutomatica Where IDClub = '" . $IDClub . "' and IDSocio = '" . $IDSocio . "' and IDServicioElemento	 = '" . $IDElemento . "' and Fecha = '" . $Fecha . "' and Hora = '" . $Hora . "' and IDEstadoReserva  = 3" );




	          SIMUtil::notificar_nueva_reserva( $id_reserva_general, $IDTipoReserva );

	          //Si el elemento reservado es una persona (profesor, peluquero, masajista, etc) y esta creado como empleado en app empleados envio notificacion push
	          SIMUtil::push_notifica_reserva( $IDClub, $id_reserva_general, "Empleado" );


	          //Datos reserva
	          $datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
	          $response_reserva = array();
	          $datos_reserva[ "IDReserva" ] = ( int )$id_reserva_general;
	          //Calculo el valor de la reserva
	          $valor_inicial_reserva = ( int ) $datos_servicio["ValorReserva"];
	          $TurnosSeparar = ( int )$dbo->getFields( "ServicioTipoReserva", "NumeroTurnos", "IDServicioTipoReserva = '" . $IDTipoReserva . "'" );
	          $consul = "ServicioTipoReserva " . " NumeroTurnos " . "IDServicioTipoReserva = '" . $IDTipoReserva . "'";
	          if ( $TurnosSeparar > 1 ):
	            $ValorReserva = ( int )$valor_inicial_reserva * $TurnosSeparar;
	          else :
	            $ValorReserva = ( int )$valor_inicial_reserva;
	          endif;

	          if ( $IDClub == 28 ): // Valor Especial Liga de tenis
	            $ValorReserva = SIMUtil::calcular_tarifa( $IDClub, $IDSocio, $IDServicio, $Fecha, $Hora, $IDElemento, $id_reserva_general, $IDTipoReserva );
	          endif;



	          $datos_reserva[ "ValorReserva" ] = $ValorReserva;
	          //array_push($response_reserva, $datos_reserva);
	          //Produccion
	          $llave_encripcion = $datos_club[ "ApiKey" ]; //llave de encripciÛn que se usa para generar la fima
	          //Produccion
	          $usuarioId = $datos_club[ "MerchantId" ]; //c0digo inicio del cliente

	          $refVenta = time(); //referencia que debe ser ?nica para cada transacciÛn
	          $iva = 0; //impuestos calculados de la transacciÛn
	          $baseDevolucionIva = 0; //el precio sin iva de los productos que tienen iva
	          $valor = $datos_reserva[ "ValorReserva" ] + ( ( $datos_reserva[ "ValorReserva" ] * $ArrayParametro[ "Iva" ] ) / 100 ); //el valor ; //el valor total
	          $moneda = "COP"; //la moneda con la que se realiza la compra
	          $prueba = "0"; //variable para poder utilizar tarjetas de crÈdito de prueba
	          $descripcion = "Pago Reserva Mi Club"; //descripciÛn de la transacciÛn
	          $url_respuesta = URLROOT . "respuesta_transaccion.php"; //Esta es la p·gina a la que se direccionar· al final del pago
	          $url_confirmacion = URLROOT . "confirmacion_pagos.php";
	          $emailSocio = $datos_socio["CorreoElectronico"];
	          if ( filter_var( trim( $emailSocio ), FILTER_VALIDATE_EMAIL ) )
	            $emailComprador = $emailSocio;
	          else
	            $emailComprador = "";

	          $firma_cadena = "$llave_encripcion~$usuarioId~$refVenta~$valor~$moneda"; //concatenaciÛn para realizar la firma
	          $firma = md5( $firma_cadena ); //creaciÛn de la firma con la cadena previamente hecha
	          $extra1 = $id_reserva_general;



	          $datos_reserva[ "Action" ] = $datos_club[ "URL_PAYU" ];

	          $response_parametros = array();
	          $datos_post[ "llave" ] = "moneda";
	          $datos_post[ "valor" ] = ( string )$moneda;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "ref";
	          $datos_post[ "valor" ] = $refVenta;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "llave";
	          $datos_post[ "valor" ] = $llave_encripcion;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "userid";
	          $datos_post[ "valor" ] = $usuarioId;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "usuarioId";
	          $datos_post[ "valor" ] = $usuarioId;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "accountId";
	          $datos_post[ "valor" ] = ( string )$datos_club[ "AccountId" ];
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "descripcion";
	          $datos_post[ "valor" ] = $descripcion;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "extra1";
	          $datos_post[ "valor" ] = ( string )$extra1;
	          array_push( $response_parametros, $datos_post );


	          $datos_post[ "llave" ] = "extra2";
	          $datos_post[ "valor" ] = $IDClub;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "refVenta";
	          $datos_post[ "valor" ] = $refVenta;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "valor";
	          $datos_post[ "valor" ] = $ValorReserva;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "iva";
	          $datos_post[ "valor" ] = "0";
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "baseDevolucionIva";
	          $datos_post[ "valor" ] = "0";
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "firma";
	          $datos_post[ "valor" ] = $firma;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "emailComprador";
	          $datos_post[ "valor" ] = $emailComprador;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "prueba";
	          $datos_post[ "valor" ] = ( string )$datos_club[ "IsTest" ];
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "url_respuesta";
	          $datos_post[ "valor" ] = ( string )$url_respuesta;
	          array_push( $response_parametros, $datos_post );

	          $datos_post[ "llave" ] = "url_confirmacion";
	          $datos_post[ "valor" ] = ( string )$url_confirmacion;
	          array_push( $response_parametros, $datos_post );

	          $datos_reserva[ "ParametrosPost" ] = $response_parametros;

	          /*
	          $datos_reserva["Action"] = $datos_club["URL_PAYU"];
	          $datos_reserva["moneda"] = (string)$moneda;
	          $datos_reserva["ref"] = $refVenta;
	          $datos_reserva["llave"] = $llave_encripcion;
	          $datos_reserva["userid"] = $usuarioId;
	          $datos_reserva["usuarioId"] = $usuarioId;
	          $datos_reserva["accountId"] = (string)$datos_club["AccountId"];
	          $datos_reserva["descripcion"] = $descripcion;
	          $datos_reserva["extra1"] = (string)$extra1;
	          $datos_reserva["extra2"] = $IDClub;
	          $datos_reserva["refVenta"] = $refVenta;
	          $datos_reserva["valor"] =  $datos_reserva["ValorReserva"];
	          $datos_reserva["iva"] = "0";
	          $datos_reserva["baseDevolucionIva"] = "0";
	          $datos_reserva["firma"] = $firma;
	          $datos_reserva["emailComprador"] = $emailComprador;
	          $datos_reserva["prueba"] = (string)$datos_club["IsTest"];
	          $datos_reserva["url_respuesta"] = (string)$url_respuesta;
	          $datos_reserva["url_confirmacion"] = (string)$url_confirmacion;
	          */

	          $mensaje_guardar = $datos_servicio["MensajeReservaGuardada"];
	          if(!empty($mensaje_guardar))
	            $mensaje_guardado=$mensaje_guardar;
	          else
	            $mensaje_guardado="Guardado";

	          //Para aeroclub avion si es 8 dias antes no esta sujeta a verificación y es menos días si aparece mensaje
	          if($IDClub==36):
	              $mensaje_guardado="Reservado con exito";
	          endif;
	          if ( $IDServicio == "3608" || $IDServicio == "4371" || $IDServicio == "3608" || $IDServicio == "3609"  ):
	            $fecha_reser = $Fecha;
	            $nuevafecha = strtotime( '-8 day', strtotime( $fecha_reser ) );
	            $nuevafecha = date( 'Y-m-j', $nuevafecha );
	            $fecha_hoy_reser = date( "Y-m-d" );
	            if ( strtotime( $nuevafecha ) <= strtotime( $fecha_hoy_reser ) ):
	              $mensaje_especial_repetir = "RESERVA EN PROCESO Como su solicitud esta siendo procesada con menos de 8 días de antelación, queda sujeta a disponibilidad. Pronto le confirmaremos";
	              $mensaje_guardado="";
	            else:
	              $mensaje_guardado="Reservado con exito";
	            endif;
	          endif;





	          $respuesta[ "message" ] = $mensaje_guardado . $mensaje_especial_repetir;
	          $respuesta[ "success" ] = true;
	          $respuesta[ "response" ] = $datos_reserva;
	          else :
	            $respuesta[ "message" ] = "Lo sentimos la reserva ya fue tomada.";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;

	          endif;



	          //$contador_fecha = strtotime ( '+1 '.$periodo_sumar ,  $contador_fecha  ) ;
	          //$contador_fecha = strtotime ( '+'.$numero_repeticion.' '.$periodo_sumar ,  strtotime($Fecha)  ) ;
	          $contador_fecha = strtotime( '+'.$dato_sumar.' ' . $periodo_sumar_app, strtotime( $Fecha ) );
	          $Fecha = date( "Y-m-d", $contador_fecha );




	          endfor;
	          }
	          else {
	            $respuesta[ "message" ] = "Lo sentimos solo se permite " . $MaximoReservaSocioServicio . " reservas por dia. " . $mensaje_opcion_reserva;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	        }


	          else :
	            $respuesta[ "message" ] = "Lo sentimos fecha no disponible";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          endif;
	          else :
	            $respuesta[ "message" ] = "Lo sentimos no se puede reservar turnos seguidos, debe haber un lapso de por lo menos 1 hora ";
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          endif;

	          else :
	            $respuesta[ "message" ] = "Lo sentimos, el maximo numero de invitados para poder reservar es: " . $MaximoInvitados;
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          endif;

	          else :
	            $respuesta[ "message" ] = "Lo sentimos el minimo de personas para reservas es de : " . ($MinimoInvitados+1);
	          $respuesta[ "success" ] = false;
	          $respuesta[ "response" ] = NULL;
	          endif;

	      } else {
	      $respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
	      $respuesta[ "success" ] = false;
	      $respuesta[ "response" ] = NULL;
	    }

	  } else {
	    $respuesta[ "message" ] = "21. Atencion faltan parametros";
	    $respuesta[ "success" ] = false;
	    $respuesta[ "response" ] = NULL;
	  }

	  return $respuesta;

	}


	function reserva_otra_elemento($IDClub,$IDSocio,$IDServicio,$IDTipoReserva,$Fecha,$Hora,$IDReservaPadre){

			$dbo =& SIMDB::get();
			$FechaHoraServicio=$Fecha . " " . $Hora;
			$doc_segundo_elemento_dispo="";
			$ServicioAsociadoEst["IDServicio"]="11732";
			$ServicioAsociadoEst["IDTipoServicio"]="1518";
			$ServicioAsociadoEst["IDElemento"][1035912851]="3424";
			$ServicioAsociadoEst["IDElemento"][1019084378]="3422";
			$sql_estilista="SELECT IDServicioElemento,IdentificadorElemento FROM ServicioElemento WHERE IdentificadorElemento = '1035912851' or IdentificadorElemento = '1019084378' Order by IdentificadorElemento DESC"; //leira
			$r_estilista=$dbo->query($sql_estilista);
			while($row_estilista=$dbo->fetchArray($r_estilista)){
				$array_id_estilista[$row_estilista["IdentificadorElemento"]][]=$row_estilista["IDServicioElemento"];
			}
			//print_r($array_id_estilista);


		switch($IDTipoReserva){
			case "1482": //Keratina media cabeza 90 min.
				$H_Siguiente=strtotime ( '+30 minute' , strtotime ($FechaHoraServicio) ) ;
				$HoraSiguiente=date("H:i:s",$H_Siguiente);
				$NumeroBloques=4;
			break;
			case "1483": //keratina completa 135 min.
				$H_Siguiente=strtotime ( '+45 minute' , strtotime ($FechaHoraServicio) ) ;
				$HoraSiguiente=date("H:i:s",$H_Siguiente);
				$NumeroBloques=6;
			break;
			case "1484": // Antifrizz 90 min.
				$H_Siguiente=strtotime ( '+30 minute' , strtotime ($FechaHoraServicio) ) ;
				$HoraSiguiente=date("H:i:s",$H_Siguiente);
				$NumeroBloques=4;
			break;
		}

		foreach($array_id_estilista as $identifica_est => $datos_est){
			$bloques_disponibles="S";
			if(empty($doc_segundo_elemento_dispo)){
					foreach($datos_est as $id_est){
							$array_id_est[]=$id_est;
					}
						if(count($array_id_est)>0){
							$id_est=implode(",",$array_id_est);
							for($i_bloque=1;$i_bloque<=$NumeroBloques;$i_bloque++){
								if($bloques_disponibles=="S"){
										/*
										echo "<br>".$sql_reserva_otro="SELECT IDReservageneral  FROM ReservaGeneral WHERE Fecha = '".$Fecha."' and Hora = '".$HoraSiguiente."' and IDServicioElemento in ($id_est) Limit 1";
										$r_est=$dbo->query($sql_reserva_otro);
										$row_est=$dbo->fetchArray($r_est);
										if(!empty($row_est["IDReservageneral"])){
												$bloques_disponibles="N";
										}
										*/
										// Obtener la disponibilidad utilizada al consultar la reserva
										$id_disponibilidad_est =  SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $ServicioAsociadoEst["IDServicio"], $Fecha, $ServicioAsociadoEst["IDElemento"][$identifica_est], $HoraSiguiente );


										if(!empty($id_disponibilidad_est)){
												$verificacion_est=SIMWebserviceQuemado::verifica_club_servicio_abierto( $IDClub, $Fecha, $ServicioAsociadoEst["IDServicio"], $ServicioAsociadoEst["IDElemento"][$identifica_est], $HoraSiguiente, "" );
												if ( empty( $verificacion_est ) ){
														$Observaciones="Reserva automatica de keratina o antifrrizz";
														 $sql_insert_rese="INSERT INTO ReservaGeneral (IDClub, IDSocio, IDUsuarioReserva, IDServicio, IDServicioElemento, IDEstadoReserva, IDDisponibilidad, IDReservaGrupos, IDInvitadoBeneficiario, IDSocioBeneficiario, IDServicioTipoReserva, Fecha, Hora, Observaciones, Tee, IDAuxiliar, IDTipoModalidadEsqui, NumeroInscripcion, Tipo, UsuarioTrCr, FechaTrCr)
																								Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDUsuarioReserva . "', '" . $ServicioAsociadoEst["IDServicio"] . "','" . $ServicioAsociadoEst["IDElemento"][$identifica_est] . "', '1','" . $id_disponibilidad_est . "','" . $IDReservaGrupos . "','" . $IDInvitadoBeneficiario . "','" . $IDSocioBeneficiario . "','" . $ServicioAsociadoEst["IDTipoServicio"] . "','" . $Fecha . "', '" . $HoraSiguiente . "','" . $Observaciones . "'
																									,'" . $Tee . "','" . $IDAuxiliar . "','" . $IDTipoModalidadEsqui . "','" . $numero_inscripcion . "','Automatica','" . $UsuarioCreacion . "',NOW())";

														$sql_inserta_reserva_est = $dbo->query($sql_insert_rese);
														$dbo->query($sql_inserta_reserva_est);
														$id_reserva_est= $dbo->lastID();
														// Guardar relacion de reservas automaticas
														$sql_reserva_automatica = $dbo->query( "INSERT INTO ReservaGeneralAutomatica (IDReservaGeneral, IDReservaGeneralAsociada, IDClub, IDSocio,IDServicioElemento, Fecha, Hora, IDEstadoReserva)
																																		Values ('" . $IDReservaPadre . "','" . $id_reserva_est . "','" . $IDClub . "','" . $IDSocio . "','" .  $ServicioAsociadoEst["IDElemento"][$identifica_est] . "','" . $Fecha . "','" . $HoraSiguiente . "','1')" );

														$array_id_reserva_est_aut[]=$id_reserva_est;

														if ( !$sql_inserta_reserva_est ){
															$bloques_disponibles="N";
															if(count($array_id_reserva_est_aut)>0){
																	foreach($array_id_reserva_est_aut as $id_reserva_aut_est){
																		$borra_reserva_apartada="DELETE FROM ReservaGeneral Where IDReservaGeneral = '".$id_reserva_aut_est."' Limit 1";
																		$dbo->query($borra_reserva_apartada);
																	}
															}
														}
													}
													else{
														$bloques_disponibles="N";
													}
											}
											else{
													$bloques_disponibles="N";
											}

								}
								$FechaHoraServicio=$Fecha . " " . $HoraSiguiente;
								$H_Siguiente=strtotime ( '+15 minute' , strtotime ($FechaHoraServicio) ) ;
								$HoraSiguiente=date("H:i:s",$H_Siguiente);
							}

								// como si se pudo reservar todo salgo del ciclo
								if($bloques_disponibles=="S"){
										$doc_segundo_elemento_dispo=$identifica_est;
								}
				}
		 }
		}

		if($doc_segundo_elemento_dispo==""){
			return false;

		}
		else{
			return true;
		}
		return false;
	}



	function set_invitado_servicio( $IDClub, $IDReserva, $Invitados ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDClub ) && !empty( $IDReserva ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_reserva = $IDReserva;

			$nuevacadena = str_replace( 'Optional("', "", $Invitados );
			$nuevacadena = str_replace( '")', "", $nuevacadena );
			$Invitados = $nuevacadena;
			$datos_invitado = json_decode( $Invitados, true );
			$TotalInvitadosAgregados=count( $datos_invitado );


			$datos_reserva = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array" );
			$id_disponibilidad = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $datos_reserva["IDServicio"], $datos_reserva["Fecha"], $datos_reserva["IDServicioElemento"], $datos_reserva["Hora"] );
			$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array" );
			//quito 1 al dueño de la reserva
			$MinimoPersonasTurno=$datos_disponibilidad["MinimoInvitados"]-1;
			$MaximoReservaSocioServicio = $datos_disponibilidad["MaximoReservaDia"];
			if($TotalInvitadosAgregados>=$MinimoPersonasTurno){

				//Verifico que la persona no este en otro grupo
				if ( count( $datos_invitado ) > 0 ){
					foreach ( $datos_invitado as $detalle_datos ){
							$IDSocioInvitado = $detalle_datos[ "IDSocio" ];
							if((int)$IDSocioInvitado>0){
								$nombre_socio_invitado = $dbo->getFields( "Socio", "Nombre", "IDSocio = '" . $IDSocioInvitado . "'" ) . " " . $dbo->getFields( "Socio", "Apellido", "IDSocio = '" . $IDSocioInvitado . "'" );
								$hora_actual_sistema_valida = date( "H:i:s" );
								$sql_socio_grupo = "SELECT RGI.*
															FROM ReservaGeneralInvitado RGI, ReservaGeneral RG
															WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocioInvitado . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $datos_reserva["Fecha"] . "' and RG.Hora <> '" . $datos_reserva["Hora"] . "' and RG.IDServicio = '" . $datos_reserva["IDServicio"] . "' ORDER BY IDReservaGeneralInvitado Desc ";
							  $qry_socio_grupo = $dbo->query( $sql_socio_grupo );
								if ( $dbo->rows( $qry_socio_grupo ) > 0 && $MaximoReservaSocioServicio<=1 ){
										$respuesta[ "message" ] = $nombre_socio_invitado . ", ya esta agregado(a) en esta fecha como invitado en un grupo, no es posible realizar la reserva, por favor verifique";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
										return $respuesta;
										exit;
								}
								elseif($MaximoReservaSocioServicio<=1){
									$sql_reserva_dia_hora = "SELECT IDReservageneral
																					 FROM ReservaGeneral
																					 Where IDSocio = '" . $IDSocioInvitado . "' and Fecha = '" . $datos_reserva["Fecha"] . "' and IDServicio = '" . $datos_reserva["IDServicio"] . "' and IDEstadoReserva = '1' Order by Hora Desc Limit 1";
								  $result_reserva_dia_hora = $dbo->query( $sql_reserva_dia_hora );
				          $row_reserva_dia_hora = $dbo->fetchArray( $result_reserva_dia_hora );
									if(!empty($row_reserva_dia_hora["IDReservageneral"])){
										$respuesta[ "message" ] = $nombre_socio_invitado . ", ya tiene una reserva para ese mismo dia";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
										return $respuesta;
										exit;
									}

								}

							}

				}
			}





				if ( !empty( $id_reserva ) ) {
					//Borro los invitado anteriores
					$del_invitado = "Delete From ReservaGeneralInvitado Where IDReservaGeneral = '" . $IDReserva . "'";
					$dbo->query( $del_invitado );



					if ( count( $datos_invitado ) > 0 ):
						foreach ( $datos_invitado as $detalle_datos ):
							$IDSocioInvitado = $detalle_datos[ "IDSocio" ];
					$NombreSocioInvitado = $detalle_datos[ "Nombre" ];
					// Guardo los invitados socios o externos
					$sql_inserta_invitado = $dbo->query( "Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
															Values ('" . $id_reserva . "','" . $IDSocioInvitado . "', '" . $NombreSocioInvitado . "')" );
					endforeach;
					endif;

					/*
					$array_Invitados = $Invitados;
					if (count($array_Invitados)>0):
						foreach($array_Invitados as $id_valor => $valor):
							// Guardo los invitados socios o externos
							$sql_inserta_invitado = $dbo->query("Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
																Values ('".$id_reserva."','".$valor["IDSocioInvitado"]."', '".$valor["NombreInvitado"]."')");
						endforeach;
					endif;
					*/


					$respuesta[ "message" ] = "Guardado";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = "Guardado";

				} else {
					$respuesta[ "message" ] = "Error la reserva no existe o no pertenece al club";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
				}

			}
			else{
				$respuesta[ "message" ] = $row_invitado["TotalInvitados"] ."El invitado no puede ser eliminado por que la reserva no cumple con el numero mínimo para hacer la reserva";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		}
		else {
			$respuesta[ "message" ] = "22. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function del_invitado_servicio( $IDClub, $IDReserva, $IDReservaGeneralInvitado ) {
		$dbo = & SIMDB::get();

		if ( !empty( $IDClub ) && !empty( $IDReserva ) && !empty( $IDReservaGeneralInvitado ) ) {

			//verifico que el invitado exista y pertenezca al club
			$id_invitado_reserva = $dbo->getFields( "ReservaGeneralInvitado", "IDReservaGeneralInvitado", "IDReservaGeneralInvitado = '" . $IDReservaGeneralInvitado . "'" );

			if ( !empty( $id_invitado_reserva ) ) {

				$datos_reserva = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array" );
				$id_disponibilidad = SIMWebserviceQuemado::obtener_disponibilidad_utilizada( $datos_reserva["IDServicio"], $datos_reserva["Fecha"], $datos_reserva["IDServicioElemento"], $datos_reserva["Hora"] );
				$datos_disponibilidad = $dbo->fetchAll( "Disponibilidad", " IDDisponibilidad = '" . $id_disponibilidad . "' ", "array" );

				//quito 1 al dueño de la reserva
				$MinimoPersonasTurno=$datos_disponibilidad["MinimoInvitados"]-1;
				//Invitados de la reserva
				$sql_invitados = $dbo->query( "SELECT count(IDReservaGeneralInvitado) as TotalInvitados
																			 FROM ReservaGeneralInvitado
																			 WHERE IDReservaGeneral = '" . $IDReserva . "'" );

				$row_invitado=$dbo->fetchArray($sql_invitados);
				//Le quito el invitado que trata de eliminar para saber si cumple con la condición
				$TotalInvitadoReserva=(int)$row_invitado["TotalInvitados"]-1;

				if($TotalInvitadoReserva>=$MinimoPersonasTurno){
					// Borrar los invitados socios o externos
					$sql_elimina_invitado = $dbo->query( "Delete From ReservaGeneralInvitado Where IDReservaGeneralInvitado = '" . $IDReservaGeneralInvitado . "'" );
					$respuesta[ "message" ] = "eliminado";
					$respuesta[ "success" ] = true;
					$respuesta[ "response" ] = "eliminado";
				}
				else{
					$respuesta[ "message" ] = "El invitado no puede ser eliminado por que la reserva no cumple con el numero mínimo para hacer la reserva";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;

				}
			} else {
				$respuesta[ "message" ] = "Error la reserva no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "23. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_reserva_golf( $IDClub, $IDSocio, $IDElemento, $IDServicio, $Fecha, $Hora, $Campos, $Invitados, $Tee ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDElemento ) && !empty( $IDServicio ) && !empty( $Fecha ) && !empty( $Hora ) && !empty( $Tee ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				//Guardo la reserva
				$sql_inserta_reserva = $dbo->query( "Insert Into ReservaGeneral (IDClub, IDSocio, IDServicio, IDServicioElemento, IDEstadoReserva, Fecha, Hora, Tee, UsuarioTrCr, FechaTrCr)
											    Values ('" . $IDClub . "','" . $IDSocio . "', '" . $IDServicio . "','" . $IDElemento . "', '1','" . $Fecha . "', '" . $Hora . "', '" . $Tee . "', 'WebService',NOW())" );

				$id_reserva_general = $dbo->lastID();

				$array_Invitados = $Invitados;
				if ( count( $array_Invitados ) > 0 ):
					foreach ( $array_Invitados as $id_valor => $valor ):
						// Guardo los invitados socios o externos
						$sql_inserta_invitado = $dbo->query( "Insert Into ReservaGeneralInvitado (IDReservaGeneral, IDSocio, Nombre)
														Values ('" . $id_reserva_general . "','" . $valor[ "IDSocioInvitado" ] . "', '" . $valor[ "NombreInvitado" ] . "')" );
				endforeach;
				endif;

				$array_Campos = $Campos;
				if ( count( $array_Campos ) > 0 ):
					foreach ( $array_Campos as $id_valor_campo => $valor_campo ):
						// Guardo los campos personalizados
						$sql_inserta_campo = $dbo->query( "Insert Into ReservaGeneralCampo (IDReservaGeneral, IDServicioCampo, Valor)
														Values ('" . $id_reserva_general . "','" . $valor_campo[ "IDServicioCampo" ] . "', '" . $valor_campo[ "Valor" ] . "')" );
				endforeach;
				endif;


				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "24. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_cambiar_clave( $IDClub, $IDSocio, $Clave = "", $SegundaClave = "", $Correo = "" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $Clave ) ) {




			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {

				if ( !empty( $Correo ) ){
					$sql_cambiar_correo = "Update Socio Set CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
					$dbo->query( $sql_cambiar_correo );
				}

				if ( !empty( $Clave ) ):
					$sql_cambiar = "Update Socio Set Clave =  sha1('" . $Clave . "'), CambioClave = 'N' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
					$dbo->query( $sql_cambiar );


					if ( $IDClub == "51" ){ // Si es Condado lo actualizo por el ws
						$cambio = SIMWebserviceQuemado::cambio_clave_condado( $IDClub, $IDSocio, $Clave);
					}


				if ( $IDClub == "38" ): // Si es Club Colombia tambien la actualizo por el ws
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
					$token = SIMWebserviceQuemado::obtener_token_colombia( $datos_socio[ "Email" ], base64_decode( $datos_socio[ "ClaveSistemaExterno" ] ) );
				if ( !empty( $token ) ):
					$cambio_clave = SIMWebserviceQuemado::set_cambio_clave_colombia( $token, $Clave );
				if ( !empty( $Correo ) )
					$cambio_correo = SIMWebserviceQuemado::set_email_colombia( $token, $Correo );
				endif;
				endif;

				endif;


				if ( !empty( $SegundaClave ) ):
					$sql_cambiar = "Update Socio Set SegundaClave =  sha1('" . $SegundaClave . "'), CambioSegundaClave = 'N',CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
				$dbo->query( $sql_cambiar );
				endif;

				$respuesta[ "message" ] = "clave modificada con exito";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "25. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_cambiar_segunda_clave( $IDClub, $IDSocio, $Clave, $Correo = "" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $Clave ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' " );

			if ( !empty( $id_socio ) ) {


				$sql_cambiar = "Update Socio Set SegundaClave =  sha1('" . $Clave . "'), CambioSegundaClave = 'N', CorreoElectronico= '" . $Correo . "' Where IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'";
				$dbo->query( $sql_cambiar );

				$respuesta[ "message" ] = "Segunda clave modificada con exito";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "25. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}


	function set_cambiar_clave_empleado( $IDClub, $IDUsuario, $Clave ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDUsuario ) && !empty( $Clave ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'" );

			if ( !empty( $id_socio ) ) {


				$sql_cambiar = "Update Usuario Set Password =  sha1('" . $Clave . "') Where IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'";
				$dbo->query( $sql_cambiar );

				$respuesta[ "message" ] = "clave modificada con exito";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el usuario no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "25. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function verifica_version_app( $IDClub, $AppVersion, $Dispositivo, $TipoApp = "" ) {
		$dbo = & SIMDB::get();
		if ( $Dispositivo == "Android" ):
			$CampoVersion = "VersionAndroid";
		$CampoEsencial = "EsencialAndroid";
		$CampoMensaje = "VersionMessageAndroid";
		$CampoUrl = "VersionURLAndroid";
		else :
			$CampoVersion = "Version";
		$CampoEsencial = "Esencial";
		$CampoMensaje = "VersionMessage";
		$CampoUrl = "VersionURLIOS";
		endif;

		if ( $TipoApp == "Empleado" ):
			//Consulto cual debe ser la ultima la version de empleados segun Dispositivo
			$datos_appempleado = $dbo->fetchAll( "AppEmpleado", " IDClub = '" . $IDClub . "' ", "array" );
		$numero_version = $datos_appempleado[ $CampoVersion ];
		$esencial_version = $datos_appempleado[ $CampoEsencial ];
		if ( $datos_club[ $CampoVersion ] != $AppVersion && $datos_club[ $CampoEsencial ] == "S" ):
			$respuesta[ "message" ] = $datos_club[ $CampoMensaje ] . " " . $datos_club[ $CampoUrl ];
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		//inserta _log
		$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('verifica_version_app','" . json_encode( $_GET ) . "','" . json_encode( $respuesta ) . "')" );
		die( json_encode( array( 'success' => $respuesta[ success ], 'message' => $respuesta[ message ], 'response' => $respuesta[ response ], 'date' => $nowserver ) ) );
		exit;
		endif;
		else :
			//Consulto cual debe ser la ultima la version funcionando segun Dispositivo
			$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$numero_version = $dbo->getFields( "Club", $CampoVersion, "IDClub = '" . $IDClub . "'" );
		$esencial_version = $dbo->getFields( "Club", $CampoEsencial, "IDClub = '" . $IDClub . "'" );

		if ( $datos_club[ $CampoVersion ] != $AppVersion && $datos_club[ $CampoEsencial ] == "S" ):
			$respuesta[ "message" ] = $datos_club[ $CampoMensaje ] . " " . $datos_club[ $CampoUrl ];
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
		//inserta _log
		$sql_log_servicio = $dbo->query( "Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('verifica_version_app','" . json_encode( $_GET ) . "','" . json_encode( $respuesta ) . "')" );
		die( json_encode( array( 'success' => $respuesta[ success ], 'message' => $respuesta[ message ], 'response' => $respuesta[ response ], 'date' => $nowserver ) ) );
		exit;
		endif;
		endif;
	}


	function set_token( $IDClub, $IDSocio, $Dispositivo, $Token, $TokenIBM="", $UserIDIBM="" ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) && ( !empty( $Token ) || !empty( $TokenIBM ) ) ) {

			//verifico que el socio exista y pertenezca al club
			$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' and IDCLub = '" . $IDClub . "' ", "array" );

			//quito carceter especial token
			$Token = str_replace( ">", "", $Token );

			if ( !empty( $datos_socio[ "IDSocio" ] ) ) {

				if ( $datos_socio[ "FechaPrimerIngreso" ] == "0000-00-00 00:00:00" ):
					$actualiza_primer_ingreso = " , FechaPrimerIngreso =  '" . date( "Y-m-d H:i:s" ) . "' ";
				endif;

				$sql_seccion_not = $dbo->query( "UPDATE Socio Set Dispositivo = '" . $Dispositivo . "', Token = '" . $Token . "', TokenIBM = '".$TokenIBM."' " . $actualiza_primer_ingreso . " Where IDSocio = '" . $IDSocio . "'" );

				//Guardo Token
				$sql_token_socio = $dbo->query( "INSERT IGNORE INTO SocioToken (IDSocio,IDClub,Dispositivo,Token,Fecha) VALUES ('".$IDSocio."','".$IDClub."','".$Dispositivo."','".$Token."',NOW()) " );

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "26. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}

	function set_token_empleado( $IDClub, $IDUsuario, $Dispositivo, $Token ) {
		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDUsuario ) && !empty( $Token ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_usuario = $dbo->getFields( "Usuario", "IDUsuario", "IDUsuario = '" . $IDUsuario . "' and IDClub = '" . $IDClub . "'" );

			if ( !empty( $id_usuario ) ) {

				$sql_seccion_not = $dbo->query( "Update Usuario Set Dispositivo = '" . $Dispositivo . "', Token = '" . $Token . "' Where IDUsuario = '" . $id_usuario . "'" );

				$respuesta[ "message" ] = "Guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el usuario no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "26. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function verifica_permiso_modulo( $IDModulo,$IDPerfil ) {
		$dbo =& SIMDB::get();
		$agregar_modulo = "S";

		//Dependiendo el perfil muestro o no los modulos
						switch($IDModulo){
							case "1": //Invitados, Solo porteria y admin puede tener acceso a este modulo
								if($IDPerfil =="4" || $IDPerfil =="25" || $IDPerfil =="16"){
									$agregar_modulo = "S";
								}
								else{
									$agregar_modulo = "N";
								}
							break;
							case "29": //Agenda, Solo porteria y admin puede tener acceso a este modulo
								if($IDPerfil =="2" || $IDPerfil =="3" || $IDPerfil =="10" || $IDPerfil =="31"){
									$agregar_modulo = "S";
								}
								else{
									$agregar_modulo = "N";
								}
							break;
							case "2": //Reservas, Solo porteria y admin puede tener acceso a este modulo
								if($IDPerfil =="2" || $IDPerfil =="3" || $IDPerfil =="10"){
									$agregar_modulo = "S";
								}
								else{
									$agregar_modulo = "N";
								}
							break;
						}

						//Perfil admin puede ver todo
						if($IDPerfil  == "1"):
							$agregar_modulo = "S";
						endif;

			return 	$agregar_modulo;


	}

	function valida_usuario_web( $email,$clave,$id_club, $id_club_consulta="",$AppVersion )
	{
		$dbo =& SIMDB::get();
		$foto_cod_barras = "";

		if(empty($id_club_consulta))
			$id_club_consulta = $id_club;

		if( !empty( $email ) && !empty( $clave )  ){

					//$sql_verifica = "SELECT * FROM Usuario WHERE User = '".$email ."' and Password = '".sha1($clave )."' and IDClub = '".$id_club."' and Activo <> 'N'";
					$sql_verifica = "SELECT * FROM Usuario WHERE User = '".$email ."' and Password = '".sha1($clave )."' and IDClub in (".$id_club_consulta.") and Activo <> 'N'";

					$qry_verifica = $dbo->query( $sql_verifica );
					if( $dbo->rows( $qry_verifica ) == 0 )
					{
						$respuesta["message"] = "No encontrado";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}//end if
					else{
						$datos_usuario = $dbo->fetchArray( $qry_verifica );


						$CerrarSesion = $datos_usuario["SolicitarCierreSesion"];
						if($CerrarSesion=="S"){
							$condicion_modulo =" and IDModulo = 14 "; //cerrar sesion
						}


						//Modulos Sistema Menu Central
				$response_modulo = array();
				$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Central%' ".$condicion_modulo." ORDER BY Orden";
				$qry_modulo = $dbo->query( $sql_modulo );
				if( $dbo->rows( $qry_modulo ) > 0 )
				{
					while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
					{

						$agregar_modulo  = self::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);


						if($agregar_modulo=="S"):
							// Verificar si el modulo tiene contenido para mostrar
							$flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
							//$flag_mostrar=0;
							if($flag_mostrar==0):
								$modulo["IDClub"] = $datos_usuario["IDClub"];
								$modulo["IDModulo"] = $r_modulo["IDModulo"];
								if(!empty($r_modulo["Titulo"]))
									$modulo["NombreModulo"] = $r_modulo["Titulo"];
								else
									$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );


								$modulo["Orden"] = $r_modulo["Orden"];
								$icono_modulo = $r_modulo["Icono"] ;
								if (!empty($r_modulo["Icono"])):
									$foto = MODULO_ROOT.$r_modulo["Icono"];
								else:
									$foto="";
								endif;
								$modulo["Icono"] = $foto;
								array_push($response_modulo, $modulo);
							endif;
						endif;

					}//ednw while
				}


							//Modulos Sistema Menu Lateral
							unset($modulo);
							$response_modulo_lateral = array();
							$sql_modulo = "SELECT * FROM AppEmpleadoModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Lateral%'  ".$condicion_modulo." ORDER BY Orden";
							$qry_modulo = $dbo->query( $sql_modulo );
							if( $dbo->rows( $qry_modulo ) > 0 )
							{

								while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
								{
									$agregar_modulo  = self::verifica_permiso_modulo ($r_modulo["IDModulo"], $datos_usuario["IDPerfil"]);

									if($agregar_modulo=="S"):
										// Verificar si el modulo tiene contenido para mostrar
										$flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
										//$flag_mostrar=0;
										if($flag_mostrar==0):
											$modulo["IDClub"] = $datos_usuario["IDClub"];
											$modulo["IDModulo"] = $r_modulo["IDModulo"];
											//$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
											if(!empty($r_modulo["Titulo"]))
												$modulo["NombreModulo"] = $r_modulo["Titulo"];
											else
												$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );

											$modulo["Orden"] = $r_modulo["Orden"];
											$icono_modulo = $r_modulo["Icono"] ;
											if (!empty($r_modulo["Icono"])):
												$foto = MODULO_ROOT.$r_modulo["Icono"];
											else:
												$foto="";
											endif;
											$modulo["Icono"] = $foto;
											array_push($response_modulo_lateral, $modulo);
										endif;
									endif;

								}//ednw while
							}

							//traer servicios del usuario
							$response_servicio = array();
							$sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $datos_usuario["IDUsuario"] . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
							$qry_servicios = $dbo->query( $sql_servicios );
							while( $r_servicio = $dbo->fetchArray( $qry_servicios  ) )
							{
									$servicio["IDClub"] = $datos_usuario["IDClub"];
									$servicio["IDServicio"] = $r_servicio["IDServicio"];
									$servicio["NombreServicio"] = $dbo->getFields( "ServicioMaestro", "Nombre", "IDServicioMaestro = '" . $r_servicio["IDServicioMaestro"] . "' " );
									if (!empty($r_servicio["Icono"])):
										$foto = SERVICIO_ROOT.$r_servicio["Icono"];
									else:
										$foto="";
									endif;

									$servicio["Icono"] = $foto;
									//$servicio["ServicioInicial"] = $dbo->getFields( "ServicioInicial" , "Nombre" , "IDServicioInicial = '".$r_servicio["IDServicioInicial"]."'" );
									array_push($response_servicio, $servicio);

							}//end while

							$tipo_codigo_carne = $dbo->getFields( "AppEmpleado" , "TipoCodigoCarne" , "IDClub = '".$id_club."'" );
							switch($tipo_codigo_carne){
								case "Barras":
									if (!empty($datos_usuario["CodigoBarras"])){
										$foto_cod_barras = 	USUARIO_ROOT.$datos_usuario["CodigoBarras"];
									}
								break;
								case "QR":
									if (!empty($datos_usuario["CodigoQR"])){
										$foto_cod_barras = 	USUARIO_ROOT."qr/".$datos_usuario["CodigoQR"];
									}
								break;
								default:
								 $foto_cod_barras = 	"";
							}

							if (!empty($datos_usuario["Foto"])){
								$foto_empleado = 	USUARIO_ROOT.$datos_usuario["Foto"];
							}


							$response["IDClub"] = $datos_usuario["IDClub"];
							$response["IDUsuario"] = $datos_usuario["IDUsuario"];
							$response["IDPerfil"] = $datos_usuario["IDPerfil"];
							$response["Nombre"] = $datos_usuario["Nombre"];
							$response["Autorizado"] = $datos_usuario["Autorizado"];
							$response["Nivel"] = $datos_usuario["Nivel"];
							$response["Permiso"] = $datos_usuario["Permiso"];
							$response["ServiciosReserva"] = $response_servicio;
							$response["Modulos"] = $response_modulo;
							$response["ModulosLateral"] = $response_modulo_lateral;
							$response["CodigoBarras"] = $foto_cod_barras;
							$response["Dispositivo"] =  $datos_usuario["Dispositivo"];
							$response["Token"] = $datos_usuario["Token"];
							//$response["NumeroDerecho"] = $datos_usuario["CodigoUsuario"];
							$response["NumeroDerecho"] = "";
							//Consulto si el app esta configurado para permitir se puede cambiar p[ara que sea por usuario
							$response["PermiteInvitacionPortero"] = $dbo->getFields( "AppEmpleado" , "PermiteInvitacionPortero" , "IDClub = '".$id_club."'" );
							//Consulto las areas
							$sql_area_usuario="Select * From UsuarioArea Where IDUsuario = '".$datos_usuario["IDUsuario"]."'";
							$result_area_usuario=$dbo->query($sql_area_usuario);
							while($row_area=$dbo->fetchArray($result_area_usuario)):
								$nombre_area = utf8_encode($dbo->getFields( "Area" , "Nombre" , "IDArea = '".$row_area["IDArea"]."'" ));
								$array_areas [] = $nombre_area;
							endwhile;
							if(count($array_areas)>0):
								$nombre_areas = implode(",",$array_areas);
							endif;


							$nombre_areas="";
							$response["Area"] = $nombre_areas;
							$response["Cargo"] = utf8_encode($datos_usuario["Cargo"]);
							$response["Codigo"] = $datos_usuario["CodigoUsuario"];
							$response["PermiteReservar"] = $datos_usuario["PermiteReservar"];
							$response["Activo"] = $datos_usuario["Activo"];
							$response["Foto"] = $foto_empleado;
							$response["TipoUsuario"] =  "Empleado";


							//Encuestas al abrir app
							$encuesta_activa=0;
							$response_encuesta = array();
							$sql_encuesta = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
							$qry_encuesta = $dbo->query( $sql_encuesta );
							if ( $dbo->rows( $qry_encuesta ) > 0 ) {
								while ( $r_encuesta = $dbo->fetchArray( $qry_encuesta ) ) {
									$mostrar_encuesta=0;
									//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
									if($r_encuesta["UnaporSocio"]=="S"){
										$sql_resp="Select IDEncuesta From EncuestaRespuesta Where IDSocio = '".$datos_usuario["IDUsuario"]."' and IDEncuesta = '".$r_encuesta["IDEncuesta"]."' Limit 1"	;
										$r_resp=$dbo->query($sql_resp);
										if ( $dbo->rows( $r_resp ) <= 0 ) {
												$mostrar_encuesta=1;
										}
									}
									else{
										$mostrar_encuesta=1;
									}
										//Verifico si la encuesta es solo para algunos socios para mostrar o no
										//$permiso_encuesta=SIMWebserviceQuemado::verifica_ver_encuesta($r_encuesta,$IDSocio);
										$permiso_encuesta=1;

									if($mostrar_encuesta==1 && $permiso_encuesta==1){
										$encuesta[ "IDClub" ] = $r_encuesta[ "IDClub" ];
										$encuesta[ "IDEncuesta" ] = $r_encuesta[ "IDEncuesta" ];
										$encuesta["Nombre"] = $r_encuesta["Nombre"];
										$encuesta["Descripcion"] = $r_encuesta["Descripcion"];
										if ( !empty( $r_encuesta[ "Imagen" ] ) ):
											$foto = BANNERAPP_ROOT . $r_encuesta[ "Imagen" ];
										else :
											$foto = "";
										endif;
										$encuesta["ImagenEncuesta"] = $foto;
										$encuesta_activa=1;

										array_push( $response_encuesta, $encuesta );
									}

								} //ednw while
							}
							//FIN Encuestas al abrir app
							$response[ "Encuesta" ] = $response_encuesta;
							$response[ "LabelEncuesta" ] = "Encuesta";

							//Autodisagnostico al abrir app
							$diagnostico_activa=0;
							$response_diagnostico = array();
							$sql_diagnostico = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '".$id_club."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SolicitarAbrirApp='S' and (DirigidoA = 'E' or DirigidoA = 'T')  ORDER BY Orden ";
							$qry_diagnostico = $dbo->query( $sql_diagnostico );
							if ( $dbo->rows( $qry_diagnostico ) > 0 ) {
								while ( $r_diagnostico = $dbo->fetchArray( $qry_diagnostico ) ) {
									$mostrar_disgnostico=0;
									//Verifico si la encuesta solo permite 1 por socio si es asi verifico si ya la contestó para mostrarla o no
									if($r_diagnostico["UnaporSocio"]=="S"){
										$sql_resp="Select IDDiagnostico From DiagnosticoRespuesta Where IDUsuario = '".$IDUsuario."' and IDDiagnostico = '".$r_diagnostico["IDDiagnostico"]."' Limit 1"	;
										$r_resp=$dbo->query($sql_resp);
										if ( $dbo->rows( $r_resp ) <= 0 ) {
												$mostrar_disgnostico=1;
										}
									}
									else{
										$mostrar_disgnostico=1;
									}
										//Verifico si la encuesta es solo para algunos socios para mostrar o no
										$permiso_diagnostico=SIMWebserviceQuemado::verifica_ver_diagnostico($r_diagnostico,$IDSocio,$IDUsuario);
										//$permiso_encuesta=1;

									if($mostrar_disgnostico==1 && $permiso_diagnostico==1){
										$diagnostico[ "IDClub" ] = $r_diagnostico[ "IDClub" ];
										$diagnostico[ "IDDiagnostico" ] = $r_diagnostico[ "IDDiagnostico" ];
										$diagnostico["Nombre"] = $r_diagnostico["Nombre"];
										$diagnostico["Descripcion"] = $r_diagnostico["Descripcion"];
										if ( !empty( $r_diagnostico[ "Imagen" ] ) ):
											$foto = BANNERAPP_ROOT . $r_diagnostico[ "Imagen" ];
										else :
											$foto = "";
										endif;
										$diagnostico["ImagenDiagnostico"] = $foto;
										$diagnostico_activa=1;

										array_push( $response_diagnostico, $diagnostico );
									}

								} //ednw while
							}
							//FIN Encuestas al abrir app
							$response[ "Diagnostico" ] = $response_diagnostico;
							$response[ "LabelDiagnostico" ] = "Diligenciar auto";

							$response_campo_editar = array();
							$sql_campo_editar = "SELECT CEU.* FROM CampoEditarUsuario CEU
																	WHERE CEU.IDClub = '" . $datos_usuario[ "IDClub" ] . "' ORDER BY CEU.Orden";

							$qry_campo_editar = $dbo->query( $sql_campo_editar );
							if ( $dbo->rows( $qry_campo_editar ) > 0 ) {
								while ( $r_campo_editar = $dbo->fetchArray( $qry_campo_editar ) ) {
									$campo_editar[ "IDCampoEditarSocio" ] = $r_campo_editar[ "IDCampoEditarUsuario" ];
									$campo_editar[ "Nombre" ] = $r_campo_editar[ "Nombre" ];
									$campo_editar[ "Tipo" ] = $r_campo_editar[ "Tipo" ];
									$campo_editar[ "Valores" ] = $r_campo_editar[ "Valores" ];
									$campo_editar[ "PermiteEditar" ] = $r_campo_editar[ "PermiteEditar" ];
									//Consulto el valor de la actualización
									$ValorDatoCampo = $dbo->getFields( "UsuarioCampoEditarUsuario" , "Valor" , "IDCampoEditarUsuario = '".$r_campo_editar[ "IDCampoEditarUsuario" ]."' and IDUsuario = '".$datos_usuario["IDUsuario"]."'" );
									if($ValorDatoCampo!="" && $ValorDatoCampo!="false")
										$ValorDato=$ValorDatoCampo;
									else{
										$ValorDato= $datos_socio[  $r_campo_editar[ "Nombre" ] ];

									}

									//$campo_editar[ "ValorActual" ] = $datos_socio[  $r_campo_editar[ "Nombre" ] ];
									$campo_editar[ "ValorActual" ] = $ValorDato;

									$campo_editar[ "Obligatorio" ] = $r_campo_editar[ "Obligatorio" ];
									array_push( $response_campo_editar, $campo_editar );

								} //ednw while
							}
							$response[ "CampoEditar" ] = $response_campo_editar;

							if($AppVersion>=31){
								$respuesta=json_encode($response);
								$param['key']=KEY_API;
								$param['nonce']=sodium_bin2hex(random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES));
								$param['msg']=$respuesta;
								$result=SIMUtil::cryptSodium($param);

								//$response_encrip=array();
								//$response_encrip[ "data" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);
								$respuesta=array();
								$respuesta[ "message" ] = "ok";
								$respuesta[ "success" ] = true;
								$respuesta[ "response" ] = $param['nonce'].sodium_bin2hex($result["cryptedText"]);

							}
							else{
								$respuesta[ "message" ] = "ok";
								$respuesta[ "success" ] = true;
								$respuesta[ "response" ] = $response;
							}

							//$respuesta["message"] = "ok";
							//$respuesta["success"] = true;
							//$respuesta["response"] = $response;
					}
				}
			else{
				$respuesta["message"] = "1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}


			return $respuesta;

	}//end function


	function get_diagnostico_persona($IDClub,$NumeroDocumento,$Fecha){

		$dbo = & SIMDB::get();
		$IDSocio=$dbo->getFields( "Socio", "IDSocio", "NumeroDocumento = '" . $NumeroDocumento . "' and IDClub = '".$IDClub."' " );
		if(!empty($Fecha)){
			$fecha_hoy=$Fecha;
		}
		else{
			$fecha_hoy=date("Y-m-d");
		}
		if(!empty($IDSocio)){
			$sql_unica="SELECT IDDiagnosticoRespuesta,SUM(Peso) as Resultado, IDDiagnostico FROM  DiagnosticoRespuesta WHERE FechaTrCr >= '".$fecha_hoy."' and IDSocio='".$IDSocio."' GROUP BY IDSocio ";
			$r_unica=$dbo->query($sql_unica);
			$total_unica=$dbo->rows($r_unica);
			$row_resp_diag=$dbo->fetchArray($r_unica);
			$peso_permitido=$dbo->getFields( "Diagnostico", "PesoMaximo", "IDDiagnostico = '" . $row_resp_diag["IDDiagnostico"] . "' " );
			if($total_unica<=0){
				$alerta_diagnostico="Atención la persona no ha llenado el diagnostico";
				$respuesta_diagnostico=2;
			}
			elseif($row_resp_diag["Resultado"]>$peso_permitido){
				$alerta_diagnostico="Atencion Diagnostico sospechoso";
				$respuesta_diagnostico=3;
			}
			else{
				$alerta_diagnostico="Diagnostico correcto";
				$respuesta_diagnostico=1;
			}
			$respuesta[ "message" ] = $respuesta_diagnostico;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $alerta_diagnostico;
		}
		else{
			$respuesta[ "message" ] = "Documento no encontrado";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}


		return $respuesta;
	}


	function get_agenda($IDClub,$IDUsuario,$Fecha){
		$dbo =& SIMDB::get();
		if(empty($Fecha)):
			$Fecha=date("Y-m-d");
		endif;

		if( !empty( $IDUsuario ) ){
			//Consulto el servicio que tiene permiso y el elemnto para consultar la agenda
			$sql_servicios = "SELECT Servicio.* FROM UsuarioServicio, Servicio WHERE UsuarioServicio.IDUsuario = '" . $IDUsuario . "' AND UsuarioServicio.IDServicio = Servicio.IDServicio ";
			$qry_servicios = $dbo->query( $sql_servicios );
			$response_agenda = array();
			$response = array();
			$agenda_dia = false;
			while( $r_servicio = $dbo->fetchArray( $qry_servicios  ) )
			{
					//Consulto solo los elementos al los que tiene permiso de ver
					//$sql_elementos = "Select * From UsuarioServicioElemento Where IDUsuario = '".$IDUsuario."'";
					$sql_elementos = "Select *
										From UsuarioServicioElemento USES, ServicioElemento SE
										Where SE.IDServicioElemento = USES.IDServicioElemento
										and IDServicio = '".$r_servicio["IDServicio"]."'
										and IDUsuario = '".$IDUsuario."'";


					$qry_elementos = $dbo->query($sql_elementos);
					while($row_elemento = $dbo->fetchArray($qry_elementos)):
						//Si el elemnto pertenece al servicio lo consulto
						$horas = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $r_servicio["IDServicio"], $Fecha, $row_elemento["IDServicioElemento"],"Agenda","","","","S","",$IDUsuario);

						if($horas["response"][0]):
							if(count($horas["response"][0]["Disponibilidad"][0])>0):
								$agenda_dia = true;
								array_push($response, $horas["response"][0]);
							endif;
						endif;
					endwhile;

			}//end while

			//Para los auxiliares monitores muestro los elemtos donde esten reservados
			$sql_aux="SELECT A.IDAuxiliar, IDServicio FROM UsuarioAuxiliar UA, Auxiliar A WHERE UA.IDAuxiliar=A.IDAuxiliar and UA.IDUsuario='".$IDUsuario."' ";
			$result_aux=$dbo->query($sql_aux);
			while($row_aux=$dbo->fetchArray($result_aux)){
				// Consulto las reserva en esta fecha de este usuario
				$sql_reserva="SELECT IDServicioElemento From ReservaGeneral Where IDClub = '".$IDClub."' and Fecha='".$Fecha."' and IDAuxiliar like '".$row_aux["IDAuxiliar"].",%' ";
				$r_reserva=$dbo->query($sql_reserva);
				while($row_reserva=$dbo->fetchArray($r_reserva)){
						$array_elemento[$row_reserva["IDServicioElemento"]]=$row_reserva["IDServicioElemento"];
				}
				if(count($array_elemento>0)){
					foreach($array_elemento as $id_elemento_aux){
						unset($array_disponibilidad);
						$horas = SIMWebserviceQuemado::get_disponiblidad_elemento_servicio( $IDClub, $row_aux["IDServicio"], $Fecha, $id_elemento_aux,"Agenda","","","","S");
						if($horas["response"][0]):
							if(count($horas["response"][0]["Disponibilidad"][0])>0):
								$agenda_dia = true;
								// Solo muestro donde este reservado el auxiliar
								foreach($horas["response"][0]["Disponibilidad"][0] as $datos_disponibilidad){
											$array_id_aux=explode(",",$datos_disponibilidad["IDAuxiliar"]);
											if(in_array($row_aux["IDAuxiliar"],$array_id_aux)){
													$array_disponibilidad[]=$datos_disponibilidad;
													//print_r($datos_disponibilidad["IDAuxiliar"]);
													//echo "<br>";
											}
								}
								if(count($array_disponibilidad)<=0){
									$array_disponibilidad=array();
								}
								$horas["response"][0]["Disponibilidad"][0]=$array_disponibilidad;
								array_push($response, $horas["response"][0]);
							endif;
						endif;
					}
				}
			}


			if($agenda_dia):
				//$response["Agenda"] = $response_agenda;
				$respuesta["message"] = "ok";
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
			else:
				//$response["Agenda"] = $response_agenda;
				$respuesta["message"] = "No tiene reservas para hoy.";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			endif;




		}
		else{
				$respuesta["message"] = "28. Atencion faltan parametros en agenda";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
		return $respuesta;
	}




	function get_parametros_empleados( $id_club )
	{

		$dbo =& SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM ParametroAcceso WHERE IDClub = '".$id_club."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				if (!empty($r["IconoFamiliar"])){
					$foto_familiar = CLUB_ROOT.$r["IconoFamiliar"];
				}
				if (!empty($r["IconoIndividual"])){
					$foto_individual = CLUB_ROOT.$r["IconoIndividual"];
				}

				//Tipo Invitado
				$response_tipo_invitado = array();
				$array_tipo_invitado = explode("|",$r["TipoInvitado"]);
				if(count($array_tipo_invitado)>0):
					foreach($array_tipo_invitado as $nombre_tipo):
						$dato_tipo_invitado[] = $nombre_tipo;
						array_push($response_tipo_invitado, $nombre_tipo);
					endforeach;
				endif;

				//Tipo Autorizacion
				$response_tipo_autorizacion = array();
				$array_tipo_autorizacion = explode("|",$r["TipoAutorizacion"]);
				if(count($array_tipo_autorizacion)>0):
					foreach($array_tipo_autorizacion as $nombre_tipo):
						$dato_tipo_autorizacion[] = $nombre_tipo;
						array_push($response_tipo_autorizacion, $nombre_tipo);
					endforeach;
				endif;

				//Tipo Documentos
				$response_tipodoc = array();
				$sql_tipodoc = "SELECT * FROM TipoDocumento WHERE Publicar = 'S' ORDER BY Nombre";
				$qry_tipodoc = $dbo->query( $sql_tipodoc );
				if( $dbo->rows( $qry_tipodoc ) > 0 )
				{
					while( $r_tipodoc = $dbo->fetchArray( $qry_tipodoc ) )
					{
						$tipodoc["IDTipoDocumento"] = (int)$r_tipodoc["IDTipoDocumento"];
						$tipodoc["Nombre"] = $r_tipodoc["Nombre"];
						array_push($response_tipodoc, $tipodoc);

					}//ednw hile
				}


				//Consulto el icono de contratistas
				//Modulos Sistema Menu Central
				$response_modulo = array();
				$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '".$id_club."' and Activo = 'S' and Ubicacion like '%Central%' and IDModulo = 26 ORDER BY Orden";
				$qry_modulo = $dbo->query( $sql_modulo );
				if( $dbo->rows( $qry_modulo ) > 0 )
				{
					while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
					{
						// Verificar si el modulo tiene contenido para mostrar
						$flag_mostrar = SIMWebserviceQuemado::verificar_contenido_modulo($r_modulo["IDModulo"], $id_club);
						//$flag_mostrar=0;
						if($flag_mostrar==0):
							if(!empty($r_modulo["Titulo"]))
								$modulo["NombreModulo"] = $r_modulo["Titulo"];
							else
								$modulo["NombreModulo"] = $dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" );

							$modulo["Orden"] = $r_modulo["Orden"];
							$icono_modulo = $r_modulo["Icono"] ;
							if (!empty($r_modulo["Icono"])):
								$foto_modulo = MODULO_ROOT.$r_modulo["Icono"];
							else:
								$foto_modulo="";
							endif;
							$icono_contratista = $foto_modulo;
						endif;

					}//ednw while
				}


				$datos_acceso["IDClub"] = $r["IDClub"];
				$datos_acceso["GrupoFamiliar"] = $r["GrupoFamiliar"];
				$datos_acceso["IconoFamiliar"] = $foto_familiar;
				$datos_acceso["NombreFamiliar"] = $r["NombreFamiliar"];
				$datos_acceso["Invitado"] = $r["Invitado"];
				$datos_acceso["IconoIndividual"] = $foto_individual;
				$datos_acceso["NombreIndividual"] = $r["NombreIndividual"];
				$datos_acceso["TipoInvitado"] = $response_tipo_invitado;
				$datos_acceso["IconoContratista"] = $icono_contratista;
				$datos_acceso["NombreContratista"] = $modulo["NombreModulo"];
				$datos_acceso["TipoAutorizacion"] = $response_tipo_autorizacion ;
				$datos_acceso["TipoDocumento"] = $response_tipodoc ;
				$datos_acceso["TextoMenorEdad"] = $r["TextoMenorEdad"] ;

				array_push($response, $datos_acceso);

			}//ednw hile

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se ha encontrado club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_invitado_documento( $IDClub,$Documento )
	{

		$dbo =& SIMDB::get();
		if( !empty( $Documento ) ){

					//BUSQUEDA INVITADOS ACCESOS
						$qryString = str_replace(".","",$Documento);
						$qryString = str_replace(",","",$qryString);
						$qryString = str_replace("-","",$qryString);


						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE, Invitado I Where SIE.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SIE.IDClub='".$IDClub."' Order By IDSocioInvitadoEspecial";
							$modo_busqueda = "DOCUMENTO";
						} else {
							//seguramente es una placa
							//Consulto en invitaciones accesos
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE,Vehiculo V Where SIE.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SIE.IDClub='".$IDClub."' Order By IDSocioInvitadoEspecial";
							$modo_busqueda = "PLACA";
						}

							$result_invitacion = $dbo->query($sql_invitacion);
							$total_resultados = $dbo->rows($result_invitacion);
							$datos_invitacion = $dbo->fetchArray($result_invitacion);
							$datos_invitacion["TipoInvitacion"] = "InvitadoAcceso";
							$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitadoEspecial"];
							$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
							$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );

							if($datos_invitacion["Ingreso"]=="N"){
								$accion_acceso = "ingreso";
								$label_accion_acceso = "Ingres&oacute;";
							}
							elseif($datos_invitacion["Salida"]=="N")	{
								$accion_acceso	= "salio";
								$label_accion_acceso	= "Sali&oacute;";
							}
							//Consulto grupo Familiar
							if($datos_invitacion["CabezaInvitacion"]=="S"):
								$sql_grupo = "Select * From SocioInvitadoEspecial Where IDPadreInvitacion = '".$datos_invitacion["IDSocioInvitadoEspecial"]."'";
								$result_grupo = $dbo->query($sql_grupo);
							endif;
					//FIN BUSQUEDA INVITADOS ACCESOS

					//BUSQUEDA CONTRATISTA
						if($total_resultados<=0):
							if (ctype_digit($qryString)) {
									// si es solo numeros en un numero de documento
									$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Invitado I Where SA.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()  and SA.IDClub='".$IDClub."'";
									$modo_busqueda = "DOCUMENTO";
							} else {
								//seguramente es una placa
								//Consulto en invitaciones accesos
								$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Vehiculo V Where SA.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SA.IDClub='".$IDClub."'";
								$modo_busqueda = "PLACA";
							}

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);

								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioAutorizacion"];
								$datos_invitacion["TipoInvitacion"] = "Contratista";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );

						endif;
					//FIN BUSQUEDA CONTRATISTA

					//BUSQUEDA INVITADOS GENERAL
					if($total_resultados<=0):
						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SI.* From SocioInvitado SI Where SI.NumeroDocumento = '".(int)$qryString."' and FechaIngreso = '".date("Y-m-d")."' and IDClub = '".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);

								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitado"];
								$datos_invitacion["TipoInvitacion"] = "Invitado";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado["Nombre"] = $datos_invitacion["Nombre"];
						}
					endif;
				//FIN BUSQUEDA CONTRATISTA


					if($total_resultados<=0)
					{
						$respuesta["message"] = "No encontrado";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}//end if
					else{


							$response["IDInvitacion"] = $datos_invitacion["IDInvitacion"];
							$response["TipoInvitacion"] = $datos_invitacion["TipoInvitacion"];
							$response["FechaInicio"] = $datos_invitacion["FechaInicio"];
							$response["FechaFin"] = $datos_invitacion["FechaFin"];
							$response["Accion"] = $datos_socio["Accion"];
							$response["Socio"] = "Invitado por: " . $datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . " Inv ". $datos_invitado["Nombre"] . " " . $datos_invitado["Apellido"] . "  " . $datos_socio["Predio"];
							$response["TipoSocio"] = $datos_socio["TipoSocio"];
							$response["Observaciones"] = $datos_socio["Predio"];
							$response["Ingreso"] = $datos_invitacion["Ingreso"];
							$response["FechaIngreso"] = $datos_invitacion["FechaInicio"];
							$response["Salida"] = $datos_invitacion["Salida"];
							$response["FechaSalida"] = $datos_invitacion["FechaFin"];


							if (!empty($datos_invitado[FotoFile])) {
								$foto = 	SOCIO_ROOT.$datos_invitado["FotoFile"];
							}else{
								$foto = URLROOT."plataform/assets/images/sinfoto.png";
							}

							$response["Foto"] = $foto;
							$response["NombreInvitado"] = $datos_invitado["Nombre"] . " " . $datos_invitado["Apellido"];
							$response["TipoDocumentoInvitado"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
							$response["NumeroDocumentoInvitado"] = $datos_invitado["NumeroDocumento"];


								//SI ES CABEZA CONUSLTO EL GRUPO FAMILIAR
								$response_invitado_familia = array();
								if($datos_invitacion["CabezaInvitacion"]=="S"):
									while($datos_grupo_familiar = $dbo->fetchArray($result_grupo)):
											$datos_invitado_familiar = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_grupo_familiar["IDInvitado"] . "' ", "array" );
											if (!empty($datos_invitado_familiar[FotoFile])) {
												$foto = INVITADO_ROOT.$datos_invitado_familiar[FotoFile];
											 }else{
											 $foto = URLROOT."/images/sinfoto.png";
											 }

											 $dato_invitado_asociado["IDClub"] = $IDClub;
											 $dato_invitado_asociado["IDInvitacion"] = $datos_grupo_familiar["IDSocioInvitadoEspecial"];
											 $dato_invitado_asociado["Nombre"] = utf8_encode($datos_invitado_familiar["Nombre"] . " " . $datos_invitado_familiar["Apellido"]);
											 $dato_invitado_asociado["TipoDocumento"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado_familiar["IDTipoDocumento"] . "'" );
											 $dato_invitado_asociado["Documento"] = $datos_invitado_familiar["NumeroDocumento"];
											 //Consulto el historial de ingresos y salidas del dia
											$response_historial_acceso_grupo = array();
											$fecha_hoy_desde = date("Y-m-d") . " 00:00:00";
											$fecha_hoy_hasta = date("Y-m-d") . " 23:59:59";
											$sql_historial_grupo = $dbo->query("Select * From LogAcceso Where IDInvitacion = '".$datos_grupo_familiar["IDSocioInvitadoEspecial"]."' and FechaTrCr >= '".$fecha_hoy_desde."' and FechaTrCr <= '".$fecha_hoy_hasta."'");
											while($row_historial_grupo = $dbo->fetchArray($sql_historial_grupo)):
													 $dato_historial_grupo["Tipo"] = $row_historial_grupo["Tipo"];
													 $dato_historial_grupo["Salida"] = $row_historial_grupo["Salida"];
													 $dato_historial_grupo["FechaSalida"] = $row_historial_grupo["FechaSalida"];
													 $dato_historial_grupo["Entrada"] = $row_historial_grupo["Entrada"];
													 $dato_historial_grupo["FechaIngreso"] = $row_historial_grupo["FechaIngreso"];
													 array_push($response_historial_acceso_grupo, $dato_historial_grupo);
											 endwhile;
										$dato_invitado_asociado["Historial"] = $response_historial_acceso_grupo;
										//Fin Historial de acceso
											 array_push($response_invitado_familia, $dato_invitado_asociado);
									 endwhile;
								endif;

								$response["GrupoInvitado"] = $response_invitado_familia;


							//Consulto el historial de ingresos y salidas del dia
									$response_historial_acceso = array();
									$fecha_hoy_desde = date("Y-m-d") . " 00:00:00";
									$fecha_hoy_hasta = date("Y-m-d") . " 23:59:59";
									$sql_historial = $dbo->query("Select * From LogAcceso Where IDInvitacion = '".$datos_invitacion["IDInvitacion"]."' and FechaTrCr >= '".$fecha_hoy_desde."' and FechaTrCr <= '".$fecha_hoy_hasta."'");
									while($row_historial = $dbo->fetchArray($sql_historial)):
											 $dato_historial["Tipo"] = $row_historial["Tipo"];
											 $dato_historial["Salida"] = $row_historial["Salida"];
											 $dato_historial["FechaSalida"] = $row_historial["FechaSalida"];
											 $dato_historial["Entrada"] = $row_historial["Entrada"];
											 $dato_historial["FechaIngreso"] = $row_historial["FechaIngreso"];
											 array_push($response_historial_acceso, $dato_historial);
									 endwhile;
								$response["Historial"] = $response_historial_acceso;




							$respuesta["message"] = "ok";
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}
				}
			else{
				$respuesta["message"] = "1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}


			return $respuesta;

	}//end function




	function get_invitado_documento_v2( $IDClub,$Documento )
	{
		$dbo =& SIMDB::get();
		if( !empty( $Documento ) ){
					$autorizacion_recogida=0;
					$autorizacion_invitacion=0;

					//BUSQUEDA INVITADOS ACCESOS
						$qryString = str_replace(".","",$Documento);
						$qryString = str_replace(",","",$qryString);
						$qryString = str_replace("-","",$qryString);
						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE, Invitado I Where SIE.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SIE.IDClub='".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";
						} else {
							//seguramente es una placa
							//Consulto en invitaciones accesos
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE,Vehiculo V Where SIE.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()  and SIE.IDClub='".$IDClub."'";
							$modo_busqueda = "PLACA";
						}



							$result_invitacion = $dbo->query($sql_invitacion);
							$total_resultados = $dbo->rows($result_invitacion);

							if($total_resultados>0)
								$autorizacion_invitacion=1;

							$datos_invitacion = $dbo->fetchArray($result_invitacion);
							$datos_invitacion["TipoInvitacion"] = "InvitadoAcceso";
							$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitadoEspecial"];
							$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
							$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );
							$tipo_socio = $datos_socio["TipoSocio"];
							$datos_socio["TipoSocio"] = "Invitado por";
							$datos_invitacion["PersonaAutoriza"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . "(".$tipo_socio.")") ;

							if($datos_invitacion["Ingreso"]=="N"){
								$accion_acceso = "ingreso";
								$label_accion_acceso = "Ingres&oacute;";
							}
							elseif($datos_invitacion["Salida"]=="N")	{
								$accion_acceso	= "salio";
								$label_accion_acceso	= "Sali&oacute;";
							}
							//Consulto grupo Familiar
							if($datos_invitacion["CabezaInvitacion"]=="S"):
								$sql_grupo = "Select * From SocioInvitadoEspecial Where IDPadreInvitacion = '".$datos_invitacion["IDSocioInvitadoEspecial"]."'";
								$result_grupo = $dbo->query($sql_grupo);
							endif;
					//FIN BUSQUEDA INVITADOS ACCESOS

					//BUSQUEDA CONTRATISTA
						if($total_resultados<=0):
							if (ctype_digit($qryString)) {
									// si es solo numeros en un numero de documento
									$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Invitado I Where SA.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()  and SA.IDClub='".$IDClub."'";
									$modo_busqueda = "DOCUMENTO";
							} else {
								//seguramente es una placa
								//Consulto en invitaciones accesos
								$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Vehiculo V Where SA.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SA.IDClub='".$IDClub."'";
								$modo_busqueda = "PLACA";
							}

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);
								if($total_resultados>0)
									$autorizacion_invitacion=1;

								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioAutorizacion"];
								$datos_invitacion["TipoInvitacion"] = "Contratista";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );
								$datos_socio["TipoSocio"] = "Invitado por";
								$datos_invitacion["PersonaAutoriza"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . "(".$tipo_socio.")") ;

						endif;
					//FIN BUSQUEDA CONTRATISTA

					//BUSQUEDA INVITADOS GENERAL
					if($total_resultados<=0):
						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SI.* From SocioInvitado SI Where SI.NumeroDocumento = '".(int)$qryString."' and FechaIngreso = '".date("Y-m-d")."' and IDClub = '".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);

								if($total_resultados>0)
									$autorizacion_invitacion=1;

								$datos_invitado_otro = $dbo->fetchAll( "Invitado", " NumeroDocumento = '" . $qryString . "' ", "array" );
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitado"];
								$datos_invitacion["TipoInvitacion"] = "Invitado";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado["Nombre"] = $datos_invitacion["Nombre"];
								$datos_invitado["NumeroDocumento"]=$qryString;
								$datos_invitacion["FechaInicio"]=$datos_invitacion["FechaIngreso"];
								$datos_invitacion["FechaFin"]=$datos_invitacion["FechaIngreso"];
								$datos_invitacion["PersonaAutoriza"]=utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"]);
								$datos_invitado["FotoFile"]=$datos_invitado_otro["FotoFile"];
						}
					endif;
				//FIN BUSQUEDA CONTRATISTA

				//BUSQUEDA SOCIO o Empleado si esta como Socio
				if($total_resultados<=0):
					if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select * From Socio Where (NumeroDocumento = '".(int)$qryString."' or Accion = '".$qryString."' or NumeroDerecho = '".$qryString."') and IDEstadoSocio = 1 and IDClub = '".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";
					} else {
						//seguramente es una placa	o una accion
						//Consulto las placas de vehiculos de socios
						$sql_invitacion = "Select * From Socio Where (Accion = '".$qryString."' or NumeroDerecho = '".$qryString."') and IDClub = '".$IDClub."'
											UNION Select S.* From Socio S , Vehiculo V  Where S.IDSocio=V.IDSocio and  V.Placa = '".$qryString."' and IDClub = '".$IDClub."'
											UNION Select S.* From Socio S , Predio P  Where S.IDSocio=P.IDSocio and  P.Predio = '".$qryString."' and IDClub = '".$IDClub."'  and AccionPadre = ''";

					}



						$result_invitacion = $dbo->query($sql_invitacion);
						$total_resultados = $dbo->rows($result_invitacion);

						if($total_resultados>0)
							$autorizacion_invitacion=1;

						$datos_invitacion = $dbo->fetchArray($result_invitacion);
						$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocio"];
						$datos_invitacion["TipoInvitacion"] = "SocioClub";
						$datos_invitacion["PersonaAutoriza"]="b";
						$datos_invitacion["FechaInicio"]='indefinida';
						$datos_invitacion["FechaFin"]='indedefinida';
						$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
						$datos_invitado = $datos_socio;
						$modulo="Socio";
						$id_registro = $datos_invitacion["IDSocio"];

						//Consulto grupo Familiar
						if (empty($datos_socio["AccionPadre"])): // Es Cabeza
							$nucleo_socio = 1;
							$condicion_nucleo = " and AccionPadre = '".$datos_socio["Accion"]."'";
							$datos_invitacion["CabezaInvitacion"]="S";
							$response_nucleo = array();
							$sql_grupo = "SELECT IDClub, IDSocio, Foto, Nombre, Apellido, Accion, AccionPadre, CodigoBarras, NumeroDocumento FROM Socio WHERE IDClub = '".$IDClub."' and IDSocio <> '".$datos_socio["IDSocio"]."' " . $condicion_nucleo;
							$result_grupo = $dbo->query($sql_grupo);
							while($row_nucleo = $dbo->fetchArray($result_grupo)):
								if (!empty($row_nucleo[Foto])) {
								$foto_nucleo = SOCIO_ROOT.$row_nucleo[Foto];
								 }else{
								 $foto_nucleo = URLROOT."plataform/assets/images/sinfoto.png";
								 }

								 $dato_nucleo["IDClub"] = $IDClub;
								 $dato_nucleo["IDInvitacion"] = $row_nucleo["IDSocio"];
								 $dato_nucleo["Nombre"] = utf8_encode($row_nucleo["Nombre"] . " " . $row_nucleo["Apellido"]);
								 $dato_nucleo["TipoDocumento"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado_familiar["IDTipoDocumento"] . "'" );
								 $dato_nucleo["Documento"] = $row_nucleo["NumeroDocumento"];
								 $dato_nucleo["Foto"] = $foto_nucleo;
								 $dato_nucleo["TipoInvitacion"] = "SocioClub";


								 //Tipos de ingresos
										$response_tipo_n = array();
										$TipoIngreso = utf8_decode($dbo->getFields( "AppEmpleado" , "OpcionesIngreso" , "IDClub = '".$IDClub."'" ));
										$array_tipo_n=explode(",",$TipoIngreso);
										if(count($array_tipo_n)>0){
												$encontrados=1;
												$message = count($array_tipo_n) . " Encontrados";
											foreach ($array_tipo_n as $value) {
												$tipo_ingreso_n[ "Nombre" ] = utf8_encode($value);
												array_push( $response_tipo_n, $tipo_ingreso_n );
											}
										}

										if($IDSocio>0){
												$sql_vehiculo = "Select * From Vehiculo Where IDSocio = '".$IDSocio."' ";
												$r_vehiculo=$dbo->query($sql_vehiculo);
												if ( $dbo->rows( $r_vehiculo ) > 0 ) {
													$encontrados=1;
													while($row_vehiculo = $dbo->fetchArray($r_vehiculo)){
														$tipo_ingreso[ "Nombre" ] = "Vehiculo: " . utf8_encode($row_vehiculo["Placa"]);
														array_push( $response_tipo_n, $tipo_ingreso_n );
													}
												}
										}
										$dato_nucleo["TipoIngreso"] = $response_tipo_n;
								//Fin Tipo Ingreso


								 array_push($response_nucleo, $dato_nucleo);
							endwhile;
						endif;

				endif;
			//FIN BUSQUEDA SOCIO


				//Busco en autorizaciones de recogida d alumnos
				$array_autorizacion_recogida = self::buscar_autorizacion_recogida($IDClub,$Documento );

					if($total_resultados<=0 && count($array_autorizacion_recogida)<=0)
					{
						$respuesta["message"] = "No encontrado!";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}//end if
					else{

							//Para fontanar en observaciones agrego el predio del socio
							if($IDClub==18 || $IDClub==35)
								$Observaciones= "Se dirije a " . $datos_socio["Predio"];

							$Observaciones.=" "  . $datos_invitacion["ObservacionSocio"];
							if($autorizacion_invitacion==1):
								$datos_invitacion_individual= array();
								$datos_invitacion_individual["IDInvitacion"] = $datos_invitacion["IDInvitacion"];
								$datos_invitacion_individual["TipoInvitacion"] = $datos_invitacion["TipoInvitacion"];
								$datos_invitacion_individual["FechaInicio"] = $datos_invitacion["FechaInicio"];
								$datos_invitacion_individual["FechaFin"] = $datos_invitacion["FechaFin"];
								$datos_invitacion_individual["Accion"] = $datos_socio["Accion"];
								$datos_invitacion_individual["Socio"] = $datos_invitacion["PersonaAutoriza"];
								$datos_invitacion_individual["TipoSocio"] = $datos_socio["TipoSocio"];
								$datos_invitacion_individual["Observaciones"] = $Observaciones;
								$datos_invitacion_individual["Ingreso"] = $datos_invitacion["Ingreso"];
								$datos_invitacion_individual["FechaIngreso"] = $datos_invitacion["FechaInicio"];
								$datos_invitacion_individual["Salida"] = $datos_invitacion["Salida"];
								$datos_invitacion_individual["FechaSalida"] = $datos_invitacion["FechaFin"];

								if (!empty($datos_invitado[FotoFile])) {
									$foto = 	IMGINVITADO_ROOT.$datos_invitado["FotoFile"];
								}else{
									$foto = URLROOT."plataform/assets/images/sinfoto.png";
								}

								$datos_invitacion_individual["Foto"] = $foto;
								$datos_invitacion_individual["NombreInvitado"] = utf8_encode($datos_invitado["Nombre"] . " " . $datos_invitado["Apellido"]);
								$tipodoc = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
								if(empty($tipodoc))
									$TipoDocumento="Doc";
								else
									$TipoDocumento=$tipodoc;

								$datos_invitacion_individual["TipoDocumentoInvitado"] = $TipoDocumento;
								$datos_invitacion_individual["NumeroDocumentoInvitado"] = $datos_invitado["NumeroDocumento"];


									//SI ES CABEZA CONUSLTO EL GRUPO FAMILIAR
									$response_invitado_familia = array();
									if($datos_invitacion["CabezaInvitacion"]=="S"):
										while($datos_grupo_familiar = $dbo->fetchArray($result_grupo)):
												$datos_invitado_familiar = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_grupo_familiar["IDInvitado"] . "' ", "array" );
												if (!empty($datos_invitado_familiar[FotoFile])) {
												$foto = INVITADO_ROOT.$datos_invitado_familiar[FotoFile];
												 }else{
												 $foto = URLROOT."/images/sinfoto.png";
												 }

												 $dato_invitado_asociado["IDClub"] = $IDClub;
												 $dato_invitado_asociado["IDInvitacion"] = $datos_grupo_familiar["IDSocioInvitadoEspecial"];
												 $dato_invitado_asociado["TipoInvitacion"] = $datos_invitacion["TipoInvitacion"];
												 $dato_invitado_asociado["Nombre"] = utf8_encode($datos_invitado_familiar["Nombre"] . " " . $datos_invitado_familiar["Apellido"]);
												 $dato_invitado_asociado["TipoDocumento"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado_familiar["IDTipoDocumento"] . "'" );
												 $dato_invitado_asociado["Documento"] = $datos_invitado_familiar["NumeroDocumento"];
												 $dato_invitado_asociado["Documento"] = $datos_invitado_familiar["NumeroDocumento"];


												 //Tipos de ingresos
														$response_tipo_n = array();
														$TipoIngreso = utf8_decode($dbo->getFields( "AppEmpleado" , "OpcionesIngreso" , "IDClub = '".$IDClub."'" ));
														$array_tipo_n=explode(",",$TipoIngreso);
														if(count($array_tipo_n)>0){
																$encontrados=1;
																$message = count($array_tipo_n) . " Encontrados";
															foreach ($array_tipo_n as $value) {
																$tipo_ingreso_n[ "Nombre" ] = utf8_encode($value);
																array_push( $response_tipo_n, $tipo_ingreso_n );
															}
														}

														if($IDSocio>0){
																$sql_vehiculo = "Select * From Vehiculo Where IDSocio = '".$IDSocio."' ";
																$r_vehiculo=$dbo->query($sql_vehiculo);
																if ( $dbo->rows( $r_vehiculo ) > 0 ) {
																	$encontrados=1;
																	while($row_vehiculo = $dbo->fetchArray($r_vehiculo)){
																		$tipo_ingreso[ "Nombre" ] = "Vehiculo: " . utf8_encode($row_vehiculo["Placa"]);
																		array_push( $response_tipo_n, $tipo_ingreso_n );
																	}
																}
														}
														$dato_invitado_asociado["TipoIngreso"] = $response_tipo_n;
												//Fin Tipo Ingreso


												 array_push($response_invitado_familia, $dato_invitado_asociado);
										 endwhile;
									endif;

									$datos_invitacion_individual["GrupoInvitado"] = $response_invitado_familia;


								//Consulto el historial de ingresos y salidas del dia
										$response_historial_acceso = array();
										$fecha_hoy_desde = date("Y-m-d") . " 00:00:00";
										$fecha_hoy_hasta = date("Y-m-d") . " 23:59:59";
										$sql_historial = $dbo->query("Select * From LogAcceso Where IDInvitacion = '".$datos_invitacion["IDInvitacion"]."' and FechaTrCr >= '".$fecha_hoy_desde."' and FechaTrCr <= '".$fecha_hoy_hasta."'");
										while($row_historial = $dbo->fetchArray($sql_historial)):
												 $dato_historial["Tipo"] = $row_historial["Tipo"];
												 $dato_historial["Salida"] = $row_historial["Salida"];
												 $dato_historial["FechaSalida"] = $row_historial["FechaSalida"];
												 $dato_historial["Entrada"] = $row_historial["Entrada"];
												 $dato_historial["FechaIngreso"] = $row_historial["FechaIngreso"];

												 $datos_campos="";
												 //Consulto los otros datos registrados
												 $array_otros_datos=explode("|",$row_historial["CamposAcceso"]);
												 foreach($array_otros_datos as $valor){
													 if(!empty($valor)){
														 if(!in_array($valor,$array_respuesta)){
																$datos_campos.=$valor."<br>";
															}
																$array_respuesta[]=$valor;
													 }
												 }
												 $dato_historial["OtrosDatos"] = $datos_campos;
												 $dato_historial["LimiteSuperado"] = $row_historial["LimiteSuperado"];

												 array_push($response_historial_acceso, $dato_historial);
										 endwhile;
									$datos_invitacion_individual["Historial"] = $response_historial_acceso;
							else:
								$datos_invitacion_individual = NULL;
							endif;


							if($nucleo_socio==1):
								$datos_invitacion_individual["GrupoInvitado"] = $response_nucleo;
							endif;


							//Tipos de ingresos
									$response_tipo = array();
									$TipoIngreso = utf8_decode($dbo->getFields( "AppEmpleado" , "OpcionesIngreso" , "IDClub = '".$IDClub."'" ));
									$array_tipo=explode(",",$TipoIngreso);
									if(count($array_tipo)>0){
											$encontrados=1;
											$message = count($array_tipo) . " Encontrados";
										foreach ($array_tipo as $value) {
											$tipo_ingreso[ "Nombre" ] = utf8_encode($value);
											array_push( $response_tipo, $tipo_ingreso );
										}
									}

									if($IDSocio>0){
											$sql_vehiculo = "Select * From Vehiculo Where IDSocio = '".$IDSocio."' ";
											$r_vehiculo=$dbo->query($sql_vehiculo);
											if ( $dbo->rows( $r_vehiculo ) > 0 ) {
												$encontrados=1;
												while($row_vehiculo = $dbo->fetchArray($r_vehiculo)){
													$tipo_ingreso[ "Nombre" ] = "Vehiculo: " . utf8_encode($row_vehiculo["Placa"]);
													array_push( $response_tipo, $tipo_ingreso );
												}
											}
									}
									$datos_invitacion_individual["TipoIngreso"] = $response_tipo;
							//Fin Tipo Ingreso


							$response["Invitacion"] = $datos_invitacion_individual;

							$response["AutorizacionRecogida"] = $array_autorizacion_recogida;



							$respuesta["message"] = "ok";
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}
				}
			else{
				$respuesta["message"] = "1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}


			return $respuesta;

	}//end function



	function buscar_autorizacion_recogida($IDClub,$Documento ){

		$dbo =& SIMDB::get();

		//BUSQUEDA INVITADOS ACCESOS
		$qryString = str_replace(".","",$Documento);
		$qryString = str_replace(",","",$qryString);
		$qryString = str_replace("-","",$qryString);

		if (ctype_digit($qryString)) {
				// si es solo numeros en un numero de documento
				$sql_invitacion = "Select SA.* From SocioAutorizacionSalida SA, Invitado I Where SA.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()";
				$modo_busqueda = "DOCUMENTO";
		} else {
			//seguramente es una placa
			//Consulto en invitaciones accesos
			$sql_invitacion = "Select SA.* From SocioAutorizacionSalida SA, Vehiculo V Where SA.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()";
			$modo_busqueda = "PLACA";
		}



		$result_invitacion = $dbo->query($sql_invitacion);
		$total_resultados = $dbo->rows($result_invitacion);

		if($total_resultados>0):

				$datos_invitacion = $dbo->fetchArray($result_invitacion);
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
				$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );

				if (!empty($datos_invitado[FotoFile])) {
					$foto = 	IMGINVITADO_ROOT.$datos_invitado["FotoFile"];
				}else{
					$foto = URLROOT."plataform/assets/images/sinfoto.png";
				}

				$datos_autorizado["IDSocioAutorizacionSalida"]= $datos_invitacion["IDSocioAutorizacionSalida"];
				$datos_autorizado["NombreAutorizado"]= utf8_encode($datos_invitado["Nombre"] . " " . $datos_invitado["Apellido"]);
				$datos_autorizado["TipoDocumentoAutorizado"] = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
				$datos_autorizado["DocumentoAutorizado"] =$datos_invitado["NumeroDocumento"];
				$datos_autorizado["FotoAutorizado"]= $foto;
				$datos_autorizado["FechaInicio"]= $datos_invitacion["FechaInicio"];
				$datos_autorizado["FechaFin"]= $datos_invitacion["FechaFin"];
				$datos_autorizado["AutorizadoPor"]= utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . "(".$datos_socio["TipoSocio"].")");
				$datos_autorizado["TipoSocio"]= $datos_socio["TipoSocio"];
				$datos_autorizado["Observaciones"]= "";


				$array_doc_alumno = array();
				//Consulto los alumos que tiene autorizados para recogida
				$result_invitacion = $dbo->query($sql_invitacion);
				$contador_alumno=0;
				while($datos_autorizacion_estudiante = $dbo->fetchArray($result_invitacion)):
					//valido que la cedula no tenga autorizaciones sobre el mismo alumno para no repetirlo
					if(!in_array($datos_autorizacion_estudiante["IDSocioSalida"],$array_doc_alumno)):
						//valido que el dia de hoy tenga permiso de recoger
						$dia_hoy = date("w");
						$array_dias_autorizados = explode("|",$datos_autorizacion_estudiante["Dias"]);
						if(in_array($dia_hoy,$array_dias_autorizados)):
								$datos_alumno = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_autorizacion_estudiante["IDSocioSalida"] . "' ", "array" );

								if (!empty($datos_alumno[Foto])) {
									$foto_alumno = 	SOCIO_ROOT.$datos_alumno["Foto"];
								}else{
									$foto_alumno = URLROOT."plataform/assets/images/sinfoto.png";
								}

								$array_alumno_recogida[$contador_alumno]["IDSocioAutorizacionSalida"] = $datos_autorizacion_estudiante["IDSocioAutorizacionSalida"];
								$array_alumno_recogida[$contador_alumno]["TipoInvitacion"] = "AutorizacionSalida";
								$array_alumno_recogida[$contador_alumno]["NombreAlumno"] = $datos_alumno["Nombre"] . " " .$datos_alumno["Apellido"];
								$array_alumno_recogida[$contador_alumno]["CursoAlumno"] = $datos_alumno["Curso"];
								$array_alumno_recogida[$contador_alumno]["ObservacionesAlumno"] = "Solo los dias creados";
								$array_alumno_recogida[$contador_alumno]["TipoDocumentoAlumno"] = "Codigo";
								$array_alumno_recogida[$contador_alumno]["DocumentoAlumno"] =$datos_alumno["NumeroDocumento"];
								$array_alumno_recogida[$contador_alumno]["FotoAlumno"]= $foto_alumno . " " . $datos_alumno[FotoFile];
								$array_alumno_recogida[$contador_alumno]["FechaInicio"]= $datos_autorizacion_estudiante["FechaInicio"];
								$array_alumno_recogida[$contador_alumno]["FechaFin"]= $datos_autorizacion_estudiante["FechaFin"];

								//Consulto el historal de ingresos y salidas del alumno
								$response_historial_acceso = array();
								$fecha_hoy_desde = date("Y-m-d") . " 00:00:00";
								$fecha_hoy_hasta = date("Y-m-d") . " 23:59:59";
								$sql_historial = $dbo->query("Select * From LogAcceso Where IDInvitacion = '".$datos_autorizacion_estudiante["IDSocioAutorizacionSalida"]."' and FechaTrCr >= '".$fecha_hoy_desde."' and FechaTrCr <= '".$fecha_hoy_hasta."'");
								while($row_historial = $dbo->fetchArray($sql_historial)):
										 $dato_historial["Tipo"] = $row_historial["Tipo"];
										 $dato_historial["Salida"] = $row_historial["Salida"];
										 $dato_historial["FechaSalida"] = $row_historial["FechaSalida"];
										 $dato_historial["Entrada"] = $row_historial["Entrada"];
										 $dato_historial["FechaIngreso"] = $row_historial["FechaIngreso"];
										 array_push($response_historial_acceso, $dato_historial);
								 endwhile;
							$array_alumno_recogida[$contador_alumno]["Historial"] = $response_historial_acceso;


						endif;
					endif;
					$array_doc_alumno[]=$datos_autorizacion_estudiante["IDSocioSalida"];
					$contador_alumno++;
				endwhile;

				$datos_autorizado["AlumnosAutorizados"] = $array_alumno_recogida;

		else:
			$datos_autorizado=NULL;
		endif;



		return $datos_autorizado;
	}





	function set_entrada_invitado($IDClub,$IDInvitacion,$TipoInvitacion,$Mecanismo = "", $IDUsuario="", $OtrosCampos="")
	{
		$dbo =& SIMDB::get();


		//Guardo el Log de la busqueda
		$parametros="INVITACION:" . $IDInvitacion .  " TIPO: " . $TipoInvitacion ." Mecanismo: " .$Mecanismo;
		$sql_log_peticion =$dbo->query("Insert into LogAccesoPeticion (IDClub, IDUsuario, Parametro, Accion, FechaTrCr) Values ('".$IDClub."','".$IDUsuario."','".$parametros."','Entrada',NOW())");

		if( !empty( $IDClub ) && !empty( $IDInvitacion ) && !empty( $TipoInvitacion )  ){

					switch($TipoInvitacion){
						case "InvitadoAcceso":
							$sql_ingreso = $dbo->query("Update SocioInvitadoEspecial Set Ingreso = 'S', FechaIngreso = NOW(), IDUsuarioIngreso = '".$IDUsuario."' Where IDSocioInvitadoEspecial = '".$IDInvitacion."' and IDpadre = '".$datos_invitacion_especial["IDInvitado"]."'");
							//$datos_invitacion_especial = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
							//if($datos_invitacion_especial["CabezaInvitacion"]=="S"):
								//$sql_ingreso_grupo = $dbo->query("Update SocioInvitadoEspecial Set Ingreso = 'S', FechaIngreso = NOW() Where  IDPadre = '".$datos_invitacion_especial["IDInvitado"]."' and FechaInicio = '".$datos_invitacion_especial["FechaInicio"]."' and FechaFin = '".$datos_invitacion_especial["FechaFin"]."'");
							//endif;
							//Envio Notificacion Push
							if($IDClub!="9"): // Solo para mesa yeguas temporalmente no se registra
								SIMUtil::push_socio_entrada($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);

								//Verifico si alguien mas innvito a esta persona para enviarle también la notificación
								$datos_invitacion = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
								$sql_otra_inv="Select * From SocioInvitadoEspecial Where IDInvitado = '".$datos_invitacion["IDInvitado"]."' and FechaInicio<=CURDATE() and FechaFin >= CURDATE() and IDSocioInvitadoEspecial <> '".$IDInvitacion."' and IDClub = '".$IDClub."'";
								$result_otra_inv = $dbo->query($sql_otra_inv);
								while($row_otra_inv = $dbo->fetchArray($result_otra_inv)):
									SIMUtil::push_socio_entrada($IDClub,$row_otra_inv["IDSocioInvitadoEspecial"],$TipoInvitacion,$IDUsuario);
								endwhile;

							endif;

						break;
						case "Contratista":
							$sql_ingreso = $dbo->query("Update SocioAutorizacion Set Ingreso = 'S', FechaIngreso = NOW(),IDUsuarioIngreso = '".$IDUsuario."' Where IDSocioAutorizacion = '".$IDInvitacion."'");
							if($IDClub=="18"): // Para Fontanar en algunas horas no se debe permitir el acceso
								$flag_restriccion=1;
								$fecha_hora_actual = date("Y-m-d H:i:s");
								if(date("N",strtotime($Fecha))=="7"): //Domingo
									$flag_restriccion=1;
								endif;
								if(date("N",strtotime($Fecha))=="6"): //Sabado
									$hora_inicio_permitida = date("Y-m-d 08:00:00");
									$hora_fin_permitida = date("Y-m-d 12:00:00");
									if(strtotime($fecha_hora_actual)>=strtotime($hora_inicio_permitida) && strtotime($fecha_hora_actual)<=strtotime($hora_fin_permitida)):
										$flag_restriccion=0;
									else:
										$flag_restriccion=1;
									endif;

								else: //Lunes - Viernes
									$hora_inicio_permitida = date("Y-m-d 08:00:00");
									//$hora_fin_permitida = date("Y-m-d 17:00:00");
									$hora_fin_permitida = date("Y-m-d 23:00:00");
									if(strtotime($fecha_hora_actual)>=strtotime($hora_inicio_permitida) && strtotime($fecha_hora_actual)<=strtotime($hora_fin_permitida)):
										$flag_restriccion=0;
									else:
										$flag_restriccion=1;
									endif;
								endif;

								if($flag_restriccion==1):
									$respuesta["message"] = "Lo sentimos , no esta en el horario establecido para acceso de contratistas";
									$respuesta["success"] = true;
									$respuesta["response"] = NULL;
									return $respuesta;
								endif;
							endif;

							if($IDClub!="9" && $IDClub!="37") // Solo para mesa yeguas y polo temporalmente no se registra
								SIMUtil::push_socio_entrada($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);


						break;
						case "Socio":
							///Se deja la PreSalida en blanco
							$sql_ingreso = $dbo->query("Update Socio Set IDSocioPresalida = '', Presalida = 'N',FehaPresalida = '' Where IDSocio = '".$IDInvitacion."'");
						break;

						case "SocioInvitado":
						case "Invitado":
							//No tiene proceso especifico solo se registra el log de acceso
							$sql_ingreso = $dbo->query("Update SocioInvitado Set Estado = 'I', FechaIngresoClub = NOW() Where IDSocioInvitado = '".$IDInvitacion."'");
							//Envio Notificacion Push
							if($IDClub!="9") // Solo para mesa yeguas temporalmente no se registra
								SIMUtil::push_socio_entrada($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);
						break;

					}

					//Para Hacienda Fontanar muestro alerta si e=la persona ya se le había registrado acceso
					if($IDClub=="18"):
						$sql_ultimo_registro = "Select * From LogAcceso Where IDInvitacion = '".$IDInvitacion."' and IDClub = '".$IDClub."' and Tipo = '".$TipoInvitacion."' and FechaTrCr >= '".date("Y-m-d 00:00:00")."' and Entrada = 'S' Order by IDLogAcceso Desc Limit 1";
						$result_ultimo_registro = $dbo->query($sql_ultimo_registro);
						$row_ultimo_registro = $dbo->fetchArray($result_ultimo_registro);
						if($row_ultimo_registro["Entrada"]=="S"):
							$mensaje_alerta_ingreso = " ATENCION!! Esta persona ya tiene un ingreso el día de hoy: " . $row_ultimo_registro["FechaTrCr"];
						endif;
					endif;



						$OtrosCampos=str_replace("\\","",$OtrosCampos);
						$datos_respuesta= json_decode($OtrosCampos, true);
						if (count($datos_respuesta)>0):
							$LimiteSuperado="N";
							foreach($datos_respuesta as $detalle_respuesta):
								$datos_pregunta = $dbo->fetchAll( "PreguntaAcceso", " IDPreguntaAcceso = '" . $detalle_respuesta["IDPreguntaAcceso"] . "' ", "array" );
								if($datos_pregunta["TipoCampo"]=="number" && $datos_pregunta["Limite"]>0 && $detalle_respuesta["Valor"]>$datos_pregunta["Limite"]){
									//se envia notificacion de alerta al responsable
									$datos_mensaje=$datos_pregunta["EtiquetaCampo"]."=".$detalle_respuesta["Valor"];
									SIMUtil::notifica_alerta_acceso($IDClub,$IDInvitacion,$TipoInvitacion,$datos_mensaje);
									$LimiteSuperado="S";
								}
								$OtrosCamposAcceso.="|".$datos_pregunta["EtiquetaCampo"].":".$detalle_respuesta["Valor"]."|";
								//echo $detalle_respuesta["IDPreguntaAcceso"].":".$detalle_respuesta["Valor"] . " --- ";
							endforeach;
						endif;


					//Registro el historial de accesos
					$sql_inserta_historial = $dbo->query("Insert Into LogAcceso (IDInvitacion, IDClub, Tipo, Entrada, Mecanismo, FechaIngreso,FechaTrCr, IDUsuario, CamposAcceso,LimiteSuperado) Values ('".$IDInvitacion."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."',NOW(),NOW(),'".$IDUsuario."','".$OtrosCamposAcceso."','".$LimiteSuperado."')");
					$IDLogA = $dbo->lastID();
					foreach($datos_respuesta as $detalle_respuesta){
						$datos_pregunta = $dbo->fetchAll( "PreguntaAcceso", " IDPreguntaAcceso = '" . $detalle_respuesta["IDPreguntaAcceso"] . "' ", "array" );
						$sql_otros="INSERT INTO AccesosOtrosDatos(IDClub,IDLogAcceso,IDPreguntaAcceso,IDInvitacion,Tipo,Movimiento,Valor,FechaTrCr)
												VALUES('".$IDClub."','".$IDLogA."','".$detalle_respuesta["IDPreguntaAcceso"]."','".$IDInvitacion."','".$TipoInvitacion."','Entrada','".$detalle_respuesta["Valor"]."',NOW())";
						$dbo->query($sql_otros);
					}

						//echo $detalle_respuesta["IDPreguntaAcceso"].":".$detalle_respuesta["Valor"] . " --- ";




					$sql_inserta_historial = $dbo->query("Insert Into LogAccesoDiario (IDInvitacion, IDClub, Tipo, Entrada, Mecanismo, FechaIngreso,FechaTrCr, IDUsuario) Values ('".$IDInvitacion."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."',NOW(),NOW(),'".$IDUsuario."')");

					$respuesta["message"] = "Ingreso registrado con exito." . $mensaje_alerta_ingreso ;
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "7. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}
		return $respuesta;
	}

	function set_salida_invitado($IDClub,$IDInvitacion,$TipoInvitacion, $Mecanismo = "", $IDUsuario="", $OtrosCampos="")
	{
		$dbo =& SIMDB::get();

		//Guardo el Log de la busqueda
		$parametros="INVITACION:" . $IDInvitacion .  " TIPO: " . $TipoInvitacion ." Mecanismo: " .$Mecanismo;
		$sql_log_peticion =$dbo->query("Insert into LogAccesoPeticion (IDClub, IDUsuario, Parametro, Accion, FechaTrCr) Values ('".$IDClub."','".$IDUsuario."','".$parametros."','Salida',NOW())");

		if( !empty( $IDClub ) && !empty( $IDInvitacion ) && !empty( $TipoInvitacion )  ){

					switch($TipoInvitacion){
						case "InvitadoAcceso":
							$sql_salida = $dbo->query("Update SocioInvitadoEspecial Set Salida = 'S', FechaSalida = NOW(),IDUsuarioSalida = '".$IDUsuario."' Where IDSocioInvitadoEspecial = '".$IDInvitacion."'");
							$IDInvitadoSal = $dbo->getFields( "SocioInvitadoEspecial" , "IDInvitado" , "IDSocioInvitadoEspecial = '".$IDInvitacion."' and IDClub = '".$IDClub."' Limit 1" );
							/*
							$sql_registramov="SELECT IDSocioInvitadoEspecial FROM SocioInvitadoEspecial WHERE IDInvitado='".$IDInvitadoSal."' and IDClub = '".$IDClub."' ";
							$r_resgitramov=$dbo->query($sql_registramov);
							while($row_registramov=$dbo->fetchArray($r_resgitramov)){
								$sql_inserta_historial_otro = "Insert Into LogAcceso (IDInvitacion, IDClub, Tipo, Salida, Mecanismo, FechaSalida, FechaTrCr, IDUsuario) Values ('".$row_registramov["IDSocioInvitadoEspecial"]."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."', NOW(),NOW(),'".$IDUsuario."')";
								$dbo->query($sql_inserta_historial_otro);
							}
							*/

							//$sql_otras="Update SocioInvitadoEspecial Set Salida = 'S', FechaSalida = NOW(), IDUsuarioSalida = '".$IDUsuario."' Where IDInvitado='".$IDInvitadoSal."' and IDClub = '".$IDClub."' ";
							//$dbo->query($sql_otras);
							/*
							$datos_invitacion_especial = $dbo->fetchAll( "SocioInvitadoEspecial", " IDSocioInvitadoEspecial = '" . $IDInvitacion . "' ", "array" );
							if($datos_invitacion_especial["CabezaInvitacion"]=="S"):
								$sql_ingreso_grupo = $dbo->query("Update SocioInvitadoEspecial Set Salida = 'S', FechaSalida = NOW() Where  IDPadre = '".$datos_invitacion_especial["IDInvitado"]."' and FechaInicio = '".$datos_invitacion_especial["FechaInicio"]."' and FechaFin = '".$datos_invitacion_especial["FechaFin"]."'");
							endif;
							*/
							if($IDClub!="9") // Solo para mesa yeguas temporalmente no se registra
								SIMUtil::push_socio_salida($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);
						break;
						case "Contratista":
								$sql_salida = $dbo->query("Update SocioAutorizacion Set Salida = 'S', FechaSalida = NOW(), IDUsuarioSalida = '".$IDUsuario."' Where IDSocioAutorizacion = '".$IDInvitacion."'");
								$IDInvitadoSal = $dbo->getFields( "SocioAutorizacion" , "IDInvitado" , "IDSocioAutorizacion = '".$IDInvitacion."' and IDClub = '".$IDClub."' Limit 1" );
								/*
								$sql_registramov="SELECT IDSocioAutorizacion FROM SocioAutorizacion WHERE IDInvitado='".$IDInvitadoSal."' and IDClub = '".$IDClub."' ";
								$r_resgitramov=$dbo->query($sql_registramov);
								while($row_registramov=$dbo->fetchArray($r_resgitramov)){
									$sql_inserta_historial_otro = "Insert Into LogAcceso (IDInvitacion, IDClub, Tipo, Salida, Mecanismo, FechaSalida, FechaTrCr, IDUsuario) Values ('".$row_registramov["IDSocioAutorizacion"]."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."', NOW(),NOW(),'".$IDUsuario."')";
									$dbo->query($sql_inserta_historial_otro);
								}
								*/
								//$sql_otras="Update SocioAutorizacion Set Salida = 'S', FechaSalida = NOW(), IDUsuarioSalida = '".$IDUsuario."' Where IDInvitado='".$IDInvitadoSal."' and IDClub = '".$IDClub."' ";
								//$dbo->query($sql_otras);
								//marcar las demas como salida

							//Envio Notificacion Push
							if($IDClub!="9") // Solo para mesa yeguas temporalmente no se registra
								SIMUtil::push_socio_salida($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);
						break;
						case "SocioInvitado":
						case "Invitado":
							//Envio Notificacion Push
							if($IDClub!="9") // Solo para mesa yeguas temporalmente no se registra
								SIMUtil::push_socio_salida($IDClub,$IDInvitacion,$TipoInvitacion,$IDUsuario);
						break;
					}

					$OtrosCampos=str_replace("\\","",$OtrosCampos);
					$datos_respuesta= json_decode($OtrosCampos, true);
					if (count($datos_respuesta)>0):
							$LimiteSuperado="N";
						foreach($datos_respuesta as $detalle_respuesta):
							$datos_pregunta = $dbo->fetchAll( "PreguntaAcceso", " IDPreguntaAcceso = '" . $detalle_respuesta["IDPreguntaAcceso"] . "' ", "array" );
							if($datos_pregunta["TipoCampo"]=="number" && $datos_pregunta["Limite"]>0 && $detalle_respuesta["Valor"]>$datos_pregunta["Limite"]){
								//se envia notificacion de alerta al responsable
								$datos_mensaje=$datos_pregunta["EtiquetaCampo"]."=".$detalle_respuesta["Valor"];
								SIMUtil::notifica_alerta_acceso($IDClub,$IDInvitacion,$TipoInvitacion,$datos_mensaje);
								$LimiteSuperado="S";
							}
							$OtrosCamposAcceso.="|".$datos_pregunta["EtiquetaCampo"].":".$detalle_respuesta["Valor"]."|";
							//echo $detalle_respuesta["IDPreguntaAcceso"].":".$detalle_respuesta["Valor"] . " --- ";
						endforeach;
					endif;


					//Registro el historial de accesos
					$sql_inserta_historial = $dbo->query("Insert Into LogAcceso (IDInvitacion, IDClub, Tipo, Salida, Mecanismo, FechaSalida, FechaTrCr, IDUsuario,CamposAcceso,LimiteSuperado) Values ('".$IDInvitacion."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."', NOW(),NOW(),'".$IDUsuario."','".$OtrosCamposAcceso."','".$LimiteSuperado."')");
					$IDLogA = $dbo->lastID();
					foreach($datos_respuesta as $detalle_respuesta){
						$datos_pregunta = $dbo->fetchAll( "PreguntaAcceso", " IDPreguntaAcceso = '" . $detalle_respuesta["IDPreguntaAcceso"] . "' ", "array" );
						$sql_otros="INSERT INTO AccesosOtrosDatos(IDClub,IDLogAcceso,IDPreguntaAcceso,IDInvitacion,Tipo,Movimiento,Valor,FechaTrCr)
												VALUES('".$IDClub."','".$IDLogA."','".$detalle_respuesta["IDPreguntaAcceso"]."','".$IDInvitacion."','".$TipoInvitacion."','Salida','".$detalle_respuesta["Valor"]."',NOW())";
						$dbo->query($sql_otros);
					}


					$sql_inserta_historial = $dbo->query("Insert Into LogAccesoDiario (IDInvitacion, IDClub, Tipo, Salida, Mecanismo, FechaSalida, FechaTrCr, IDUsuario) Values ('".$IDInvitacion."','".$IDClub."', '".$TipoInvitacion."','S','".$Mecanismo."', NOW(),NOW(),'".$IDUsuario."')");


					$respuesta["message"] = "Salida registrada con exito";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
		}
		else{
			$respuesta["message"] = "7. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}
		return $respuesta;
	}

	function verifica_sancion_socio($IDClub,$IDSocio, $IDServicio,$FechaReserva)
	{
		$dbo =& SIMDB::get();
		$sancion_vigente = false;
		$reserva_no_cumplida = 0;
		$reserva_anterior = "";
		$contador_reserva_no_cumplida_seguida = 0;
		$contador_reserva_parcial = 0;
		$numero_dia_sancion = 0;
		$contador_reserva_socio = 0;
		$contador_reserva_parcial_seguida = 0;
		if( !empty( $IDSocio ) && !empty( $IDClub ) && !empty( $IDServicio )){

			$IDServicioMaestro = $dbo->getFields( "Servicio" , "IDServicioMaestro" , "IDServicio = '".$IDServicio."'" );
			//Consulto si hay sanciones publicadas ene l club
			$sql_sancion = "Select * From Sancion Where IDClub = '".$IDClub."' and IDServicioMaestro = '".$IDServicioMaestro."' and Publicar = 'S'";
			$result_sancion = $dbo->query($sql_sancion);
			$total_sanciones = $dbo->rows($result_sancion);
			if($total_sanciones>0):
				 $sql_reserva_socio = "Select IDReservaGeneral, Cumplida, Fecha
															From ReservaGeneral
															Where IDSocio = '".$IDSocio."' and
															IDServicio = '".$IDServicio."' and
															IDEstadoReserva = 1
															Order By Fecha Desc Limit 10";
					$result_reserva_socio = $dbo->query($sql_reserva_socio);

					while ($row_reserva_socio = $dbo->fetchArray($result_reserva_socio)):
						if($row_reserva_socio["Cumplida"]=="N"):
							$contador_reserva_no_cumplida++;
						endif;

						if($row_reserva_socio["Cumplida"]=="P"):
							$contador_reserva_parcial++;
						endif;

						if($reserva_anterior=="N" && $row_reserva_socio["Cumplida"]=="N"):
							$contador_reserva_no_cumplida_seguida++;
						endif;

						if($reserva_anterior=="P" && $row_reserva_socio["Cumplida"]=="P"):
							$contador_reserva_parcial_seguida++;
						endif;

						$reserva_anterior = $row_reserva_socio["Cumplida"];

						if($contador_reserva_socio==0):
							$fecha_ultima_reserva = $row_reserva_socio["Fecha"];
						endif;
						$contador_reserva_socio++;
					endwhile;

					if(($contador_reserva_no_cumplida_seguida)>0)
						$contador_reserva_no_cumplida_seguida++;

					if(($contador_reserva_parcial_seguida)>0)
						$contador_reserva_parcial_seguida++;

					/*
					echo "<br>RESE " . $contador_reserva_socio;
					echo "<br>SEG " . $contador_reserva_no_cumplida_seguida;
					echo "<br>NO CUM " . $contador_reserva_no_cumplida;
					echo "<br>Parcial " . $contador_reserva_parcial;
					echo "<br>Parcial Seguida " . $contador_reserva_parcial_seguida;
					*/

					while($row_sancion = $dbo->fetchArray($result_sancion)):
						//Consulto solo si se ha encontrado una sancion
						if($numero_dia_sancion==0):
							if($row_sancion["Cumplida"]=="N"):
								if($row_sancion["Seguida"]=="S"):
									if($contador_reserva_no_cumplida_seguida>=$row_sancion["NumeroIncumplida"]):
										$numero_dia_sancion = $row_sancion["NumeroDiasBloqueo"];
									endif;
								elseif($row_sancion["Seguida"]=="N")	:
									if($contador_reserva_no_cumplida>=$row_sancion["NumeroIncumplida"]):
										$numero_dia_sancion = $row_sancion["NumeroDiasBloqueo"];
									endif;
								endif;
							elseif($row_sancion["Cumplida"]=="P"):
								if($row_sancion["Seguida"]=="S"):
									if($contador_reserva_parcial_seguida>=$row_sancion["NumeroIncumplida"]):
										$numero_dia_sancion = $row_sancion["NumeroDiasBloqueo"];
									endif;
								elseif($row_sancion["Seguida"]=="N")	:
									if($contador_reserva_parcial>=$row_sancion["NumeroIncumplida"]):
										$numero_dia_sancion = $row_sancion["NumeroDiasBloqueo"];
									endif;
								endif;

							endif;
						endif;
					endwhile;

					//Si se encontro numero de dias en sanciones consulto si ya la cumplio
					if($numero_dia_sancion>0):
						//sumo los dias de sancion a la fecha de ultima reserva registrada
						$fecha_hoy = date("Y-m-j");
						$fecha_hoy = $FechaReserva;
						$fecha_actual = $fecha_ultima_reserva;
						$fecha_final_sancion = strtotime ( '+'.(int)$numero_dia_sancion.' day' , strtotime ( $fecha_actual ) ) ;
						$fecha_final_sancion = date ( 'Y-m-j' , $fecha_final_sancion );
						if(strtotime ( $fecha_hoy ) <= strtotime($fecha_final_sancion) ):
							$sancion_vigente = true;
							//echo "<br>ID SANC  " . $numero_dia_sancion;
						endif;
					endif;
			endif;
		}

		return $sancion_vigente;

	}

	function validar_disponibilidad_auxiliar($IDAuxiliar,$Fecha, $Hora, $IDSocio, $IDServicio, $IDClub ){
		$dbo =& SIMDB::get();
		$disponible = "";
		$fecha_hora_solicitud = strtotime ($Fecha . " " . $Hora);
		//Selecciono los auxiliares que tengan el mismo numero de documento, ya que un auiliar puede estar en mas servicios por ejemplo masajista hombre y mujer
		$documento_auxiliar = $dbo->getFields( "Auxiliar" , "NumeroDocumento" , "IDAuxiliar = '" . $IDAuxiliar . "'" );
		$sql_auxiliar = "Select * From Auxiliar Where NumeroDocumento = '".$documento_auxiliar."'";
		$result_auxiliar = $dbo->query($sql_auxiliar);
		while($row_auxiliar = $dbo->fetchArray($result_auxiliar)):
			$array_id_auxiliar[]= $row_auxiliar["IDAuxiliar"];
		endwhile;
		if(count($array_id_auxiliar)>0):
			$id_auxiliar_doc = implode(",",$array_id_auxiliar);
		endif;
		//Consulto que el auxiliar no este reservado en otro servicio en la misma fecha y hora con un lapso de 2 horas
		$sql_reserva_aux = "Select * From ReservaGeneral Where IDAuxiliar in (".$id_auxiliar_doc.") and Fecha = '".$Fecha."' and (IDEstadoReserva  = 1)";
		$result_reserva_aux = $dbo->query($sql_reserva_aux);
		while ($row_reserva_aux = $dbo->fetchArray($result_reserva_aux)):
			//consulto el intervalo de la disponibilidad
			$intervalo = $dbo->getFields( "Disponibilidad" , "Intervalo" , "IDDisponibilidad = '" . $row_reserva_aux["IDDisponibilidad"] . "'" );
			$fecha_hora_inicial = strtotime($row_reserva_aux["Fecha"] . " " . $row_reserva_aux["Hora"]);
			$fecha_hora_final = strtotime ( '+'.$intervalo.' minute' ,  $fecha_hora_inicial  ) ;

			//echo "<br>Solicitud: " . date("Y-m-d H:i:s",$fecha_hora_solicitud);
			//echo "<br>Inicial: " . date("Y-m-d H:i:s",$fecha_hora_inicial);
			//echo "<br>Final: " . date("Y-m-d H:i:s",$fecha_hora_final);
			if($fecha_hora_solicitud>=$fecha_hora_inicial && $fecha_hora_solicitud<=$fecha_hora_final):
				$disponible = "N";
				break;
			endif;
		endwhile;
		//echo "Dispo " . $disponible;
		//exit;
		return $disponible;
	}


	function get_reservas_socio_invitado($IDClub,$IDSocio,$Limite=0,$IDReserva=""){
	$dbo =& SIMDB::get();
		$response = array();

		$array_id_consulta[]=$IDSocio;

		if(!empty($IDReserva))
			$condicion_reserva = " and RG.IDReservaGeneral = '".$IDReserva."' ";

		if ($Limite!=0)
			$condicion_limite = " Limit ".$Limite;

		//Selecciono las reservas donde el socio esta como invitado
		$sql = "SELECT * FROM ReservaGeneral RG,ReservaGeneralInvitado RGI WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and RGI.IDSocio = '".$IDSocio."' and RG.IDClub = '".$IDClub."' and RG.IDEstadoReserva = 1 and RG.Fecha >= CURDATE() ".$where_beneficiario." " .$condicion_reserva. "ORDER BY RG.Fecha Desc  " . $condicion_limite;
		$qry = $dbo->query( $sql );


		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";

				while ($row_reserva = $dbo->fetchArray($qry))	:

					$mostra_reserva=1;
					$fecha_hoy=date("Y-m-d");
					if($row_reserva["Fecha"]==$fecha_hoy && $row_reserva["Hora"]<=date("H:i:s") && empty($IDUsuario)){
						$mostra_reserva=0;
						if($dbo->rows( $qry )==1){
						$reserva[ "IDClub" ] = "";
						$reserva[ "IDSocio" ] = "";
						$reserva[ "IDReserva" ] = "";
						$reserva[ "IDServicio" ] = "";
						$id_servicio_maestro = "";
						$reserva[ "NombreServicio" ] = "";
						$reserva[ "IDElemento" ] = "";
						$reserva[ "NombreElemento" ] = "";
						$reserva[ "Fecha" ] = "";
						$reserva[ "Tee" ] = "";
						array_push( $response, $reserva );
						$respuesta[ "message" ] = "No tienes reservas programadas.";
						$respuesta[ "success" ] = true;
						$respuesta[ "response" ] = $response;
						return $respuesta;
					}

					}

					//$mostra_reserva=1;

				if($mostra_reserva==1){


						// Verifico si es una reserva asociada para no mostrarla en el resultado
						$sql_auto = "SELECT * FROM ReservaGeneralAutomatica WHERE IDReservaGeneralAsociada = '".$row_reserva["IDReservaGeneral"]."' and IDEstadoReserva = 1";
						$qry_auto = $dbo->query( $sql_auto );
						if( $dbo->rows( $qry_auto ) <= 0 ){

								$datos_servicio = $dbo->fetchAll( "Servicio", " IDServicio = '" . $row_reserva[ "IDServicio" ] . "' ", "array" );

								$reserva["IDClub"] = $IDClub;
								$reserva["IDSocio"] = $IDSocio;
								$reserva["IDReserva"] = $row_reserva["IDReservaGeneral"];
								$reserva["IDServicio"] = $row_reserva["IDServicio"];
								$id_servicio_maestro = $dbo->getFields( "Servicio" , "IDServicioMaestro" , "IDServicio = '" . $row_reserva["IDServicio"] . "'" );
								$reserva["NombreServicio"] = $dbo->getFields( "ServicioMaestro" , "Nombre" , "IDServicioMaestro = '" . $id_servicio_maestro . "'" );
								$reserva["IDElemento"] = $row_reserva["IDServicioElemento"];
								$reserva["NombreElemento"] = $dbo->getFields( "ServicioElemento" , "Nombre" , "IDServicioElemento = '" . $row_reserva["IDServicioElemento"] . "'" );
								$reserva["Fecha"] = $row_reserva["Fecha"];
								$reserva["Tee"] = $row_reserva["Tee"];
								$reserva[ "LabelElementoSocio" ] = utf8_encode($datos_servicio["LabelElementoSocio"]);
								$reserva[ "LabelElementoExterno" ] = utf8_encode($datos_servicio["LabelElementoExterno"]);
								$reserva[ "PermiteEditarAuxiliar" ] = $datos_servicio["PermiteEditarAuxiliar"];
								$reserva[ "PermiteListaEsperaAuxiliar" ] = $datos_servicio["PermiteListaEsperaAuxiliar"];
								$reserva[ "MultipleAuxiliar" ] = $datos_servicio["MultipleAuxiliar"];
								$labelauxiliar = $dbo->getFields( "Club", "LabelAuxiliar", "IDClub = '" . $IDClub . "'" );
								if ( empty( $labelauxiliar ) )
									$labelauxiliar = $dbo->getFields( "ServicioMaestro", "LabelAuxiliar", "IDServicioMaestro = '" . $r[ "IDServicioMaestro" ] . "'" );

								$reserva[ "LabelAuxiliar" ] = utf8_encode($labelauxiliar);





								if (!empty($row_reserva["IDAuxiliar"])):
									$reserva["IDAuxiliar"] = $row_reserva["IDAuxiliar"];
									$reserva["Auxiliar"] = $dbo->getFields( "Auxiliar" , "Nombre" , "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'" );
									$id_tipo_auxiliar= $dbo->getFields( "Auxiliar" , "IDAuxiliarTipo" , "IDAuxiliar = '" . $row_reserva["IDAuxiliar"] . "'" );
									$reserva["TipoAuxiliar"] = $dbo->getFields( "AuxiliarTipo" , "Nombre" , "IDAuxiliarTipo = '" . $id_tipo_auxiliar . "'" );
								else:
									unset($reserva['IDAuxiliar']);
									unset($reserva['Auxiliar']);
									unset($reserva['TipoAuxiliar']);
								endif;


								if (!empty($row_reserva["IDTipoModalidadEsqui"])):
									$reserva["IDTipoModalidad"] = $row_reserva["IDTipoModalidadEsqui"];
									$reserva["Modalidad"] = $dbo->getFields( "TipoModalidadEsqui" , "Nombre" , "IDTipoModalidadEsqui = '" . $row_reserva["IDTipoModalidadEsqui"] . "'" );
								else:
									unset($reserva['IDTipoModalidad']);
									unset($reserva['Modalidad']);
								endif;

								if(strlen($row_reserva["Hora"])!=8):
									$row_reserva["Hora"] .= ":00";
								endif;

								$reserva["Hora"] = $row_reserva["Hora"];

								$zonahoraria = date_default_timezone_get();
								$offset = timezone_offset_get( new DateTimeZone( $zonahoraria ), new DateTime() );
								$reserva["GMT"] = SIMWebserviceQuemado::timezone_offset_string( $offset );


								if($row_reserva["IDDisponibilidad"]<=0):
									$id_disponibilidad = $dbo->getFields( "ServicioDisponibilidad" , "IDDisponibilidad" , "IDServicio = '".$r["IDServicio"]."'" );
								else:
									$id_disponibilidad = $row_reserva["IDDisponibilidad"];
								endif;

								$invitadoclub = $dbo->getFields( "Disponibilidad" , "NumeroInvitadoClub" , "IDDisponibilidad = '".$id_disponibilidad."'" );
								$invitadoexterno = $dbo->getFields( "Disponibilidad" , "NumeroInvitadoExterno" , "IDDisponibilidad = '".$id_disponibilidad."'" );

								if (!empty($invitadoclub)):
									$reserva["NumeroInvitadoClub"] = $dbo->getFields( "Disponibilidad" , "NumeroInvitadoClub" , "IDDisponibilidad = '".$id_disponibilidad."'" );
								else:
									$reserva["NumeroInvitadoClub"] = "";
								endif;
								if (!empty($invitadoexterno)):
									$reserva["NumeroInvitadoExterno"] = $dbo->getFields( "Disponibilidad" , "NumeroInvitadoExterno" , "IDDisponibilidad = '".$id_disponibilidad."'" );
								else:
									$reserva["NumeroInvitadoExterno"] = "";
								endif;

								if ($row_reserva["IDInvitadoBeneficiario"]>0):
									$reserva["Beneficiario"] = $dbo->getFields( "Invitado" , "Nombre" , "IDInvitado = '".$row_reserva["IDInvitadoBeneficiario"]."'" ) . " " .$dbo->getFields( "Invitado" , "Apellido" , "IDInvitado = '".$row_reserva["IDInvitadoBeneficiario"]."'" );
								endif;
								if ($row_reserva["IDSocioBeneficiario"]>0):
									$reserva["Beneficiario"] = strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$row_reserva["IDSocioBeneficiario"]."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$row_reserva["IDSocioBeneficiario"]."'"));
								endif;



								//Invitados Reserva
								$response_invitados_reserva = array();
								$sql_invitados_reserva = $dbo->query("Select * From ReservaGeneralInvitado Where IDReservaGeneral = '".$row_reserva["IDReservaGeneral"]."'");
								$total_invitado = $dbo->rows($sql_invitados_reserva);
								while ($r_invitados_reserva = $dbo->fetchArray($sql_invitados_reserva)):
									$id_reserva_general_invitado = $r_invitados_reserva["IDReservaGeneralInvitado"];
									$invitado_reserva[IDReservaGeneralInvitado]=$r_invitados_reserva["IDReservaGeneralInvitado"];
									$invitado_reserva[IDSocio]=$r_invitados_reserva["IDSocio"];

									if($r_invitados_reserva["IDSocio"]==$IDSocio){
										$IDInvitacionEliminar = $r_invitados_reserva["IDReservaGeneralInvitado"];
									}

									$invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$r_invitados_reserva["IDSocio"]."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$r_invitados_reserva["IDSocio"]."'"));
									$invitado_reserva[NombreExterno]=strtoupper($r_invitados_reserva["Nombre"]);
									if($r_invitados_reserva["IDSocio"]==0):
										$tipo_invitado = "Externo";
									else:
										$tipo_invitado = "Socio";
									endif;

									$invitado_reserva[TipoInvitado]=$tipo_invitado;

									array_push($response_invitados_reserva, $invitado_reserva);
								endwhile;

								/*
								//Verifico si el servicio es golf y en invitados falta 1 agrego el socio por que pertenece a la reserva
								if( ($id_servicio_maestro==15 || $id_servicio_maestro==27 || $id_servicio_maestro==28 || $id_servicio_maestro==30) ): //Golf
									//Consulto cuantos invitados son minimo para saber si falta 1 y agregar el socio como invitado
									if ($id_disponibilidad>0):
										$minimo_invitado_reserva = (int)$dbo->getFields( "Disponibilidad" , "MinimoInvitados" , "IDDisponibilidad = '" . $id_disponibilidad . "'");
									endif;

									if($total_invitado<$minimo_invitado_reserva):
										$invitado_reserva[IDReservaGeneralInvitado]=$id_reserva_general_invitado;
										$invitado_reserva[IDSocio]=$IDSocio;
										$invitado_reserva[NombreSocio]=strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$IDSocio."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$IDSocio."'"));
										$tipo_invitado = "Socio";
										$invitado_reserva[TipoInvitado]=$tipo_invitado;
										array_push($response_invitados_reserva, $invitado_reserva);
									endif;
								endif;
								*/

								$reserva["Invitados"] = $response_invitados_reserva;

								//Reservas asociadas
								$response_reserva_asociada = array();
								$array_asociada = SIMWebserviceQuemado::get_reserva_asociada($IDClub,$IDSocio,$row_reserva["IDReservaGeneral"]);
								foreach($array_asociada["response"]["0"]["ReservaAsociada"] as $datos_reserva):
									array_push($response_reserva_asociada, $datos_reserva);
								endforeach;
								$reserva["ReservaAsociada"] = $response_reserva_asociada;
								$reserva["IDReservaGeneralInvitado"] = $IDInvitacionEliminar;
								//Reservada por
								$id_socio_reserva = $dbo->getFields( "ReservaGeneral" , "IDSocio" , "IDReservaGeneral = '" . $row_reserva["IDReservaGeneral"] . "'" );
								$reserva["InvitadoPor"] =  utf8_encode(strtoupper($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$id_socio_reserva."'") . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$id_socio_reserva."'")));





								array_push($response, $reserva);
						}
						} // fin verificar si fue un areserva automatica
				endwhile;






				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No tienes reservas programadas.";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}


	function get_producto( $IDClub , $IDProducto = "", $Tag="", $Version="")
	{

		$dbo =& SIMDB::get();


		// Seccion Especifica
		if (!empty($IDProducto)):
			$array_condiciones[] = " IDProducto  = '".$IDProducto."'";
		endif;

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_producto = " and " .$condiciones;
		endif;



		$response = array();
		$response_lista_producto = array();
		$sql = "SELECT * FROM Producto".$Version." WHERE Publicar = 'S' and Existencias > 0  and IDClub = '".$IDClub."'" . $condiciones_producto ." ORDER BY Nombre ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";

			$mostrar_fecha = $dbo->getFields( "Club" , "SolicitaFechaDomicilio" , "IDClub = '".$IDClub."'" );
			if($mostrar_fecha=="S"):
				$producto["setearfecha"] = true;
			else:
				$producto["setearfecha"] = false;
			endif;

			$mostrar_hora = $dbo->getFields( "Club" , "SolicitaHoraDomicilio" , "IDClub = '".$IDClub."'" );
			if($mostrar_hora=="S"):
				$producto["setearhora"] = true;
			else:
				$producto["setearhora"] = false;
			endif;

			$mostrar_direccion = $dbo->getFields( "Club" , "SolicitaDireccionDomicilio" , "IDClub = '".$IDClub."'" );
			if($mostrar_direccion=="S"):
				$producto["seteardireccion"] = true;
			else:
				$producto["seteardireccion"] = false;
			endif;




			while( $r = $dbo->fetchArray( $qry ) )
			{
				$lista_producto["IDClub"] = $r["IDClub"];
				$lista_producto["IDProducto"] = $r["IDProducto"];
				$lista_producto["Nombre"] = utf8_encode($r["Nombre"]);
				$lista_producto["Descripcion"] = utf8_encode($r["Descripcion"]);
				$lista_producto["Precio"] = $r["Precio"];
				$lista_producto["PermiteComentarios"] = $r["PermiteComentarios"];


				if (!empty($r["Foto1"])):
					if(strstr(strtolower($r["Foto1"]),"http://"))
						$foto = $r["FotoDestacada"];
					else
						$foto = IMGPRODUCTO_ROOT.$r["Foto1"];

					//$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
				else:
					$foto="";
				endif;

				$lista_producto["Foto"] = $foto;
				array_push($response_lista_producto, $lista_producto);

			}//ednw hile

				$producto["Productos"] = $response_lista_producto;
				array_push($response, $producto);

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_producto_categoria( $IDClub , $IDCategoria = "", $Tag="", $Version="")
	{

		$dbo =& SIMDB::get();


		$respuesta_dispo=self::get_configuracion_domicilio($IDClub , $IDSocio, $Fecha = "", $Version);
		if(!$respuesta_dispo["success"]){
			$respuesta["message"] = $respuesta_dispo["message"];
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
			return $respuesta;
		}


		// Seccion Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDCategoriaProducto  = '".$IDCategoria."'";
		endif;

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_producto = " and " .$condiciones;
		endif;



		$response = array();
		$response_lista_producto = array();
		$sql = "SELECT * FROM CategoriaProducto".$Version." WHERE Publicar = 'S' and IDClub = '".$IDClub."'" . $condiciones_producto ." ORDER BY Orden ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";

			//$mostrar_fecha = $dbo->getFields( "Club" , "SolicitaFechaDomicilio" , "IDClub = '".$IDClub."'" );
			$mostrar_fecha = $respuesta_dispo["response"][0]["SolicitaFechaDomicilio"];
			if($mostrar_fecha=="S"):
				$categoria_producto["setearfecha"] = true;
			else:
				$categoria_producto["setearfecha"] = false;
			endif;

			//$mostrar_hora = $dbo->getFields( "Club" , "SolicitaHoraDomicilio" , "IDClub = '".$IDClub."'" );
			$mostrar_hora = $respuesta_dispo["response"][0]["SolicitaHoraDomicilio"];
			if($mostrar_hora=="S"):
				$categoria_producto["setearhora"] = true;
			else:
				$categoria_producto["setearhora"] = false;
			endif;




			while( $r = $dbo->fetchArray( $qry ) )
			{
				$categoria_producto["IDClub"] = $r["IDClub"];
				$categoria_producto["IDCategoriaProducto"] = $r["IDCategoriaProducto"];

				/*
				if(!empty(trim($r["ComentarioCategoria"]))):
					$descripcion_cat = " (".$r["ComentarioCategoria"].")";
				else:
					$descripcion_cat="";
				endif;
				*/

				$categoria_producto["NombreCategoria"] = $r["Nombre"] . $descripcion_cat;
				$categoria_producto["DescripcionCategoria"] = $r["Descripcion"];
				$categoria_producto["ComentarioCategoria"] = $r["ComentarioCategoria"];
				//Busco los productos de la categoria
				$response_detalle_producto = array();
				$sql_productos = "Select PC.* From ProductoCategoria".$Version." PC, Producto".$Version." P Where P.IDProducto=PC.IDProducto and  IDCategoriaProducto = '".$r["IDCategoriaProducto"]."' Order by P.Orden" ;
				$result_productos = $dbo->query($sql_productos);
				while($row_producto = $dbo->fetchArray($result_productos)):

					$datos_producto = $dbo->fetchAll( "Producto".$Version, " IDProducto = '" . $row_producto["IDProducto"] . "' ", "array" );
					if($datos_producto["Publicar"]=="S" && $datos_producto["Existencias"]>0):
						$producto["IDProducto"] = $datos_producto["IDProducto"];
						$producto["Nombre"] = $datos_producto["Nombre"];
						$producto["Descripcion"] = $datos_producto["Descripcion"];
						$producto["Precio"] = $datos_producto["Precio"];
						$producto["Nombre"] = $datos_producto["Nombre"];
						$producto["PermiteComentarios"] = $datos_producto["PermiteComentarios"];
						if (!empty($datos_producto["Foto1"])):
							if(strstr(strtolower($datos_producto["Foto1"]),"http://"))
								$foto = $datos_producto["FotoDestacada"];
							else
								$foto = IMGPRODUCTO_ROOT.$datos_producto["Foto1"];

							//$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
						else:
							$foto="";
						endif;
						$producto["Foto"] = $foto;
						array_push($response_detalle_producto, $producto);
					endif;
				endwhile;

				$categoria_producto["Productos"] = $response_detalle_producto;
				array_push($response, $categoria_producto);

			}//ednw hile

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_domicilio_socio( $IDClub , $IDSocio, $Version="")
	{

		$dbo =& SIMDB::get();


		$response = array();
		$response_detalle_domicilio = array();
		$sql = "SELECT * FROM Domicilio".$Version." WHERE IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."'" ." and IDEstadoDomicilio <> 3 ORDER BY FechaTrCr Desc Limit 3";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$domicilio["IDClub"] = $r["IDClub"];
				$domicilio["IDDomicilio"] = $r["IDDomicilio"];
				$domicilio["Estado"] = utf8_encode($dbo->getFields( "EstadoDomicilio".$Version , "Nombre" , "IDEstadoDomicilio = '".$r["IDEstadoDomicilio"]."'" ));
				$domicilio["Numero"] = $r["Numero"];
				$domicilio["Total"] = (float)$r["Total"] + (int)$r["ValorDomicilio"];
				$domicilio["HoraEntrega"] = $r["HoraEntrega"];
				$domicilio["ComentariosSocio"] = utf8_encode($r["ComentariosSocio"]);
				$domicilio["ComentariosClub"] =  utf8_encode($r["ComentariosClub"]);
				$domicilio["Fecha"] = $r["FechaTrCr"];
				//Consulto los productos pedidos
				$detalle_pedido = self::get_domicilio_detalle( $IDClub,$r["IDDomicilio"],$r["IDSocio"],(int)$r["ValorDomicilio"],$Version);
				$domicilio["Productos"] = $detalle_pedido["response"];


				array_push($response, $domicilio);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_domicilio_detalle( $IDClub,$IDDomicilio,$IDSocio, $ValorDomicilio="",$Version="" )
	{

		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM DomicilioDetalle".$Version." WHERE IDDomicilio = '".$IDDomicilio."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$id_domiclio= $r["IDDomicilio"];
				$domicilio_detalle["IDDomicilio"] = $r["IDDomicilio"];
				$domicilio_detalle["IDProducto"] = $r["IDProducto"];
				$domicilio_detalle["Producto"] = utf8_encode($dbo->getFields( "Producto".$Version , "Nombre" , "IDProducto = '".$r["IDProducto"]."'" ));
				$domicilio_detalle["Comentario"] = utf8_encode($r["Comentario"]);

				$foto_prod = $dbo->getFields( "Producto".$Version , "Foto1" , "IDProducto = '".$r["IDProducto"]."'" );
				if (!empty($foto_prod)):
					if(strstr(strtolower($foto),"http://"))
						$foto = $foto_prod;
					else
						$foto = IMGPRODUCTO_ROOT.$foto_prod;

					//$foto2 = IMGNOTICIA_ROOT.$r["FotoDestacada"];
				else:
					$foto="";
				endif;

				$domicilio_detalle["FotoProducto"] = $foto;
				$domicilio_detalle["Cantidad"] = $r["Cantidad"];
				$domicilio_detalle["ValorUnitario"] = $r["ValorUnitario"];
				$domicilio_detalle["Total"] = $r["Total"];

				array_push($response, $domicilio_detalle);

			}//ednw hile




			if((int)$ValorDomicilio>0):
				$domicilio_detalle["IDDomicilio"] = $id_domiclio;
				$domicilio_detalle["IDProducto"] = "0";
				$domicilio_detalle["Producto"] = "Domicilio";
				$domicilio_detalle["FotoProducto"] = "";
				$domicilio_detalle["Cantidad"] = "1";
				$domicilio_detalle["ValorUnitario"] = $ValorDomicilio;
				$domicilio_detalle["Total"] = $ValorDomicilio;
				array_push($response, $domicilio_detalle);

			endif;


				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function set_domicilio($IDClub,$IDSocio,$HoraEntrega,$ComentariosSocio,$DetallePedido,$Celular,$Direccion="",$ValorDomicilio="",$FormaPago="",$Version="")
	{

	$dbo =& SIMDB::get();

	$resp_config=self::get_configuracion_domicilio( $IDClub , $IDSocio, "", $Version);
	$PedidoMinimo=(int)$resp_config["response"][0]["PedidoMinimo"];

	$datos_pedido= json_decode($DetallePedido, true);


	if( !empty( $IDSocio ) && !empty( $HoraEntrega ) && count($datos_pedido)>0 ){

			$hoy = date("Y-m-d");

			$GranTotal = 0;
			foreach($datos_pedido as $detalle_datos):
				$GranTotal += (int)$detalle_datos["Cantidad"]*$detalle_datos["ValorUnitario"];
				//verifico que hayan en existencias
				$datos_prod = $dbo->fetchAll( "Producto".$Version, " IDProducto = '" . $detalle_datos["IDProducto"] . "' ", "array" );
				if($datos_prod["Existencias"]<$detalle_datos["Cantidad"]){
					$respuesta["message"] = "Lo sentimos, no hay existencia del producto: " . $datos_prod["Nombre"];
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
					return $respuesta;
					exit;
				}
			endforeach;

			if($GranTotal<=0){
				$respuesta["message"] = "Lo sentimos, no selecciono ninguna cantidad, por favor verifique, el pedido no fue enviado";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
				return $respuesta;
				exit;
			}

			if($GranTotal<=$PedidoMinimo){
				$respuesta["message"] = "El pedido mínimo debe ser de $ ".$PedidoMinimo;
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
				return $respuesta;
				exit;
			}

			$datos_socio=$dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
			$PermiteReservar = $datos_socio["PermiteDomicilios"];
			if($PermiteReservar=="N"){
				$respuesta["message"] = "Su pedido no puede ser realizado por favor contactar con el area de cartera";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
				return $respuesta;
				exit;
			}

			//San andres depende la zona se calcula la fecha del pedido
			if($IDClub==70){
				$pos1 = strpos($FormaPago, "Junio 24.");
				$pos2 = strpos($FormaPago, "Junio 25.");
				$pos3 = strpos($FormaPago, "Junio 26.");
				$pos4 = strpos($FormaPago, "Julio 1.");
				$pos5 = strpos($FormaPago, "Julio 2.");
				$pos6 = strpos($FormaPago, "Julio 3.");
				$pos7 = strpos($FormaPago, "Julio 8.");
				$pos8 = strpos($FormaPago, "Julio 9.");
				$pos9 = strpos($FormaPago, "Julio 10.");
				$pos10 = strpos($FormaPago, "Julio 15.");
				$pos11 = strpos($FormaPago, "Julio 16.");
				$pos12 = strpos($FormaPago, "Julio 17.");
				$pos13 = strpos($FormaPago, "Julio 22.");
				$pos14 = strpos($FormaPago, "Julio 23.");
				$pos15 = strpos($FormaPago, "Julio 24.");
				$pos16 = strpos($FormaPago, "Julio 29.");
				$pos17 = strpos($FormaPago, "Julio 30.");
				$pos18 = strpos($FormaPago, "Julio 31.");


				if ($pos1 !== false)
					$HoraEntrega="2020-06-24";
				elseif ($pos2 !== false)
					$HoraEntrega="2020-06-25";
				elseif ($pos3 !== false)
					$HoraEntrega="2020-06-26";
				elseif ($pos4 !== false)
					$HoraEntrega="2020-07-01";
				elseif ($pos5 !== false)
					$HoraEntrega="2020-07-02";
				elseif ($pos6 !== false)
					$HoraEntrega="2020-07-03";
				elseif ($pos7 !== false)
					$HoraEntrega="2020-07-08";
				elseif ($pos8 !== false)
					$HoraEntrega="2020-07-09";
				elseif ($pos9 !== false)
					$HoraEntrega="2020-07-10";
				elseif ($pos10 !== false)
					$HoraEntrega="2020-07-15";
				elseif ($pos11 !== false)
					$HoraEntrega="2020-07-16";
				elseif ($pos12 !== false)
					$HoraEntrega="2020-07-17";
				elseif ($pos13 !== false)
					$HoraEntrega="2020-07-22";
				elseif ($pos14 !== false)
					$HoraEntrega="2020-07-23";
				elseif ($pos15 !== false)
					$HoraEntrega="2020-07-24";
				elseif ($pos16 !== false)
					$HoraEntrega="2020-07-29";
				elseif ($pos17 !== false)
					$HoraEntrega="2020-07-30";
				elseif ($pos18 !== false)
					$HoraEntrega="2020-07-31";



					$fechamaxima=date("Y-m-d",strtotime($HoraEntrega."- 3 days"));

					if(strtotime($hoy) > strtotime($fechamaxima)){
						$respuesta["message"] = "No es posible realizar el pedido debe ser 3 dias antes de la fecha de entrega por zona:".$fechamaxima;
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
						exit;
					}

			}


			//Consulto el siguiente consecutivo del pedido
			$sql_max_numero = "Select MAX(Numero) as NumeroMaximo From Domicilio".$Version." Where IDClub = '".$IDClub."'";
			$result_numero = $dbo->query($sql_max_numero);
			$row_numero = $dbo->fetchArray($result_numero);
			$siguiente_consecutivo = (int)$row_numero["NumeroMaximo"]+1;

			//Actualizo el celular y direccion del Socio
			$update_celular = "Update Socio Set Celular = '".$Celular."', Direccion= '".$Direccion."' Where IDSocio='".$IDSocio."'";
			$dbo->query($update_celular);

			$sql_domicilio = $dbo->query("Insert Into Domicilio".$Version." (IDClub, IDSocio, IDEstadoDomicilio, Numero, Total, HoraEntrega, ComentariosSocio, Celular, Direccion, ValorDomicilio, FormaPago, UsuarioTrCr, FechaTrCr)
									Values ('".$IDClub."','".$IDSocio."','1','".$siguiente_consecutivo."','".$GranTotal."', '".$HoraEntrega."','".$ComentariosSocio."','".$Celular."','".$Direccion."','".$ValorDomicilio."','".$FormaPago."','App',NOW())");

			$id_domicilio = $dbo->lastID();



			if($IDClub==20){ // Para Medellin guardo en tabla de ellos
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
				$server = '190.0.53.38';
				try {
						$hostname = $server;
						$port = "";
						$dbname = DBNAME_MEDELLIN;
						$username = DBUSER_MEDELLIN;
						$pw = DBPASS_MEDELLIN;
						$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
					} catch (PDOException $e) {
						//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
						echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
						exit;
					}
			}

			foreach($datos_pedido as $detalle_datos):
				$IDProducto = $detalle_datos["IDProducto"];
				$Cantidad = $detalle_datos["Cantidad"];
				$Comentario = $detalle_datos["Comentario"];
				$ValorUnitario = $detalle_datos["ValorUnitario"];
				$Total = (int)$detalle_datos["Cantidad"]*(float)$detalle_datos["ValorUnitario"];
				if($Cantidad>0){
							$inserta_detalle = "INSERT INTO DomicilioDetalle".$Version." (IDDomicilio, IDProducto, Comentario, Cantidad, ValorUnitario, Total)
												 Values('".$id_domicilio."', '".$IDProducto."','".$Comentario."','".$Cantidad."','".$ValorUnitario."','".$Total."')";
							$dbo->query($inserta_detalle);

							$sql_existencias="UPDATE Producto".$Version." SET Existencias =  Existencias - " . $Cantidad . " WHERE IDProducto = '".$IDProducto."'";
							$dbo->query($sql_existencias);

							if($IDClub==20){ // Para Medellin guardo en tabla de ellos
								$datos_prod = $dbo->fetchAll( "Producto".$Version, " IDProducto = '" . $detalle_datos["IDProducto"] . "' ", "array" );
								if ($link) {

										$doc=$datos_socio["NumeroDocumento"];
										$idprod=$datos_prod["IDProductoExterno"];
										$cant=$detalle_datos["Cantidad"];
										$fech=date("Y-m-d H:i:s");
										$sql = $dbh->query("INSERT INTO vapp_det_pedido (ident_cliente,codigo_producto_pos,cantidad)
																				VALUES('".$doc."',$idprod,$cant) ");
								}
							}
				}
			endforeach;

			if($IDClub==20){ // Para Medellin guardo en tabla encabezado
				if ($link) {
						$doc=$datos_socio["NumeroDocumento"];
						$fech=date("Y-m-d H:i:s");


						$sql = $dbh->query("INSERT INTO vapp_enc_pedido (ident_cliente,fecha_envio,comentario,id_pedido)
																VALUES('".$doc."','".$fech."','".$ComentariosSocio."',$id_domicilio) ");


						//Verifico que el pedido se genere correctamente en el sistema
						$sql_confirma="SELECT TOP 1 CAST(id_pedido  AS INTEGER) AS id_pedido
													 FROM vapp_pedidos
													 WHERE id_pedido = '".$id_domicilio."'";
						$r_confirma = $dbh->query($sql_confirma);
						$contador_sql=0;
						while ($row =$r_confirma->fetch()){
								$contador_sql++;
						}
						if($contador_sql<=0){
							//Borro el pedio
							$sql_borra="DELETE FROM Domicilio".$Version." WHERE IDDomicilio = '".$id_domicilio."'";
							$dbo->query($sql_borra);
							$respuesta["message"] = "Atencion ocurrio un problema de comunicacion por favor intente mas tarde";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						}


				}
			}



				//if($IDClub==7): // Para Lagartos manda impresion
					self::imprime_recibo_domicilio($id_domicilio,$Version);
				//endif;
			SIMUtil::notifica_recibo_domicilio($id_domicilio,$Version);

			if($IDClub==44){
				$mensaje_guardar="Su pedido se ha enviado al área encargada, se le enviará un correo para confirmar fecha y hora de entrega. le recordamos que los pedidos se tramitan  con un día de anticipación";
			}
			else{
				$mensaje_guardar="guardado ";
			}


			//Datos reserva
			$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
			$response_reserva = array();
			$datos_reserva["IDDomicilio"] = (int)$id_domicilio;
			//Calculo el valor de la reserva
			$valor_inicial_reserva = (int)$GranTotal;
			$datos_reserva["ValorReserva"] = $GranTotal+$ValorDomicilio;
			$ValorReserva=$GranTotal+$ValorDomicilio;
			$llave_encripcion = $datos_club["ApiKey"]; //llave de encripciÛn que se usa para generar la fima
			$ApiLogin = $datos_club["ApiLogin"]; //Api Login

			if($datos_club["MerchantId"]!="placetopay")
				$usuarioId = $datos_club["MerchantId"]; //c0digo inicio del cliente
			else
				$usuarioId = $datos_club["ApiLogin"]; //c0digo inicio del cliente

			$refVenta = time(); //referencia que debe ser ?nica para cada transacciÛn
			$iva = 0; //impuestos calculados de la transacciÛn
			$baseDevolucionIva = 0; //el precio sin iva de los productos que tienen iva
			$valor = $datos_reserva["ValorReserva"] + (( $datos_reserva["ValorReserva"] * $ArrayParametro["Iva"] ) / 100 ) ; //el valor ; //el valor total
			$moneda ="COP"; //la moneda con la que se realiza la compra
			$prueba = "0"; //variable para poder utilizar tarjetas de crÈdito de prueba
			$descripcion = "Pago Domicilio Mi Club"; //descripciÛn de la transacciÛn
			$url_respuesta = URLROOT."respuesta_transaccion_domicilio.php?Version=".$Version;//Esta es la p·gina a la que se direccionar· al final del pago
			$url_confirmacion = URLROOT."confirmacion_pagos_domicilio.php?Version=".$Version;
			$emailSocio = $dbo->getFields("Socio","CorreoElectronico","IDSocio =".$IDSocio); //email al que llega confirmaciÛn del estado final de la transacciÛn, forma de identificar al comprador
			if (filter_var(trim($emailSocio), FILTER_VALIDATE_EMAIL))
				$emailComprador = $emailSocio;
			else
				$emailComprador = "";

			$firma_cadena = "$llave_encripcion~$usuarioId~$refVenta~$valor~$moneda"; //concatenaciÛn para realizar la firma
			$firma = md5($firma_cadena); //creaciÛn de la firma con la cadena previamente hecha
			$extra1 = $id_domicilio;

			$datos_reserva["Action"] = $datos_club["URL_PAYU"];

			$response_parametros = array();
			$datos_post["llave"] = "moneda";
			$datos_post["valor"] = (string)$moneda;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "IDSocio";
			$datos_post["valor"] = (string)$IDSocio;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "ref";
			$datos_post["valor"] = $refVenta;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "llave";
			$datos_post["valor"] = $llave_encripcion;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "userid";
			$datos_post["valor"] = $usuarioId;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "usuarioId";
			$datos_post["valor"] = $usuarioId;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "accountId";
			$datos_post["valor"] = (string)$datos_club["AccountId"];
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "descripcion";
			$datos_post["valor"] = $descripcion;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "extra1";
			$datos_post["valor"] = (string)$extra1;
			array_push($response_parametros, $datos_post);


			$datos_post["llave"] = "extra2";
			$datos_post["valor"] = $IDClub;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "refVenta";
			$datos_post["valor"] = $refVenta;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "valor";
			$datos_post["valor"] = $ValorReserva;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "iva";
			$datos_post["valor"] = "0";
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "baseDevolucionIva";
			$datos_post["valor"] = "0";
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "firma";
			$datos_post["valor"] = $firma;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "emailComprador";
			$datos_post["valor"] = $emailComprador;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "prueba";
			$datos_post["valor"] = (string)$datos_club["IsTest"];
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "url_respuesta";
			$datos_post["valor"] = (string)$url_respuesta;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "url_confirmacion";
			$datos_post["valor"] = (string)$url_confirmacion;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "version";
			$datos_post["valor"] = (string)$Version;
			array_push($response_parametros, $datos_post);

			$datos_post["llave"] = "Modulo";
			$datos_post["valor"] = "Domicilio";
			array_push($response_parametros, $datos_post);


			$datos_reserva["ParametrosPost"] = $response_parametros;



			$respuesta["message"] = $mensaje_guardar . $otros_mensajes;
			$respuesta["success"] = true;
			$respuesta["response"] = $datos_reserva;
	}
	else{
		$respuesta["message"] = "Dom. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;
	}


	function elimina_pedido($IDClub, $IDSocio, $IDDomicilio, $Admin = "", $Razon = "",$Version="")
	{

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDDomicilio )  ){


		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_socio)){

			//Verifico que este en el tiempo limite para eliminar

				$tiempo_cancelacion = (int)$dbo->getFields( "ConfiguracionDomicilios".$Version , "TiempoMinimoCancelacion" , "IDClub = '" . $IDClub . "'");
				if((int)$tiempo_cancelacion>0):
					$minutos_anticipacion = $tiempo_cancelacion;
				else:
					$minutos_anticipacion=30;
				endif;


			$hora_fecha_entrega =  $dbo->getFields( "Domicilio".$Version , "HoraEntrega" , "IDDomicilio = '" . $IDDomicilio . "'");


			$fecha_domicilio = substr($hora_fecha_entrega,0,10);
			if(empty($fecha_domicilio))
				$fecha_domicilio=date("Y-m-d");

			$hora_entrega =  substr($hora_fecha_entrega,11);

			$hora_inicio_domicilio = strtotime ('-'.$minutos_anticipacion.' minute' , strtotime ( $fecha_domicilio . " " . $hora_entrega));
			$fechahora_actual =  strtotime ( date("Y-m-d H:i:s") );

			if ($fechahora_actual>$hora_inicio_domicilio && empty($Admin)):
				$respuesta["message"] = "El pedido no puede ser cancelado. supera el tiempo mínimo par cancelación. Para mayor información comuníquese con el club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;

			else:

				//if($IDClub==7): // Para Lagartos manda impresion
					SIMUtil::notifica_elimina_domicilio($IDDomicilio);
				//endif;

				//borro domicilio
				//$sql_borra_domicilio = $dbo->query("Delete From Domicilio".$Version." Where IDDomicilio  = '".$IDDomicilio."'");
				$sql_borra_domicilio = $dbo->query("UPDATE Domicilio".$Version." SET IDEstadoDomicilio = '3' Where IDDomicilio  = '".$IDDomicilio."'");

				if($IDClub==20){ // Para Medellin guardo en tabla de ellos los productos borrados
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
					$sql_detalle="SELECT * FROM DomicilioDetalle Where IDDomicilio  = '".$IDDomicilio."' ";
					$r_detalle=$dbo->query($sql_detalle);
					$server = '190.0.53.38';
					// Connect to Sql server CASMPRESTRE MEDELLIN
					try {
							$hostname = $server;
							$port = "";
							$dbname = DBNAME_MEDELLIN;
							$username = DBUSER_MEDELLIN;
							$pw = DBPASS_MEDELLIN;
							$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
						} catch (PDOException $e) {
							//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
							echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
							exit;
						}


					while($row_detalle=$dbo->fetchArray($r_detalle)){
						$datos_prod = $dbo->fetchAll( "Producto", " IDProducto = '" . $detalle_datos["IDProducto"] . "' ", "array" );

								$doc=$datos_socio["NumeroDocumento"];
								$idprod=$datos_prod["IDProductoExterno"];
								$cant="-".$detalle_datos["Cantidad"];
								$fech=date("Y-m-d H:i:s");

								$sql = $dbh->query("INSERT INTO vapp_pedidos (ident_cliente,codigo_producto_pos,cantidad,fecha_envio,enviado)
																		VALUES($doc,$idprod,$cant,'".$fech."',1) ");


					}

				}


				//borro productos domicilio
				//$sql_borra_producto = $dbo->query("Delete From DomicilioDetalle".$Version." Where IDDomicilio  = '".$IDDomicilio."'");



				$respuesta["message"] = "Pedido eliminado correctamente";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
			endif;

		}
		else{
			$respuesta["message"] = "Error el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "9. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function get_configuracion_correspondencia($IDClub,$IDSocio){

			$dbo =& SIMDB::get();
			$response = array();


			$sql = "SELECT * FROM ConfiguracionCorrespondencia  WHERE IDClub = '".$IDClub."' ";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";
				while( $r = $dbo->fetchArray( $qry ) )
				{
						$configuracion["IDClub"] = $r["IDClub"];
						$configuracion["IconoPorEntregar"] = CLUB_ROOT.$r["IconoPorEntregar"];
						$configuracion["IconoEntregado"] = CLUB_ROOT.$r["IconoEntregado"];
						$configuracion["IconoEntregar"] = CLUB_ROOT.$r["IconoEntregar"];
						$configuracion["IconoRecibir"] = CLUB_ROOT.$r["IconoRecibir"];
						$configuracion["HabilitaRegistraTodos"] = $r["HabilitaRegistraTodos"];
						$configuracion["LabelBuscador"] = $r["LabelBuscador"];
						array_push($response, $configuracion);

				}//ednw hile
					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "Correspondencia no está activo";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;

		}// fin function

		function get_configuracion_votacion($IDClub,$IDSocio,$IDUsuario){

				$dbo =& SIMDB::get();
				$response = array();
				$configuracion["IDClub"] = $IDClub;
				$configuracion["LabelBotonResultados"] = "Ver Resultados";
				$configuracion["LabelBotonRefrescar"] = "Pulse para refrescar";
				$configuracion["BotonResultados"] = "S";
				//Busco el evento activo de la votacion
				$IDEvento = $dbo->getFields( "VotacionEvento" , "IDVotacionEvento" , "Activo = 'S' and IDClub = '".$IDClub."'" );
				$configuracion["URLResultados"] = URLROOT."plataform/screen/pantallavotacion.php?IDVotacionEvento=".$IDEvento."&IDClub=".$IDClub;
				array_push($response, $configuracion);
				$respuesta["message"] = "1 resultado encontrado";
				$respuesta["success"] = true;
				$respuesta["response"] = $response;


				return $respuesta;

			}// fin function

		function get_configuracion_clasificado($IDClub,$IDSocio){

				$dbo =& SIMDB::get();
				$response = array();


				$sql = "SELECT * FROM Club  WHERE IDClub = '".$IDClub."' ";
				$qry = $dbo->query( $sql );
				if( $dbo->rows( $qry ) > 0 )
				{
					$message = $dbo->rows( $qry ) . " Encontrados";
					while( $r = $dbo->fetchArray( $qry ) )
					{
							$configuracion["IDClub"] = $r["IDClub"];
							$configuracion["PermiteCrearClasificado"] = $r["CrearClasificado"];
							$configuracion["TipoCrearClasificado"] = $r["TipoCrearClasificado"];
							$configuracion["URLCLasificado"] = $r["URLCLasificado"];
							if($IDClub==49 || $IDClub==8){
								$configuracion["LabelIDCategoria"] = "Categoria Clasificado";
								$configuracion["LabelNombre"] = "Titulo a nombre de la publicación";
								$configuracion["LabelDescripcion"] = "¿Qué tiene tu producto?";
								$configuracion["LabelTelefono"] = "Teléfono de contacto";
								$configuracion["LabelEmail"] = "Email de contacto";
								$configuracion["LabelValor"] = "Meta de recaudo en números";
								$configuracion["LabelFechaInicio"] = "Fecha Inicio";
								$configuracion["LabelFechaFin"] = "FechaFin";
								$configuracion["LabelIDEstadoClasificado"] = "Estado de tu producto";

								$configuracion["LabelDetalleNombre"] = "";
								$configuracion["LabelDetalleValor"] = "Meta";
								$configuracion["LabelDetalleDescripcion"] = "Tiene:";

							}
							elseif($IDClub==72){
								$configuracion["LabelDescripcion"] = "Descripción";
								$configuracion["LabelNombre"] = "Nombre del producto o servicio";
								$configuracion["LabelDetalleNombre"] = "";
								$configuracion["LabelDetalleValor"] = " Precio ";
								$configuracion["LabelDetalleDescripcion"] = "Tiene:";
							}
							elseif($IDClub==34){
								$configuracion["LabelIDCategoria"] = "Categoría de tu producto";
								$configuracion["LabelNombre"] = "Nombre de tu producto";
								$configuracion["LabelDescripcion"] = "Detalle de servicios";
								$configuracion["LabelTelefono"] = "Teléfono de contacto";
								$configuracion["LabelEmail"] = "Mail de contacto";
								$configuracion["LabelValor"] = "Precio Referencial";
								$configuracion["LabelFechaInicio"] = "Fecha inicial";
								$configuracion["LabelFechaFin"] = "Fecha Final";
								$configuracion["LabelIDEstadoClasificado"] = "Estado de tu producto";

								$configuracion["LabelDetalleNombre"] = "";
								$configuracion["LabelDetalleValor"] = "Precio";
								$configuracion["LabelDetalleDescripcion"] = "Detalle de servicios:";
							}

							else{
								$configuracion["LabelIDCategoria"] = "";
								$configuracion["LabelNombre"] = "";
								$configuracion["LabelDescripcion"] = "";
								$configuracion["LabelTelefono"] = "";
								$configuracion["LabelEmail"] = "";
								$configuracion["LabelValor"] = "";
								$configuracion["LabelFechaInicio"] = "";
								$configuracion["LabelFechaFin"] = "";
								$configuracion["LabelIDEstadoClasificado"] = "";

								$configuracion["LabelDetalleNombre"] = "";
								$configuracion["LabelDetalleValor"] = "";
								$configuracion["LabelDetalleDescripcion"] = "";

							}



							array_push($response, $configuracion);

					}//ednw hile
						$respuesta["message"] = $message;
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
				}//End if
				else
				{
						$respuesta["message"] = "Correspondencia no está activo";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
				}//end else

				return $respuesta;

			}// fin function

			function get_configuracion_clasificado2($IDClub,$IDSocio){

					$dbo =& SIMDB::get();
					$response = array();


					$sql = "SELECT * FROM Club  WHERE IDClub = '".$IDClub."' ";
					$qry = $dbo->query( $sql );
					if( $dbo->rows( $qry ) > 0 )
					{
						$message = $dbo->rows( $qry ) . " Encontrados";
						while( $r = $dbo->fetchArray( $qry ) )
						{
								$configuracion["IDClub"] = $r["IDClub"];
								$configuracion["PermiteCrearClasificado"] = $r["CrearClasificado"];
								$configuracion["TipoCrearClasificado"] = $r["TipoCrearClasificado"];
								$configuracion["URLCLasificado"] = $r["URLCLasificado"];
								if($IDClub==25 || $IDClub==8){
									$configuracion["LabelIDCategoria"] = "Categoria";
									$configuracion["LabelNombre"] = "Nombre de la empresa / emprendimiento";
									$configuracion["LabelDescripcion"] = "Descripcion del producto";
									$configuracion["LabelIDEstadoClasificado"] = "Estado de tu producto";
									//Dinamicos por club
									$campo = array();
									$response_campo = array();
									$sql_campo="SELECT * FROM ClasificadoCampo WHERE IDClub = '" . $IDClub . "' AND Publicar = 'S' Order By 	Orden";
									$r_campo=$dbo->query($sql_campo);
									while($row_campo = $dbo->FetchArray($r_campo)):
											$campo["IDClasificadoCampo"]=$row_campo["IDClasificadoCampo"];
											$campo[ "TipoCampo" ] = $row_campo[ "TipoCampo" ];
											$campo[ "EtiquetaCampo" ] = $row_campo[ "EtiquetaCampo" ];
											$campo[ "Obligatorio" ] = $row_campo[ "Obligatorio" ];
											$campo[ "Valores" ] = $row_campo[ "Valores" ];
											$campo[ "Orden" ] = $row_campo[ "Orden" ];
											array_push( $response_campo, $campo );
									endwhile;
									$configuracion["Campos"] = $response_campo;
								}
								else{
									$configuracion["LabelIDCategoria"] = "";
									$configuracion["LabelNombre"] = "";
									$configuracion["LabelDescripcion"] = "";
									$configuracion["LabelTelefono"] = "";
									$configuracion["LabelEmail"] = "";
									$configuracion["LabelValor"] = "";
									$configuracion["LabelFechaInicio"] = "";
									$configuracion["LabelFechaFin"] = "";
									$configuracion["LabelIDEstadoClasificado"] = "";

									$configuracion["LabelDetalleNombre"] = "";
									$configuracion["LabelDetalleValor"] = "";
									$configuracion["LabelDetalleDescripcion"] = "";

								}



								array_push($response, $configuracion);

						}//ednw hile
							$respuesta["message"] = $message;
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}//End if
					else
					{
							$respuesta["message"] = "Correspondencia no está activo";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
					}//end else

					return $respuesta;

				}// fin function

			function get_configuracion_ofertas($IDClub,$IDSocio){

					$dbo =& SIMDB::get();
					$response = array();
					$array_tipo_contrato = SIMResources::$tipo_contrato;

					$sql = "SELECT * FROM Club  WHERE IDClub = '".$IDClub."' ";
					$qry = $dbo->query( $sql );
					if( $dbo->rows( $qry ) > 0 )
					{
						$message = $dbo->rows( $qry ) . " Encontrados";
						while( $r = $dbo->fetchArray( $qry ) )
						{
								$configuracion["IDClub"] = $r["IDClub"];

								//Tipo Contrato
								$response_tipo_contrato = array();
								if ( count( $array_tipo_contrato ) > 0 ):
									foreach ( $array_tipo_contrato as $nombre_tipo ):
										$dato_tipo_contrato["Valor"] = $nombre_tipo;

								array_push( $response_tipo_contrato, $dato_tipo_contrato );
								endforeach;
								endif;

								$configuracion["TipoContrato"] = $response_tipo_contrato;

								$response_industria = array();
								$sql_otros = "SELECT * From Industria Where Publicar = 'S'";
								$result_otros = $dbo->query( $sql_otros );
								while ( $row_otros = $dbo->fetchArray( $result_otros ) ):
									$array_otros[ "IDIndustria" ] =  $row_otros[ "IDIndustria" ];
									$array_otros[ "Valor" ] = $row_otros[ "Nombre" ];
									array_push( $response_industria, $array_otros );
								endwhile;


								$configuracion["Industrias"] = $response_industria;
								array_push($response, $configuracion);

						}//ednw hile
							$respuesta["message"] = $message;
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}//End if
					else
					{
							$respuesta["message"] = "Ofertas no está activo";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
					}//end else

					return $respuesta;

				}// fin function


				function set_oferta($IDClub,$IDSocio,$IDIndustria,$TipoContrato,$NombreEmpresa,$PublicarEmpresa,$Cargo,$Ciudad,$NombreEncargado,$CorreoContacto,$DescripcionCargo,$ComentarioAdicional,$FechaInicio,$FechaFin)
				{
					$dbo =& SIMDB::get();
					if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $IDIndustria ) && !empty( $NombreEmpresa ) && !empty( $PublicarEmpresa ) && !empty( $Cargo ) ){

						//verifico que el socio exista y pertenezca al club
						$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

						if (!empty($id_socio)){

							$sql_oferta = $dbo->query("INSERT INTO Oferta (IDSocio	, IDIndustria, IDClub, IDEstadoOferta, TipoContrato, NombreEmpresa, PublicarEmpresa, Cargo, Ciudad, NombreEncargado, CorreoContacto, DescripcionCargo, ComentarioAdicional, FechaInicio, FechaFin, UsuarioTrCr, FechaTrCr	)
																				Values ('".$IDSocio."','".$IDIndustria."','".$IDClub."','5','".$TipoContrato."','".$NombreEmpresa."','".$PublicarEmpresa."','".$Cargo."','".$Ciudad."','".$NombreEncargado."','".$CorreoContacto."','".$DescripcionCargo."','".$ComentarioAdicional."'
																									,'".$FechaInicio."','".$FechaFin."','App',NOW())");

							$id_oferta = $dbo->lastID();


							$respuesta["message"] = "Guardado con exito";
							$respuesta["success"] = true;
							$respuesta["response"] = NULL;

						}
						else{
							$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

					}
					else{
						$respuesta["message"] = "O1. Atencion faltan parametros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}

					return $respuesta;

					}

					function set_edita_oferta($IDClub,$IDOferta,$IDEstadoOferta,$IDSocio,$IDIndustria,$TipoContrato,$NombreEmpresa,$PublicarEmpresa,$Cargo,$Ciudad,$NombreEncargado,$CorreoContacto,$DescripcionCargo,$ComentarioAdicional,$FechaInicio,$FechaFin)
					{
						$dbo =& SIMDB::get();
						if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDOferta )  && !empty( $IDIndustria ) && !empty( $NombreEmpresa ) && !empty( $PublicarEmpresa ) && !empty( $Cargo ) ){

							//verifico que el socio exista y pertenezca al club
							$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

							if (!empty($id_socio)){

								$sql_oferta="UPDATE Oferta
															SET  IDIndustria='".$IDIndustria."', IDEstadoOferta='".$IDEstadoOferta."', TipoContrato='".$TipoContrato."', NombreEmpresa='".$NombreEmpresa."',
																		PublicarEmpresa='".$PublicarEmpresa."', Cargo='".$Cargo."', Ciudad='".$Ciudad."', NombreEncargado='".$NombreEncargado."', CorreoContacto='".$CorreoContacto."',
																		DescripcionCargo='".$DescripcionCargo."', ComentarioAdicional='".$ComentarioAdicional."', FechaInicio='".$FechaInicio."', FechaFin='".$FechaFin."',
																		UsuarioTrCr='".$IDSocio."', FechaTrCr=NOW()
															WHERE IDOferta = '".$IDOferta."'";

								$dbo->query($sql_oferta);


								$respuesta["message"] = "Guardado con exito";
								$respuesta["success"] = true;
								$respuesta["response"] = NULL;

							}
							else{
								$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
							}

						}
						else{
							$respuesta["message"] = "O1. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

						}

					function set_aplicar_oferta($IDClub,$IDSocio,$IDOferta,$NombreRecomendado,$Telefono,$CorreoElectronico,$File="")
					{
						$dbo =& SIMDB::get();
						$datos_oferta = $dbo->fetchAll( "Oferta", " IDOferta = '" . $IDOferta . "' ", "array" );
						if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $IDOferta ) && !empty( $Telefono ) && !empty( $CorreoElectronico ) ){

							//verifico que el socio exista y pertenezca al club
							$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );
							if (!empty($id_socio)){
								if(isset($File)){

										$campo_foto = "Archivo";
										$files =  SIMFile::upload( $File["Archivo"] , OFERTA_DIR , "IMAGE" );
										if( empty( $files ) && !empty( $File["Archivo"]["name"] ) ):
											$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
											$respuesta["success"] = false;
											$respuesta["response"] = NULL;
											return $respuesta;
										endif;
										$Archivo = $files[0]["innername"];

								}//end if

								$sql_candidato = $dbo->query("INSERT INTO OfertaCandidato (IDOferta,IDSocio	, NombreRecomendado, Telefono, CorreoElectronico, Archivo, UsuarioTrCr, FechaTrCr)
																 Values ('".$IDOferta."', '".$IDSocio."','".$NombreRecomendado."','".$Telefono."','".$CorreoElectronico."','".$Archivo."','App',NOW())");

								$id_candidato = $dbo->lastID();

								//SIMUtil::notificar_nueva_aplicacion_oferta($id_candidato);

								$Mensaje = "Se ha creado un nueva aplicacion a una oferta laboral : " . $datos_oferta["Cargo"];
								//Consulto que socio se les envia la notificacion
								$id_socio_oferta = $dbo->getFields( "Oferta" , "IDSocio" , "IDOferta = '" . $IDOferta . "' and IDClub = '".$IDClub."'" );
								if((int)$id_socio_oferta>0):
									SIMUtil::enviar_notificacion_push_general($IDClub,$id_socio_oferta,$Mensaje);
									SIMUtil::enviar_oferta($IDOferta,$id_candidato);
								endif;

								$respuesta["message"] = "Guardado con exito";
								$respuesta["success"] = true;
								$respuesta["response"] = NULL;

							}
							else{
								$respuesta["message"] = "O3.Atencion el socio no existe o no pertenece al club";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
							}

						}
						else{
							$respuesta["message"] = "O22. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

						}

					function set_clasificado($IDClub,$IDSocio,$IDCategoria,$Nombre,$Descripcion,$Telefono,$Email,$Valor,$FechaInicio,$FechaFin,$File="")
					{
						$dbo =& SIMDB::get();

						if($FechaInicio=="" || $FechaFin==""){
							$respuesta["message"] = "Las fechas son obligatorias";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						}

						if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) && !empty( $Telefono ) ){

							//verifico que el socio exista y pertenezca al club
							$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

							if (!empty($id_socio)){


								if(isset($File)){

									for($i_foto = 1; $i_foto<=6;$i_foto++):
										$campo_foto = "Foto".$i_foto;
										$files =  SIMFile::upload( $File[$campo_foto] , CLASIFICADOS_DIR , "IMAGE" );
										if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
											$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
											$respuesta["success"] = false;
											$respuesta["response"] = NULL;
											return $respuesta;
										endif;
										$$campo_foto = $files[0]["innername"];
									endfor;

								}//end if

								//valido que la fecha sea maximo de 1 mes
								$fecha_actual = date('Y-m-j');
								$fecha_maxima = strtotime ( '+1 month' , strtotime ( $fecha_actual ) ) ;
								$fecha_fin_clasif = strtotime($FechaFin);

								if($fecha_fin_clasif>$fecha_maxima):
									$FechaFin = date ( 'Y-m-d' , $fecha_maxima );
								endif;


								$sql_clasificado = $dbo->query("Insert Into Clasificado (IDSocio	, IDSeccionClasificados, IDClub, IDEstadoClasificado, Nombre, Descripcion, Telefono, Email, Valor, FechaInicio, FechaFin, Foto1, Foto2, Foto3, Foto4, Foto5, Foto6, UsuarioTrCr, FechaTrCr	)
																 Values ('".$IDSocio."','".$IDCategoria."','".$IDClub."','5','".$Nombre."','".$Descripcion."','".$Telefono."','".$Email."','".$Valor."','".$FechaInicio."','".$FechaFin."','".$Foto1."','".$Foto2."','".$Foto3."','".$Foto4."','".$Foto5."','".$Foto6."','App',NOW())");

								$id_clasificado = $dbo->lastID();

								SIMUtil::notificar_nuevo_clasificado($id_clasificado);

								/*
								$Mensaje = "Se ha creado un nuevo clasificado: " . $Nombre;
								//Consulto que socio se les envia la notificacion
								$sql_socio_clasif = "Select S.IDSocio
													From Socio S, SocioSeccionClasificados SS
													Where S.IDSocio=SS.IDSocio And SS.IDSeccionClasificados = '".$IDCategoria."'";
								$result_socio_clasif =	$dbo->query($sql_socio_clasif);
								while($row_socio_clasif = $dbo->fetchArray($result_socio_clasif)):
									$array_id_socio[]=$row_socio_clasif["IDSocio"];
								endwhile;
								if(count($array_id_socio)>0):
									$IDSocio = implode(",",$array_id_socio);
									SIMUtil::enviar_notificacion_push_clasificado($IDClub,$IDSocio,$Mensaje,$id_clasificado);
								endif;
								*/

								$respuesta["message"] = "Gracias por usar el app su clasificado está en revisión y será publicado en las próximas horas.";
								$respuesta["success"] = true;
								$respuesta["response"] = NULL;

							}
							else{
								$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
							}

						}
						else{
							$respuesta["message"] = "22. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

						}

						function set_clasificado2($IDClub,$IDSocio,$IDCategoria,$Nombre,$Descripcion,$Respuestas,$File="")
						{
							$dbo =& SIMDB::get();
							if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) ){

								//verifico que el socio exista y pertenezca al club
								$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

								if (!empty($id_socio)){


									if(isset($File)){

										for($i_foto = 1; $i_foto<=6;$i_foto++):
											$campo_foto = "Foto".$i_foto;
											$files =  SIMFile::upload( $File[$campo_foto] , CLASIFICADOS_DIR , "IMAGE" );
											if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
												$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
												$respuesta["success"] = false;
												$respuesta["response"] = NULL;
												return $respuesta;
											endif;
											$$campo_foto = $files[0]["innername"];
										endfor;

									}//end if

									//valido que la fecha sea maximo de 1 mes
									$fecha_actual = date('Y-m-j');
									$fecha_maxima = strtotime ( '+1 month' , strtotime ( $fecha_actual ) ) ;
									$FechaFin=$fecha_maxima;
									$fecha_fin_clasif = strtotime($FechaFin);

									if($fecha_fin_clasif>$fecha_maxima):
										$FechaFin = date ( 'Y-m-d' , $fecha_maxima );
									endif;


									$sql_clasificado = $dbo->query("Insert Into Clasificado2 (IDSocio	, IDSeccionClasificados, IDClub, IDEstadoClasificado, Nombre, Descripcion, Foto1, Foto2, Foto3, Foto4, Foto5, Foto6, UsuarioTrCr, FechaTrCr	)
																	 Values ('".$IDSocio."','".$IDCategoria."','".$IDClub."','5','".$Nombre."','".$Descripcion."','".$Foto1."','".$Foto2."','".$Foto3."','".$Foto4."','".$Foto5."','".$Foto6."','App',NOW())");

									$id_clasificado = $dbo->lastID();

									//Inserto el valor de los campos dinamicos
									$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
									$datos_respuesta= json_decode($Respuestas, true);
									if (count($datos_respuesta)>0):
										foreach($datos_respuesta as $detalle_respuesta):
											$sql_datos_form = $dbo->query("INSERT INTO ClasificadoRespuesta (IDClasificado, IDSocio, IDClasificadoCampo, Valor, FechaTrCr) Values ('".$id_clasificado."','". $IDSocio ."','". $detalle_respuesta["IDClasificadoCampo"]."','".$detalle_respuesta["Valor"]."',NOW())");
										endforeach;
									endif;



									//SIMUtil::notificar_nuevo_clasificado2($id_clasificado);


									$respuesta["message"] = "Guardado con exito";
									$respuesta["success"] = true;
									$respuesta["response"] = NULL;

								}
								else{
									$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
									$respuesta["success"] = false;
									$respuesta["response"] = NULL;
								}

							}
							else{
								$respuesta["message"] = "22. Atencion faltan parametros";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
							}

							return $respuesta;

							}


					function get_ofertas( $IDClub , $IDSocio, $IDEstadoOferta)
					{

						$dbo =& SIMDB::get();

						/*
						//Socio
						if (!empty($IDSocio)):
							$array_condiciones[] = " IDSocio  = '".$IDSocio."' ";
						else:
							$array_condiciones[] = " IDSocio  <> '".$IDSocio."' ";
						endif;

						if (!empty($IDEstadoOferta)):
							$array_condiciones[] = " IDEstadoOferta  = '".$IDEstadoClasificado."' ";
						else:
							$array_condiciones[] = " IDEstadoOferta  > 0 ";
						endif;
						*/

						/*
						if (!empty($Tipo)):
							$sql_aplicacion="SELECT IDOferta FROM OfertaCandidato WHERE IDSocio = '".$IDSocio."'";
							$r_aplicacion=$dbo->query($sql_aplicacion);
							while($row_aplicacion=$dbo->fetchArray($r_aplicacion)){
								$array_id_oferta[]=$row_aplicacion["IDOferta"];
							}
							if(count($array_id_oferta)>0){
								$id_oferta_aplicacion=implode(",",$array_id_oferta);
								$array_condiciones[] = " IDOferta  in (".$id_oferta_aplicacion.")  ";
							}
							else{
								$array_condiciones[] = " IDOferta  = 0 ";
							}

							$array_condiciones[] = " IDEstadoOferta  = '".$IDEstadoClasificado."' ";
						else:
							$array_condiciones[] = " IDEstadoOferta  > 0 ";
						endif;
						*/


						if (count($array_condiciones)>0):
							$condiciones = implode (" and " , $array_condiciones);
							$condiciones_oferta = " and " .$condiciones;
						endif;



						$response = array();
						$sql = "SELECT * FROM Oferta WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and IDClub = '".$IDClub."'" . $condiciones_oferta ." ORDER BY FechaInicio DESC";
						$qry = $dbo->query( $sql );
						if( $dbo->rows( $qry ) > 0 )
						{
							$message = $dbo->rows( $qry ) . " Encontrados";
							while( $r = $dbo->fetchArray( $qry ) )
							{
								$IDTipoOferta=1;
								if($r["IDSocio"]==$IDSocio){
									$IDTipoOferta=2; // Es la oferta creada por el socio
								}
								else{
									$IDTipoOferta=1; // Es una oferta de otro socio
								}

								$sql_aplicacion="SELECT IDOferta FROM OfertaCandidato WHERE IDSocio = '".$IDSocio."' and IDOferta = '".$r["IDOferta"]."'";
								$r_aplicacion=$dbo->query($sql_aplicacion);
								while($row_aplicacion=$dbo->fetchArray($r_aplicacion)){
									$IDTipoOferta=3; // oferta en al que aplico el socio
								}




								$oferta["IDOferta"] = $r["IDOferta"];
								$oferta["IDSocio"] = $r["IDSocio"];
								$oferta["Industria"] = utf8_encode($dbo->getFields( "Industria" , "Nombre" , "IDIndustria = '".$r["IDIndustria"]."'" ));
								$oferta["IDEstadoOferta"] = $r["IDEstadoOferta"];
								$oferta["EstadoOferta"] = utf8_encode($dbo->getFields( "EstadoOferta" , "Nombre" , "IDEstadoOferta = '".$r["IDEstadoOferta"]."'" ));
								$oferta["TipoContrato"] = $r["TipoContrato"];
								$oferta["NombreEmpresa"] = $r["NombreEmpresa"];
								$oferta["PublicarEmpresa"] = $r["PublicarEmpresa"];
								$oferta["Cargo"] = $r["Cargo"];
								$oferta["Ciudad"] = $r["Ciudad"];
								$oferta["NombreEncargado"] = $r["NombreEncargado"];
								$oferta["CorreoContacto"] = $r["CorreoContacto"];
								$oferta["DescripcionCargo"] = $r["DescripcionCargo"];
								$oferta["ComentarioAdicional"] = $r["ComentarioAdicional"];
								$oferta["FechaInicio"] = $r["FechaInicio"];
								$oferta["FechaFin"] = $r["FechaFin"];
								$oferta["IDTipoOferta"] = $IDTipoOferta;


								$response_candidatos = array();
								$sql_candidatos = "Select * From OfertaCandidato Where IDOferta = '".$r["IDOferta"]."' Order by FechaTrCr Desc";
								$result_candidatos = $dbo->query($sql_candidatos);
								while($row_candidatos = $dbo->fetchArray($result_candidatos)):
									$array_candidatos["IDOfertaCandidato"] = $row_candidatos["IDOfertaCandidato"];
									$array_candidatos["IDOferta"] = $row_candidatos["IDOferta"];
									$array_candidatos["IDSocio"] = $row_candidatos["IDSocio"];
									$array_candidatos["Socio"] = utf8_encode($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '".$row_candidatos["IDSocio"]."'" ) . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '".$row_candidatos["IDSocio"]."'" ));
									$array_candidatos["NombreRecomendado"] = $row_candidatos["NombreRecomendado"];
									$array_candidatos["Telefono"] = $row_candidatos["Telefono"];
									$array_candidatos["CorreoElectronico"] = $row_candidatos["CorreoElectronico"];

										if(!empty($row_candidatos["Archivo"]))
											$archivo=OFERTA_ROOT . $row_candidatos["Archivo"];
										else
											$archivo="";

									$array_candidatos["Archivo"] = $archivo;
									$array_candidatos["FechaCreacion"] = $row_candidatos["FechaTrCr"];
									array_push($response_candidatos, $array_candidatos);
								endwhile;


								$oferta["Aplicaciones"] = $response_candidatos;


								array_push($response, $oferta);

							}//ednw hile
								$respuesta["message"] = $message;
								$respuesta["success"] = true;
								$respuesta["response"] = $response;
						}//End if
						else
						{
								$respuesta["message"] = "No se encontraron registros";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
						}//end else

						return $respuesta;

					}// fin function



		function get_puertas( $IDClub , $Tag="")
			{

				$dbo =& SIMDB::get();

			// Tag
				if (!empty($Tag)):
					$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
				endif;


				if (count($array_condiciones)>0):
					$condiciones = implode (" and " , $array_condiciones);
					$condiciones_puerta = " and " .$condiciones;
				endif;



				$response = array();
				$response_lista_producto = array();
				$sql = "SELECT * FROM PuertaUbicacion WHERE Publicar = 'S' and IDClub = '".$IDClub."'" . $condiciones_puerta ." ORDER BY Nombre ";
				$qry = $dbo->query( $sql );
				if( $dbo->rows( $qry ) > 0 )
				{
					$message = $dbo->rows( $qry ) . " Encontrados";

					while( $r = $dbo->fetchArray( $qry ) )
					{
						$ubicacion_puerta["IDClub"] = $r["IDClub"];
						$ubicacion_puerta["IDPuertaUbicacion"] = $r["IDPuertaUbicacion"];
						$ubicacion_puerta["Nombre"] = utf8_encode($r["Nombre"]);
						$ubicacion_puerta["Descripcion"] = utf8_encode($r["Descripcion"]);
						//Busco las puertas de esa ubicacion
						$response_puertas = array();
						$sql_puerta = "Select * From Puerta Where IDPuertaUbicacion = '".$r["IDPuertaUbicacion"]."' and Publicar = 'S' " ;
						$result_puerta = $dbo->query($sql_puerta);
						while($row_puerta = $dbo->fetchArray($result_puerta)):

								$puerta["IDPuerta"] = $row_puerta["IDPuerta"];
								$puerta["IDPuertaUbicacion"] = $row_puerta["IDPuertaUbicacion"];
								$puerta["Descripcion"] = utf8_encode($row_puerta["Descripcion"]);
								$puerta["CodigoPuerta"] = $row_puerta["CodigoPuerta"];
								$puerta["CodigoDispositivo"] = utf8_encode($row_puerta["CodigoDispositivo"]);
								$puerta["PinEquipo"] = $row_puerta["PinEquipo"];
								$puerta["TiempoApertura"] = $row_puerta["TiempoApertura"];
								$puerta["TiempoEspera"] = $row_puerta["TiempoEspera"];
								$puerta["IdentificadorCliente"] = $row_puerta["IdentificadorCliente"];
								$puerta["Publicar"] = $row_puerta["Publicar"];
								array_push($response_puertas, $puerta);

						endwhile;

						$ubicacion_puerta["Puertas"] = $response_puertas;
						array_push($response, $ubicacion_puerta);

					}//ednw hile

						$respuesta["message"] = $message;
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
				}//End if
				else
				{
						$respuesta["message"] = "No se encontraron registros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
				}//end else

				return $respuesta;

			}// fin function



			function set_abrir_puerta($IDClub,$IDSocio,$IDPuerta)
			{
				$dbo =& SIMDB::get();
				if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDPuerta )){

						$datos_puerta = $dbo->fetchAll( "Puerta", " IDPuerta = '" . $IDPuerta . "' ", "array" );
						if($datos_puerta["IDPuerta"]>0){

								$sql_log_apertura = $dbo->query("INSERT INTO LogAperturaPuerta(IDClub,IDPuerta,IDSocio,UsuarioTrCr,FechaTrCr) VALUES ('".$IDClub."', '".$IDPuerta."', '".$IDSocio."','Socio App', NOW() ) ");


								$curl = curl_init();
								curl_setopt_array($curl, array(
									CURLOPT_PORT => "18083",
									CURLOPT_URL => "http://broker.miclubapp.com:18083/api/v4/mqtt/publish",
									CURLOPT_RETURNTRANSFER => true,
									CURLOPT_ENCODING => "",
									CURLOPT_MAXREDIRS => 10,
									CURLOPT_TIMEOUT => 30,
									CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
									CURLOPT_CUSTOMREQUEST => "POST",
									CURLOPT_POSTFIELDS => "{\"qos\":1,\"retain\": false, \"topic\":\"".$datos_puerta["IDClub"]."/".$datos_puerta["CodigoDispositivo"]."/commando\", \"payload\":\"{\\\"cmd\\\":\\\"activar\\\",\\\"pin\\\":\\\"".$datos_puerta["PinEquipo"]."\\\",\\\"tactivo\\\":\\\"".$datos_puerta["TiempoApertura"]."\\\",\\\"tespera\\\":\\\"".$datos_puerta["TiempoEspera"]."\\\"}\" , \"client_id\": \"".$datos_puerta["IdentificadorCliente"]."\"}",
									CURLOPT_HTTPHEADER => array(
										"Accept: application/json",
										"Authorization: Basic bWFwcHM6MTIzNDU2Nw==",
										"Content-Type: application/json"
									),
								));

								$response = curl_exec($curl);

								$err = curl_error($curl);
								curl_close($curl);






								if ($err) {
									$respuesta["message"] = "Problema al abrir la puerta";
									$respuesta["success"] = true;
									$respuesta["response"] = NULL;
									return $respuesta;
								}

								$array_respuesta = json_decode($response);
								if($array_respuesta->code==0){
									$respuesta["message"] = "Puerta Abierta";
									$respuesta["success"] = true;
									$respuesta["response"] = NULL;
								}
								else{
									$respuesta["message"] = "Problema al abrir la puerta";
									$respuesta["success"] = true;
									$respuesta["response"] = NULL;
									return $respuesta;
								}

							}
							else{
								$respuesta["message"] = "La puerta no existe";
								$respuesta["success"] = true;
								$respuesta["response"] = NULL;

							}
				}
				else{
					$respuesta["message"] = "P1. Atencion faltan parametros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}

				return $respuesta;

				}


			function get_configuracion_objetos_perdidos($IDClub,$IDSocio){

					$dbo =& SIMDB::get();
					$response = array();


					$sql = "SELECT * FROM Club  WHERE IDClub = '".$IDClub."' ";
					$qry = $dbo->query( $sql );
					if( $dbo->rows( $qry ) > 0 )
					{
						$message = $dbo->rows( $qry ) . " Encontrados";
						while( $r = $dbo->fetchArray( $qry ) )
						{
								$configuracion["IDClub"] = $r["IDClub"];
								$configuracion["LabelBotonSolicitarEntrega"] = "Solicitar entrega";
								$configuracion["LabelConfirmacionEntrega"] = "Estas seguro que este objeto perdido es tuyo?";
								$configuracion["LabelBotonMisSolicitudes"] = "Mis Solicitudes";

								$tipodoc=array();
								$response_tipodoc=array();
								$sql_tipodoc="SELECT * FROM TipoDocumento WHERE 1 ";
								$r_tipodoc=$dbo->query($sql_tipodoc);
								while($row_tipodoc=$dbo->fetchArray($r_tipodoc)){
									$tipodoc["IDTipoDocumento"] = $row_tipodoc["IDTipoDocumento"];
									$tipodoc["Nombre"] = $row_tipodoc["Nombre"];
									array_push($response_tipodoc, $tipodoc);

								}

								$configuracion["TipoDocumento"] = $response_tipodoc;

								$estados_obj=array();
								$response_estado_objeto=array();
								$sql_estados_obj = "SELECT * FROM EstadoObjetosPerdidos WHERE Publicar = 'S' ORDER BY Nombre";
								$r_estados_obj=$dbo->query($sql_estados_obj
							);
								while($row_estados_obj=$dbo->fetchArray($r_estados_obj)){
									$estados_obj["IDEstadoObjetosPerdidos"] = $row_estados_obj["IDEstadoObjetosPerdidos"];
									$estados_obj["Nombre"] = $row_estados_obj["Nombre"];
									array_push($response_estado_objeto, $estados_obj);

								}

								$configuracion["EstadoObjetosPerdidos"] = $response_estado_objeto;

								array_push($response, $configuracion);

						}//ednw hile
							$respuesta["message"] = $message;
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}//End if
					else
					{
							$respuesta["message"] = "Correspondencia no está activo";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
					}//end else

					return $respuesta;

				}// fin function

		function get_configuracion_noticias($IDClub,$IDSocio){

				$dbo =& SIMDB::get();
				$response = array();
				$sql_modulo="Select IDModulo,Titulo From ClubModulo Where IDClub = '".$IDClub."' and IDModulo in (3,4,5,66,81,76)";
				$r_modulo=$dbo->query($sql_modulo);
				while($row_modulo=$dbo->fetchArray($r_modulo)){
						$array_modulo[$row_modulo["IDModulo"]]=$row_modulo["Titulo"];
				}

				$configuracion["IDClub"] = $IDClub;


				$configuracion["IDClub"] = $IDClub;
				if(empty($array_modulo["3"]))
					$configuracion["MisNoticias"] = "Mis Noticias";
				else
					$configuracion["MisNoticias"] = $array_modulo["3"];

				if(empty($array_modulo["66"]))
					$configuracion["MisNoticias2"] = "Mis Noticias";
				else
					$configuracion["MisNoticias2"] = $array_modulo["66"];

					if(empty($array_modulo["81"]))
						$configuracion["MisNoticias3"] = "Mis Noticias";
					else
						$configuracion["MisNoticias3"] = $array_modulo["81"];

				if(empty($array_modulo["4"]))
					$configuracion["MisEventos"] = "Mis Eventos";
				else
					$configuracion["MisEventos"] = $array_modulo["4"];

					if(empty($array_modulo["76"]))
						$configuracion["MisEventos2"] = "Mis Eventos";
					else
						$configuracion["MisEventos2"] = $array_modulo["76"];

				if(empty($array_modulo["5"]))
					$configuracion["MisGalerias"] = "Mis Galerias";
				else
					$configuracion["MisGalerias"] = $array_modulo["5"];


					$TipoImagenNoticias = $dbo->getFields( "Club" , "TipoImagenNoticias" , "IDClub = '".$IDClub."'" );
					$configuracion["TipoImagenNoticias"] = $TipoImagenNoticias;
					$configuracion["TipoImagenNoticias2"] = $TipoImagenNoticias;
					$configuracion["TipoImagenNoticias3"] = $TipoImagenNoticias;

				array_push($response, $configuracion);

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;

				return $respuesta;

			}// fin function

	function get_configuracion_domicilio( $IDClub , $IDSocio, $Fecha = "", $Version="")
	{
		if(empty($Fecha)):
			$Fecha = date("Y-m-d");
			$dia_fecha = date("w");
		else:
			$dia_fecha = date("w",$Fecha);
		endif;

		$dbo =& SIMDB::get();
		$response = array();

		$sql = "SELECT * FROM  ClubFechaCierre WHERE Fecha = '".$Fecha."' and IDClub = '".$IDClub."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$r_cierre = $dbo->fetchArray($qry);
			$mensaje_respuesta = "Lo sentimos club cerrado el dia: " . $Fecha ." Motivo: ". $r_cierre["Motivo"];
			$respuesta["message"] = $mensaje_respuesta;
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
			return $respuesta;
		}//end else




		$sql = "SELECT * FROM ConfiguracionDomicilios".$Version."  WHERE Activo = 'S' and IDClub = '".$IDClub."' and Dias like '%".$dia_fecha."|%' ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );

					$configuracion["IDConfiguracionDomicilios"] = $r["IDConfiguracionDomicilios"];
					$configuracion["IDClub"] = $r["IDClub"];
					$configuracion["HoraInicioEntrega"] = $r["HoraInicioEntrega"];
					$configuracion["HoraFinEntrega"] = $r["HoraFinEntrega"];
					$configuracion["TiempoMinimoPedido"] = $r["TiempoMinimoPedido"];
					$configuracion["IntervaloEntrega"] = $r["IntervaloEntrega"];
					$configuracion["TiempoMinimoCancelacion"] = $r["TiempoMinimoCancelacion"];
					$configuracion["TiempoConfirmacion"] = $r["TiempoConfirmacion"];
					$configuracion["Celular"] = $datos_socio["Celular"];
					$configuracion["LabelDomicilios"] = $r["LabelDomicilios"];

					$configuracion["Direccion"] = $datos_socio["Direccion"];

					//$configuracion["Direccion"] = "";

					$configuracion["ObligatorioCelular"] = $r["ObligatorioCelular"];
					$configuracion["ObligatorioDireccion"] = $r["ObligatorioDireccion"];
					$configuracion["CobroDomicilio"] = $r["CobroDomicilio"];
					$configuracion["ValorDomicilio"] = $r["ValorDomicilio"];
					$configuracion["CobroDomicilioMenorA"] = $r["CobroDomicilioMenorA"];
					$configuracion["SolicitaFechaDomicilio"] = $r["SolicitaFechaDomicilio"];
					$configuracion["SolicitaHoraDomicilio"] = $r["SolicitaHoraDomicilio"];
					$configuracion["SolicitaFormaPagoDomicilio"] = $r["SolicitaFormaPagoDomicilio"];
					$configuracion["PedidoMinimo"] = $r["PedidoMinimo"];
					$array_forma_pago=explode(",",$r["FormaPago"]);
					$response_forma_pago = array();
					foreach($array_forma_pago as $valor_forma){
								$forma_pago["FormaPago"] = $valor_forma;
								array_push($response_forma_pago, $forma_pago);

					}
					$configuracion["FormaPago"] = $response_forma_pago;
					$configuracion["MostrarDecimal"] = $r["MostrarDecimal"];

					//Pagos online
					//Tipos de pagos recibidos
					$response_tipo_pago = array();
					$sql_tipo_pago = "SELECT * FROM DomicilioTipoPago".$Version." DTP, TipoPago TP  WHERE DTP.IDTipoPago = TP.IDTipoPago and IDConfiguracionDomicilio = '" . $r["IDConfiguracionDomicilios"] . "' ";
					$qry_tipo_pago = $dbo->query( $sql_tipo_pago );
					if ( $dbo->rows( $qry_tipo_pago ) > 0 ) {
						$evento[ "PagoReserva" ] = "S";
						while ( $r_tipo_pago = $dbo->fetchArray( $qry_tipo_pago ) ) {
							$tipopago[ "IDClub" ] = $IDClub;
							$tipopago[ "IDConfiguracionDomicilio" ] = $r_tipo_pago[ "IDConfiguracionDomicilio" ];
							$tipopago[ "IDTipoPago" ] = $r_tipo_pago[ "IDTipoPago" ];
							$tipopago[ "PasarelaPago" ] = $r_tipo_pago[ "PasarelaPago" ];
							$tipopago[ "Action" ] = SIMUtil::obtener_accion_pasarela($r_tipo_pago[ "IDTipoPago" ],$IDClub);
							$tipopago[ "Nombre" ] = $r_tipo_pago[ "Nombre" ];
							$tipopago[ "ConRespuesta" ] = $r_tipo_pago[ "ConRespuesta" ];

							$imagen="";
							//Para el condado y es pagos online muestro la imagen de placetopay
							if($id_club==51){
								switch($r_tipo_pago[ "IDTipoPago" ]){
									case "1":
										$imagen="https://www.miclubapp.com/file/noticia/641923_placetopay.png";
									break;
									case "2":
										$imagen="https://www.miclubapp.com/file/noticia/icono-bono.png";
									break;
									case "3":
										$imagen="https://www.miclubapp.com/file/noticia/abonoc.png";
									break;
								}
						}

							$tipopago[ "Imagen" ] = $imagen;
							array_push( $response_tipo_pago, $tipopago );

						} //end while
						$configuracion[ "TipoPago" ] = $response_tipo_pago;
						$configuracion[ "PagoReserva" ] = "S";
					} else {
						$configuracion[ "PagoReserva" ] = "N";
					}


					$configuracion["TextoDomicilio"] = $r["TextoDomicilio"];
					array_push($response, $configuracion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				if($IDClub==32){ //Bijao
				$respuesta["message"] = "El servicio de domicilio está disponible fines de semana y temporadas";
				}
				else{
					$respuesta["message"] = "El servicio de Domicilio no está activo el dia de hoy";
				}
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_fechas_domicilio( $IDClub, $Version="")
	{

		$dbo =& SIMDB::get();
		$response = array();

		$fecha_actual = date('Y-m-j');
		$fecha_final = strtotime ( '+120 day' , strtotime ( $fecha_actual ) ) ;
		$fecha_final = date ( 'Y-m-j' , $fecha_final );
		$fechaInicio=strtotime($fecha_actual );
		$fechaFin=strtotime($fecha_final );
		$FechahoraActual=date("Y-m-d H:i:s");
		$FechahoraPermitida=date("Y-m-d 19:00:00");

		//Especial rancho san francisco
		if($IDClub==34){
			if(strtotime($FechahoraActual) <= strtotime($FechahoraPermitida))
				$suma_dia=1;
			else
				$suma_dia=2;

				$fechaInicio=strtotime($fecha_actual."+ ".$suma_dia." days");
		}

		if($IDClub==23 && $Version==2){
				$fechaInicio=strtotime($fecha_actual);
				$fechaFin=strtotime($fecha_actual);
		}


		$contador = 1;
		$primera_fecha = 1;
		$flag_disponible_hoy=0;

		for($i=$fechaInicio; $i<=$fechaFin; $i+=86400){
			$fecha_validar = date("Y-m-d", $i);
			$fecha_fin_validar = date("Y-m-d", $fechaFin);
			//Consulto la disponibilidad en este dia
			$dia_semana= date('w', strtotime($fecha_validar));
			$sql_dispo_elemento_gral = "Select * From ConfiguracionDomicilios".$Version." Where Dias like '%".$dia_semana."|%' and Activo = 'S' and IDClub = '".$IDClub."' Order By IDConfiguracionDomicilios Desc Limit 1";
			$qry_disponibilidad = $dbo->query($sql_dispo_elemento_gral);
			$r_disponibilidad = $dbo->fetchArray($qry_disponibilidad);
			$fecha_cierre=0;
			$sql = "SELECT * FROM  ClubFechaCierre WHERE Fecha = '".date("Y-m-d",$i)."' and IDClub = '".$IDClub."'";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$fecha_cierre=1;
			}//end else

			// si no permite la fecha de hoy no la muestro
			if($r_disponibilidad["PedidoMismoDia"]=="N" && strtotime($fecha_validar)==strtotime($fecha_actual)){
				$fecha_cierre=1;
			}


				if($IDClub==34 && $dia_semana == 1){
						$fecha_cierre=1;
				}

				//Especial arrayanes solo fecha de entrega martes - jueves y sabado
				if($IDClub==11 && ($dia_semana == 1 || $dia_semana == 0 || strtotime($fecha_validar)==strtotime($fecha_actual) )){
						$fecha_cierre=1;
				}
				//Fin arrayanes


			$fecha_domicilio = date ( 'Y-m-d' , $i );
			$configuracion["IDClub"] = $IDClub;
			$configuracion["Fecha"] = $fecha_domicilio;
			if((int)$r_disponibilidad ["IDConfiguracionDomicilios"]>0 && $fecha_cierre==0):
				array_push($response, $configuracion);
			endif;
		}

		if(count($configuracion)>0):
			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;
		else:
			$respuesta["message"] = "No se encontraron configuracion para pedidos";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		endif;

		return $respuesta;

	}// fin function

	function get_horas_entrega( $IDClub, $Fecha, $Version="")
	{

		$dbo =& SIMDB::get();


		if(empty($Fecha)):
			$dia_fecha = date("w");
			$Fecha=date("Y-m-d");
		else:
			$dia_fecha = date("w",strtotime($Fecha));
		endif;


		$response = array();
		$sql = "SELECT * FROM ConfiguracionDomicilios".$Version."  WHERE Activo = 'S' and IDClub = '".$IDClub."' and Dias like '%".$dia_fecha."|%' ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

					$hora_inicio=$r["HoraInicioEntrega"];
					$hora_fin=$r["HoraFinEntrega"];
					$intervalo= $r["IntervaloEntrega"];
					$hora_final = strtotime( $Fecha . " " . $hora_fin );
					$hora_actual = strtotime( $Fecha . " " . $hora_inicio );

					//Si es hoy le sumo el tiempo minimo para pedir
					if($Fecha==date("Y-m-d"))
						$TiempoMinimoPedido = $r["TiempoMinimoPedido"];
					else
						$TiempoMinimoPedido = 0;

					$hora_fecha_actual =  strtotime($Fecha . " " .date ( 'H:i:s'));
					$hora_fecha_actual = strtotime ( '+'.$TiempoMinimoPedido.' minute' ,   $hora_fecha_actual  ) ;

					while($hora_actual<=$hora_final):

						// Si es hoy solo devuelvo desde la hora mayor de lo contrario devuelvo todas las horas
						if($Fecha==date("Y-m-d") && $hora_actual >= $hora_fecha_actual):
							$flag_hora_valida = 1;
						elseif($Fecha==date("Y-m-d")):
							$flag_hora_valida = 0;
						elseif($Fecha!=date("Y-m-d")):
							$flag_hora_valida = 1;
						endif;

							$configuracion["IDClub"] = $r["IDClub"];
							$configuracion["Fecha"] = $Fecha;
							$configuracion["Hora"] = date("H:i",$hora_actual);
							$hora_actual = strtotime ( '+'.$intervalo.' minute' ,   $hora_actual  ) ;
						if($flag_hora_valida==1):
							array_push($response, $configuracion);
						endif;
					endwhile;

			}//ednw hile

				if(count($configuracion)>0):
					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
				else:
					$respuesta["message"] = "La fecha de hoy no esta disponible para Pedidos";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;

				endif;
		}//End if
		else
		{
				$respuesta["message"] = "La fecha de hoy no esta disponible para Pedidos";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function imprime_recibo_domicilio($IDDomicilio,$Version=""){

	/* Change to the correct path if you copy this example! */
	require LIBDIR . '/../impresionremota/autoload.php';

	$dbo =& SIMDB::get();
	$datos_domicilio = $dbo->fetchAll( "Domicilio".$Version, " IDDomicilio = '" . $IDDomicilio . "' ", "array" );
	$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_domicilio["IDSocio"] . "' ", "array" );
	$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $datos_domicilio["IDClub"] . "' ", "array" );
	$IPImpresora = $datos_club["IPImpresora"];
	$PuertoImpresora = $datos_club["PuertoImpresora"];

	if(!empty($datos_domicilio["IDDomicilio"]) && !empty($IPImpresora) && !empty($PuertoImpresora) ):

			try {

			$nombre_socio = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
			$accion_socio = $datos_socio["Accion"];
			$celular_socio = $datos_socio["Celular"];
			$hora_entrega= $datos_domicilio["HoraEntrega"];
			$numero_pedido= $datos_domicilio["Numero"];
			$hora_solicitud= $datos_domicilio["FechaTrCr"];
			$Direccion= $datos_domicilio["Direccion"];
			$FormaPago= $datos_domicilio["FormaPago"];
			$pedido="";
			$sql = "SELECT * FROM DomicilioDetalle".$Version." WHERE IDDomicilio = '".$IDDomicilio."'";
			$qry = $dbo->query( $sql );
			while( $r = $dbo->fetchArray( $qry ) ){
				$pedido.=$r["Producto"] = utf8_encode($dbo->getFields( "Producto".$Version , "Nombre" , "IDProducto = '".$r["IDProducto"]."'"  ) . " " . $dbo->getFields( "Producto".$Version , "Descripcion" , "IDProducto = '".$r["IDProducto"]."'"  ));
				$pedido.= ":" . $r["Cantidad"]. "\n" . "Comentario: " . utf8_encode($r["Comentario"]) . "\n";
			}//ednw hile

			$comentarios = $datos_domicilio["ComentariosSocio"];



			//$connector = new NetworkPrintConnector("181.48.188.75", 6000);
			$connector = new NetworkPrintConnector($IPImpresora, $PuertoImpresora);
			/* Print a "Hello world" receipt" */
			$printer = new Printer($connector);
			$printer -> initialize();
			$printer -> text("\n");
			$printer -> text("\n");
			$printer -> setJustification(Printer::JUSTIFY_CENTER);
			$printer -> setTextSize(2, 2);
			$printer -> text($datos_club["Nombre"] ." \n");
			$printer -> setTextSize(2, 2);
			$printer -> text("App para todos\n");
			//$printer -> text("Para llevar \n\n");
			$printer -> setJustification(Printer::JUSTIFY_CENTER);
			$printer -> setTextSize(1, 1);
			$printer -> text("Numero: ".$numero_pedido."\n");
			$printer -> text("Nombre Socio: ".$nombre_socio."\n");
			$printer -> text("Numero Accion: ".$accion_socio."\n");
			$printer -> text("Celular: ".$celular_socio."\n");
			$printer -> text("Hora Solicitud:".$hora_solicitud." \n");
			$printer -> text("Hora Entrega:".$hora_entrega." \n");
			$printer -> text("Lugar:".$Direccion." \n");
			$printer -> text("Medio Pago:".$FormaPago." \n");
			$printer -> setTextSize(1, 2);
			$printer -> text("Descripcion Pedido: \n");
			$printer -> setTextSize(1, 1);
			$printer -> text($pedido."\n");
			$printer -> setTextSize(1, 2);
			$printer -> text("Comentarios: \n");
			$printer -> setTextSize(1, 1);
			$printer -> text($comentarios." \n");
			$printer -> cut();

			/* Close printer */
			$printer -> close();
			//echo "Impresion Terminada";
			return true;
		} catch (Exception $e) {
			//echo "Couldn't print to this printer: " . $e -> getMessage() . "\n";

		}
	endif;

	return true;

	}



	function get_factura($IDClub,$IDSocio,$FechaInicio,$FechaFin,$Dispositivo=""){
	$dbo =& SIMDB::get();
	// Connect to Sql server

	try {
			$hostname = DBHOST_PRADERA;
			$port = "";
			$dbname = DBNAME_PRADERA;
			$username = DBUSER_PRADERA;
			$pw = DBPASS_PRADERA;
			$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
		} catch (PDOException $e) {
			//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
			$respuesta["message"] = "Lo sentimos no hay conexion a la base de facturas";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
			return $respuesta;

		}


		if( !empty( $IDClub ) && !empty( $IDSocio ) ){
				$response = array();
				//Consulto la accion del socio
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );

				if (!empty($datos_socio["AccionPadre"])): // Es beneficiario
					//$condicion_nucleo = " and (AccionPadre = '".$datos_socio["AccionPadre"]."' or Accion = '".$datos_socio["AccionPadre"]."')";
					//$condicion_accion = "nmro_accion = '".$datos_socio["Accion"]."'";
					 $condicion_accion = "nmro_accion = '".$datos_socio["AccionPadre"]."'";
				else: // es Cabeza familia
					$sql_accion_nucleo = "Select Accion From Socio Where AccionPadre = '".$datos_socio["Accion"]."' and IDClub = '".$IDClub."'";
					$qry_accion_nucleo = $dbo->query($sql_accion_nucleo);
					while($row_accion_nucleo = $dbo->fetchArray($qry_accion_nucleo)):
						$array_accion_nucleo []= "nmro_accion = '".$row_accion_nucleo["Accion"]."'";
					endwhile;
					if(count($array_accion_nucleo)>0):
						$acciones_nucleo = implode(" or ",$array_accion_nucleo);
						$condicion_accion = "(" . $acciones_nucleo ." or nmro_accion = '".$datos_socio["Accion"]."' ". ")";
					else:
						$condicion_accion = "( nmro_accion = '".$datos_socio["Accion"]."' ". ")";
					endif;
				endif;



				$nmro_accion = $datos_socio["Accion"];
				//$nmro_accion = 538;
				//$condicion_accion = "nmro_accion = '699'";

				if(!empty($FechaInicio)):
					$condicion_fecha = " and fcha_rgstro >= '".$FechaInicio."'";
				endif;

				if(!empty($FechaFin)):
					$condicion_fecha .= " and fcha_rgstro <= '".$FechaFin."'";
				endif;

				$sql_facturas = "SELECT TOP 100 * FROM v_ventas Where ".$condicion_accion." ".$condicion_fecha."  Order By fcha_rgstro Desc";
				$qry_factura = $dbh->query($sql_facturas);
				while ($r =$qry_factura->fetch()){
						$datos[]=$r;
				}
					$message = count($datos) . " Encontrados";
					foreach ($datos as  $r ){
						//averiguo la forma de pago

						$sql_forma_pago = "SELECT * FROM  v_frm_pgo Where nmro_rgstro = '".$r["nmro_rgstro"]."' and nmro_almcen = '".$r["nmro_almcen"]."'";
						$qry_forma_pago = $dbh->query($sql_forma_pago);

						$factura["IDClub"] = $IDClub;
						$factura["IDFactura"] = $r["nmro_rgstro"];
						$factura["NumeroFactura"] = trim($r["nmro_fctra"]);
						$factura["Fecha"] = $r["fcha_rgstro"];
						$factura["ValorFactura"] = "$".number_format( ($r["vlor_vnta"] + (int)$r["vlor_prpna"] ),0,",",".");
						$factura["Almacen"] = utf8_encode($r["nmbre_almcen"]);

						while ($row_forma_pago = $qry_forma_pago->fetch()){
							$array_categoria_factura [$row_forma_pago["nmbre_frma"]][]	 = $factura;
						}



					}
					$response_categoria = array();
					foreach($array_categoria_factura as $nombre_categoria => $facturas):
						$datos_factura_categoria["Nombre"] = $nombre_categoria;
						$datos_factura_categoria["Facturas"] = $facturas;
						array_push($response_categoria, $datos_factura_categoria);
					endforeach;

					if($Dispositivo=="iOS")
						$datos_facturas["BuscadorFechas"] = true;
					else
						$datos_facturas["BuscadorFechas"] = "S";

					$datos_facturas["Categorias"] = $response_categoria;


					array_push($response, $datos_facturas);


					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;


		}
		else{
			$respuesta["message"] = "15. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}


	unset($dbh); unset($stmt);unset($stmt2);
	return $respuesta;
	}

	function get_factura_mi_club($IDClub,$IDSocio,$FechaInicio,$FechaFin,$Dispositivo=""){
	$dbo =& SIMDB::get();

		if( !empty( $IDClub ) && !empty( $IDSocio ) ){

			if(!empty($FechaInicio)):
				$condicion_fecha = " and Fecha >= '".$FechaInicio."'";
			endif;

			if(!empty($FechaFin)):
				$condicion_fecha .= " and Fecha <= '".$FechaFin."'";
			endif;

			$sql_facturas = "SELECT * FROM SocioFactura Where IDClub = '".$IDClub."' and IDSocio = '".$IDSocio."' ".$condicion_fecha."  Order By Fecha Desc";
			$qry_factura = $dbo->query($sql_facturas);

				if($dbo->rows($qry_factura)>0){
					$response = array();
					$message = $dbo->rows($qry_factura) . " Encontrados";
					while ($r = $dbo->fetchArray($qry_factura)){
						$factura["IDClub"] = $IDClub;
						$factura["IDFactura"] = $r["IDSocioFactura"];
						$factura["NumeroFactura"] = trim($r["Numero"]);
						$factura["Fecha"] = $r["Fecha"];
						$factura["ValorFactura"] = "$".number_format( ($r["ValorPagar"]),0,",",".");
							$array_categoria_factura ["Factura"][]	 = $factura;
					}

					$response_categoria = array();
					foreach($array_categoria_factura as $nombre_categoria => $facturas):
						$datos_factura_categoria["Nombre"] = $nombre_categoria;
						$datos_factura_categoria["Facturas"] = $facturas;
						array_push($response_categoria, $datos_factura_categoria);
					endforeach;

					if($Dispositivo=="iOS")
						$datos_facturas["BuscadorFechas"] = true;
					else
						$datos_facturas["BuscadorFechas"] = "S";


					$datos_facturas["Categorias"] = $response_categoria;
					$datos_facturas["TipoFormaPago"] = $response_categoria;


					array_push($response, $datos_facturas);

					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
				}
				else{
					$respuesta["message"] = "No se encontraron registros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}
		}
		else{
			$respuesta["message"] = "15. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;
	}



	function get_detalle_factura($IDClub, $IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
	// Connect to Sql server
	try {
			$hostname = DBHOST_PRADERA;
			$port = "";
			$dbname = DBNAME_PRADERA;
			$username = DBUSER_PRADERA;
			$pw = DBPASS_PRADERA;
			$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
		} catch (PDOException $e) {
			//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
			$respuesta["message"] = "Lo sentimos no hay conexion a la base de facturas";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
			return $respuesta;

		}


		if( !empty( $IDClub ) && !empty( $IDFactura ) ){

				$sql_facturas = "SELECT TOP 1 * FROM v_ventas Where  nmro_fctra = '".$NumeroFactura."' and nmro_rgstro = '".$IDFactura."' Order by fcha_rgstro desc";
				$qry_factura = $dbh->query($sql_facturas);

						$response = array();
						$message = " Encontrados";
						while ($r =$qry_factura->fetch()){
							$cuerpo_factura = "";
							$cabeza_factura = "";
							$detalle_factura = "";
							$detalle_forma_pago = "";
							//Encabezado Factura
							$cabeza_factura = '<table border="0" cellpadding="0" cellspacing="0" class="tabla">
								<tbody>
								<tr class="modo2">
									<td>La Pradera de Potosi Club Residencial</td>
								</tr>
								<tr class="modo2">
									<td>Nit. 832001216-7</td>
								</tr>
								<tr class="modo2">
									<td>Km 19 v&iacute;a La Calera - Sopo</td>
								</tr>
								<tr class="modo2">
									<td>8757777</td>
								</tr>
								<tr class="modo2">
									<td>'.SIMUtil::tiempo($r["fcha_rgstro"]).'</td>
								</tr>
								<tr class="modo2">
									<td>'.$r["nmro_accion"]. ' - ' . utf8_encode($r["nmbre_scio"]).'</td>
								</tr>
								<tr class="modo2">
									<td>'.$r["nmbre_almcen"].'</td>
								</tr>
								</tbody>
							</table>';

							//Consulto el detalle de la factura
							$detalle_factura = '
							<table border="0" cellpadding="0" cellspacing="0" class="tabla">
								<tbody>
								<tr>
									<th>Item</th>
									<th>Cant.</th>
									<th>Vr uni.</th>
									<th>Vr total</th>
								</tr>
							';

							$sql_detalle ="SELECT * FROM v_dtlle_venta Where nmro_rgstro = '".$r["nmro_rgstro"]."' and nmro_almcen = '".$r["nmro_almcen"]."'";
							$r_detalle=$dbh->query($sql_detalle);
							while ($row_detalle =$r_detalle->fetch()){
								 $detalle_factura .= '
								 <tr class="modo1">
									<td>'.utf8_encode($row_detalle["nmbre_prdcto"]).'</td>
									<td>'.number_format($row_detalle["cntdad"],0,",",".").'</td>
									<td>$'.number_format($row_detalle["vlor_untrio"],0,",",".").'</td>
									<td>$'.number_format($row_detalle["vlor_ttal"],0,",",".").'</td>
								</tr>
								';
							 }
							 if((int)$r["vlor_prpna"]>0):
								$detalle_factura .= '
								<tr class="modo1">
									<td>Sub Total:</td>
									<td>1</td>
									<td>$'.number_format($r["vlor_prpna"],0,",",".").'</td>
									<td>$'.number_format($r["vlor_prpna"],0,",",".").'</td>
								</tr>
								';
							 endif;



								$detalle_factura .= '
								 <tr>
									<th colspan="3">Sub Total: </th>
									<th>$'.number_format($r["vlor_vnta"],0,",",".").'</th>
								</tr>';

								if((int)$r["vlor_prpna"]>0):
									$detalle_factura .= '
									 <tr>
										<th colspan="3">Propina: </th>
										<th>$'.number_format($r["vlor_prpna"],0,",",".").'</th>
									</tr>';
								endif;

								$detalle_factura .= '
								 <tr>
									<th colspan="3">Total Venta</th>
									<th>$'.number_format( ($r["vlor_vnta"]+(int)$r["vlor_prpna"]),0,",",".").'</th>
								</tr>
								</tbody>
							</table>
							';
							//Consulto la forma de pago d la factura
							$detalle_forma_pago = '
							<table border="0" cellpadding="0" cellspacing="0" class="tabla">
								<tbody>
								<tr>
									<th colspan="2">Forma de Pago</th>
								</tr>
							';
							$sql_forma_pago = "SELECT * FROM  v_frm_pgo Where nmro_rgstro = '".$r["nmro_rgstro"]."' and nmro_almcen = '".$r["nmro_almcen"]."'";
							$r_forma_pago=$dbh->query($sql_forma_pago);
							while ($row_forma_pago =$r_forma_pago->fetch()){
								$detalle_forma_pago .= '
								<tr class="modo1">
									<td>'.utf8_encode($row_forma_pago["nmbre_frma"]).'</td>
									<td>'.number_format($row_forma_pago["vlor_pgar"],0,",",".").'</td>
								</tr>
								';
							}

							$detalle_forma_pago .= '
							 </tbody>
							</table>
							';

						$cuerpo_factura = '<!doctype html>
											<html>
											<head>
											<meta charset="UTF-8">
											<title>Detalle Factura</title>
											<style>
											.tabla {
											font-family: Verdana, Arial, Helvetica, sans-serif;
											font-size:12px;
											text-align: center;
											width: 95%;
											align: center;
											}

											.tabla th {
											padding: 5px;
											font-size: 16px;
											background-color: #83aec0;
											background-repeat: repeat-x;
											color: #FFFFFF;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #558FA6;
											border-bottom-color: #558FA6;
											font-family: "Trebuchet MS", Arial;
											text-transform: uppercase;
											}

											.tabla .modo1 {
											font-size: 12px;
											font-weight:bold;
											background-color: #e2ebef;
											background-repeat: repeat-x;
											color: #34484E;
											font-family: "Trebuchet MS", Arial;
											}
											.tabla .modo1 td {
											padding: 5px;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #A4C4D0;
											border-bottom-color: #A4C4D0;
											text-align:right;
											}

											.tabla .modo1 th {
											background-position: left top;
											font-size: 12px;
											font-weight:bold;
											text-align: left;
											background-color: #e2ebef;
											background-repeat: repeat-x;
											color: #34484E;
											font-family: "Trebuchet MS", Arial;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #A4C4D0;
											border-bottom-color: #A4C4D0;
											}

											.tabla .modo2 {
											font-size: 12px;
											font-weight:bold;
											background-color: #fdfdf1;
											background-repeat: repeat-x;
											color: #990000;
											font-family: "Trebuchet MS", Arial;
											text-align:center;
											}
											.tabla .modo2 td {
											padding: 5px;
											}
											.tabla .modo2 th {
											background-position: left top;
											font-size: 12px;
											font-weight:bold;
											background-color: #fdfdf1;
											background-repeat: repeat-x;
											color: #990000;
											font-family: "Trebuchet MS", Arial;
											text-align:left;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #EBE9BC;
											border-bottom-color: #EBE9BC;
											}
											</style>
											</head>
											<body>
											';

						$cuerpo_factura .= $cabeza_factura . "<br>".$detalle_factura."<br>".$detalle_forma_pago;
						$cuerpo_factura .= '</body>
										</html>';


						$factura["IDClub"] = $IDClub;
						$factura["IDFactura"] = $r["nmro_rgstro"];
						$factura["NumeroFactura"] = $r["nmro_fctra"];
						$factura["Fecha"] = $r["fcha_rgstro"];
						$factura["ValorFactura"] = "$".number_format($r["vlor_vnta"],0,",",".");
						$factura["Almacen"] = $r["nmbre_almcen"];
						$factura["CuerpoFactura"] = $cuerpo_factura;
						array_push($response, $factura);
						}

					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;



	}
	return $respuesta;

	}



	function get_factura_ftp($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();



	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSRINCON_DIR;

	//$AccionSocio="0003";

	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
				if(is_dir($RutaExtractos.$archivo)){
					if($carpeta_mes = opendir($RutaExtractos.$archivo)){
						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
								//Capturo Accion Socio
								$array_nombre_archivo=explode("_",$archivo_carpeta);
								$accion_socio_pdf= str_replace(".pdf","",$array_nombre_archivo[1]);
								//Comparo si el archivo pertenece al socio a consultar
								if($AccionSocio==$accion_socio_pdf):
									$array_pdf[$archivo]=$archivo_carpeta;
								endif;
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):

					$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


			//Consulto movimientos
			$sql_movimiento = "Select MONTH(Fecha) as Mes, YEAR(Fecha) as Year
								 From SocioMovimiento
							 Where IDClub = '".$IDClub."' and Accion = '".$AccionSocio."' group by month(Fecha)";
			$result_movimiento = $dbo->query($sql_movimiento);
			while($row_movimiento = $dbo->fetchArray($result_movimiento)):

				$nombre_categoria ="Consumos";
				$fecha_extracto = SIMResources::$meses[((int)$row_movimiento["Mes"]-1)] . " de " .  $row_movimiento["Year"] . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = "Movimiento|".$row_movimiento["Year"]."|".$row_movimiento["Mes"]."|".$AccionSocio;
				$factura["NumeroFactura"] = $row_movimiento["Year"];
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Consumos";
				$factura["Almacen"] = "";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;
			endwhile;



		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;



	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}


	function get_factura_ftp_r($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSRANCHO_DIR;

	//$AccionSocio="001-0241-7-1";


	self::borrar_extracto_tmp();


	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
				if(is_dir($RutaExtractos.$archivo)){
					if($carpeta_mes = opendir($RutaExtractos.$archivo)){
						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
								//Capturo Accion Socio
								$array_nombre_archivo=explode(";",$archivo_carpeta);
								$accion_socio_pdf= $array_nombre_archivo[1];
								if($AccionSocio==$accion_socio_pdf ):
									//$array_pdf[$archivo]=$archivo_carpeta;
									//lo copio con nombre encriptado para tenerlo temporalmente
									$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
									$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
									$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
									copy ($origen_copy,$destino_copy);
									$array_pdf[$archivo]=$nombre_encriptado;
								endif;
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
					$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_ftp_btcc($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSBTCC_DIR;

	//$AccionSocio="001-0241-7-1";


	self::borrar_extracto_tmp();


	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){

				if(is_dir($RutaExtractos.$archivo)){
					if($carpeta_mes = opendir($RutaExtractos.$archivo)){

						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess' && $archivo != 'Donacion'){

								//Capturo Accion Socio
								$caracteres_nom=strlen($archivo_carpeta);
								switch ($caracteres_nom) {
										case '9':
											$accion_socio_pdf="00".substr($archivo_carpeta,0,1);
										break;
										case '10':
											$accion_socio_pdf="0".substr($archivo_carpeta,0,2);
										break;
										case '11':
											$accion_socio_pdf=substr($archivo_carpeta,0,3);
										break;
									default:
										$accion_socio_pdf=substr($archivo_carpeta,0,1);
										break;
								}
								if($AccionSocio==$accion_socio_pdf ):
									//$array_pdf[$archivo]=$archivo_carpeta;
									//lo copio con nombre encriptado para tenerlo temporalmente
									$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
									$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
									$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
									copy ($origen_copy,$destino_copy);
									$array_pdf[$archivo]=$nombre_encriptado;
								endif;
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
					$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;



		//Fundacion
		$RutaDonacion = EXTRACTOSBTCC_DIR."/Donacion/";
		if(is_dir($RutaDonacion)){
					if($dir = opendir($RutaDonacion)){
							while(($archivo = readdir($dir)) !== false){
					if(is_dir($RutaDonacion.$archivo)){
						if($carpeta_mes = opendir($RutaDonacion.$archivo)){
							 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
								 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
										$accion_socio_pdf=substr($archivo_carpeta,0,3);

									//Capturo Accion Socio
									$caracteres_nom=strlen($archivo_carpeta);
									if($AccionSocio==$accion_socio_pdf ):
										$ano_pdf=substr($archivo_carpeta,3,4);
										//$array_pdf[$archivo]=$archivo_carpeta;
										//lo copio con nombre encriptado para tenerlo temporalmente
										$origen_copy=$RutaDonacion.$archivo."/".$archivo_carpeta;
										$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
										$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
										copy ($origen_copy,$destino_copy);
										$array_pdf_donacion[$archivo]=$nombre_encriptado;
									endif;
								}
							 }
						}
						closedir($carpeta_mes);
					}
							}
							closedir($dir);
					}
			}


			krsort($array_pdf_donacion);


			foreach($array_pdf_donacion as $fecha => $archivo_extracto):
					$nombre_categoria ="Certificado Donacion";
				$donacion["IDClub"] = $IDClub;
				$donacion["IDFactura"] = $archivo_extracto;
				$donacion["NumeroFactura"] = "Donacion";
				$donacion["Fecha"] = $ano_pdf;
				$donacion["ValorFactura"] = $ano_pdf;
				$donacion["Almacen"] = "";
				$donacion["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $donacion;

			endforeach;




		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_ftp_anapoima($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$NumeroDocumento = $dbo->getFields( "Socio" , "NumeroDocumento" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSANAPOIMA_DIR;

	//$AccionSocio="001-0241-7-1";


	self::borrar_extracto_tmp();


	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
				if(is_dir($RutaExtractos.$archivo)){
					if($carpeta_mes = opendir($RutaExtractos.$archivo)){
						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
								//Capturo Accion Socio
								$array_nombre_archivo=explode(".",$archivo_carpeta);
								$accion_socio_pdf= $array_nombre_archivo[0];
								if($NumeroDocumento==$accion_socio_pdf ):
									//$array_pdf[$archivo]=$archivo_carpeta;
									//lo copio con nombre encriptado para tenerlo temporalmente
									$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
									$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
									$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
									copy ($origen_copy,$destino_copy);
									$array_pdf[$archivo]=$nombre_encriptado;
								endif;
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
					$nombre_categoria ="ESTADO CUENTA";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Estado Cuenta";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}


	function get_certificado($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSRANCHO_DIR."/certificados/";

	//$AccionSocio="001-0241-7-1";


	self::borrar_extracto_tmp();


	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
				if(is_dir($RutaExtractos.$archivo)){
					if($carpeta_mes = opendir($RutaExtractos.$archivo)){
						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
								//Capturo Accion Socio
								$array_nombre_archivo=explode(".",$archivo_carpeta);
								$accion_socio_pdf= $array_nombre_archivo[0];
								if($AccionSocio==$accion_socio_pdf ):
									//$array_pdf[$archivo]=$archivo_carpeta;
									//lo copio con nombre encriptado para tenerlo temporalmente
									$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
									$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
									$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
									copy ($origen_copy,$destino_copy);
									$array_pdf[$archivo]=$nombre_encriptado;
								endif;
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
				$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_ftp_g($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$DocumentoSocio = $dbo->getFields( "Socio" , "NumeroDocumento" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSGUAYMARAL_DIR;

	//$AccionSocio="001-0241-7-1";

	self::borrar_extracto_tmp();

	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
								if(is_dir($RutaExtractos.$archivo)){
									if($carpeta_mes = opendir($RutaExtractos.$archivo)){
										 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
											 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
												//Capturo Accion Socio
												$array_nombre_archivo=explode("_",$archivo_carpeta);
												$documento_socio_pdf= $array_nombre_archivo[0];
												if($DocumentoSocio==$documento_socio_pdf ):
													//$array_pdf[$archivo]=$archivo_carpeta;
													//lo copio con nombre encriptado para tenerlo temporalmente
													$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
													$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
													$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
													copy ($origen_copy,$destino_copy);
													$array_pdf[$archivo]=$nombre_encriptado;
												endif;
											}
										 }
									}
									closedir($carpeta_mes);
								}
						}
						closedir($dir);
				}
		}
		else{
			echo "no existe";
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
					$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_ftp_f($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();


	$fecha_hoy=date("Y-m-d");
	$array_pdf[$fecha_hoy]="Pago Farallones";
	krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
					$nombre_categoria ="Pagos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = "Farallones";
				$factura["NumeroFactura"] = $IDSocio;
				$factura["Fecha"] = $fecha_hoy;
				$factura["ValorFactura"] = "Pago no presencial";
				$factura["Almacen"] = "";
				$factura["Url"] = "";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_ftp_gun($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSGUN_DIR;

	//$AccionSocio="001-0241-7-1";

	self::borrar_extracto_tmp();


	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
								if(is_dir($RutaExtractos.$archivo)){
									if($carpeta_mes = opendir($RutaExtractos.$archivo)){
										 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
											 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
												//Capturo Accion Socio
												$array_nombre_archivo=explode("_",$archivo_carpeta);
												$accion_socio_pdf= $array_nombre_archivo[1];
												if($AccionSocio==$accion_socio_pdf ):
													//$array_pdf[$archivo]=$archivo_carpeta;
													//lo copio con nombre encriptado para tenerlo temporalmente
													$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
													$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
													$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
													copy ($origen_copy,$destino_copy);
													$array_pdf[$archivo]=$nombre_encriptado;
												endif;
											}
										 }
									}
									closedir($carpeta_mes);
								}
						}
						closedir($dir);
				}
		}
		else{
			echo "no existe";
		}


		krsort($array_pdf);


			foreach($array_pdf as $fecha => $archivo_extracto):
				$nombre_categoria ="Extractos";
				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $IDSocio;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


			//Consulto los movimientos si no tiene fecha traigo los del dia
			if(empty($FechaInicio)){
				$fecha = date('Y-m-j');
				$nuevafecha = strtotime ( '-15 day' , strtotime ( $fecha ) ) ;
				$nuevafecha = date ( 'Y-m-j' , $nuevafecha );
				$FechaInicio=$nuevafecha;
				$FechaFin=date("Y-m-d");
			}
			//$array_movimientos=SIMWebServiceZeus::consulta_movimientov2($IDClub,$IDSocio,$FechaInicio,$FechaFin);

			foreach($array_movimientos as $id_movimiento => $datos_movimiento):
				$nombre_categoria ="Movimientos";
				$fecha_extracto = "Fecha ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = "Movimientos|".$FechaInicio."|".$FechaFin."|".$IDSocio;
				$factura["NumeroFactura"] = "fecha vencimiento: " . $datos_movimiento["Vencimiento"];

				$array_descripcion=explode("/",$datos_movimiento["Descripcion"]);
				$ultimo_elemento=end( $array_descripcion );
				$Descripcion=substr($ultimo_elemento,2);
				$findme   = 'TURCOS';
				$pos = strpos($Descripcion, $findme);
				if ($pos === false) {
				}
				else{
					$Descripcion="BANOS TURCOS";
				}

				$factura["Fecha"] = utf8_encode($Descripcion);
				$factura["ValorFactura"] = "$".$datos_movimiento["Valor"];
				$factura["Almacen"] = "";
				$factura["Url"] = "";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;


		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "S";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_medellin($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	//$IDSocio=82704;
	//Solo los titulares
	$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
	if(substr($datos_socio["Accion"], -2) =="00"){ // Es el titular
				$AccionSocio=substr($datos_socio["Accion"],0,-2);
				$consulta = " codigo_derecho = '".$AccionSocio."' ";
	}
	else{
			$AccionSocio=$datos_socio["Accion"];
			$consulta = " tso_codigo_cliente = '".$AccionSocio."' ";
	}

	$nombre_categoria ="Estado Cuenta";
	$fecha_extracto = date("Y");

	$server = DBHOST_MEDELLIN;
	// Connect to Sql server CASMPRESTRE MEDELLIN

	try {
			$hostname = $server;
			$port = "";
			$dbname = DBNAME_MEDELLIN;
			$username = DBUSER_MEDELLIN;
			$pw = DBPASS_MEDELLIN;
			$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
		} catch (PDOException $e) {
			//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
			echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
			exit;
		}



		$sql_consumo="SELECT
							 CAST(codigo_cliente AS INTEGER) AS codigo_cliente,
							 CAST(nombre_cliente AS TEXT) AS nombre_cliente,
							 CAST(ident_cliente AS TEXT) AS ident_cliente,
							 CAST(seccion AS INTEGER) AS seccion,
							 CAST(concepto AS TEXT) AS concepto,
							 CAST(nombre_pagador AS TEXT) AS nombre_pagador,
							 CAST(nit_pagador  AS TEXT) AS nit_pagador,
							 CAST(cargo AS INTEGER) AS cargo,
							 CAST(documento AS TEXT) AS documento,
							 CAST(fecha AS DATETIME) AS fecha,
							 CAST(area AS TEXT) AS area,
							 CAST(cargo AS INTEGER) AS cargo
							 FROM [vapp_estados_cuenta]
							 WHERE codigo_derecho = '".$AccionSocio."' ";

		$sql = $dbh->query($sql_consumo);



		while ($row_valor =$sql->fetch()){
				$ValorTotal+=(int)$row_valor["cargo"];
				$array_fecha=explode(" ",$row_valor["fecha"]);
		}

			$factura["IDClub"] = $IDClub;
			$valor_mes=(int)$row_valor["codigo_cliente"];
			$valor_mes=$row_valor["fecha"];
			$factura["IDFactura"] = $IDSocio;
			$factura["NumeroFactura"] = $datos_socio["IDSocio"];
			$factura["Fecha"] = $array_fecha[0];
			$factura["ValorFactura"] = "$".number_format($ValorTotal,0,'','.');
			$factura["Almacen"] = $row_valor["Detalle"];

			$array_categoria_factura [$nombre_categoria][]	 = $factura;



			//Consulto los movimientos si no tiene fecha traigo los del dia
			$AccionSocio=substr($datos_socio["Accion"],0,-2);



			$sql = $dbh->query("SELECT
						CAST(numero_factura AS TEXT) AS numero_factura,
						CAST(fecha AS DATETIME) AS fecha,
						CAST(lugar AS TEXT) AS lugar,
						CAST(valor  AS INTEGER) AS valor,
						CAST(codigo_derecho AS INTEGER) AS codigo_derecho,
						CAST(tso_codigo_cliente AS INTEGER) AS tso_codigo_cliente,
						CAST(codigo_cliente  AS INTEGER) AS codigo_cliente,
						CAST(nombre_cajero AS TEXT) AS nombre_cajero
						FROM vapp_enc_documento WHERE $consulta  ORDER BY fecha DESC "  );



			while ($row =$sql->fetch()){
				$nombre_categoria ="Consumos del mes";
				$fecha_extracto = "Fecha ";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $row["numero_factura"]."|Movimiento";
				$factura["NumeroFactura"] = "Factura: " . $row["numero_factura"];
				$ultimo_elemento=end( $array_descripcion );
				$factura["Fecha"] = utf8_encode($row["lugar"]);
				$factura["ValorFactura"] = "$".number_format($row["valor"],0,'','.');
				$factura["Almacen"] = $row["fecha"];
				$factura["Url"] = "url";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;
			}



		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):
			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	return $respuesta;
	}

	function get_factura_uraki($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$DocumentoSocio = $dbo->getFields( "Socio" , "NumeroDocumento" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = CORRESPONDENCIA_DIR;

	//$AccionSocio="001-0241-7-1";

	self::borrar_extracto_tmp();

	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
								if(is_dir($RutaExtractos.$archivo)){
									if($carpeta_mes = opendir($RutaExtractos.$archivo)){
										 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
											 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
												//Capturo Accion Socio
												$array_nombre_archivo=explode(".",$archivo_carpeta);
												$documento_socio_pdf= $array_nombre_archivo[0];
												if($DocumentoSocio==$documento_socio_pdf ):
													//$array_pdf[$archivo]=$archivo_carpeta;
													//lo copio con nombre encriptado para tenerlo temporalmente
													$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
													$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".TXT";
													$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
													copy ($origen_copy,$destino_copy);
													$array_pdf[$archivo]=$nombre_encriptado;
												endif;
											}
										 }
									}
									closedir($carpeta_mes);
								}
						}
						closedir($dir);
				}
		}
		else{
			echo "no existe";
		}


		krsort($array_pdf);

			foreach($array_pdf as $fecha => $archivo_extracto):
				$nombre_categoria ="Desprendibles Nomina";
				$fecha_extracto = substr($fecha,0,4);
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $IDSocio;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Desprendible de Nomina";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;

			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):

				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}

	function get_factura_sigma($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$DocumentoSocio = $dbo->getFields( "Socio" , "NumeroDocumento" , "IDSocio = '".$IDSocio."'" );
	$RutaExtractos = EXTRACTOSANAPOIMA_DIR;

	//$AccionSocio="001-0241-7-1";

	self::borrar_extracto_tmp();

	if(is_dir($RutaExtractos)){
				if($dir = opendir($RutaExtractos)){
						while(($archivo = readdir($dir)) !== false){
								if(is_dir($RutaExtractos.$archivo)){
									if($carpeta_mes = opendir($RutaExtractos.$archivo)){
										 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
											 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){
												//Capturo Accion Socio
												$array_nombre_archivo=explode(".",$archivo_carpeta);
												$documento_socio_pdf= $array_nombre_archivo[0];
												if($DocumentoSocio==$documento_socio_pdf ):
													//$array_pdf[$archivo]=$archivo_carpeta;
													//lo copio con nombre encriptado para tenerlo temporalmente
													$origen_copy=$RutaExtractos.$archivo."/".$archivo_carpeta;
													$nombre_encriptado = date("YmdHis")."-".SIMUtil::generarPassword("6").rand(0,10000000).".pdf";
													$destino_copy = EXTRACTOSTMP_DIR .$nombre_encriptado;
													copy ($origen_copy,$destino_copy);
													$array_pdf[$archivo]=$nombre_encriptado;
												endif;
											}
										 }
									}
									closedir($carpeta_mes);
								}
						}
						closedir($dir);
				}
		}
		else{
			echo "no existe";
		}


		krsort($array_pdf);

			foreach($array_pdf as $fecha => $archivo_extracto):
				$nombre_categoria ="Facturacion";
				$fecha_extracto = substr($fecha,0,4);
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $IDSocio;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Estado de cuenta";
				$factura["Almacen"] = "";
				$factura["Url"] = base64_encode(EXTRACTOSTMP_ROOT);
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;

			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):

				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}


	function borrar_extracto_tmp(){

	$RutaExtractosTMP = EXTRACTOSTMP_DIR;

	if(is_dir($RutaExtractosTMP)){
		if($dir = opendir($RutaExtractosTMP)){
						while(($archivo = readdir($dir)) !== false){
				if(is_dir($RutaExtractosTMP.$archivo)){
					if($carpeta_mes = opendir($RutaExtractosTMP.$archivo)){
						 while(($archivo_carpeta = readdir($carpeta_mes)) !== false){
							 if($archivo_carpeta != '.' && $archivo_carpeta != '..' && $archivo_carpeta != '.htaccess'){

								$pos = strpos($archivo_carpeta,".pdf");
								if ($pos === false) {
								}
								else{
									$array_nombre_archivo=explode("-",$archivo_carpeta);
									if(count($array_nombre_archivo)>1):
										$fecha_hora_archivo= strtotime($array_nombre_archivo[0]);
										//10 minutos antes
										$fecha = date('Y-m-j H:i:s');
										$nuevafecha = strtotime ( '-10 minutes' , strtotime ( $fecha ) ) ;
										if($fecha_hora_archivo<=$nuevafecha && !empty($archivo_carpeta)):
											$ruta_borrar =  EXTRACTOSTMP_DIR.$archivo_carpeta;
											unlink($ruta_borrar);
										endif;
									endif;
								}
							}
						 }
					}
					closedir($carpeta_mes);
				}
						}
						closedir($dir);
				}
		}
	return $respuesta;
	}


	function set_calificacion_pqr($IDClub,$IDSocio, $IDPqr, $Comentario, $Calificacion)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDSocio )  && !empty( $Calificacion ) ){

			$datos_pqr = $dbo->fetchAll( "Pqr", " IDPqr = '" . $IDPqr . "' ", "array" );
			if($datos_pqr["Calificacion"]==0){
					$sql_pqr = $dbo->query("Update Pqr Set Calificacion = '".$Calificacion."', ComentarioCalificacion = '".$Comentario."', FechaCalificacion = NOW() Where IDPqr = '".$IDPqr."'");
					SIMUtil::noticar_calificacion_pqr($IDPqr,$Calificacion);
					$respuesta["message"] = "guardado";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
				}
			else{
				$respuesta["message"] = "Ya se había registrado una calificación";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
	}
	else{
		$respuesta["message"] = "120. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


	function set_calificacion_directorio($IDClub,$IDSocio, $IDDirectorio, $Comentario, $Calificacion)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDDirectorio ) && !empty( $IDSocio )  && !empty( $Calificacion ) ){
					$sql_directorio = $dbo->query("Insert into DirectorioCalificacion (IDSocio, IDDirectorio, Calificacion, ComentarioCalificacion, Publicar, Fecha) Values ('".$IDSocio."','".$IDDirectorio."','".$Calificacion."','".$Comentario."','S',NOW())");
					//SIMUtil::noticar_calificacion($IDDirectorio,$Comentario);
					$respuesta["message"] = "guardado";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
	}
	else{
		$respuesta["message"] = "130. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_calificacion_directorio_socios($IDClub,$IDSocio, $IDDirectorio, $Comentario, $Calificacion)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDDirectorio ) && !empty( $IDSocio )  && !empty( $Calificacion ) ){
						$sql_directorio = $dbo->query("Insert into DirectorioSocioCalificacion (IDSocio, IDDirectorioSocio, Calificacion, ComentarioCalificacion, Publicar, Fecha) Values ('".$IDSocio."','".$IDDirectorio."','".$Calificacion."','".$Comentario."','S',NOW())");
						//SIMUtil::noticar_calificacion_socio($IDDirectorio,$Comentario);
						$respuesta["message"] = "guardado";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
		}
		else{
			$respuesta["message"] = "131. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

	}

	function get_calificacion_directorio( $IDClub, $IDDirectorio)
	{
		$dbo =& SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM DirectorioCalificacion WHERE IDDirectorio = '".$IDDirectorio."' and Publicar = 'S' ORDER BY IDDirectorioCalificacion Desc";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $r["IDSocio"] . "'", "array" );
				$calificacion["IDDirectorioCalificacion"] = $r["IDDirectorioCalificacion"];
				$calificacion["IDSocio"] = $r["IDSocio"];
				$calificacion["Socio"] = utf8_encode( $datos_socio["Nombre"] . " " . $datos_socio["Apellido"] );
				$calificacion["Calificacion"] = $r["Calificacion"];
				$calificacion["ComentarioCalificacion"] = utf8_encode($r["ComentarioCalificacion"]);
				$calificacion["Fecha"] = $r["Fecha"];
				array_push($response, $calificacion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
	}

	function get_calificacion_directorio_socios( $IDClub, $IDDirectorio)
	{
		$dbo =& SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM DirectorioSocioCalificacion WHERE IDDirectorioSocio = '".$IDDirectorio."' and Publicar = 'S' ORDER BY IDDirectorioSocioCalificacion Desc";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $r["IDSocio"] . "'", "array" );
				$calificacion["IDDirectorioCalificacion"] = $r["IDDirectorioCalificacion"];
				$calificacion["IDSocio"] = $r["IDSocio"];
				$calificacion["Socio"] = utf8_encode( $datos_socio["Nombre"] . " " . $datos_socio["Apellido"] );
				$calificacion["Calificacion"] = $r["Calificacion"];
				$calificacion["ComentarioCalificacion"] = $r["ComentarioCalificacion"];
				$calificacion["Fecha"] = $r["Fecha"];
				array_push($response, $calificacion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
	}



	function set_reserva_cumplida($IDClub,$IDSocio,$IDUsuario,$IDReservaGeneral,$ReservaCumplida,$ReservaCumplidaSocio,$Observacion,$Invitados){
	$dbo =& SIMDB::get();

	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDUsuario )  && !empty( $IDReservaGeneral )  && !empty( $ReservaCumplida )  && !empty( $ReservaCumplidaSocio ) ){


			$datos_invitado= json_decode($Invitados, true);
			//Recorro los datos de los invitados
			if (count($datos_invitado)>0):
				foreach($datos_invitado as $detalle_datos):
					$IDReservaGeneralInvitado = $detalle_datos["IDReservaGeneralInvitado"];
					$ReservaCumplidaInvitado = $detalle_datos["ReservaCumplidaInvitado"];
					if($ReservaCumplidaInvitado=="S")
						$invitado_asiste++;

					$sql_actualiza_invitado = "Update ReservaGeneralInvitado Set Cumplida = '".$ReservaCumplidaInvitado."' Where IDReservaGeneralInvitado = '".$IDReservaGeneralInvitado."' and IDReservaGeneral = '".$IDReservaGeneral."'";
					$dbo->query($sql_actualiza_invitado);
				endforeach;
			endif;

			 if(count($datos_invitado)>0 && $invitado_asiste!=count($datos_invitado) || $ReservaCumplidaSocio =="N")
				$estado_reserva_cumplida = "P";
			else
				$estado_reserva_cumplida = $ReservaCumplida;

			//Actualizo Estado de reserva
			$sql_reserva_estado = "Update ReservaGeneral Set Cumplida = '".$estado_reserva_cumplida."', CumplidaCabeza = '".$ReservaCumplidaSocio."', FechaCumplida = NOW(), IDUsuarioCumplida = '".$IDUsuario."', ObservacionCumplida = '".$Observacion."' Where IDReservaGeneral = '".$IDReservaGeneral."'";
			$dbo->query($sql_reserva_estado);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

	}
	else{
		$respuesta["message"] = "121. Atencion faltan parametros ";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;
	}

	function set_edita_auxiliar_reserva($IDClub,$IDSocio,$IDReservaGeneral,$ListaAuxiliar){
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDReservaGeneral )  && !empty( $ListaAuxiliar )  ){


			//Verifico de nuevo que la lista de auxiliares seleccionados esten disponibles
			if (  !empty( $ListaAuxiliar ) ):
					$datos_reserva = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '".$IDReservaGeneral."' ", "array" );
					$datos_auxiliares_revisar = json_decode( $ListaAuxiliar, true );
					$response_dispo_aux = SIMWebserviceQuemado::get_auxiliares( $IDClub, $datos_reserva["IDServicio"], $datos_reserva["Fecha"], $datos_reserva["Hora"] );
					foreach ( $response_dispo_aux[ "response" ] as $datos_conf_aux ):
							foreach ( $datos_conf_aux[ "Auxiliares" ] as $datos_aux ):
											$array_aux_disponibles[]=$datos_aux["IDAuxiliar"];
							endforeach;
					endforeach;

					if ( count( $datos_auxiliares_revisar ) > 0 ):
							foreach ( $datos_auxiliares_revisar as $key_aux => $auxiliar_seleccionado ):
									if ( !in_array($auxiliar_seleccionado["IDAuxiliar"],$array_aux_disponibles) ):
											$respuesta[ "message" ] = "El auxiliar ".$auxiliar_seleccionado["Nombre"]." no esta disponible en ese horario";
											$respuesta[ "success" ] = false;
											$respuesta[ "response" ] = NULL;
											return $respuesta;
									endif;
							endforeach;
					endif;
			endif;

			$datos_auxiliares = json_decode( $ListaAuxiliar, true );
			if ( count( $datos_auxiliares ) > 0 ):
				$cantidad_auxiliar = count( $datos_auxiliares );
			//$ArrayAuxiliar = implode(",",$datos_auxiliares);
			foreach ( $datos_auxiliares as $key_aux => $auxiliar_seleccionado ):
				$array_id_auxiliar[] = $auxiliar_seleccionado[ "IDAuxiliar" ];


			endforeach;
			if ( count( $array_id_auxiliar ) > 0 ):
				$IDAuxiliar = implode( ",", $array_id_auxiliar ) . ",";
			endif;
			endif;

			//Actualizo Estado de reserva
			$sql_reserva_estado = "Update ReservaGeneral Set IDAuxiliar = '".$IDAuxiliar."' Where IDReservaGeneral = '".$IDReservaGeneral."' Limit 1";
			$dbo->query($sql_reserva_estado);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

	}
	else{
		$respuesta["message"] = "A121. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;
	}


	function valida_pago_reserva($IDClub,$IDSocio,$IDReservaGeneral){
	$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM ReservaGeneral WHERE IDReservaGeneral = '".$IDReservaGeneral."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				if($r["IDTipoPago"]==1 || $r["IDTipoPago"]==4): // payU
					if($r["EstadoTransaccion"]==""):
						$respuesta["message"] = "No se ha obtenido respuesta de la transaccion de pagos online ";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;

					elseif($r["EstadoTransaccion"]=="A" || $r["EstadoTransaccion"]=="4"):
						$respuesta["message"] = "Reserva pagada correctamente";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					else:
						$respuesta["message"] = "El pago no fue realizado";
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
					endif;
				else:
					$respuesta["message"] = "La reserva no fue pagada por pagos online ";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				endif;
			}

		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}

	function valida_pago_domicilio($IDClub,$IDSocio,$IDDomicilio,$Version){
	$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM Domicilio".$Version." WHERE IDDomicilio = '".$IDDomicilio."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				if($r["IDTipoPago"]==1 || $r["IDTipoPago"]==4 || $r["IDTipoPago"]==5): // payU
					if($r["EstadoTransaccion"]==""):
						$respuesta["message"] = "No se ha obtenido respuesta de la transaccion de pagos online ";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;

					elseif($r["EstadoTransaccion"]=="A" || $r["EstadoTransaccion"]=="4" || $r["EstadoTransaccion"]=="AUTHORISED" || $r["EstadoTransaccion"]=="Aprobada"):
						$respuesta["message"] = "Domicilio pagado correctamente";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					else:
						$respuesta["message"] = "El pago no fue realizado";
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
					endif;
				else:
					$respuesta["message"] = "El domicilio no fue pagado por pagos online ";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				endif;
			}

		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}


	function verifica_place_to_pay($IDClub,$IDSocio,$IDEventoRegistro){

	$dbo =& SIMDB::get();
	$transaccion_pendiente="";
	$datos_club = $dbo->fetchAll( "Club", " IDClub = '".$IDClub."' ", "array" );
	$datos_transaccion = $dbo->fetchAll( "PeticionesPlacetoPay", " tipo='EventoRegistro' and IDClub = '".$IDClub."' and IDMaestro = '".$IDEventoRegistro."' and estado_transaccion = 'OK' ", "array" );
	$login = $datos_club["ApiLogin"];
	$secretKey = $datos_club["ApiKey"];

	if((int)$datos_transaccion["IDPeticionesPlacetoPay"]>0){
			//obtención de nonce
			if (function_exists('random_bytes')) {
			$nonce = bin2hex(random_bytes(16));
			} elseif (function_exists('openssl_random_pseudo_bytes')) {
					$nonce = bin2hex(openssl_random_pseudo_bytes(16));
			} else {
					$nonce = mt_rand();
			}
			$nonceBase64 = base64_encode($nonce);

			$seed = date('c');
			$tranKey = base64_encode(sha1($nonce . $seed . $secretKey, true));

			$auth = array (
					"auth" => array(
							"login" => $login,
							"seed" => $seed,
							"nonce" => $nonceBase64,
							"tranKey" => $tranKey)
			);

			if($datos_club["IsTest"]==1){
				$url_place_to_pay=ENDPOINT_PLACE_TO_PAY_TEST;
			}
			else{
				$url_place_to_pay=ENDPOINT_PLACE_TO_PAY;
			}
				$url_place_to_pay.'redirection/api/session/'.$datos_transaccion["request_id"];
				$ch = curl_init($url_place_to_pay.'redirection/api/session/'.$datos_transaccion["request_id"]);
				curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
				$headers = ['Content-Type:application/json; charset=utf-8'];
				curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
				curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode( $auth ) );
				$response = curl_exec($ch);
				curl_close($ch);
				// do anything you want with your response
				$respuesta = json_decode($response, true);

				if($respuesta["status"]["status"] == "PENDING"){
					$transaccion_pendiente=1;
				}
	}

		return $transaccion_pendiente;
	}

	function valida_pago_evento($IDClub,$IDSocio,$IDEventoRegistro,$Version=""){
	$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM EventoRegistro".$Version." WHERE IDEventoRegistro".$Version." = '".$IDEventoRegistro."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				//para place to pay verifico que no se encuentre en estado pendiente
				$verifica_estado_ptp=self::verifica_place_to_pay($IDClub,$IDSocio,$IDEventoRegistro);
				if($verifica_estado_ptp==1){
					$respuesta["message"] = "La transaccion se encuentra pendiente de aprobacion de la entidad financiera";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
					return $respuesta;
				}


				if($r["IDTipoPago"]==1 || $r["IDTipoPago"]==4): // payU
					if($r["EstadoTransaccion"]==""):
						$respuesta["message"] = "No se ha obtenido respuesta de la transaccion de pagos online ";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;

					elseif($r["EstadoTransaccion"]=="A" || $r["EstadoTransaccion"]=="4"):
						$respuesta["message"] = "Reserva pagada correctamente";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					else:
						$respuesta["message"] = "El pago no fue realizado";
						$respuesta["success"] = false;
						$respuesta["response"] = $response;
					endif;
				else:
					$respuesta["message"] = "La reserva no fue pagada por pagos online ";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				endif;
			}

		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}


	function get_factura_ftp2($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$host = '190.66.22.93';
	$user = 'miclubapp';
	$pass = 'Miclub2017';


	//$AccionSocio="0001";

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );

	/// set up basic connection
	$conn_id = ftp_connect($host,"64007");

	//Comprobar que la conexión ha tenido éxito
	if (!$conn_id) {
		$respuesta["message"] = "Lo sentimos no hay conexion a la base de extractos";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
		return $respuesta;
	}


	// login with username and password
	$login_result = ftp_login($conn_id, $user, $pass);

	// enabling passive mode
	ftp_pasv( $conn_id, true );

	// Obtener los archivos contenidos en el directorio actual
			$files = ftp_nlist($conn_id, "");

			foreach ($files as $file):
			if (ftp_size($conn_id, $file) == -1): //Es directorio
				$array_directorio[]=$file;
				//Ingreso a ese directorio y consulto los archivos
				 $directorio = ftp_nlist( $conn_id, $file );
				 foreach ($directorio as $archivo):
					$ruta_original=$archivo;
					$archivo = str_replace($file."/","",$archivo);
					//Capturo Accion Socio
					$array_nombre_archivo=explode("_",$archivo);
					$accion_socio_pdf= str_replace(".pdf","",$array_nombre_archivo[1]);
					//Comparo si el archivo pertenece al socio a consultar
					if($AccionSocio==$accion_socio_pdf):


						//$guardar_local = EXTRACTOS_DIR."/".$IDSocio.$file."extractor.pdf";
						//$ruta_local = $IDSocio.$file."extractor.pdf";
						$ruta_local = $ruta_original;
						// descargar $server_file y guardarlo en $local_file
						//ftp_get($conn_id, $guardar_local, $ruta_original, FTP_BINARY);

						/*
						if (ftp_get($conn_id, $guardar_local, $ruta_original, FTP_BINARY)) {
							echo "Se ha guardado satisfactoriamente en $local_file <br>";
						} else {
							echo "Ha habido un problemaaa<br>";
						}
						*/

						$array_pdf[$file]=$ruta_local;

					endif;
				 endforeach;
			endif;
			endforeach;


			foreach($array_pdf as $fecha => $archivo_extracto):

					$nombre_categoria ="Extractos";

				$fecha_extracto = SIMResources::$meses[((int)substr($fecha,4,2)-1)] . " de " .  substr($fecha,0,4) . " ";

				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $archivo_extracto;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = $fecha_extracto;
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";

				$array_categoria_factura [$nombre_categoria][]	 = $factura;

			endforeach;



		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;



	// cerrar la conexión ftp
	ftp_close($conn_id);


	return $respuesta;
	}


	function get_factura_zeus($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

				$nombre_categoria ="Extractos";
				$fecha_extracto = "Extracto Disponible";
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = "Extracto".$IDSocio;
				$factura["NumeroFactura"] = $fecha;
				$factura["Fecha"] = date("Y-m");
				$factura["ValorFactura"] = "Extracto";
				$factura["Almacen"] = "";
				$array_categoria_factura [$nombre_categoria][]	 = $factura;

				//Movimientos
				$nombre_categoria ="Movimientos";

					$Mes_hasta = (int)date("m") - 1;
										$Mes_desde = $Mes_hasta - 5;
					if((int)$Mes_hasta<=0)
						$Mes_hasta=0;
					if((int)$Mes_desde<=0)
						$Mes_desde=0;

				for($i=$Mes_hasta;$i>=$Mes_desde;$i--):
					$fecha_extracto = "Movimiento Disponible";
					$factura["IDClub"] = $IDClub;
					$factura["IDFactura"] = "Movimiento".$i."Movimiento".$IDSocio;
					$factura["NumeroFactura"] = $fecha;
					$factura["Fecha"] = SIMResources::$meses[(int)$i];
					$factura["ValorFactura"] = "Movimientos";
					$factura["Almacen"] = "";
					$array_categoria_factura [$nombre_categoria][]	 = $factura;
				endfor;





		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):
			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;


		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);


		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;



	return $respuesta;
	}



	function get_detalle_factura_zeus($IDClub,$IDFactura,$NumeroFactura){



	//Valido si es el detalle del extracto o el de los movimientos
	$pos = strpos($IDFactura, "Extracto");
	if ($pos === false) { //Consulta movimientos
		$array_movimiento = explode("Movimiento",$IDFactura);
		$Mes = $array_movimiento[1];
		$IDSocio=$array_movimiento[2];
		if(strlen($Mes)<=1)
			$Mes="0".$Mes;

		if($IDSocio=="84887" || $IDSocio=="5533"):
			$IDSocio="85176";
		endif;

		$respuesta = SIMWebServiceZeus::consulta_movimiento($IDClub,$IDSocio,$Mes);
	} else { // Consulta extractos
		$array_extracto = explode("Extracto",$IDFactura);
		$IDSocio = array_pop($array_extracto);

		if($IDSocio=="84887" || $IDSocio=="5533" ):
			$IDSocio="85176";
		endif;


		$respuesta = SIMWebServiceZeus::consulta_extracto($IDClub,$IDSocio);
	}
	return $respuesta;

	}

	function get_factura_colombia($IDClub,$IDSocio,$FechaInicio,$FechaFin){

			$dbo =& SIMDB::get();

			$nombre_categoria ="Estado Cuenta";
			$fecha_extracto = date("Y");

			$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
			//$documento_socio="14940740";
			//$accion_socio="2396";
			//$secuencia_socio="00";
			$documento_socio=$datos_socio["NumeroDocumento"];
			$accion_socio==$datos_socio["Accion"];
			$secuencia_socio="00";

			$Token= SIMWebServiceZeus::obtener_token_club(URLZEUS_CLUBCLOLOMBIA,USUARIOZEUS_CLUBCOLOMBIA,CLAVEZEUS_CLUBCOLOMBIA);
			$array_estado = SIMWebServiceZeus::estado_socio(URLZEUS_CLUBCLOLOMBIA,$Token,$documento_socio,$accion_socio,$secuencia_socio);
			$valor=str_replace(',','.',$array_estado->item->saldocartera);


				$factura["IDClub"] = $IDClub;
				$valor_mes=(int)$row_valor["Mes"]-1;
				$factura["IDFactura"] = $valor."-".$IDSocio;
				$factura["NumeroFactura"] = date("Y-m-d");
				$factura["Fecha"] = "Saldo a la fecha";
				$factura["ValorFactura"] = "$".number_format($valor,2,'','.');
				$factura["Almacen"] = $row_valor["Detalle"];

				$array_categoria_factura [$nombre_categoria][]	 = $factura;


			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):
				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

			$datos_facturas["BuscadorFechas"] = "N";
			$datos_facturas["Categorias"] = $response_categoria;

			array_push($response, $datos_facturas);

			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;

		return $respuesta;
	}


	function get_detalle_factura_colombia($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();
		$array_dato_factura=explode("-",$IDFactura);
		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$array_dato_factura[1]."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$valor=$array_dato_factura["0"];
		$valor = "$".number_format($valor,2,'','.');


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle ESTADO CUENTA</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td>
										El saldo de cartera a la fecha es de: <br>'.$valor.'<br>
										<a href="https://www.clubcolombia.org/facturacion.php">
										<img src="'.URLROOT.'plataform/assets/img/btnpago.png">
										</td>
									</tr>
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = $valor;
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}



	function get_factura_italiano($IDClub,$IDSocio,$FechaInicio,$FechaFin){

			$dbo =& SIMDB::get();

			$nombre_categoria ="Estado Cuenta";
			$fecha_extracto = date("Y");

			$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");

			$documento_socio=$datos_socio["NumeroDocumento"];
			$accion_socio=="";
			$secuencia_socio="";



			$Token= SIMWebServiceZeus::obtener_token_club(URLZEUS_ITALIANO,USUARIOZEUS_ITALIANO,CLAVEZEUS_ITALIANO);
			$array_estado = SIMWebServiceZeus::estado_socio(URLZEUS_CLUBCLOLOMBIA,$Token,$documento_socio,$accion_socio,$secuencia_socio);
			$valor=str_replace(',','.',$array_estado->item->saldocartera);


				$factura["IDClub"] = $IDClub;
				$valor_mes=(int)$row_valor["Mes"]-1;
				$factura["IDFactura"] = $valor."-".$IDSocio;
				$factura["NumeroFactura"] = date("Y-m-d");
				$factura["Fecha"] = "Saldo a la fecha";
				$factura["ValorFactura"] = "$".number_format($valor,2,'','.');
				$factura["Almacen"] = $row_valor["Detalle"];

				$array_categoria_factura [$nombre_categoria][]	 = $factura;


			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):
				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

			$datos_facturas["BuscadorFechas"] = "N";
			$datos_facturas["Categorias"] = $response_categoria;

			array_push($response, $datos_facturas);

			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;

		return $respuesta;
	}


	function get_detalle_factura_italiano($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();
		$array_dato_factura=explode("-",$IDFactura);
		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$array_dato_factura[1]."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$valor=$array_dato_factura["0"];
		$valor = "$".number_format($valor,2,'','.');


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle ESTADO CUENTA</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td>
										El saldo de cartera a la fecha es de: <br>'.$valor.'<br>
										<a href="https://www.clubcolombia.org/facturacion.php">
										<img src="'.URLROOT.'plataform/assets/img/btnpago.png">
										</td>
									</tr>
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = $valor;
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}



	function get_detalle_factura_app($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();

	$response = array();
	$pos = strpos($IDFactura, "Movimiento");
	if ($pos === false) { //Muestra Extracto
		$nombre_archivo=substr($IDFactura,0,3)."_".substr($IDFactura,3);
		$ruta_local = EXTRACTOS_ROOT.$NumeroFactura."/".$nombre_archivo;

		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.'/5169_IMG_0400.PNG">
										</td>
									</tr>
									<tr>
										<td>
										<img src="'.URLROOT.'/admin/images/icons/pdf.gif">
										<a href="'.$ruta_local.'">
											Pulse aca para ver el Extracto
										</a>
										<br><br>
										<a href="http://www.zonapagos.com/t_Clubelrincondecajica">
										<img src="'.URLROOT.'plataform/assets/img/btnpagopereira.png">
										</a>

										</td>
									</tr>
								</table>

							</body>
						</html>';

		}
		else{

			$array_datos=explode("|",$IDFactura);
			$Year=$array_datos[1];
			$Mes=$array_datos[2];
			$AccionSocio=$array_datos[3];


			//detalle movimientos
			 $sql_movimiento = "Select *
								 From SocioMovimiento
							 Where IDClub = '".$IDClub."' and Accion = '".$AccionSocio."'
							 and month(Fecha) = '".$Mes."' and Year(Fecha) = '".$Year."'";
			$result_movimiento = $dbo->query($sql_movimiento);
			while($row_movimiento = $dbo->fetchArray($result_movimiento)):


			$fila_movimiento .='<tr>
													<td>
														'.$row_movimiento["PuntoVenta"].'
													</td>
													<td>
														'.$row_movimiento["Producto"].'
													</td>
													<td>
														'.$row_movimiento["Cantidad"].'
													</td>
													<td>
														'.number_format($row_movimiento["ValorProducto"],0,'','.').'
													</td>
													<td>
														'.$row_movimiento["Fecha"].'
													</td>
													<td>
														'.$row_movimiento["NumeroFactura"].'
													</td>
													<td>
														'.number_format($row_movimiento["Propina"]).'
													</td>
													<td>
														'.number_format($row_movimiento["TotalFactura"]).'
													</td>
												</tr>';
		endwhile;




			$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>
							<style>
											.tabla {
											font-family: Verdana, Arial, Helvetica, sans-serif;
											font-size:8px;
											text-align: center;
											width: 98%;
											align: center;
											}

											.tabla th {
											padding: 5px;
											font-size: 8px;
											background-color: #83aec0;
											background-repeat: repeat-x;
											color: #FFFFFF;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #558FA6;
											border-bottom-color: #558FA6;
											font-family: "Trebuchet MS", Arial;
											text-transform: uppercase;
											}

											.tabla .modo1 {
											font-size: 12px;
											font-weight:bold;
											background-color: #e2ebef;
											background-repeat: repeat-x;
											color: #34484E;
											font-family: "Trebuchet MS", Arial;
											}
											.tabla .modo1 td {
											padding: 5px;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #A4C4D0;
											border-bottom-color: #A4C4D0;
											text-align:right;
											}

											.tabla .modo1 th {
											background-position: left top;
											font-size: 12px;
											font-weight:bold;
											text-align: left;
											background-color: #e2ebef;
											background-repeat: repeat-x;
											color: #34484E;
											font-family: "Trebuchet MS", Arial;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #A4C4D0;
											border-bottom-color: #A4C4D0;
											}

											.tabla .modo2 {
											font-size: 12px;
											font-weight:bold;
											background-color: #fdfdf1;
											background-repeat: repeat-x;
											color: #990000;
											font-family: "Trebuchet MS", Arial;
											text-align:center;
											}
											.tabla .modo2 td {
											padding: 5px;
											}
											.tabla .modo2 th {
											background-position: left top;
											font-size: 12px;
											font-weight:bold;
											background-color: #fdfdf1;
											background-repeat: repeat-x;
											color: #990000;
											font-family: "Trebuchet MS", Arial;
											text-align:left;
											border-right-width: 1px;
											border-bottom-width: 1px;
											border-right-style: solid;
											border-bottom-style: solid;
											border-right-color: #EBE9BC;
											border-bottom-color: #EBE9BC;
											}
											</style>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.'/5169_IMG_0400.PNG">
										</td>
									</tr>
									<tr>
										<td>
											<table class="tabla">
												<tbody>
												<tr>
													<th>
														Pto Vta
													</th>
													<th>
														Prod.
													</th>
													<th>
														Cant.
													</th>
													<th>
														Valor
													</th>
													<th>
														Fecha
													</th>
													<th>
														Num Fac
													</th>
													<th>
														Propina
													</th>
													<th>
														Total
													</th>
												</tr>
												'.$fila_movimiento.'

												</tbody>
											</table>

										</td>
									</tr>
								</table>

							</body>
						</html>';


		}



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}



	function get_detalle_factura_app2($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();

	$host = '190.66.22.93';
	$user = 'miclubapp';
	$pass = 'Miclub2017';


	//$AccionSocio="0001";

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );

	/// set up basic connection
	$conn_id = ftp_connect($host,"64007");

	//Comprobar que la conexión ha tenido éxito
	if (!$conn_id) {
		$respuesta["message"] = "Lo sentimos no hay conexion a la base de extractos";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
		return $respuesta;
	}



	$carpeta_archivo_ftp=substr($IDFactura,0,6);
	$archivo_ftp=substr($IDFactura,6,3)."_".substr($IDFactura,9);
	$ruta_archivo_ftp = $carpeta_archivo_ftp . "/".$archivo_ftp;

	$guardar_local = EXTRACTOS_DIR."/".$IDClub."_".$carpeta_archivo_ftp."_".$archivo_ftp;
	$ruta_local = EXTRACTOS_ROOT."/".$IDClub."_".$carpeta_archivo_ftp."_".$archivo_ftp;


	// login with username and password
	$login_result = ftp_login($conn_id, $user, $pass);

	// enabling passive mode
	ftp_pasv( $conn_id, true );

	ftp_get($conn_id, $guardar_local, $ruta_archivo_ftp, FTP_BINARY);

	// cerrar la conexión ftp
	ftp_close($conn_id);



	$response = array();

	$cuerpo_factura = '<!doctype html>
						<html>
						<head>
						<meta charset="UTF-8">
						<title>Detalle Extracto</title>

						</head>
						<body>
							<a href="'.$ruta_local.'">
							Pulse aca para ver el Extracto
							</a>
						</body>
					</html>';

	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}



	function get_factura_lagartos($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

	$AccionSocio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '".$IDSocio."'" );
	$AccionSocio = substr($AccionSocio,0,4);

	//$AccionSocio="0125";
	$mes_actual=date("Y-m-")."01";
	$sql_extracto = "Select IDSocioExtracto,MONTH(Fecha) as Mes, YEAR(Fecha) as Year, Valor,Fecha  From SocioExtracto Where Accion = '".$AccionSocio."' and Fecha >= '".$mes_actual."'";
	$r_extracto = $dbo->query($sql_extracto);
	while($row_extracto = $dbo->fetchArray($r_extracto)):
		$nombre_categoria ="Extractos";
		$fecha_extracto = SIMResources::$meses[((int)substr($row_extracto["Fecha"],4,2)-1)] . " de " .  substr($row_extracto["Fecha"],0,4) . " ";
		$factura["IDClub"] = $IDClub;
		$factura["IDFactura"] = $row_extracto["IDSocioExtracto"];
		$factura["NumeroFactura"] = $row_extracto["Year"];
		$factura["Fecha"] = $row_extracto["Fecha"];
		$factura["ValorFactura"] = $row_extracto["Valor"];
		$factura["Almacen"] = "";
		$array_categoria_factura [$nombre_categoria][]	 = $factura;
	endwhile;

		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):

			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	return $respuesta;
	}


	function get_detalle_factura_lagartos($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();

	$datos_extracto = $dbo->fetchAll( "SocioExtracto", " IDSocioExtracto = '" . $IDFactura . "' ", "array" );
	$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );

	$response = array();
	$pos = strpos($IDFactura, "Movimiento");
	if ($pos === false) { //Muestra Extracto
		$nombre_archivo=substr($IDFactura,0,3)."_".substr($IDFactura,3);
		$ruta_local = EXTRACTOS_ROOT.$NumeroFactura."/".$nombre_archivo;

		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td style="color:#0E1671; font-size:18px;">
										<br>
										<b>Valor Cancelar:</b> $'.number_format($datos_extracto["Valor"],0,',','.').'
										<br><br>
										</td>
									</tr>
									<tr>
										<td>
										<!--<a href="https://www.psepagos.co/PSEHostingUI/ShowTicketOffice.aspx?ID=2350">-->
										<a href="https://www.avalpaycenter.com/wps/portal/portal-de-pagos/web/pagos-aval/resultado-busqueda/realizar-pago?idConv=00009471&origen=buscar">
										<img src="'.URLROOT.'plataform/assets/img/btnpago.png">
										</a>
										</td>
									</tr>
								</table>

							</body>
						</html>';

		}

	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.psepagos.co/PSEHostingUI/ShowTicketOffice.aspx?ID=2350";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_factura_pto_tranquilo($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();


			$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
			$datos_socio["Predio"];
			$predio=str_replace("-","",$datos_socio["Predio"]);

			$nombre_categoria ="Estado Cuenta";
			$fecha_extracto = date("Y");

			$sql_valor="SELECT SUM(Debito) as ValorPagar,SUM(Credito) as ValorCredito, month(Fecha) as Mes,year(Fecha) as Anio,SMC.* FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' Group by year(Fecha),month(Fecha)";
			$r_valor=$dbo->query($sql_valor);
			while($row_valor=$dbo->fetchArray($r_valor)){
				$FechaInicioConsulta=$row_valor["Anio"]."-".$row_valor["Mes"]."-01";
				$FechaFinConsulta=$row_valor["Anio"]."-".$row_valor["Mes"]."-30";
				//Consulto si tiene saldo en Cartera
				$sql_cartera="SELECT * FROM SocioSaldoCartera WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioSaldoCartera DESC LIMIT 1";
				$r_cartera=$dbo->query($sql_cartera);
				$row_cartera=$dbo->fetchArray($r_cartera);
				if((int)$row_cartera["Total"]>0){
					$row_valor["ValorPagar"]+=$row_cartera["Total"];
				}

					$row_valor["ValorPagar"]-=$row_valor["ValorCredito"];

				//Consulto si tiene Descuentos
				$sql_desc="SELECT * FROM SocioDescuento WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioDescuento DESC LIMIT 1";
				$r_desc=$dbo->query($sql_desc);
				$row_desc=$dbo->fetchArray($r_desc);
				if((int)$row_desc["DescuentoClubHouse"]>0){
					$row_valor["ValorPagar"]-=$row_desc["DescuentoSerena"];
					$row_valor["ValorPagar"]-=$row_desc["DescuentoClubHouse"];
				}


				$factura["IDClub"] = $IDClub;
				$valor_mes=(int)$row_valor["Mes"]-1;
				$factura["IDFactura"] = $row_valor["Anio"]."-".$row_valor["Mes"]."-".$IDSocio;
				$factura["NumeroFactura"] = SIMResources::$meses[$valor_mes] . " de " . $row_valor["Anio"];
				$factura["Fecha"] = date("Y");
				$factura["ValorFactura"] = "$".number_format($row_valor["ValorPagar"],0,'','.');
				$factura["Almacen"] = $row_valor["Detalle"];

				$array_categoria_factura [$nombre_categoria][]	 = $factura;
			}

			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):
				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

			$datos_facturas["BuscadorFechas"] = "N";
			$datos_facturas["Categorias"] = $response_categoria;

			array_push($response, $datos_facturas);

			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;

	return $respuesta;
	}

	function get_detalle_factura_pto_tranquilo($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();
		$array_dato_factura=explode("-",$IDFactura);
		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$array_dato_factura[2]."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$predio=str_replace("-","",$datos_socio["Predio"]);

		$year_consulta=$array_dato_factura[0];
		$mes_consulta=$array_dato_factura[1];


		$sql_valor="SELECT * FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' and month(Fecha)='".$mes_consulta."' and year(Fecha)='".$year_consulta."'";
		$r_valor=$dbo->query($sql_valor);
		$contador=1;
		while($row_valor=$dbo->fetchArray($r_valor)){

				if((int)$row_valor["Debito"]>0 ){
					$descripcion_concepto=$row_valor["Nombre"];
					$array_valor[$row_valor["Nombre"]]+=$row_valor["Debito"];
					$valor_mostrar=$row_valor["Debito"];
					$valor_total+=$row_valor["Debito"];
				}

				if((int)$row_valor["Credito"]>0 ){
					$descripcion_concepto=$row_valor["Detalle"];
					$array_valor[$row_valor["Nombre"]]-=$row_valor["Credito"];
					$valor_mostrar="-".$row_valor["Credito"];
					$valor_total-=$row_valor["Credito"];
				}

				if(	$array_valor[$row_valor["Nombre"]]>0){




				if($contador%2)
					$fondo="#f7f7f7";
				else
					$fondo="#FFF";
				$detalle_cuenta.='
				<tr bgcolor='.$fondo.'>
					<td>'.$descripcion_concepto.'</td>
				<td>$'.number_format($valor_mostrar,0,'','.').'</td>
				</tr>';
				$contador++;
				$ref_pago=$row_valor["Codigo"];
				$valor_pagar+=$row_valor["Debito"];
			}
				$array_valor_anterior[$row_valor["Nombre"]]=$array_valor[$row_valor["Nombre"]];
		}

		//Consulto si tiene saldo en Cartera
		$FechaInicioConsulta=$year_consulta."-".$mes_consulta."-01";
		$FechaFinConsulta=$year_consulta."-".$mes_consulta."-30";
		//Consulto si tiene saldo en Cartera
		$sql_cartera="SELECT * FROM SocioSaldoCartera WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioSaldoCartera DESC LIMIT 1";
		//$sql_cartera="SELECT * FROM SocioSaldoCartera WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' Order by IDSocioSaldoCartera DESC LIMIT 1";
		$r_cartera=$dbo->query($sql_cartera);
		$row_cartera=$dbo->fetchArray($r_cartera);
		if((int)$row_cartera["Total"]>0){
			$valor_total+=$row_cartera["Total"];
			$detalle_cuenta.='
			<tr bgcolor='.$fondo.'>
				<td>Saldos anteriores</td>
			<td>$'.number_format($row_cartera["Total"],0,'','.').'</td>
			</tr>';
		}

		//Consulto si tiene Descuentos
		$sql_desc="SELECT * FROM SocioDescuento WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioDescuento DESC LIMIT 1";
		$r_desc=$dbo->query($sql_desc);
		$row_desc=$dbo->fetchArray($r_desc);
		if((int)$row_desc["DescuentoClubHouse"]>0){
			$valor_total_desc+=$row_desc["DescuentoClubHouse"];
			$detalle_cuenta.='
			<tr bgcolor='.$fondo.'>
				<td>Descuentos por alivio covid-19 Agua serena 14%</td>
			<td>$'.number_format($row_desc["DescuentoSerena"],0,'','.').'</td>
			</tr>
			<tr bgcolor='.$fondo.'>
				<td>Descuentospor alivio covid-19 Club House 30%</td>
			<td>$'.number_format($row_desc["DescuentoClubHouse"],0,'','.').'</td>
			</tr>
			';
			$valor_total-=$row_desc["DescuentoSerena"];
			$valor_total-=$row_desc["DescuentoClubHouse"];
		}


		$detalle_cuenta.='
		<tr bgcolor= #c47e7e >
			<td>Valor Total: </td>
		<td>$'.number_format($valor_total,0,'','.').'</td>
		</tr>';


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle ESTADO CUENTA</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td>
										<table align="center">
											<tr bgcolor="#24508e">
												<td style="color:#FFF">Detalle</td>
												<td style="color:#FFF">Valor</td>
											</tr>
											'.$detalle_cuenta.'
										</table>
										</td>
									</tr>
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="S";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = "$".number_format($r["ValorPagar"],0,",",".");
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_factura_mi_conjunto($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();
			$IDClub=71;

			$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
			$datos_socio["Predio"];
			$predio=str_replace("-","",$datos_socio["Predio"]);

			$nombre_categoria ="Estado Cuenta";
			$fecha_extracto = date("Y");

			$sql_valor="SELECT SUM(Debito) as ValorPagar,month(Fecha) as Mes,year(Fecha) as Anio,SMC.* FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' Group by year(Fecha),month(Fecha)";
			$r_valor=$dbo->query($sql_valor);
			while($row_valor=$dbo->fetchArray($r_valor)){
				$FechaInicioConsulta=$row_valor["Anio"]."-".$row_valor["Mes"]."-01";
				$FechaFinConsulta=$row_valor["Anio"]."-".$row_valor["Mes"]."-30";
				//Consulto si tiene saldo en Cartera
				$sql_cartera="SELECT * FROM SocioSaldoCartera WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioSaldoCartera DESC LIMIT 1";
				$r_cartera=$dbo->query($sql_cartera);
				$row_cartera=$dbo->fetchArray($r_cartera);
				if((int)$row_cartera["Total"]>0){
					$row_valor["ValorPagar"]+=$row_cartera["Total"];
				}


				$factura["IDClub"] = $IDClub;
				$valor_mes=(int)$row_valor["Mes"]-1;
				$factura["IDFactura"] = $row_valor["Anio"]."-".$row_valor["Mes"]."-".$IDSocio;
				$factura["NumeroFactura"] = SIMResources::$meses[$valor_mes] . " de " . $row_valor["Anio"];
				$factura["Fecha"] = date("Y");
				$factura["ValorFactura"] = "$".number_format($row_valor["ValorPagar"],0,'','.');
				$factura["Almacen"] = $row_valor["Detalle"];

				$array_categoria_factura [$nombre_categoria][]	 = $factura;
			}

			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):
				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

			$datos_facturas["BuscadorFechas"] = "N";
			$datos_facturas["Categorias"] = $response_categoria;

			array_push($response, $datos_facturas);

			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;

	return $respuesta;
	}

	function get_detalle_factura_mi_conjunto($IDClub,$IDFactura,$NumeroFactura){
		$IDClub=71;
		$dbo =& SIMDB::get();
		$array_dato_factura=explode("-",$IDFactura);
		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$array_dato_factura[2]."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$predio=str_replace("-","",$datos_socio["Predio"]);

		$year_consulta=$array_dato_factura[0];
		$mes_consulta=$array_dato_factura[1];


		$sql_valor="SELECT * FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' and month(Fecha)='".$mes_consulta."' and year(Fecha)='".$year_consulta."'";
		$r_valor=$dbo->query($sql_valor);
		$contador=1;
		while($row_valor=$dbo->fetchArray($r_valor)){

				if((int)$row_valor["Debito"]>0 ){
					$descripcion_concepto=$row_valor["Nombre"];
					$array_valor[$row_valor["Nombre"]]+=$row_valor["Debito"];
					$valor_mostrar=$row_valor["Debito"];
				}

				if((int)$row_valor["Credito"]>0 ){
					$descripcion_concepto=$row_valor["Detalle"];
					$array_valor[$row_valor["Nombre"]]-=$row_valor["Credito"];
					$valor_mostrar="-".$row_valor["Credito"];
				}

				if(	$array_valor[$row_valor["Nombre"]]>0){



				$valor_total+=$row_valor["Debito"];
				if($contador%2)
					$fondo="#f7f7f7";
				else
					$fondo="#FFF";
				$detalle_cuenta.='
				<tr bgcolor='.$fondo.'>
					<td>'.$descripcion_concepto.'</td>
				<td>$'.number_format($valor_mostrar,0,'','.').'</td>
				</tr>';
				$contador++;
				$ref_pago=$row_valor["Codigo"];
				$valor_pagar+=$row_valor["Debito"];
			}
				$array_valor_anterior[$row_valor["Nombre"]]=$array_valor[$row_valor["Nombre"]];
		}

		//Consulto si tiene saldo en Cartera
		$FechaInicioConsulta=$year_consulta."-".$mes_consulta."-01";
		$FechaFinConsulta=$year_consulta."-".$mes_consulta."-30";
		//Consulto si tiene saldo en Cartera
		$sql_cartera="SELECT * FROM SocioSaldoCartera WHERE IDClub= '".$IDClub."' and Codigo='".$predio."' and FechaTrCr >='".$FechaInicioConsulta."' and FechaTrCr<='".$FechaFinConsulta."' Order by IDSocioSaldoCartera DESC LIMIT 1";
		$r_cartera=$dbo->query($sql_cartera);
		$row_cartera=$dbo->fetchArray($r_cartera);
		if((int)$row_cartera["Total"]>0){
			$valor_total+=$row_cartera["Total"];
			$detalle_cuenta.='
			<tr bgcolor='.$fondo.'>
				<td>Saldos anteriores</td>
			<td>$'.number_format($row_cartera["Total"],0,'','.').'</td>
			</tr>';
		}


		$detalle_cuenta.='
		<tr bgcolor= #c47e7e >
			<td>Valor Total: </td>
		<td>$'.number_format($valor_total,0,'','.').'</td>
		</tr>';


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle ESTADO CUENTA</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td>
										<table align="center">
											<tr bgcolor="#24508e">
												<td style="color:#FFF">Detalle</td>
												<td style="color:#FFF">Valor</td>
											</tr>
											'.$detalle_cuenta.'
										</table>
										</td>
									</tr>
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="S";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = "$".number_format($r["ValorPagar"],0,",",".");
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}


	function get_factura_arrayanes_ec($IDClub,$IDSocio,$FechaInicio,$FechaFin){

	$dbo =& SIMDB::get();

			//$IDSocio=144383;

			$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
			$nombre_categoria ="Consumos";
			$fecha_extracto = date("Y");


			$sql_valor="SELECT * FROM FacturaConsumo WHERE IDClub= '".$IDClub."' and IDSocio='".$IDSocio."' and Estado = 'PendientePago' ORDER BY IDFacturaConsumo DESC";
			$r_valor=$dbo->query($sql_valor);
			while($row_valor=$dbo->fetchArray($r_valor)){
				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $row_valor["IDFacturaConsumo"];
				$factura["NumeroFactura"] = $row_valor["NumeroDocumentoFactura"];
				$factura["Fecha"] = $row_valor["FechaTrCr"];
				$factura["ValorFactura"] = "$".number_format($row_valor["Total"],2,',','.');
				$factura["Almacen"] = $row_valor["Estado"];
				$array_categoria_factura [$nombre_categoria][]	 = $factura;
			}

			$response = array();
			$response_categoria = array();
			foreach($array_categoria_factura as $nombre_categoria => $facturas):
				$datos_factura_categoria["Nombre"] = $nombre_categoria;
				$datos_factura_categoria["Facturas"] = $facturas;
				array_push($response_categoria, $datos_factura_categoria);
			endforeach;

			$datos_facturas["BuscadorFechas"] = "N";
			$datos_facturas["Categorias"] = $response_categoria;

			array_push($response, $datos_facturas);

			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;

	return $respuesta;
	}

	function get_detalle_factura_arrayanes_ec($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();
		$datos_factura =$dbo->fetchAll("FacturaConsumo"," IDFacturaConsumo = '".$IDFactura."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );


		$array_datos_producto=explode("*",$datos_factura["Detalle"]);
		foreach($array_datos_producto as $producto){
			$array_producto=explode(",",$producto);
			$detalle_cuenta.='
			<tr bgcolor= #fff >
				<td>'.$array_producto[1].'</td>
				<td align="center">'.$array_producto[2].'</td>
				<td>'.$array_producto[3].'</td>
			</tr>';

		}

		$detalle_cuenta.='
		<tr bgcolor= #c47e7e >
			<td></td>
			<td>Iva: </td>
			<td>$'.number_format($datos_factura["Iva"],2,',','.').'</td>
		</tr>
		<tr bgcolor= #c47e7e >
			<td></td>
			<td>Servicio: </td>
			<td>$'.number_format($datos_factura["Servicio"],2,',','.').'</td>
		</tr>
		<tr bgcolor= #c47e7e >
			<td></td>
			<td>Valor Total: </td>
			<td>$'.number_format($datos_factura["Total"],2,',','.').'</td>
		</tr>';

	//$texto_fac=str_replace("\r","<br>",$datos_factura["TextoRecibo"]);
			$texto_fac=$datos_factura["TextoRecibo"];

			$texto_fac=str_replace("ƒ","&nbsp;",$texto_fac);
			$texto_fac=str_replace("Æ?","&nbsp;",$texto_fac);



		if($datos_factura["Estado"]!="Pagada"){
				$formas_pago='
					<tr>
					<td align="center">
						PAGAR CON
						<a href="https://miclubapp.com/placetopaygeneral.php?id='.$IDFactura.'&IDClub='.$IDClub.'" target="_self">
						<img src="'.URLROOT.'plataform/assets/img/Logos_PlacetoPay.png" width=300 height=85>
						</a>
						<a href="https://miclubapp.com/ptp_historico.php?IDSocio='.$datos_factura["IDSocio"].'&IDClub='.$IDClub.'" target="_blank">
						Ver hist&oacute;rico de transacciones
						</a>
					</td>
				</tr>';

				$formas_pago.='
				<tr>
					<td align="center">
						<!--<a href="https://miclubapp.com/payphone.php?id='.$IDFactura.'&IDClub='.$IDClub.'">-->
						<img src="'.URLROOT.'plataform/assets/img/payphone.jpg" width=200 height=122 >
						<!--</a>-->
						<form action="https://www.miclubapp.com/payphone.php" name="payphone" id="payphone" method="post">
							<input type="text" style="font-family: sans-serif;font-size: 18px;font-weight: 400;color: #ffffff;background: #889ccf;margin: 0 0 25px;overflow: hidden;padding: 20px;" name="Celular" id="Celular" placeholder="Digita tu numero de celular" required>
							<input type="hidden" name="IDFactura" value="'.$IDFactura.'">
							<input type="hidden" name="IDClub" value="'.$IDClub.'">
							<input type="submit" value="Enviar">
						</form>
					</td>
				</tr>';
		}


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Factura</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td >
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td align="center">
										<table align="center">
											<!--
											<tr bgcolor="#24508e">

												<td style="color:#FFF; font-size:24px; ">Producto</td>
												<td style="color:#FFF;font-size:24px;">Cantidad</td>
													<td style="color:#FFF;font-size:24px;">Valor</td>
											</tr>
											-->

											<tr>
											<td>
											'.$texto_fac.'
											</td>
											</tr>
										</table>
										<br>
										ESTADO FACTURA: '.$datos_factura["Estado"].'
										</td>
									</tr>
									'.$formas_pago.'
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = "$".number_format($r["ValorPagar"],0,",",".");
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";


	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}


	function get_factura_fontanar($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();
		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDSocio."' ","array");
		$datos_socio["Predio"];
		$array_predio=explode(" ",$datos_socio["Predio"]);
		$predio=end($array_predio);


		$nombre_categoria ="Estado Cuenta";
		$fecha_extracto = date("Y");

		//$sql_valor="SELECT SUM(Debito) as ValorPagar,month(Fecha) as Mes,year(Fecha) as Anio,SMC.* FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' Group by year(Fecha),month(Fecha)";
		$sql_meses="SELECT Detalle,month(Fecha) as Mes,year(Fecha) as Anio,SMC.* FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' Group by year(Fecha),month(Fecha)";
		$r_meses=$dbo->query($sql_meses);
		while($row_meses=$dbo->fetchArray($r_meses)){
			$sql_valores="SELECT * FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$predio."' and month(Fecha) = '".$row_meses["Mes"]."' and year(Fecha) = '".$row_meses["Anio"]."' ";
			$r_valores=$dbo->query($sql_valores);
			$valor_mes=0;
			while($row_valores=$dbo->fetchArray($r_valores)){
					//Para los demas conjuntos depende la fecha se cobra un valor para administacion
					$dia_hoy=(int)date("d");
					if($dia_hoy<=15)
						if((int)$row_valores["Porcret"]>0)
							$columna_sumar = "Porcret";
						else
							$columna_sumar = "Debito";
					else
						$columna_sumar = "Cencosto";

				$valor_acumulado +=  (int)$row_valores[$columna_sumar];

			}

			$factura["IDClub"] = $IDClub;
			$valor_mes=(int)$row_meses["Mes"]-1;
			$factura["IDFactura"] = $row_meses["Anio"]."-".$row_meses["Mes"]."-".$IDSocio;
			$factura["NumeroFactura"] = SIMResources::$meses[$valor_mes] . " de " . $row_meses["Anio"];
			$factura["Fecha"] = date("Y");
			$factura["ValorFactura"] = "$".number_format($valor_acumulado,0,'','.');
			$factura["Almacen"] = $row_meses["Detalle"];

			$array_categoria_factura [$nombre_categoria][]	 = $factura;

		}

		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):
			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;

		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	return $respuesta;
	}

	function get_detalle_factura_fontanar($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();
		$array_dato_factura=explode("-",$IDFactura);

		$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$array_dato_factura[2]."' ","array");
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );

		$year_consulta=$array_dato_factura[0];
		$mes_consulta=$array_dato_factura[1];


		$sql_valor="SELECT * FROM SocioMovimientoCuenta SMC WHERE IDClub= '".$IDClub."' and Nit='".$datos_socio["Predio"]."' and month(Fecha)='".$mes_consulta."' and year(Fecha)='".$year_consulta."'";
		$r_valor=$dbo->query($sql_valor);
		$contador=1;
		while($row_valor=$dbo->fetchArray($r_valor)){

				if((int)$row_valor["Debito"]>0 ){

					$dia_hoy=(int)date("d");
					if($row_valor["Nombre"] == "CUOTAS DE ADMINISTRACION"){
						if($dia_hoy<=15)
							if((int)$row_valores["Porcret"]>0)
								$columna_sumar = "Porcret";
							else
								$columna_sumar = "Debito";
						else
							$columna_sumar = "Cencosto";
					}
					else{
						$columna_sumar = "Debito";
					}


					$descripcion_concepto=$row_valor["Nombre"];
					$array_valor[$row_valor["Nombre"]]+=$row_valor[$columna_sumar];
					$valor_mostrar=$row_valor[$columna_sumar];
				}

				if((int)$row_valor["Credito"]>0 ){
					$descripcion_concepto=$row_valor["Detalle"];
					$array_valor[$row_valor["Nombre"]]-=$row_valor["Credito"];
					$valor_mostrar="-".$row_valor["Credito"];
				}

				if(	$array_valor[$row_valor["Nombre"]]>0){



				$valor_total+=$row_valor["Debito"];
				if($contador%2)
					$fondo="#f7f7f7";
				else
					$fondo="#FFF";
				$detalle_cuenta.='
				<tr bgcolor='.$fondo.'>
					<td>'.$descripcion_concepto.'</td>
				<td>$'.number_format($valor_mostrar,0,'','.').'</td>
				</tr>';
				$contador++;
				$ref_pago=$row_valor["Codigo"];
				$valor_pagar+=$row_valor["Debito"];
			}
				$array_valor_anterior[$row_valor["Nombre"]]=$array_valor[$row_valor["Nombre"]];




		}
		$detalle_cuenta.='
		<tr bgcolor= #c47e7e >
			<td>Valor Total: </td>
		<td>$'.number_format($valor_total,0,'','.').'</td>
		</tr>';


		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle ESTADO CUENTA</title>
							</head>
							<body>
								<table align="left" width="100%">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
										</td>
									</tr>
									<tr>
										<td>
										<table align="center">
											<tr bgcolor="#24508e">
												<td style="color:#FFF">Detalle</td>
												<td style="color:#FFF">Valor</td>
											</tr>
											'.$detalle_cuenta.'
										</table>
										</td>
									</tr>
								</table>
							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="S";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = "$".number_format($r["ValorPagar"],0,",",".");
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_medellin($IDClub,$IDFactura,$NumeroFactura){
		$dbo =& SIMDB::get();

		$server = DBHOST_MEDELLIN;
		// Connect to Sql server CASMPRESTRE MEDELLIN
		try {
				$hostname = $server;
				$port = "";
				$dbname = DBNAME_MEDELLIN;
				$username = DBUSER_MEDELLIN;
				$pw = DBPASS_MEDELLIN;
				$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
			} catch (PDOException $e) {
				//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
				echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
				exit;
			}

		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );


		$array_factura=explode("|",$IDFactura);
		if($array_factura[1]!="Movimiento"){

									$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$IDFactura."' ","array");
									//$IDSocio=82704;
									if(substr($datos_socio["Accion"], -2) =="00") // Es el titular
											$AccionSocio=substr($datos_socio["Accion"],0,-2);
									else
										$AccionSocio=$datos_socio["Accion"];




									$sql_detalle = "SELECT
															 CAST(codigo_cliente AS INTEGER) AS codigo_cliente,
															 CAST(nombre_cliente AS TEXT) AS nombre_cliente,
															 CAST(ident_cliente AS TEXT) AS ident_cliente,
															 CAST(seccion AS INTEGER) AS seccion,
															 CAST(concepto AS TEXT) AS concepto,
															 CAST(nombre_pagador AS TEXT) AS nombre_pagador,
															 CAST(nit_pagador  AS TEXT) AS nit_pagador,
															 CAST(cargo AS INTEGER) AS cargo,
															 CAST(documento AS TEXT) AS documento,
															 CAST(fecha AS DATETIME) AS fecha,
															 CAST(area AS TEXT) AS area,
															 CAST(cargo AS INTEGER) AS cargo,
															 CAST(titular AS INTEGER) AS titular
															 FROM [vapp_estados_cuenta]
															 WHERE codigo_derecho = $AccionSocio and  cargo>0 Order by titular asc ";

										$sql = $dbh->query($sql_detalle);


										$contador=1;

											while ($row =$sql->fetch()){
											 $ValorTotal+=(int)$row["cargo"];
											 $array_fecha=explode(" ",$row["fecha"]);
											 $array_cliente[utf8_encode($row["nombre_cliente"])]+=(int)$row["cargo"];
											 $NombreCliente=utf8_encode($row["nombre_cliente"]);
											 $Titular=$row["titular"];
											 $Area=$row["area"];
											 $Concepto=$row["concepto"];
											 $Documento=$row["documento"];
											 $Fecha=$array_fecha[0] . ' '. $array_fecha[1].' ' .$array_fecha[2];
											 $array_detalle_cliente[$NombreCliente][$Area][$Concepto][$Documento]=$Fecha."|".(int)$row["cargo"];
										}

										//krsort($array_detalle_cliente);
										$tabla_detalle="<table class='tabla'><tbody><tr><th colspan=3>Nombre</th><th>Doc.</th><th>Fecha</th><th>Cargo Mes</th></tr>";
										foreach($array_detalle_cliente as $nombre_cliente => $array_area){
										 if($contador%2)
											 $fondo="#f7f7f7";
										 else
											 $fondo="#FFF";

										$tabla_detalle.='<tr bgcolor='.$fondo.'>';
										$tabla_detalle.='<td colspan=6 align=left style="font-weight:bold;">'.$nombre_cliente.'</td>';
										$tabla_detalle.='</tr>';
										 //echo "<br>" . $nombre_cliente;
										 foreach($array_area as $nombre_area => $array_concepto){
											 $tabla_detalle.='<tr bgcolor='.$fondo.'>';
											 $tabla_detalle.='<td>&nbsp;</td><td colspan=5 align=left style="color:#094713;font-weight:bold;">'.$nombre_area.'</td>';
											 $tabla_detalle.='</tr>';
											 //echo "<br>&nbsp;&nbsp;&nbsp;&nbsp;" . $nombre_area;
											 foreach($array_concepto as $nombre_concepto => $array_documento){
												 //$tabla_detalle.='<tr bgcolor='.$fondo.'>';
												 //$tabla_detalle.='<td>&nbsp;</td><td>&nbsp;</td><td colspan=4>'.utf8_encode($nombre_concepto).'</td>';
												 //$tabla_detalle.='</tr>';
													//echo "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $nombre_concepto .":";
													foreach($array_documento as $nombre_documento => $valor){
														$array_datos_detalle=explode("|",$valor);
														$tabla_detalle.='<tr bgcolor='.$fondo.'>';
														$tabla_detalle.='<td>&nbsp;</td><td>&nbsp;</td><td align=left>'.utf8_encode($nombre_concepto).'</td><td>'.$nombre_documento.'</td><td>'.$array_datos_detalle[0].'</td><td align=right>$'.number_format($array_datos_detalle[1],0,'','.').'</td>';
														$tabla_detalle.='</tr>';
														//echo "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" . $nombre_documento.":".$valor;
												 }
											 }
										 }
										 $contador++;
										}
										$tabla_detalle.="<tr><th colspan=5>TOTAL</th><th>$".number_format($ValorTotal,0,'','.')."</th></tr>";
										$tabla_detalle.="<tbody></table>";

									 $tabla_resumen="<table class='tabla'><tbody<tr><th>Nombre</th><th>Cargo Mes</th></tr>";
									 foreach($array_cliente as $nombre => $valor){
										$tabla_resumen.="<tr><td>".$nombre."</td><td align='right'>$".number_format($valor,0,',','.')."</td></tr>";
									 }
									 $tabla_resumen.="</tbody></table>";
			}
			else{
					$sql_detalle_mov="SELECT
									CAST(numero_factura AS TEXT) AS numero_factura,
									CAST(fecha AS DATETIME) AS fecha,
									CAST(lugar AS TEXT) AS lugar,
									CAST(valor  AS INTEGER) AS valor,
									CAST(codigo_derecho AS INTEGER) AS codigo_derecho,
									CAST(tso_codigo_cliente AS INTEGER) AS tso_codigo_cliente,
									CAST(codigo_cliente  AS INTEGER) AS codigo_cliente,
									CAST(nombre_cajero AS TEXT) AS nombre_cajero
									 FROM vapp_enc_documento WHERE numero_factura = '".$array_factura[0]."'  ";
					$sql = $dbh->query($sql_detalle_mov);
					$row =$sql->fetch();

				// Resumen movimiento
				$tabla_resumen.="<table class='tabla'><tbody";
				$tabla_resumen.="<tr><th>Factura</th><td>".$row["numero_factura"]."</td></tr>";
				$tabla_resumen.="<tr><th>Fecha</th><td>".$row["fecha"]."</td></tr>";
				$tabla_resumen.="<tr><th>Lugar</th><td>".utf8_encode($row["lugar"])."</td></tr>";
				$tabla_resumen.="<tr><th>Valor</th><td>$".number_format($row["valor"],0,',','.')."</td></tr>";
				$tabla_resumen.="<tr><th>Cajero</th><td>".utf8_encode($row["nombre_cajero"])."</td></tr>";
				$tabla_resumen.="</tbody></table>";

				//Detalle de la factura
				$sql = $dbh->query("SELECT
								CAST(cantidad_consumo AS INTEGER) AS cantidad_consumo,
								CAST(numero_factura AS TEXT) AS numero_factura,
								CAST(codigo_cliente AS INTEGER) AS codigo_cliente,
								CAST(fecha_cuenta AS DATETIME) AS fecha_cuenta,
								CAST(desc_producto_pos  AS TEXT) AS desc_producto_pos,
								CAST(Valor AS INTEGER) AS Valor
								FROM vapp_det_documento WHERE numero_factura= '".$array_factura[0]."'  ");



				$tabla="<table>
									<tr>
										<td>numero_factura</td>
										<td>codigo_cliente</td>
										<td>fecha_cuenta</td>
										<td>desc_producto_pos</td>
										<td>Valor</td>
									</tr>";

				$tabla_detalle.="<table class='tabla'><tbody>";
				$tabla_detalle.="<tr>";
				$tabla_detalle.="<th>Cantidad</th>";
				$tabla_detalle.="<th>Producto</th>";
				$tabla_detalle.="<th>Valor</th></tr>";

				while ($row =$sql->fetch()){
				$tabla_detalle.="<tr>
						<td>".number_format($row["cantidad_consumo"],0,',','.')."</td>
						<td>".utf8_encode($row["desc_producto_pos"])."</td>
						<td>$".number_format($row[Valor],0,',','.')."</td>
					</tr>";
				}
				$tabla_detalle.="</tbody></table>";

				//Foma de pago
				$consulta_forma_pago="SELECT
								CAST(numero_factura AS TEXT) AS numero_factura,
								CAST(tso_codigo_cliente AS INTEGER) AS tso_codigo_cliente,
								CAST(desc_tipo_pago AS TEXT) AS desc_tipo_pago,
								CAST(consec_pago_cuenta AS INTEGER) AS consec_pago_cuenta,
								CAST(valor AS INTEGER) AS valor
								 FROM vapp_pag_documento WHERE numero_factura= '".$array_factura[0]."' ";
				$sql_forma_pago = $dbh->query($consulta_forma_pago);


					$tabla_forma.="<table class='tabla'><tbody>
									<tr>
										<th>Forma de pago</th>
										<th>Valor</th>
									</tr>";


			while ($row_forma_pago =$sql_forma_pago->fetch()){
				$tabla_forma.="<tr>
						<td>".utf8_encode($row_forma_pago["desc_tipo_pago"])."</td>
						<td>$".number_format($row_forma_pago[valor],0,',','.')."</td>
					</tr>";
				}
				$tabla_forma.="</tbody></table>";


				$tabla_detalle .= $tabla_forma;
			}




		 $response = array();
		 $cuerpo_factura = '<!doctype html>
						 <html>
						 <head>
						 <meta charset="UTF-8">
						 <title>Detalle ESTADO CUENTA</title>
						 <style>
						 .tabla {
						 font-family: Verdana, Arial, Helvetica, sans-serif;
						 font-size:12px;
						 text-align: center;
						 width: 95%;
						 align: center;
						 }

						 .tabla th {
						 padding: 5px;
						 font-size: 16px;
						 background-color: #83aec0;
						 background-repeat: repeat-x;
						 color: #FFFFFF;
						 border-right-width: 1px;
						 border-bottom-width: 1px;
						 border-right-style: solid;
						 border-bottom-style: solid;
						 border-right-color: #558FA6;
						 border-bottom-color: #558FA6;
						 font-family: "Trebuchet MS", Arial;
						 text-transform: uppercase;
						 }

						 .tabla .modo1 {
						 font-size: 12px;
						 font-weight:bold;
						 background-color: #e2ebef;
						 background-repeat: repeat-x;
						 color: #34484E;
						 font-family: "Trebuchet MS", Arial;
						 }
						 .tabla .modo1 td {
						 padding: 5px;
						 border-right-width: 1px;
						 border-bottom-width: 1px;
						 border-right-style: solid;
						 border-bottom-style: solid;
						 border-right-color: #A4C4D0;
						 border-bottom-color: #A4C4D0;
						 text-align:right;
						 }

						 .tabla .modo1 th {
						 background-position: left top;
						 font-size: 12px;
						 font-weight:bold;
						 text-align: left;
						 background-color: #e2ebef;
						 background-repeat: repeat-x;
						 color: #34484E;
						 font-family: "Trebuchet MS", Arial;
						 border-right-width: 1px;
						 border-bottom-width: 1px;
						 border-right-style: solid;
						 border-bottom-style: solid;
						 border-right-color: #A4C4D0;
						 border-bottom-color: #A4C4D0;
						 }

						 .tabla .modo2 {
						 font-size: 12px;
						 font-weight:bold;
						 background-color: #fdfdf1;
						 background-repeat: repeat-x;
						 color: #990000;
						 font-family: "Trebuchet MS", Arial;
						 text-align:center;
						 }
						 .tabla .modo2 td {
						 padding: 5px;
						 }
						 .tabla .modo2 th {
						 background-position: left top;
						 font-size: 12px;
						 font-weight:bold;
						 background-color: #fdfdf1;
						 background-repeat: repeat-x;
						 color: #990000;
						 font-family: "Trebuchet MS", Arial;
						 text-align:left;
						 border-right-width: 1px;
						 border-bottom-width: 1px;
						 border-right-style: solid;
						 border-bottom-style: solid;
						 border-right-color: #EBE9BC;
						 border-bottom-color: #EBE9BC;
						 }
						 </style>
						 </head>
						 <body>
							 <table align="left" width="100%" class="tabla">
								 <tbody>
								 <tr>
									 <td>
									 <img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width=300 height=83>
									 </td>
								 </tr>
								 <tr>
								 <td>
								 '.$tabla_resumen.'
								 </td>
								 </tr>
								 <tr>
								 <td>
								 '.$tabla_detalle.'
								 </td>
								 </tr>
								 <tbody>
							 </table>
						 </body>
					 </html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "";

	$factura["Referencia"] = $r["Referencia"];
	$factura["Observacion"] = $r["Observacion"];
	$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
	$factura["ValorFactura"] = "$".number_format($r["ValorPagar"],0,",",".");
	$factura["Almacen"] = "";
	$factura["TipoPago"] = "WebView";
	$factura["ObligatorioCodigoPago"] = "N";
	$factura["TextoConfirmacionPago"] = "El codigo es obligatorio, debe ser: ".$datos_socio["Predio"];

	$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$datos_socio["Predio"]." por un valor de: $".number_format($valor_pagar,0," ",".")." después de realizar el pago registre ese valor a continuación en Codigo de pago";



	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_factura_pereira($IDClub,$IDSocio,$FechaInicio,$FechaFin){
	$dbo =& SIMDB::get();

		if($IDSocio==53113 || $IDSocio==53112 || $IDSocio==78030)
			$IDSocio=52995;

		$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
		$nombre_categoria ="Extractos";
		$fecha_extracto = date("Y");
		$factura["IDClub"] = $IDClub;
		$factura["IDFactura"] = "";
		$factura["NumeroFactura"] = "Zona de pagos";
		$factura["Fecha"] = date("Y");
		$factura["ValorFactura"] = "Pulse para continuar ";
		$factura["Almacen"] = "";
		$array_categoria_factura [$nombre_categoria][]	 = $factura;

		//Consulto movimientos
		$server = DBHOST_PEREIRA;
		$error_conectar="N";
		try {
				$hostname = $server;
				$port = "";
				$dbname = DBNAME_PEREIRA;
				$username = DBUSER_PEREIRA;
				$pw = DBPASS_PEREIRA;
				$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
			} catch (PDOException $e) {
				$error_conectar="S";
				//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
				//echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
				//exit;
			}

			if($error_conectar=="N"){
				$sql_consumo = $dbh->query("SELECT C.*,P.Nombre FROM Consumos C,Producto P WHERE C.ProductoId=P.ProductoId and TerceroId = '".$datos_socio["NumeroDocumento"]."'");
				while ($row_consumo =$sql_consumo->fetch()){
					$array_consumo[$row_consumo["ConsumoId"]][]=$row_consumo;
				}
				//Resumen
				foreach($array_consumo as $id_consumo => $datos_consumo ){
					$detalle_producto="";
					foreach($datos_consumo as $id_detalle => $datos_detalle ){
						$NumeroConsumo=$datos_detalle["ConsumoId"];
						$FechaConsumo=$datos_detalle["FechaRegis"];
						$Accion=$datos_detalle["AccionId"];
						$Documento=$datos_detalle["TerceroId"];
						$Subtotal=$datos_detalle["Subtotal"];
						$ValorTotal+=$Subtotal;
					}
					$nombre_categoria ="Consumos";
					$fecha_extracto = $FechaConsumo;
					$factura["IDClub"] = $IDClub;
					$factura["IDFactura"] = "Movimiento|".$NumeroConsumo;
					$factura["NumeroFactura"] = $NumeroConsumo;
					$factura["Fecha"] = $fecha_extracto;
					$factura["ValorFactura"] = $ValorTotal;
					$factura["Almacen"] = "";
					$array_categoria_factura [$nombre_categoria][]	 = $factura;
				}
			}

		$response = array();
		$response_categoria = array();
		foreach($array_categoria_factura as $nombre_categoria => $facturas):
			$datos_factura_categoria["Nombre"] = $nombre_categoria;
			$datos_factura_categoria["Facturas"] = $facturas;
			array_push($response_categoria, $datos_factura_categoria);
		endforeach;




		$datos_facturas["BuscadorFechas"] = "N";
		$datos_facturas["Categorias"] = $response_categoria;

		array_push($response, $datos_facturas);

		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;

	return $respuesta;
	}


	function get_detalle_factura_pereira($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$response = array();
		$datos_consulta=explode("|",$IDFactura);
		if($datos_consulta[0]=="Movimiento"){
			$server = DBHOST_PEREIRA;
			$error_conectar="N";
			try {
					$hostname = $server;
					$port = "";
					$dbname = DBNAME_PEREIRA;
					$username = DBUSER_PEREIRA;
					$pw = DBPASS_PEREIRA;
					$dbh = new PDO ("dblib:host=$hostname;dbname=$dbname","$username","$pw");
				} catch (PDOException $e) {
					$error_conectar="S";
					//echo "Failed to get DB handle: " . $e->getMessage() . "\n";
					//echo $respuesta["message"] = "Lo sentimos no hay conexion a la base";
					//exit;
				}

			if($error_conectar=="N"){
					$sql_consumo=$dbh->query("SELECT C.*,P.Nombre FROM Consumos C,Producto P WHERE C.ProductoId=P.ProductoId and C.ConsumoId = '".$datos_consulta[1]."' ");
					while ($row_consumo =$sql_consumo->fetch()){
						$array_consumo[$row_consumo["ConsumoId"]][]=$row_consumo;
					}
					foreach($array_consumo as $id_consumo => $datos_consumo ){
						$detalle_producto="";
						foreach($datos_consumo as $id_detalle => $datos_detalle ){
							$NumeroConsumo=$datos_detalle["ConsumoId"];
							$FechaConsumo=$datos_detalle["FechaRegis"];
							$Accion=$datos_detalle["AccionId"];
							$Documento=$datos_detalle["TerceroId"];
							$Producto=$datos_detalle["Nombre"];
							$Cantidad=$datos_detalle["Cantidad"];
							$Valor=$datos_detalle["Valor"];
							$Descuento=$datos_detalle["Descuento"];
							$Iva=$datos_detalle["Iva"];
							$SumaIva+=$Iva;
							$Subtotal=$datos_detalle["Subtotal"];
							$ValorTotal+=$Subtotal;
							$detalle_producto.="<tbody>
													<tr class='modo1'>
													<td align='left'>".$Producto."</td>
													<td align='center'>".$Cantidad."</td>
													<td>$".number_format($Valor,0,',','.')."</td>
													<td>$".number_format($Descuento,0,',','.')."</td>
													<td>$".number_format($Iva,0,',','.')."</td>
													<td>$".number_format($Subtotal,0,',','.')."</td>
												</tr></tbody>";
						}
						$encabezado="<tbody><tr class='modo2'>
													<td>Numero:</td><td>".$NumeroConsumo."</td>
													<td>Fecha:</td><td>".$FechaConsumo."</td>
													<td>Accion:</td><td>".$Accion."</td>
													</tr></tbody>";


													$datos_factura='<br>
													<table border="0" cellpadding="0" cellspacing="0" class="tabla">
														'.$encabezado.'
														<tr>
															<td colspan="6">
															<table border="0" width="100%">
																<tr>
																	<th>Producto</th>
																	<th>Cant.</th>
																	<th>Valor</td>
																	<th>Dto</th>
																	<th>Iva</th>
																	<th>Subtotal</th>
																</tr>
																'.$detalle_producto.'
																<tr>
																	<td colspan=4></td>
																	<th>IVA</th>
																	<th>'.number_format($SumaIva,0,',','.').'</th>
																</tr>
																<tr>
																	<td colspan=4></td>
																	<th>Gran Total</th>
																	<th>'.number_format($ValorTotal,0,',','.').'</th>
																</tr>
															</table>
															</td>
														</tr>
													</table>
													<table align="center">
													<tr>
														<td>
														Incluir 10% de propina?
														<input type="radio" name="propina" value="S" >S
														<input type="radio" name="propina" value="N" >N
														</td>
													</tr>
														<tr>
															<td>
															<a href="https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html">
															<img src="'.URLROOT.'plataform/assets/img/botonpagar.png">
															</a>
															</td>
														</tr>
													</table>

													';


													$cuerpo_factura = '<!doctype html>
																		<html>
																		<head>
																		<meta charset="UTF-8">
																		<title>Detalle Factura</title>
																		<style>
																		.tabla {
																		font-family: Verdana, Arial, Helvetica, sans-serif;
																		font-size:12px;
																		text-align: center;
																		width: 95%;
																		align: center;
																		}

																		.tabla th {
																		padding: 5px;
																		font-size: 12px;
																		background-color: #83aec0;
																		background-repeat: repeat-x;
																		color: #FFFFFF;
																		border-right-width: 1px;
																		border-bottom-width: 1px;
																		border-right-style: solid;
																		border-bottom-style: solid;
																		border-right-color: #558FA6;
																		border-bottom-color: #558FA6;
																		font-family: "Trebuchet MS", Arial;
																		text-transform: uppercase;
																		}

																		.tabla .modo1 {
																		font-size: 10px;
																		font-weight:bold;
																		background-color: #e2ebef;
																		background-repeat: repeat-x;
																		color: #34484E;
																		font-family: "Trebuchet MS", Arial;
																		}
																		.tabla .modo1 td {
																		padding: 5px;
																		border-right-width: 1px;
																		border-bottom-width: 1px;
																		border-right-style: solid;
																		border-bottom-style: solid;
																		border-right-color: #A4C4D0;
																		border-bottom-color: #A4C4D0;
																		text-align:right;
																		}

																		.tabla .modo1 th {
																		background-position: left top;
																		font-size: 12px;
																		font-weight:bold;
																		text-align: left;
																		background-color: #e2ebef;
																		background-repeat: repeat-x;
																		color: #34484E;
																		font-family: "Trebuchet MS", Arial;
																		border-right-width: 1px;
																		border-bottom-width: 1px;
																		border-right-style: solid;
																		border-bottom-style: solid;
																		border-right-color: #A4C4D0;
																		border-bottom-color: #A4C4D0;
																		}

																		.tabla .modo2 {
																		font-size: 12px;
																		font-weight:bold;
																		background-color: #fdfdf1;
																		background-repeat: repeat-x;
																		color: #990000;
																		font-family: "Trebuchet MS", Arial;
																		text-align:center;
																		}
																		.tabla .modo2 td {
																		padding: 5px;
																		}
																		.tabla .modo2 th {
																		background-position: left top;
																		font-size: 12px;
																		font-weight:bold;
																		background-color: #fdfdf1;
																		background-repeat: repeat-x;
																		color: #990000;
																		font-family: "Trebuchet MS", Arial;
																		text-align:left;
																		border-right-width: 1px;
																		border-bottom-width: 1px;
																		border-right-style: solid;
																		border-bottom-style: solid;
																		border-right-color: #EBE9BC;
																		border-bottom-color: #EBE9BC;
																		}
																		</style>
																		</head>
																		<body>
																		';

													$cuerpo_factura .= $datos_factura;
													$cuerpo_factura .= '

													</body>
																	</html>';
					}
			}

		}
		else{
			$cuerpo_factura = '<!doctype html>
								<html>
								<head>
								<meta charset="UTF-8">
								<title>Detalle Extracto</title>

								</head>
								<body>
									<table align="center">
										<tr>
											<td>
											<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
											</td>
										</tr>
										<tr>
											<td>
											<a href="https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html">
											<img src="'.URLROOT.'plataform/assets/img/btnpagopereira.png">
											</a>
											</td>
										</tr>
									</table>

								</body>
							</html>';
		}








	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_mi_club($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );


		$sql_facturas = "SELECT * FROM SocioFactura Where  IDSocioFactura = '".$IDFactura."' Order by Fecha ASC";
		$qry_factura = $dbo->query($sql_facturas);
		if($dbo->rows($qry_factura)>0){
				$response = array();
				$message = $dbo->rows($qry_factura) . " Encontrados";
				while ($r = $dbo->fetchArray($qry_factura)){
					$cuerpo_factura = "";
					$cabeza_factura = "";
					$detalle_factura = "";
					$detalle_forma_pago = "";
					//Encabezado Factura
					$cabeza_factura = '<table border="0" cellpadding="0" cellspacing="0" class="tabla">
						<tbody>
						<tr class="modo2">
							<td>MI Club</td>
						</tr>
						<tr class="modo2">
							<td>Nit. 8000000-7</td>
						</tr>
						<tr class="modo2">
							<td>Bogota - Colombia</td>
						</tr>
						<tr class="modo2">
							<td>4556677</td>
						</tr>
						<tr class="modo2">
							<td>'.SIMUtil::tiempo($r["Fecha"]).'</td>
						</tr>
						</tbody>
					</table>';

					//Consulto el detalle de la factura
					$detalle_factura = '
					<table border="0" cellpadding="0" cellspacing="0" class="tabla">
						<tbody>
						<tr>

							<th>Fecha.</th>
							<th>Detalle</th>
							<th>Valor</th>
						</tr>
					';
					$sql_detalle ="SELECT * FROM SocioFacturaDetalle Where IDSocioFactura = '".$r["IDSocioFactura"]."'";
					$qry_detalle = $dbo->query($sql_detalle);
					while ($row_detalle = $dbo->fetchArray($qry_detalle)){
						 $detalle_factura .= '
						 <tr class="modo1">
							<td>'.$row_detalle["Fecha"].'</td>
							<td>$'.$row_detalle["Detalle"].'</td>
							<td>$'.number_format($row_detalle["Valor"],0,",",".").'</td>
						</tr>
						';
					 }

						$detalle_factura .= '
						</tbody>
					</table>
					';

				$cuerpo_factura = '<!doctype html>
									<html>
									<head>
									<meta charset="UTF-8">
									<title>Detalle Factura</title>
									<style>
									.tabla {
									font-family: Verdana, Arial, Helvetica, sans-serif;
									font-size:12px;
									text-align: center;
									width: 95%;
									align: center;
									}

									.tabla th {
									padding: 5px;
									font-size: 16px;
									background-color: #83aec0;
									background-repeat: repeat-x;
									color: #FFFFFF;
									border-right-width: 1px;
									border-bottom-width: 1px;
									border-right-style: solid;
									border-bottom-style: solid;
									border-right-color: #558FA6;
									border-bottom-color: #558FA6;
									font-family: "Trebuchet MS", Arial;
									text-transform: uppercase;
									}

									.tabla .modo1 {
									font-size: 12px;
									font-weight:bold;
									background-color: #e2ebef;
									background-repeat: repeat-x;
									color: #34484E;
									font-family: "Trebuchet MS", Arial;
									}
									.tabla .modo1 td {
									padding: 5px;
									border-right-width: 1px;
									border-bottom-width: 1px;
									border-right-style: solid;
									border-bottom-style: solid;
									border-right-color: #A4C4D0;
									border-bottom-color: #A4C4D0;
									text-align:right;
									}

									.tabla .modo1 th {
									background-position: left top;
									font-size: 12px;
									font-weight:bold;
									text-align: left;
									background-color: #e2ebef;
									background-repeat: repeat-x;
									color: #34484E;
									font-family: "Trebuchet MS", Arial;
									border-right-width: 1px;
									border-bottom-width: 1px;
									border-right-style: solid;
									border-bottom-style: solid;
									border-right-color: #A4C4D0;
									border-bottom-color: #A4C4D0;
									}

									.tabla .modo2 {
									font-size: 12px;
									font-weight:bold;
									background-color: #fdfdf1;
									background-repeat: repeat-x;
									color: #990000;
									font-family: "Trebuchet MS", Arial;
									text-align:center;
									}
									.tabla .modo2 td {
									padding: 5px;
									}
									.tabla .modo2 th {
									background-position: left top;
									font-size: 12px;
									font-weight:bold;
									background-color: #fdfdf1;
									background-repeat: repeat-x;
									color: #990000;
									font-family: "Trebuchet MS", Arial;
									text-align:left;
									border-right-width: 1px;
									border-bottom-width: 1px;
									border-right-style: solid;
									border-bottom-style: solid;
									border-right-color: #EBE9BC;
									border-bottom-color: #EBE9BC;
									}
									</style>
									</head>
									<body>
									';

				$cuerpo_factura .= $cabeza_factura . "<br>".$detalle_factura."<br>".$detalle_forma_pago;
				$cuerpo_factura .= '</body>
								</html>';


								$ruta_pdf="202944_202944.pdf";
								if(file_exists(DIRROOT."../file/extractos/guaymaral/".$ruta_pdf)){
									$cuerpo_factura = '
															<table align="center">
															<tr>
																<td>
																<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '">
																</td>
															</tr>
																<!--
																<tr>
																	<td>
																	<a href="'.URLROOT."/file/extractos/guaymaral/".$ruta_pdf.'">
																	Descargar extracto
																	<img src="'.URLROOT.'plataform/assets/img/icpdf.jpg">
																	</a>
																	</td>
																</tr>
																<tr>
																	<td>
																		<iframe src="http://docs.google.com/gview?url='.URLROOT."/file/extractos/guaymaral/".$ruta_pdf.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
																	</td>
																</tr>
																-->
																<tr>
																	<td>
																	<br>
																	<br>Valor a Pagar: $1.200.000<br><br>
																	<a href="https:/www.zonapagos.com/t_Clubcampestreguaymaral">
																	<img src="'.URLROOT.'plataform/assets/img/btnpago.png">
																	</a>
																	</td>
																</tr>
															</table>';
									}

				$factura["IDClub"] = $IDClub;
				$factura["IDFactura"] = $r["IDSocioFactura"];
				$factura["NumeroFactura"] = $r["nmro_fctra"];
				$factura["Fecha"] = $r["fcha_rgstro"];
				$factura["ValorFactura"] = "$".number_format($r["vlor_vnta"],0,",",".");
				$factura["Almacen"] = $r["nmbre_almcen"];
				$factura["CuerpoFactura"] = $cuerpo_factura;
				$factura["BotonPago"] ="S";
				$extracto["Action"] = "https://www.gunclub.com.co/pago-app/";
				$factura["Referencia"] = $r["Referencia"];
				$factura["Observacion"] = $r["Observacion"];
				$factura["UrlWebView"] = $dbo->getFields( "Club" , "UrlPago" , "IDClub = '".$IDClub."'" );
				$factura["ValorFactura"] = "$".number_format( ($r["ValorPagar"]),0,",",".");
				$factura["Almacen"] = "";
				$factura["TipoPago"] = "WebView";
				$factura["ObligatorioCodigoPago"] = "S";
				$factura["TextoConfirmacionPago"] = "El codigo es obligatorio";

				$factura["EncabezadoWebView"] = "Su referencia de pago es: ".$r["Referencia"]." por un valor de: ".$factura["ValorFactura"];



				array_push($response, $factura);

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;

				}
	}



	return $respuesta;

	}


	function set_codigo_pago($IDClub,$IDSocio,$IDFactura,$Codigo)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDFactura ) ){

		$sql_pqr = $dbo->query("Update SocioFactura Set CodigoPago = '".$Codigo."', FechaCodigoPago = NOW() Where IDFacturaSocio = '".$IDFactura."'");

		//SIMUtil::noticar_pago($IDFactura);

		$respuesta["message"] = "guardado";
		$respuesta["success"] = true;
		$respuesta["response"] = NULL;
	}
	else{
	$respuesta["message"] = "122. Atencion faltan parametros";
	$respuesta["success"] = false;
	$respuesta["response"] = NULL;
	}

	return $respuesta;

	}



	function get_detalle_factura_rancho($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="300" height="100">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										<a href="'.EXTRACTOSTMP_ROOT.$IDFactura.'">
										<img src="'.URLROOT.'plataform/assets/img/icpdf.jpg">
										Descargar extracto
										</a><br><br>
										<a href="https://secure.payzen.lat/vads-site/Club_Campestre_El_Rancho">
										<img src="'.URLROOT.'plataform/assets/img/btnpagopereira.png">
										</a>
										<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
										</td>
									</tr>

								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_btcc($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		if($NumeroFactura=="Donacion"){
				$btnpago="";
		}
		else{
			$btnpago='<a href="https://www.zonapagos.com/t_Btcc">
			<img src="'.URLROOT.'plataform/assets/img/btnpagopereira.png">
			</a>';
		}

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="300" height="100">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										'.$btnpago.'
										<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
										</td>
									</tr>

								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_anapoima($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="300" height="100">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										<a href="'.EXTRACTOSTMP_ROOT.$IDFactura.'">
										<img src="'.URLROOT.'plataform/assets/img/icpdf.jpg">
										Descargar extracto
										</a><br>

										<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
										</td>
									</tr>

								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_uraki($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="150" height="150">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
										</a><br><br>
										</td>
									</tr>
								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_sigma($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="150" height="150">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
										</a><br><br>
										</td>
									</tr>
								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}


	function get_detalle_factura_guaymaral($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="300" height="100">
										</td>
									</tr>
									<tr>
										<td valign="middle">
										<a href="'.EXTRACTOSTMP_ROOT.$IDFactura.'">
										<img src="'.URLROOT.'plataform/assets/img/icpdf.jpg">
										Descargar extracto
										</a><br><br>
										</td>
									</tr>
									<tr>
										<td>
										<a href="https://www.zonapagos.com/t_Clubcampestreguaymaral">
										<img src="'.URLROOT.'plataform/assets/img/btnpago.png">
										</a>
										</td>
									</tr>
								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}

	function get_detalle_factura_farallones($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
		$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
		$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $NumeroFactura . "' ", "array" );

		$response = array();
		$cuerpo_factura = '<!doctype html>
							<html>
							<head>
							<meta charset="UTF-8">
							<title>Detalle Extracto</title>

							</head>
							<body>
								<table align="center">
									<tr>
										<td>
										<a href="https://www.miclubapp.com/farallonespago/index.php?Nom='.base64_encode($datos_socio["Nombre"]).'&Ape='.base64_encode($datos_socio["Apellido"]).'&Accion='.base64_encode($datos_socio["Accion"]).'&Doc='.base64_encode($datos_socio["NumeroDocumento"]).'">
										<img src="'.URLROOT.'plataform/assets/img/btnpagofarallones2.jpg">
										</a>
										</td>
									</tr>
								</table>

							</body>
						</html>';



	$factura["IDClub"] = $IDClub;
	$factura["CuerpoFactura"] = $cuerpo_factura;
	$factura["IDFactura"] = $IDFactura;
	$factura["TotalPagar"] =(int)$datos_extracto["Valor"];
	$factura["BotonPago"] ="N";
	$extracto["Action"] = "https://www.e-collect.com/customers/Plus/ClubCampestrePlus.html";

	array_push($response, $factura);

	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}


	function get_detalle_factura_gun($IDClub,$IDFactura,$NumeroFactura){
	$dbo =& SIMDB::get();
	 $datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
	 $response = array();
	 $datos_consulta=explode("|",$IDFactura);
	 if($datos_consulta[0]=="Movimientos"){
				$contador=0;
				$array_movimientos=SIMWebServiceZeus::consulta_movimientov2($IDClub,$datos_consulta[3],$datos_consulta[1],$datos_consulta[2]);
				foreach($array_movimientos as $id_movimiento => $datos_movimiento):
					$array_descripcion=explode("/",$datos_movimiento["Descripcion"]);
					$ultimo_elemento=end( $array_descripcion );
					$Descripcion=substr($ultimo_elemento,2);

					if($contador%2)
						$fondo="#f7f7f7";
					else
						$fondo="#FFF";

					$valores_movimiento.="<tr style='font-size:12px' bgcolor='".$fondo."' >
						<td>".$datos_movimiento["Fecha"]."</td>
						<td>".$Descripcion."</td>
						<td>".$datos_movimiento["Vencimiento"]."</td>
						<td>"."$".$datos_movimiento["Valor"]."</td>
						</tr>";
						$contador++;
				endforeach;

				 $datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$NumeroFactura."' ","array");
				 $parametros="?Nombre=".utf8_encode($datos_socio["Nombre"])."&Apellido=".utf8_encode($datos_socio["Apellido"])."&Accion=".$datos_socio["Accion"];
				 $cuerpo_factura = '<!doctype html>
									<html>
									<head>
									<meta charset="UTF-8">
									<title>Detalle Extracto</title>

									</head>
									<body>
										<table align="center">
											<tr>
												<td align="center">
												<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="150" height="134">
												</td>
											</tr>
											<tr>
												<td align="center">

												<table>
													<tr style="font-size:12px" bgcolor="#467aa7">
														<td>Fecha</td>
														<td>Descripcion</td>
														<td>Vencimiento</td>
														<td>Valor</td>
													</tr>
													'.$valores_movimiento.'
												</table>
												</td>
											</tr>
										</table>
									</body>
								</html>';



				 $factura["IDClub"] = $IDClub;
				 $factura["CuerpoFactura"] = $cuerpo_factura;
				 $factura["IDFactura"] = $IDFactura;
				 $factura["TotalPagar"] =0;
				 $factura["BotonPago"] ="N";
				 $extracto["Nombre"] = utf8_encode($datos_socio["Nombre"]);
				 $extracto["Apellido"] = utf8_encode($datos_socio["Apellido"]);
				 $extracto["Accion"] = $datos_socio["Accion"];
				 $extracto["Action"] = "https://www.gunclub.com.co/pago-app/";

				 array_push($response, $factura);

	 }
	 else{

						$ruta_ext = EXTRACTOSTMP_ROOT."/".$IDFactura;

						$datos_socio =$dbo->fetchAll("Socio"," IDSocio = '".$NumeroFactura."' ","array");
						$parametros="?Nombre=".utf8_encode($datos_socio["Nombre"])."&Apellido=".utf8_encode($datos_socio["Apellido"])."&Accion=".$datos_socio["Accion"];
						$cuerpo_factura = '<!doctype html>
											<html>
											<head>
											<meta charset="UTF-8">
											<title>Detalle Extracto</title>

											</head>
											<body>
												<table align="center">
													<tr>
														<td align="center">
														<img src="'.CLUB_ROOT.$datos_club["FotoLogoApp"]. '" width="150" height="134">
														</td>
													</tr>
													<tr>
														<td align="center">
														<a href="'.EXTRACTOSTMP_ROOT.$IDFactura.'">
														<img src="'.URLROOT.'img/iconos/descargaextracto.png">
														</a><br><br>
														</td>
													</tr>
													<tr>
														<td>
															<iframe src="http://docs.google.com/gview?url='.EXTRACTOSTMP_ROOT.$IDFactura.'&embedded=true" style="width:100%; height:600px;" frameborder="0"></iframe>
														</td>
													</tr>
													<tr>
														<td align="center">
															 <!--<a href="https://www.gunclub.com.co/pago-app/'.$parametros.'">-->
																<a href="https://www.psepagos.co/PSEHostingUI/ShowTicketOffice.aspx?ID=8863">
																<img src="https://www.miclubapp.com/img/iconos/pagargun.png">
															</a>
														</td>
													</tr>
												</table>
											</body>
										</html>';



					$factura["IDClub"] = $IDClub;
					$factura["CuerpoFactura"] = $cuerpo_factura;
					$factura["IDFactura"] = $IDFactura;
					$factura["TotalPagar"] =0;
					$factura["BotonPago"] ="N";
					$extracto["Nombre"] = utf8_encode($datos_socio["Nombre"]);
					$extracto["Apellido"] = utf8_encode($datos_socio["Apellido"]);
					$extracto["Accion"] = $datos_socio["Accion"];
					//$extracto["Action"] = "https://www.gunclub.com.co/pago-app/";
					$extracto["Action"] = "https://www.psepagos.co/PSEHostingUI/ShowTicketOffice.aspx?ID=8863";

					array_push($response, $factura);

	 }




	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;


	return $respuesta;

	}



	function get_publicidad( $IDClub, $IDModulo, $IDCategoria, $TipoApp )
	{
		$dbo =& SIMDB::get();

		$response = array();
		$datos_publicidad["Publicidad"] = $dbo->getFields( "Club" , "Publicidad" , "IDClub = '".$IDClub."'" );
		$datos_publicidad["PublicidadTiempo"] = $dbo->getFields( "Club" , "TiempoPublicidad" , "IDClub = '".$IDClub."'" );

		$datos_publicidad["TipoHeaderApp"] = $dbo->getFields( "Club" , "TipoHeaderApp" , "IDClub = '".$IDClub."'" );
		$datos_publicidad["TiempoPublicidadHeader"] = $dbo->getFields( "Club" , "TiempoPublicidad" , "IDClub = '".$IDClub."'" );

		if($datos_publicidad["Publicidad"]=="S"):
			$array_publicidad = self::get_banner_publicidad($IDClub,"","",$TipoApp);
			$datos_publicidad["Publicidades"] = $array_publicidad["response"];
		else:
			$datos_publicidad["Publicidad"]="N";
		endif;

		if($datos_publicidad["TipoHeaderApp"]=="Publicidad" || $datos_publicidad["TipoHeaderApp"]=="PublicidadFoto"):
			$array_publicidad_header = self::get_banner_publicidad_header($IDClub,"","",$TipoApp);
			$datos_publicidad["PublicidadesHeader"] = $array_publicidad_header["response"];
		else:
			$datos_publicidad["Publicidad"]="N";
		endif;





		array_push($response, $datos_publicidad);
		$respuesta["message"] = "1 Encontrados";
		$respuesta["success"] = true;
		$respuesta["response"] = $response;
		return $respuesta;
	}


	function get_banner_publicidad( $IDClub, $IDModulo, $IDCategoria, $TipoApp ){

		$dbo =& SIMDB::get();

		// Modulo Especifico
		if (!empty($IDModulo)):
			$array_condiciones[] = " IDModulo  = '".$id_seccion."'";
		endif;

		// Categoria Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDCategoria  = '".$IDCategoria."'";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_publicidad = " and " .$condiciones;
		endif;

		if($TipoApp=="Socio"){
			$condiciones_publicidad .= " and (DirigidoA = 'S' or DirigidoA = 'T') ";
		}
		else{
			$condiciones_publicidad .= " and (DirigidoA = 'E' or DirigidoA = 'T') ";
		}


		$response = array();
		$sql = "SELECT * FROM Publicidad WHERE Publicar = 'S' and Footer = 'S'  and (FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ) and IDClub = '".$IDClub."' ".$condiciones_publicidad." ORDER BY Orden";
		$qry = $dbo->query( $sql );


		$sql_dia_anglo = "Select * From DiaAnglo Where Fecha = CURDATE() and IDClub = '".$IDClub."' Limit 1";
		$result_dia_anglo=$dbo->query($sql_dia_anglo);


		if( $dbo->rows( $qry ) > 0 || $dbo->rows( $result_dia_anglo ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$publicidad["IDPublicidad"] = $r["IDPublicidad"];
				$publicidad["Nombre"] = $r["Nombre"];
				//$publicidad["Descripcion"] = $r["Descripcion"];
				//$publicidad["FechaInicio"] = $r["FechaInicio"];
				//$publicidad["FechaFin"] = $r["FechaFin"];
				//$publicidad["Orden"] = $r["Orden"];

				//$publicidad["Accion"] = $r["AccionClick"];

				$response_accion = array();
				$publicidad["Url"] = $r["Url"];
				/*
				switch($r["AccionClick"]){
					case "Url":
						$datos_accion["Url"] = $r["Url"];
						array_push($response_accion, $datos_accion);
					break;
					case "WebView":
						$datos_accion["WebView"] = $r["Cuerpo"];
						array_push($response_accion, $datos_accion);
					break;
					case "SinAccion":
					break;
				}
				$publicidad["DataAccion"] = $response_accion;
				*/

				if (!empty($r["Foto1"])):
					$foto = PUBLICIDAD_ROOT.$r["Foto1"];
				else:
					$foto="";
				endif;
				$publicidad["Foto1"] = $foto;


				//Consulto Modulos
				$response_modulo = array();
				$sql_modulo = "SELECT * FROM PublicidadModulo Where IDPublicidad = '".$r["IDPublicidad"]."' and Activo = 'S'";
				$qry_modulo = $dbo->query( $sql_modulo );
				if( $dbo->rows( $qry_modulo ) > 0 )
				{
					while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
					{
							$modulo["IDModulo"] = $r_modulo["IDModulo"];
							if(!empty($r_modulo["Titulo"]))
								$modulo["NombreModulo"] = utf8_encode($r_modulo["Titulo"]);
							else
								$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
							$modulo["Icono"] = $foto;
							array_push($response_modulo, $modulo);

					}//ednw while
				}
				$publicidad["Modulos"] = $response_modulo;

				array_push($response, $publicidad);

			}//ednw hile



				//Especial para Anglo publicar el banner del dia
				if($IDClub==8):
					$sql_dia_anglo = "Select * From DiaAnglo Where Fecha = CURDATE() and IDClub = '".$IDClub."' Limit 1";
					$result_dia_anglo=$dbo->query($sql_dia_anglo);
					while ($r_dia_anglo = $dbo->fetchArray($result_dia_anglo)):
							switch($r_dia_anglo["Dia"]):
								case "1":
									$IDBanner = 74;
								break;
								case "2":
									$IDBanner = 75;
								break;
								case "3":
									$IDBanner = 76;
								break;
								case "4":
									$IDBanner = 77;
								break;
								case "5":
									$IDBanner = 78;
								break;
								case "6":
									$IDBanner = 79;
								break;
							endswitch;
							$sql = "SELECT * FROM Publicidad WHERE IDPublicidad = '".$IDBanner."'";
							$qry = $dbo->query( $sql );
							if( $dbo->rows( $qry ) > 0 )
							{
								$message = $dbo->rows( $qry ) . " Encontrados";
								while( $r = $dbo->fetchArray( $qry ) )
								{

								$publicidad["IDPublicidad"] = $r["IDPublicidad"];
								$publicidad["Nombre"] = $r["Nombre"];
								$response_accion = array();
								$publicidad["Url"] = $r["Url"];
								if (!empty($r["Foto1"])):
									$foto = PUBLICIDAD_ROOT.$r["Foto1"];
								else:
									$foto="";
								endif;
								$publicidad["Foto1"] = $foto;
								//Consulto Modulos
								$response_modulo = array();
								$sql_modulo = "SELECT * FROM PublicidadModulo Where IDPublicidad = '".$r["IDPublicidad"]."' and Activo = 'S'";
								$qry_modulo = $dbo->query( $sql_modulo );
								if( $dbo->rows( $qry_modulo ) > 0 )
								{
									while( $r_modulo = $dbo->fetchArray( $qry_modulo ) )
									{
											$modulo["IDModulo"] = $r_modulo["IDModulo"];
											if(!empty($r_modulo["Titulo"]))
												$modulo["NombreModulo"] = utf8_encode($r_modulo["Titulo"]);
											else
												$modulo["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));
											$modulo["Icono"] = $foto;
											array_push($response_modulo, $modulo);

									}//ednw while
								}
								$publicidad["Modulos"] = $response_modulo;
								array_push($response, $publicidad);
							}
						}


					endwhile;
				endif;



				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se ha encontrado publicidad";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_banner_publicidad_header( $IDClub, $IDModulo, $IDCategoria, $TipoApp ){

		$dbo =& SIMDB::get();

		// Modulo Especifico
		if (!empty($IDModulo)):
			$array_condiciones[] = " IDModulo  = '".$id_seccion."'";
		endif;

		// Categoria Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDCategoria  = '".$IDCategoria."'";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_publicidad = " and " .$condiciones;
		endif;

		if($TipoApp=="Socio"){
			$condiciones_publicidad .= " and (DirigidoA = 'S' or DirigidoA = 'T') ";
		}
		else{
			$condiciones_publicidad .= " and (DirigidoA = 'E' or DirigidoA = 'T') ";
		}


		$response = array();
		$sql = "SELECT * FROM Publicidad WHERE Publicar = 'S' and Header = 'S'  and ( FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ) and IDClub = '".$IDClub."' ".$condiciones_publicidad." ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$publicidad["IDPublicidad"] = $r["IDPublicidad"];
				$publicidad["Nombre"] = $r["Nombre"];
				$response_accion = array();
				$publicidad["Url"] = $r["Url"];
				if (!empty($r["Foto1"])):
					$foto = PUBLICIDAD_ROOT.$r["Foto1"];
				else:
					$foto="";
				endif;
				$publicidad["Foto1"] = $foto;
				array_push($response, $publicidad);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se ha encontrado publicidad";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function



	function solicitar_cerrar_sesion($IDClub){
			$dbo =& SIMDB::get();
			$nowserver = date("Y-m-d H:i:s");
			$respuesta["message"] = "Debe cerrar sesion e ingresar nuevamente";
			$respuesta["success"] = true;
			$respuesta["response"] = "Debe cerrar sesion e ingresar nuevamente";
			die( json_encode( array(  'success' => $respuesta[success], 'message'=>$respuesta[message], 'response' => $respuesta[response], 'date' => $nowserver ) ) );
			exit;
	}

	function get_lista_clubes( $IDClub )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT DC.*, LC.Nombre, P.Nombre as NombrePais FROM DetalleClubCanje DC,ListaClubes LC, Pais P  WHERE DC.IDListaClubes=LC.IDListaClubes and LC.IDPais=P.IDPais and IDClub = '".$IDClub."' Order By NombrePais, LC.Nombre ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$lista_club["IDListaClubes"] = $r["IDListaClubes"];
				$id_pais = utf8_encode($dbo->getFields( "ListaClubes" , "IDPais" , "IDListaClubes = '".$r["IDListaClubes"]."'" ));
				if($IDClub!=48)//para comercio pereira no quieren que aparezca el pais
					$pais = utf8_encode($dbo->getFields( "Pais" , "Nombre" , "IDPais = '".$id_pais."'" )) .  " - " ;
				else
					$pais ="";
				$lista_club["Nombre"] = $pais . utf8_encode($dbo->getFields( "ListaClubes" , "Nombre" , "IDListaClubes = '".$r["IDListaClubes"]."'" ));
				$lista_club["DiaMinimo"] = utf8_encode($dbo->getFields( "ClubCanje" , "DiaMinimo" , "IDClubCanje = '".$r["IDClubCanje"]."'" ));
				$lista_club["DiaMaximo"] = utf8_encode($dbo->getFields( "ClubCanje" , "DiaMaximo" , "IDClubCanje = '".$r["IDClubCanje"]."'" ));
				$SecuenciaDia = (int)$dbo->getFields( "ClubCanje" , "SecuenciaDia" , "IDClubCanje = '".$r["IDClubCanje"]."'" );
				if($SecuenciaDia==0)
					$SecuenciaDia=1;
				$lista_club["SecuenciaDia"] = $SecuenciaDia;


				//Campos Formulario
				$response_campo_formulario = array();
				$sql_campo_form = "SELECT * FROM CampoFormularioCanje WHERE IDClub= '" . $IDClub . "' and Publicar = 'S' order by Orden ";
				$qry_campo_form = $dbo->query( $sql_campo_form );
				if ( $dbo->rows( $qry_campo_form ) > 0 ) {
					while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
						$campoformulario[ "IDCampoFormularioCanje" ] = $r_campo[ "IDCampoFormularioCanje" ];
						$campoformulario[ "TipoCampo" ] = $r_campo[ "TipoCampo" ];
						$campoformulario[ "EtiquetaCampo" ] = $r_campo[ "EtiquetaCampo" ];
						$campoformulario[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
						$campoformulario[ "Valores" ] = $r_campo[ "Valores" ];
						array_push( $response_campo_formulario, $campoformulario );
					} //end while
					$lista_club[ "CampoFormulario" ] = $response_campo_formulario;
				} else {
					$lista_club[ "CampoFormulario" ] = $response_campo_formulario;
				}


				array_push($response, $lista_club);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_solicitud_canje( $IDClub, $IDSocio, $IDCanjeSolicitud)
	{
		$dbo =& SIMDB::get();

		$response = array();

		$array_id_consulta[]=$IDSocio;

		if(!empty($IDCanjeSolicitud))
			$condicion = " and IDCanjeSolicitud = '".$IDCanjeSolicitud."'";


		$sql = "SELECT * FROM CanjeSolicitud WHERE IDClub = '".$IDClub."' and IDSocio = '".$IDSocio."' $condicion ORDER BY IDCanjeSolicitud Desc ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ($row_solicitud = $dbo->fetchArray($qry))	:
				$solicitud["IDClub"] = $IDClub;
				$solicitud["IDSocio"] = $IDSocio;
				$solicitud["IDCanjeSolicitud"] = $row_solicitud["IDCanjeSolicitud"];
				$solicitud["IDListaClubes"] = $row_solicitud["IDListaClubes"];
				$solicitud["Nombre"] = utf8_encode($dbo->getFields( "ListaClubes" , "Nombre" , "IDListaClubes = '" . $row_solicitud["IDListaClubes"] . "'" ));
				$solicitud["IDEstadoCanjeSolicitud"] = $row_solicitud["IDEstadoCanjeSolicitud"];
				$solicitud["Estado"] = utf8_encode($dbo->getFields( "EstadoCanjeSolicitud" , "Nombre" , "IDEstadoCanjeSolicitud = '" . $row_solicitud["IDEstadoCanjeSolicitud"] . "'" ));
				$solicitud["Numero"] = $row_solicitud["Numero"];
				$solicitud["FechaInicio"] = $row_solicitud["FechaInicio"];
				$fecha = date('Y-m-j');
				$cantidad_dias_canje=(int)$row_solicitud["CantidadDias"]-1;
				$fechafinal = strtotime ( '+'.$cantidad_dias_canje.' day' , strtotime ( $solicitud["FechaInicio"] ) ) ;
				$nuevafechafinal = date ( 'Y-m-d' , $fechafinal );
				$solicitud["FechaFin"] = $nuevafechafinal;
				$solicitud["CantidadDias"] = $row_solicitud["CantidadDias"];

				//Beneficiarios
				$response_benef = array();
				$array_beneficarios = explode("|",$row_solicitud["IDSocioBeneficiario"]);
				if(count($array_beneficarios)>0):
					foreach($array_beneficarios as $id_socio):
						if(!empty($id_socio)):
							$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $id_socio . "' ", "array" );
							$benef["IDSocio"]=$id_socio;
							$benef["Nombre"]=utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"]);
							$foto="";
							if (!empty($datos_socio["Foto"])){
								$foto = 	SOCIO_ROOT.$datos_socio["Foto"];
							}
							$benef["Foto"]=$foto;
							$benef["Tipo"]=utf8_encode($datos_socio["TipoSocio"]);
							array_push($response_benef, $benef);
						endif;
					endforeach;
				endif;
				$solicitud["Beneficiarios"] = $response_benef;
				array_push($response, $solicitud);
			endwhile;

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se han encontrado solicitudes registradas";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_campos_invitados($IDClub){
		$dbo =& SIMDB::get();
		$response = array();

	//Campos Formulario
	$response_campo_formulario = array();
	$sql_campo_form = "SELECT * FROM CampoFormularioInvitado WHERE IDClub= '" . $IDClub . "' and Publicar = 'S' order by Orden ";
	$qry_campo_form = $dbo->query( $sql_campo_form );
	if ( $dbo->rows( $qry_campo_form ) > 0 ) {
		while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
			$campoformulario[ "IDCampoFormularioInvitado" ] = $r_campo[ "IDCampoFormularioInvitado" ];
			$campoformulario[ "TipoCampo" ] = $r_campo[ "TipoCampo" ];
			$campoformulario[ "EtiquetaCampo" ] = $r_campo[ "EtiquetaCampo" ];
			$campoformulario[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
			$campoformulario[ "Valores" ] = $r_campo[ "Valores" ];
			array_push( $response, $campoformulario );
		} //end while
		$respuesta["message"] = $message;
		$respuesta["success"] = true;
		$respuesta["response"] = $response;
	}
	else
	{
		$respuesta["message"] = "No se han encontrado campos";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}//end else

	return $respuesta;

	}

	function get_campos_contratista($IDClub){
	$dbo =& SIMDB::get();
	$response = array();

	//Campos Formulario
	$response_campo_formulario = array();
	$sql_campo_form = "SELECT * FROM CampoFormularioContratista WHERE IDClub= '" . $IDClub . "' and Publicar = 'S' order by Orden ";
	$qry_campo_form = $dbo->query( $sql_campo_form );
	if ( $dbo->rows( $qry_campo_form ) > 0 ) {
	while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
		$campoformulario[ "IDCampoFormularioContratista" ] = $r_campo[ "IDCampoFormularioContratista" ];
		$campoformulario[ "TipoCampo" ] = $r_campo[ "TipoCampo" ];
		$campoformulario[ "EtiquetaCampo" ] = $r_campo[ "EtiquetaCampo" ];
		$campoformulario[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
		$campoformulario[ "Valores" ] = $r_campo[ "Valores" ];
		array_push( $response, $campoformulario );
	} //end while
	$respuesta["message"] = $message;
	$respuesta["success"] = true;
	$respuesta["response"] = $response;
	}
	else
	{
	$respuesta["message"] = "No se han encontrado campos";
	$respuesta["success"] = false;
	$respuesta["response"] = NULL;
	}//end else

	return $respuesta;

	}




	function set_socio($IDClub,$Accion,$AccionPadre,$Parentesco,$Genero,$Nombre,$Apellido,$FechaNacimiento,$NumeroDocumento,$CorreoElectronico,$Telefono,$Celular,$Direccion,$TipoSocio,$EstadoSocio,$InvitacionesPermitidasMes,$UsuarioApp,$Predio="",$Categoria="",$Masivo="",$CodigoCarne)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $NumeroDocumento) && !empty( $Nombre )){


				$Documento = trim($row["NumeroDocumento"]);
				//Consulto si el socio ya existe
				$sql_socio = "Select IDSocio From Socio Where NumeroDocumento = '".$NumeroDocumento."' and IDClub = '".$IDClub."'";
				$result_socio = $dbo->query($sql_socio);
				//Estado Socio
				if($EstadoSocio=="A"):
					$estado_socio = 1;
				else:
					$estado_socio = 2;
				endif;

				if(empty($UsuarioApp)):
					$UsuarioApp=$NumeroDocumento;
				endif;

				$clave_socio = sha1(trim($NumeroDocumento));

				//$id_perentesco=$dbo->getFields( "Parentesco" , "IDParentesco" , "Nombre = '" . $Parentesco . "'" );

				if(!empty($Categoria)){
					$id_categoria = $dbo->getFields( "Categoria" , "IDCategoria" , "IDSistemaExterno = '" . $Categoria . "' and IDClub = '".$IDClub."'" );
					if(!empty($id_categoria)){
						$id_categoria = $Categoria;
					}
				}

				if($dbo->rows($result_socio)<=0):
					//Crear Socio
					$inserta_socio = "Insert into Socio (IDClub, IDEstadoSocio, Accion, AccionPadre, IDParentesco, Parentesco, TipoSocio, IDCategoria, Genero, Nombre, Apellido, NumeroDocumento, Email, Clave, CorreoElectronico, Telefono, Celular, FechaNacimiento, UsuarioTrCr, FechaTrCr, NumeroInvitados, NumeroAccesos, PermiteReservar, CambioClave,FotoActualizadaSocio,Predio,CodigoCarne)
										Values ('".$IDClub."','".$estado_socio."','".$Accion."','".$AccionPadre."','".$Parentesco."','".$Parentesco."','".$TipoSocio."','".$id_categoria."','".$Genero."','".trim($Nombre)."','".$Apellido."','".$NumeroDocumento."','".$UsuarioApp."','".$clave_socio."','".$CorreoElectronico."','".$Telefono."','".$Celular."','".$FechaNacimiento."','Cron',NOW(),'100','100','S','S','S','".$Predio."','".$CodigoCarne."')";
					$dbo->query($inserta_socio);
					$id=$dbo->lastID();
					$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('setsocio','".$inserta_socio."','".json_encode($parameters)."')");


				$parametros_codigo_barras = $NumeroDocumento;
				$frm["CodigoBarras"]=SIMUtil::generar_codigo_barras($parametros_codigo_barras,$id);
				//actualizo codigo barras
				$update_codigo=$dbo->query("update Socio set CodigoBarras = '".$frm["CodigoBarras"]."' Where IDSocio = '".$id."'");

				if($frm[IDClub]==34):
					$parametros_codigo_qr = $frm[NumeroDocumento];
				else:
					$parametros_codigo_qr = $frm[NumeroDocumento]."\r\n";
				endif;

				if($Masivo!="S"):
					$frm["CodigoQR"]=SIMUtil::generar_carne_qr($frm[IDSocio],$parametros_codigo_qr);
					$update_codigo=$dbo->query("update Socio set CodigoQR = '".$frm["CodigoQR"]."' Where IDSocio = '".$id."'");
				endif;

				else:
					//Actualiza Socio
					$actualiza_socio = "Update Socio
										set IDEstadoSocio = '".$estado_socio."',
										Accion = '".$Accion."',
										AccionPadre='".$AccionPadre."',
										Parentesco = '".$Parentesco."',
										TipoSocio = '".$TipoSocio."',
										Telefono = '".$Telefono."',
										IDCategoria= '".$id_categoria."',
										Celular = '".$Celular."',
										Nombre = '".trim($Nombre)."',
										Apellido = '".trim($Apellido)."',
										NumeroDocumento = '".$NumeroDocumento."',
										CorreoElectronico = '".$CorreoElectronico."',
										FechaNacimiento = '".$FechaNacimiento."',
										NumeroInvitados= '100',
										NumeroAccesos= '100',
										Email='".$UsuarioApp."',
										Predio = '".$Predio."',
										CodigoCarne = '".$CodigoCarne."',
										UsuarioTrEd = 'Cron',
										FechaTrEd = NOW()
										Where NumeroDocumento = '".$NumeroDocumento."' and IDClub = '".$IDClub."'";
					$dbo->query($actualiza_socio);
				endif;

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

	}
	else{

		$respuesta["message"] = "11. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}



	function set_propietario($IDClub,$Nombre,$Apellido,$NumeroDocumento,$CorreoElectronico,$Telefono,$Celular,$Portal,$Casa,$Llave,$AccionRegistro)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $NumeroDocumento) && !empty( $Nombre )){


				$Documento = trim($row["NumeroDocumento"]);
				//Consulto si el socio ya existe
				$sql_socio = "Select IDSocio From Socio Where NumeroDocumento = '".$NumeroDocumento."' and IDClub = '".$IDClub."'";
				$result_socio = $dbo->query($sql_socio);
				//Estado Socio
				switch($row["AccionRegistro"]):
					case "insert":
						$estado_socio = 1;
					break;
					case "delete":
						$estado_socio = 2;
					break;
					case "update":
						$estado_socio = 1;
					break;
					default:
						$estado_socio = 1;
				endswitch;

				$clave_socio = $Llave;
				$Predio = $Portal . " " . $Casa;

				if($dbo->rows($result_socio)<=0):
					//Crear Socio
					$inserta_socio = "Insert into Socio (IDClub, IDEstadoSocio, Accion, AccionPadre, Parentesco, Genero, Nombre, Apellido, NumeroDocumento, Email, Clave, CorreoElectronico, Celular, FechaNacimiento, UsuarioTrCr, FechaTrCr, NumeroInvitados, NumeroAccesos, PermiteReservar, CambioClave, TipoSocio, Predio)
										Values ('".$IDClub."','".$estado_socio."','".$NumeroDocumento."','".$NumeroDocumento."','','','".trim($Nombre)."','".$Apellido."','".$NumeroDocumento."','".$NumeroDocumento."','".$clave_socio."','".$CorreoElectronico."','".$Telefono."','".$FechaNacimiento."','Cron',NOW(),'100','100','S','N','Propietario','".$Predio."')";

					$dbo->query($inserta_socio);
				else:
					//Actualiza Socio
					$actualiza_socio = "Update Socio
										set IDEstadoSocio = '".$estado_socio."',
										NumeroDocumento = '".$NumeroDocumento."',
										NumeroDocumento='".$NumeroDocumento."',
										TipoSocio = 'Propietario',
										Celular = '".$Celular."',
										Nombre = '".trim($Nombre)."',
										Apellido = '".trim($Apellido)."',
										NumeroDocumento = '".$NumeroDocumento."',
										CorreoElectronico = '".$CorreoElectronico."',
										FechaNacimiento = '".$FechaNacimiento."',
										NumeroInvitados= '100',
										NumeroAccesos= '100',
										Clave = '".$Llave."',
										Predio = '".$Predio."',
										UsuarioTrEd = 'Cron',
										FechaTrEd = NOW()
										Where NumeroDocumento = '".$NumeroDocumento."' and IDClub = '".$IDClub."'";
					$dbo->query($actualiza_socio);
				endif;

			$respuesta["message"] = "registro guardado Llave: " . $Llave;
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

	}
	else{
		$respuesta["message"] = "11. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_crear_cuenta($IDClub,$Accion,$Identificacion,$CorreoElectronico)
	{
		$dbo =& SIMDB::get();



		if( !empty( $IDClub ) && !empty( $Accion) && !empty( $Identificacion) && !empty( $CorreoElectronico )){


				//Verifico que el socio no exista
				$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "Accion = '" . $Accion . "' and IDClub = '".$IDClub."'" );
				if(empty($id_socio)){
					//Verifico si la membresia existe
					$endpoint = ENDPOINT_CONDADO;
					$wsdlFile= ENDPOINT_CONDADO;
					//Creación del cliente SOAP
					$clienteSOAP = new SoapClient($wsdlFile,array(
					‘location’=>$endpoint,
					‘trace’=>true,
					‘exceptions’=>false));
					 //Incluye los parámetros que necesites en tu función
					$parameters= array(
					membresia=>$Accion
					);
						//Invocamos a una función del cliente, devolverá el resultado en formato array.
					$membresia_encontrada=0;
					$valor = $clienteSOAP->Socio($parameters);


					if(is_array($valor->SocioResult->Usuario)){
							$array_membresia=$valor->SocioResult->Usuario;
					}
				elseif(!empty($valor->SocioResult->Usuario)){
						$array_membresia[]=$valor->SocioResult->Usuario;
					}




					foreach($array_membresia as $datos_membresia){



						$membresia_encontrada=1;

						$Accion= $datos_membresia->Membresia;
						$AccionPadre= $datos_membresia->Membresia;
						$Parentesco= $datos_membresia->Aux3;
						$Genero= "";
						$Nombre= $datos_membresia->Socio;
						$Apellido= "";
						$FechaNacimiento= substr($datos_membresia->FechaNac,0,10);
						$NumeroDocumento= $datos_membresia->CI;
						$CorreoElectronico= $datos_membresia->email;
						$Telefono= $datos_membresia->TelDom;
						$Celular= $datos_membresia->Celular;
						$Direccion= $datos_membresia->DirDom;
						$TipoSocio= $datos_membresia->Relacion;
						if($datos_membresia->Estatus=="Presente")
							$EstadoSocio= "A";
						else
							$EstadoSocio= "I";

						$InvitacionesPermitidasMes= 100;
						$UsuarioApp=$Accion;
						$Predio= $datos_membresia->CI;
						$Categoria= "";

						$respuesta = self::set_socio($IDClub,$Accion,$AccionPadre,$Parentesco,$Genero,$Nombre,$Apellido,$FechaNacimiento,$NumeroDocumento,$CorreoElectronico,$Telefono,$Celular,$Direccion,$TipoSocio,$EstadoSocio,$InvitacionesPermitidasMes,$UsuarioApp,$Predio,$Categoria);
						$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('setcrearcuenta','".$NumeroDocumento."|".$IDClub."|".$Accion."','".json_encode($parameters)."')");
					}
					if($membresia_encontrada==1){
						$respuesta["message"] = "Registro exitoso, Su usuario es el código de socio o membresía y clave es su numero de identificación";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					}
					else{
						$respuesta["message"] = "La membresia no existe, por favor verifique o comuniquese con el club";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					}

				}
				else{
					$respuesta["message"] = "No es posible crear la cuenta la membresia ya existe, por favor verifique o comuniquese con el club";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}




		}
		else{
			$respuesta["message"] = "11. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}

		function set_actualiza_datos($IDClub,$IDSocio,$Direccion,$Telefono,$DireccionOficina,$TelefonoOficina,$Celular,$CorreoElectronico){
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $IDSocio) && !empty( $CorreoElectronico )){

					$sql_socio="UPDATE Socio SET  Direccion='".$Direccion."',Telefono='".$Telefono."',DireccionOficina='".$DireccionOficina."',TelefonoOficina='".$TelefonoOficina."',Celular='".$Celular."',CorreoElectronico='".$CorreoElectronico."' WHERE IDSocio = '".$IDSocio."'";
					$dbo->query($sql_socio);
					$sql_socio_inserta="INSERT INTO SocioActualizacion (IDClub, IDSocio,Direccion,Telefono,DireccionOficina,TelefonoOficina,Celular,CorreoElectronico,FechaTrCr) VALUES ('".$IDClub."', '".$IDSocio."','".$Direccion."','".$Telefono."','".$DireccionOficina."','".$TelefonoOficina."','".$Celular."','".$CorreoElectronico."',NOW())";
					$dbo->query($sql_socio_inserta);



					$respuesta["message"] = "Datos actualizados correctamente";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "11. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
			return $respuesta;
		}




		function set_actualiza_datos_socio($IDClub,$IDSocio,$Campos,$IDUsuario,$TipoApp){
			$dbo =& SIMDB::get();


			if($TipoApp=="Empleado" && $IDUsuario==""){
					$IDUsuario=$IDSocio;
					$IDSocio="";
			}
			if( !empty( $IDClub ) && (!empty( $IDSocio) || !empty( $IDUsuario) )){

				$select_campos_editar="SELECT * FROM CampoEditarSocio";
				$r_select_campos_editar=$dbo->query($select_campos_editar);
				while($row_campo_editar=$dbo->fetchArray($r_select_campos_editar)){
					 $datos_campos_editar[$row_campo_editar["Nombre"]]=$row_campo_editar["IDCampoEditarSocio"];
				}

				$Campos= trim(preg_replace('/\s+/', ' ', $Campos));
				$datos_campos= json_decode($Campos, true);
				if (count($datos_campos)>0):
					foreach($datos_campos as $detalle_campo):
								$IDCampo=$detalle_campo["IDCampoEditarSocio"];
								$valor=$detalle_campo["Valor"];


								if(!empty($IDSocio)){
									$sql_verifica="SELECT IDSocioCampoEditarSocio FROM SocioCampoEditarSocio WHERE IDSocio = '".$IDSocio."' and IDCampoEditarSocio = '".$IDCampo."'";
									$r_verifica=$dbo->query($sql_verifica);
									if($dbo->rows($r_verifica)>0){
										$row_verifica=$dbo->fetchArray($r_verifica);
										$sql_socio_datos="UPDATE SocioCampoEditarSocio
																			SET  Valor='".$valor."',FechaTrEd = NOW()
																			WHERE IDSocioCampoEditarSocio = '".$row_verifica["IDSocioCampoEditarSocio"]."'";
									}
									else{
										$sql_socio_datos="INSERT INTO SocioCampoEditarSocio (IDCampoEditarSocio, IDSocio,Valor,FechaTrCr)
																				VALUES ('".$IDCampo."','".$IDSocio."','".$valor."',NOW())";
									}

								}
								else{
									$sql_verifica="SELECT IDUsuarioCampoEditarUsuario FROM UsuarioCampoEditarUsuario WHERE IDUsuario = '".$IDUsuario."' and IDCampoEditarUsuario = '".$IDCampo."'";
									$r_verifica=$dbo->query($sql_verifica);
									if($dbo->rows($r_verifica)>0){
										$row_verifica=$dbo->fetchArray($r_verifica);
										$sql_socio_datos="UPDATE UsuarioCampoEditarUsuario
																			SET  Valor='".$valor."',FechaTrEd = NOW()
																			WHERE IDUsuarioCampoEditarUsuario = '".$row_verifica["IDUsuarioCampoEditarUsuario"]."'";
									}
									else{
										$sql_socio_datos="INSERT INTO UsuarioCampoEditarUsuario (IDCampoEditarUsuario, IDUsuario,Valor,FechaTrCr)
																				VALUES ('".$IDCampo."','".$IDUsuario."','".$valor."',NOW())";
									}

								}


								$dbo->query($sql_socio_datos);

					endforeach;
				else:
					$respuesta["message"] = "Datos vacios por favor verifique";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
					return $respuesta;
				endif;

				if(count($datos_campos)>0){


					$set_update=implode(",",$array_actualiza);
					$set_campos=implode(",",$array_campos);
					$set_datos=implode(",",$array_datos);
					//$sql_socio="UPDATE Socio SET  ".$set_update.", SolicitaEditarPerfil='N' WHERE IDSocio = '".$IDSocio."' Limit 1";
					if($TipoApp=="Empleado")
						$sql_socio="UPDATE Usuario SET SolicitaEditarPerfil='N' WHERE IDUsuario = '".$IDUsuario."' Limit 1";
					else
						$sql_socio="UPDATE Socio SET SolicitaEditarPerfil='N' WHERE IDSocio = '".$IDSocio."' Limit 1";

					$dbo->query($sql_socio);

					$sql_socio_inserta="INSERT INTO SocioActualizacion (IDClub, IDSocio,".$set_campos.",FechaTrCr) VALUES ('".$IDClub."','".$IDSocio."',$set_datos,NOW())";
					$dbo->query($sql_socio_inserta);



				}




					$respuesta["message"] = "Datos actualizados correctamente";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "11. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
			return $respuesta;
		}

		function cambio_clave_condado($IDClub, $IDSocio, $Clave){
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $IDSocio) && !empty( $Clave )){
				$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );

				$endpoint = ENDPOINT_CONDADO;
				$wsdlFile= ENDPOINT_CONDADO;

				try {
						$client = new SoapClient($wsdlFile, array('exceptions' => 0));
						$parameters = array(
							 Membresia=>$datos_socio["Accion"],
							 Cedula=>$datos_socio["NumeroDocumento"],
							 Correo_electronico=>$datos_socio["CorreoElectronico"],
							 Clave_desencriptada=>$Clave,
							 Clave_encriptada=>sha1($Clave)
						 );

						$result = $client->ActualizacionPassword_Socio($parameters);

				} catch (SoapFault $fault) {
						$error_ws=1;
						//trigger_error("SOAP Fault: (faultcode: {$fault->faultcode}, faultstring: {$fault->faultstring})", E_USER_ERROR);
				}
				$sql_log_servicio = $dbo->query("Insert Into LogServicioDiario (Servicio, Parametros, Respuesta) Values ('cambioclavecondado','".$result->ActualizacionPassword_SocioResult."','".json_encode($parameters)."')");
			}

			return true;
		}


		function get_deuda_socio($IDClub,$IDSocio)
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $IDSocio)){
					$response = array();
					//Verifico que el socio no exista
					$accion_socio = $dbo->getFields( "Socio" , "Accion" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );
					if(!empty($accion_socio)){
						//Verifico si la membresia existe
						$endpoint = ENDPOINT_CONDADO;
						$wsdlFile= ENDPOINT_CONDADO;
						//Creación del cliente SOAP
						$clienteSOAP = new SoapClient($wsdlFile,array(
						‘location’=>$endpoint,
						‘trace’=>true,
						‘exceptions’=>false));
						 //Incluye los parámetros que necesites en tu función
						$parameters= array(
						membresia=>$accion_socio
						);
							//Invocamos a una función del cliente, devolverá el resultado en formato array.
						$membresia_encontrada=0;
						$valor = $clienteSOAP->DeudaSocio($parameters);

						if(is_array($valor->DeudaSocioResult->Deuda)){
								$array_membresia_deuda=$valor->DeudaSocioResult->Deuda;
						}
						else{
							$array_membresia_deuda[]=$valor->DeudaSocioResult->Deuda;
						}


						foreach($array_membresia_deuda as $datos_deuda){
							$mostrar="S";
							//Verifico que el documento no se encuentre en estado de pago ya que pudo haber sido pago,  pero hasta el siguiente dia se envia al ws
							$sql_place="SELECT IDPeticionesPlacetoPay FROM PeticionesPlacetoPay WHERE Documento like '%".$datos_deuda->DOCUMENTO."%' and estado_transaccion = 'APPROVED' ";
							$r_place=$dbo->query($sql_place);
							if($dbo->rows($r_place)>0){
								$mostrar="N";
							}

							if($mostrar=="S"){
								$encontrados++;
								$deudasocio["IDClub"] = $IDClub;
								$deudasocio["IDSocio"] = $IDSocio;
								$deudasocio["Cedula"] = $datos_deuda->CEDULA;
								$deudasocio["Contacto"] = $datos_deuda->CONTACTO;
								$deudasocio["Descripcion"] = $datos_deuda->DESCRIPCION;
								$deudasocio["Descuento"] = $datos_deuda->DESCUENTO;
								$deudasocio["Documento"] = $datos_deuda->DOCUMENTO;
								$deudasocio["FechaVencimiento"] = $datos_deuda->FECHA_VENCIMIENTO;
								$deudasocio["ICE"] = $datos_deuda->ICE;
								$deudasocio["Impuestos"] = $datos_deuda->IMPUESTOS;
								$deudasocio["IVA"] = $datos_deuda->IVA;
								$deudasocio["NombreSocio"] = $datos_deuda->NOMBRE_SOCIO;
								$deudasocio["NombreSocioPrincipal"] = $datos_deuda->NOMBRE_SOCIO_PRINCIPAL;
								$deudasocio["OtrosCargos"] = $datos_deuda->OTROS_CARGOS;
								$deudasocio["SaldoPorCobrar"] = $datos_deuda->SALDO_POR_COBRAR;
								$deudasocio["Servicio"] = $datos_deuda->SERVICIO;
								$deudasocio["Subtotal"] = $datos_deuda->SUBTOTAL;
								$deudasocio["TipoDocumento"] = $datos_deuda->TIPO_DOCUMENTO;
								$deudasocio["TotalDocumento"] = $datos_deuda->SALDO_POR_COBRAR;


							unset($array_detalle_deuda);
							//Detalle de la deuda
							if(is_array($datos_deuda->L_Detalle_Deuda)){
									$array_detalle_deuda=$datos_deuda->L_Detalle_Deuda;
							}
							else{
								$array_detalle_deuda[]=$datos_deuda->L_Detalle_Deuda;
							}

							$response_detalle = array();
							unset($detalledeuda);
							foreach($array_detalle_deuda as $datos_detalle){
								$detalledeuda["Ambiente"] = $datos_detalle->Deuda_Detallle->AMBIENTE;
								$detalledeuda["Cantidad"] = $datos_detalle->Deuda_Detallle->CANTIDAD_FACTURADA;
								$detalledeuda["Descuento"] = $datos_detalle->Deuda_Detallle->DESCUENTO;
								$detalledeuda["Documento"] = $datos_detalle->Deuda_Detallle->DOCUMENTO;
								$detalledeuda["ItemFacturadoCodigo"] = $datos_detalle->Deuda_Detallle->ITEM_FACTURADO_CODIGO;
								$detalledeuda["ItemFacturadoDescripcion"] = $datos_detalle->Deuda_Detallle->ITEM_FACTURADO_DESCRIPCION;
								$detalledeuda["PrecioUnitario"] = $datos_detalle->Deuda_Detallle->PRECIO_UNITARIO;
								$detalledeuda["SubTotal"] = $datos_detalle->Deuda_Detallle->SUB_TOTAL;
								$detalledeuda["TipoDocumento"] = $datos_detalle->Deuda_Detallle->TIPO_DOCUMENTO;
								array_push($response_detalle, $detalledeuda);
							}
							$deudasocio["DetalleDeuda"] = $response_detalle;
							array_push($response, $deudasocio);
						}

							}

							$respuesta["message"] = "Encontrados: " . $encontrados;
							$respuesta["success"] = true;
							$respuesta["response"] = $response;

						}
						else{
							$respuesta["message"] = "No se encontro accion";
							$respuesta["success"] = false;
							$respuesta["response"] = $response;
						}
					}
					else{

						$respuesta["message"] = "Faltan parametros.";
						$respuesta["success"] = false;
						$respuesta["response"] = $response;

					}

					return $respuesta;

		}

		function set_deuda_socio($IDClub,$IDSocio,$Documento,$ValorPagar)
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub )  && !empty( $Documento ) && !empty( $IDSocio ) ){



				self::get_deuda_socio($IDClub,$IDSocio);
				$array_documentos_pagar=json_decode($Documento,true);
				foreach($array_documentos_pagar as $datos_doc){
					$array_seleccion_pago[]=$datos_doc["NumeroDocumento"];
				}

				$deuda_socio= SIMWebserviceQuemado::get_deuda_socio($IDClub,$IDSocio);
				$contador=1;
				foreach($deuda_socio["response"] as $id_deuda => $datos_deuda){
					$array_pago_asc[$contador]=$datos_deuda["Documento"];
					$contador++;
				}

				//$array_seleccion_pago=explode(",",$documentos_pagar);
				if(count($array_seleccion_pago)>0){
					foreach($array_seleccion_pago as $id_doc => $num_doc){
							$clave=array_search($num_doc, $array_pago_asc);
							if($clave>0){
								$array_clave_encontradas[]=$clave;
							}
					}
				}
				//verifico si se selecciono en orden
				$en_orden="S";
				for($i=1;$i<=count($array_seleccion_pago);$i++){
					if(!in_array($i,$array_clave_encontradas)){
							$en_orden="N";
					}
				}

				if($en_orden=="N"){
					$respuesta["message"] = "Debe primero pagar los mas antiguos, por favor verifique!";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
					return $respuesta;
					exit;
				}


				//verifico que el socio exista y pertenezca al club
				$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'" );
				if ( !empty( $id_socio ) ) {

								//Datos reserva
								$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
								$response_reserva = array();
								$datos_reserva["IDRegistro"] = time();
								//Calculo el valor de la reserva
								$valor_inicial_reserva = (float)$ValorPagar;
								$datos_reserva["ValorReserva"] = $ValorPagar;
								$ValorReserva=$datos_reserva["ValorReserva"];
								$llave_encripcion = $datos_club["ApiKey"]; //llave de encripciÛn que se usa para generar la fima
								$usuarioId = $datos_club["ApiLogin"]; //c0digo inicio del cliente
								$refVenta = time(); //referencia que debe ser ?nica para cada transacciÛn
								$iva = 0; //impuestos calculados de la transacciÛn
								$baseDevolucionIva = 0; //el precio sin iva de los productos que tienen iva
								$valor = $datos_reserva["ValorReserva"] + (( $datos_reserva["ValorReserva"] * $ArrayParametro["Iva"] ) / 100 ) ; //el valor ; //el valor total
								$moneda ="COP"; //la moneda con la que se realiza la compra
								$prueba = "0"; //variable para poder utilizar tarjetas de crÈdito de prueba
								$descripcion = "Pago Cartera Condado."; //descripciÛn de la transacciÛn
								$url_respuesta = URLROOT."respuesta_transaccion_evento.php";//Esta es la p·gina a la que se direccionar· al final del pago
								$url_confirmacion = URLROOT."confirmacion_pagos_evento.php";
								$emailSocio = $dbo->getFields("Socio","CorreoElectronico","IDSocio =".$IDSocio); //email al que llega confirmaciÛn del estado final de la transacciÛn, forma de identificar al comprador
								if (filter_var(trim($emailSocio), FILTER_VALIDATE_EMAIL))
									$emailComprador = $emailSocio;
								else
									$emailComprador = "";

								$firma_cadena = "$llave_encripcion~$usuarioId~$refVenta~$valor~$moneda"; //concatenaciÛn para realizar la firma
								$firma = md5($firma_cadena); //creaciÛn de la firma con la cadena previamente hecha
								$extra1 = $IDSocio;



								$datos_reserva["Action"] = "https://miclubapp.com/placetopaydeuda.php";

								$response_parametros = array();
								$datos_post["llave"] = "moneda";
								$datos_post["valor"] = (string)$moneda;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "ref";
								$datos_post["valor"] = $refVenta;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "llave";
								$datos_post["valor"] = $llave_encripcion;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "userid";
								$datos_post["valor"] = $usuarioId;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "usuarioId";
								$datos_post["valor"] = $usuarioId;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "accountId";
								$datos_post["valor"] = (string)$datos_club["AccountId"];
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "descripcion";
								$datos_post["valor"] = $descripcion;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "extra1";
								$datos_post["valor"] = (string)$extra1;
								array_push($response_parametros, $datos_post);


								$datos_post["llave"] = "extra2";
								$datos_post["valor"] = $IDClub;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "refVenta";
								$datos_post["valor"] = $refVenta;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "valor";
								$datos_post["valor"] = $ValorReserva;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "iva";
								$datos_post["valor"] = "0";
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "baseDevolucionIva";
								$datos_post["valor"] = "0";
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "firma";
								$datos_post["valor"] = $firma;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "emailComprador";
								$datos_post["valor"] = $emailComprador;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "prueba";
								$datos_post["valor"] = (string)$datos_club["IsTest"];
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "url_respuesta";
								$datos_post["valor"] = (string)$url_respuesta;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "url_confirmacion";
								$datos_post["valor"] = (string)$url_confirmacion;
								array_push($response_parametros, $datos_post);

								$datos_post["llave"] = "Documento";
								$datos_post["valor"] = (string)$Documento;
								array_push($response_parametros, $datos_post);


								$datos_reserva["ParametrosPost"] = $response_parametros;



								$respuesta["message"] = "guardado";
								$respuesta["success"] = true;
								$respuesta["response"] = $datos_reserva;



			}
			else {
				$respuesta[ "message" ] = "No identificado, por favor cierre sesion y vuelva a ingresar!";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}
			}
			else{
				$respuesta["message"] = "D1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

		}


		function get_notificaciones( $IDClub,$IDSocio, $TipoApp )
	{
		$dbo =& SIMDB::get();


		$response = array();

		if($TipoApp=="Empleado")
			$sql = "SELECT * FROM LogNotificacion WHERE App='Empleado' and IDUsuario = '".$IDSocio."' and IDClub = '".$IDClub."' ORDER BY FechaReserva DESC, IDLogNotificacion Desc Limit 30";
		else
			$sql = "SELECT * FROM LogNotificacion WHERE App='Socio' and IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."' ORDER BY IDLogNotificacion Desc Limit 10";

		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$notificacion["IDLogNotificacion"] = $r["IDLogNotificacion"];
				$notificacion["Tipo"] = $r["Tipo"];
				$notificacion["Titulo"] = $r["Titulo"];
				$notificacion["Mensaje"] = $r["Mensaje"];
				$notificacion["Modulo"] = $r["Modulo"];
				$notificacion["IDSeccion"] = $r["IDSeccion"];
				$notificacion["IDDetalle"] = $r["IDDetalle"];
				if($r["Leido"]=="")
					$Leido="N";
				else
					$Leido=$r["Leido"];

				$notificacion["Leido"] = $Leido;
				array_push($response, $notificacion);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = true;
				$respuesta["response"] = "";
		}//end else

		return $respuesta;

	}// fin function


	function set_notificacion_leida($IDClub,$IDSocio, $IDLogNotificacion)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $IDLogNotificacion ) ){


			if (!empty($IDLogNotificacion)):
				$array_not = explode(",",$IDLogNotificacion);
				if(count($array_not)>0):
					foreach ($array_not as $id_not ):
						//$sql_leida = $dbo->query("Update LogNotificacion Set Leido = 'S' Where IDLogNotificacion = '".$id_not."' and IDSocio = '".$IDSocio."'");
						$sql_leida = $dbo->query("Update LogNotificacion Set Leido = 'S' Where IDLogNotificacion = '".$id_not."'");
					endforeach;
				endif;
			endif;


			$respuesta["message"] = "Notificacion marcada como leida con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;
	}
	else{
		$respuesta["message"] = "21. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}




	function set_solicitud_canje($IDClub,$IDSocio, $IDListaClubes,$FechaInicio, $CantidadDias, $Beneficiarios="",$ValoresFormulario="")
	{


	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDListaClubes ) && !empty( $IDSocio )  && !empty( $FechaInicio ) && !empty( $CantidadDias ) ){

		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_socio)){


			//Consulto el siguiente consecutivo
			$sql_max_numero = "Select MAX(Numero) as NumeroMaximo From CanjeSolicitud Where IDClub = '".$IDClub."'";
			$result_numero = $dbo->query($sql_max_numero);
			$row_numero = $dbo->fetchArray($result_numero);
			$siguiente_consecutivo = (int)$row_numero["NumeroMaximo"]+1;

			//Beneficiarios
			$datos_benef= json_decode($Beneficiarios, true);
			foreach($datos_benef as $detalle_datos):
				$array_benef[] = $detalle_datos["IDSocio"];
			endforeach;

			if (count($array_benef)>0):
				$IDSocioBeneficiario = implode("|",$array_benef)."|";
			else:
				$IDSocioBeneficiario = "";
			endif;

			//Para club colombia quedan aprobados al enviarse
			if($IDClub==38 || $IDClub==8)
				$IDEstadoCanje=8;
			else{
				$IDEstadoCanje=1;
			}



				$sql_solicitud = $dbo->query("Insert Into CanjeSolicitud (IDClub, IDSocio, IDListaClubes,  IDEstadoCanjeSolicitud, Numero, FechaInicio, CantidadDias, IDSocioBeneficiario, UsuarioTrCr, FechaTrCr)
										Values ('".$IDClub."','".$IDSocio."','".$IDListaClubes."','".$IDEstadoCanje."','".$siguiente_consecutivo."','".$FechaInicio."','".$CantidadDias."','".$IDSocioBeneficiario."','WebService',NOW())");
				$id_solicitud = $dbo->lastID();


				//Guardo los datos de los campos
				$datos_formulario= json_decode($ValoresFormulario, true);
				if (count($datos_formulario)>0):
					foreach($datos_formulario as $detalle_datos):
						$IDSocioInvitado = $detalle_datos["IDSocio"];
						$sql_datos_form = $dbo->query("Insert Into CanjeOtrosDatos (IDCanje, IDCampoFormularioCanje, Valor) Values ('". $id_solicitud ."','". $detalle_datos["IDCampoFormularioCanje"]."','".$detalle_datos["Valor"]."')");
						$OtrosDatosFormulario .= " " . $detalle_datos["Valor"];
					endforeach;
				endif;

				SIMUtil::notificar_solicitud_canje($id_solicitud);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Error el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "11. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


	function get_categoria_clasificado( $id_club )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM SeccionClasificados  WHERE Publicar = 'S' and IDClub = '".$id_club."' ". $condicion ." ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				// verifico que la seccion tenga por lo menos una noticia publicada
					$seccion["IDClub"] = $r["IDClub"];
					$seccion["IDCategoria"] = $r["IDSeccionClasificados"];
					$seccion["Nombre"] = $r["Nombre"];
					$seccion["Descripcion"] = $r["Descripcion"];
					$seccion["SoloIcono"] = $r["SoloIcono"];


					if (!empty($r["Foto"])):
						$foto = CLASIFICADOS_ROOT.$r["Foto"];
					else:
						$foto="";
					endif;

					$seccion["Icono"] =  $foto;

					array_push($response, $seccion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_categoria_clasificado2( $id_club )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM SeccionClasificados2  WHERE Publicar = 'S' and IDClub = '".$id_club."' ". $condicion ." ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				// verifico que la seccion tenga por lo menos una noticia publicada
					$seccion["IDClub"] = $r["IDClub"];
					$seccion["IDCategoria"] = $r["IDSeccionClasificados"];
					$seccion["Nombre"] = $r["Nombre"];
					$seccion["Descripcion"] = $r["Descripcion"];
					$seccion["SoloIcono"] = $r["SoloIcono"];


					if (!empty($r["Foto"])):
						$foto = CLASIFICADOS_ROOT.$r["Foto"];
					else:
						$foto="";
					endif;

					$seccion["Icono"] =  $foto;

					array_push($response, $seccion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_categoria_objetos_perdidos( $id_club )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM SeccionObjetosPerdidos  WHERE Publicar = 'S' and IDClub = '".$id_club."' ". $condicion ." ORDER BY Orden";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				// verifico que la seccion tenga por lo menos una noticia publicada
					$seccion["IDClub"] = $r["IDClub"];
					$seccion["IDCategoria"] = $r["IDSeccionObjetosPerdidos"];
					$seccion["Nombre"] = $r["Nombre"];
					$seccion["Descripcion"] = $r["Descripcion"];
					$seccion["SoloIcono"] = $r["SoloIcono"];


					if (!empty($r["Foto"])):
						$foto = OBJETOSPERDIDOS_ROOT.$r["Foto"];
					else:
						$foto="";
					endif;

					$seccion["Icono"] =  $foto;

					array_push($response, $seccion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_clasificado( $id_club , $id_categoria = "", $id_clasificado="",  $tag="",$IDSocio,$IDEstadoClasificado)
	{

		$dbo =& SIMDB::get();

		//Socio
		// Seccion Especifica
		if (!empty($IDSocio)):
			$array_condiciones[] = " IDSocio  = '".$IDSocio."' ";
		endif;

		// Seccion Especifica
		if (!empty($id_categoria)):
			$array_condiciones[] = " IDSeccionClasificados  = '".$id_categoria."' and IDEstadoClasificado  = 1 ";
		endif;

		// Seccion Especifica
		if (!empty($id_clasificado)):
			$array_condiciones[] = " IDClasificado  = '".$id_clasificado."' and IDEstadoClasificado  = 1 ";
		endif;

		// Tag
		if (!empty($tag)):
			$array_condiciones[] = " (Nombre  like '%".$tag."%' or Descripcion like '%".$tag."%') and IDEstadoClasificado  = 1";
		endif;

		// Tag
		if (!empty($IDEstadoClasificado)):
			$array_condiciones[] = " IDEstadoClasificado  = '".$IDEstadoClasificado."' ";
		else:
			$array_condiciones[] = " IDEstadoClasificado  > 0 ";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_clasificado = " and " .$condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Clasificado WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and IDClub = '".$id_club."'" . $condiciones_clasificado ." ORDER BY FechaInicio DESC";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$clasificado["IDClasificado"] = $r["IDClasificado"];
				$clasificado["IDSocio"] = $r["IDSocio"];
				$clasificado["IDCategoria"] = $r["IDSeccionClasificados"];
				$clasificado["IDClub"] = $r["IDClub"];
				if($r["IDEstadoClasificado"]==5)
					$clasificado["IDEstadoClasificado"]=1;
				else
					$clasificado["IDEstadoClasificado"] = $r["IDEstadoClasificado"];

				$clasificado["Nombre"] = $r["Nombre"];
				$clasificado["Descripcion"] = $r["Descripcion"];
				$clasificado["Telefono"] = $r["Telefono"];
				$clasificado["Email"] = $r["Email"];
				if($r["Valor"]==0)
					$clasificado["Valor"] = "";
				else
					$clasificado["Valor"] = $r["Valor"];

				$clasificado["FechaInicio"] = $r["FechaInicio"];
				$clasificado["FechaFin"] = $r["FechaFin"];


				$response_fotos = array();
				for($i_foto = 1; $i_foto<=6;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					if (!empty($r[$campo_foto])):
							$array_dato_foto["Foto"] = CLASIFICADOS_ROOT.$r[$campo_foto];
							array_push($response_fotos, $array_dato_foto);
					endif;
				endfor;
				$clasificado["Fotos"] = $response_fotos;

				$response_preguntas = array();
				$sql_preguntas = "Select * From ClasificadoPregunta Where IDClasificado = '".$r["IDClasificado"]."' Order by FechaTrCr Desc";
				$result_preguntas = $dbo->query($sql_preguntas);
				while($row_preguntas = $dbo->fetchArray($result_preguntas)):
					$array_preguntas["IDPregunta"] = $row_preguntas["IDClasificadoPregunta"];
					$array_preguntas["Pregunta"] = $row_preguntas["Pregunta"];
					$array_preguntas["FechaPregunta"] = $row_preguntas["FechaPregunta"];
					$array_preguntas["Respuesta"] = $row_preguntas["Respuesta"];
					$array_preguntas["FechaRespuesta"] = $row_preguntas["FechaRespuesta"];
					array_push($response_preguntas, $array_preguntas);
				endwhile;


				$clasificado["Preguntas"] = $response_preguntas;


				array_push($response, $clasificado);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_clasificado2( $id_club , $id_categoria = "", $id_clasificado="",  $tag="",$IDSocio,$IDEstadoClasificado)
	{

		$dbo =& SIMDB::get();

		//Socio
		// Seccion Especifica
		if (!empty($IDSocio)):
			$array_condiciones[] = " IDSocio  = '".$IDSocio."' ";
		endif;

		// Seccion Especifica
		if (!empty($id_categoria)):
			$array_condiciones[] = " IDSeccionClasificados  = '".$id_categoria."' and IDEstadoClasificado  = 1 ";
		endif;

		// Seccion Especifica
		if (!empty($id_clasificado)):
			$array_condiciones[] = " IDClasificado  = '".$id_clasificado."' and IDEstadoClasificado  = 1 ";
		endif;

		// Tag
		if (!empty($tag)):
			$array_condiciones[] = " (Nombre  like '%".$tag."%' or Descripcion like '%".$tag."%') and IDEstadoClasificado  = 1";
		endif;

		// Tag
		if (!empty($IDEstadoClasificado)):
			$array_condiciones[] = " IDEstadoClasificado  = '".$IDEstadoClasificado."' ";
		else:
			$array_condiciones[] = " IDEstadoClasificado  > 0 ";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_clasificado = " and " .$condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Clasificado2 WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and IDClub = '".$id_club."'" . $condiciones_clasificado ." ORDER BY FechaInicio DESC";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$clasificado["IDClasificado"] = $r["IDClasificado"];
				$clasificado["IDSocio"] = $r["IDSocio"];
				$clasificado["IDCategoria"] = $r["IDSeccionClasificados"];
				$clasificado["IDClub"] = $r["IDClub"];
				$clasificado["IDEstadoClasificado"] = $r["IDEstadoClasificado"];
				$clasificado["Nombre"] = $r["Nombre"];
				$clasificado["Descripcion"] = $r["Descripcion"];
				$clasificado["Telefono"] = $r["Telefono"];
				$clasificado["Email"] = $r["Email"];
				$clasificado["Valor"] = $r["Valor"];
				$clasificado["FechaInicio"] = $r["FechaInicio"];
				$clasificado["FechaFin"] = $r["FechaFin"];


				$response_fotos = array();
				for($i_foto = 1; $i_foto<=6;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					if (!empty($r[$campo_foto])):
							$array_dato_foto["Foto"] = CLASIFICADOS_ROOT.$r[$campo_foto];
							array_push($response_fotos, $array_dato_foto);
					endif;
				endfor;
				$clasificado["Fotos"] = $response_fotos;

				$response_preguntas = array();
				$sql_preguntas = "Select * From ClasificadoPregunta2 Where IDClasificado = '".$r["IDClasificado"]."' Order by FechaTrCr Desc";
				$result_preguntas = $dbo->query($sql_preguntas);
				while($row_preguntas = $dbo->fetchArray($result_preguntas)):
					$array_preguntas["IDPregunta"] = $row_preguntas["IDClasificadoPregunta"];
					$array_preguntas["Pregunta"] = $row_preguntas["Pregunta"];
					$array_preguntas["FechaPregunta"] = $row_preguntas["FechaPregunta"];
					$array_preguntas["Respuesta"] = $row_preguntas["Respuesta"];
					$array_preguntas["FechaRespuesta"] = $row_preguntas["FechaRespuesta"];
					array_push($response_preguntas, $array_preguntas);
				endwhile;


				$clasificado["Preguntas"] = $response_preguntas;


				array_push($response, $clasificado);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_objetos_perdidos( $id_club , $id_categoria = "", $id_objeto_perdido="",  $tag="",$IDSocio,$IDEstadoObjetosPerdidos)
	{

		$dbo =& SIMDB::get();

		//Socio
		if (!empty($IDSocio)):
				$sql_solicitudes="SELECT IDObjetoPerdido FROM ObjetoPerdidoSolicitud WHERE IDSocio = '".$IDSocio."' ";
				$r_solicitudes=$dbo->query($sql_solicitudes);
				while($row_solicitudes=$dbo->fetchArray($r_solicitudes)){
						$array_id_objeto[] = $row_solicitudes["IDObjetoPerdido"];
				}
				if(count($array_id_objeto)){
					$id_objetos=implode(",",$array_id_objeto);
				}
				else{
					$id_objetos=0;
				}
			//$array_condiciones[] = " IDObjetoPerdido  in (".$id_objetos.") ";
		endif;

		// Seccion Especifica
		if (!empty($id_categoria)):
			$array_condiciones[] = " IDSeccionObjetosPerdidos  = '".$id_categoria."' and IDEstadoObjetosPerdidos  in (1,2) ";
		endif;

		// Seccion Especifica
		if (!empty($id_objeto_perdido)):
			$array_condiciones[] = " IDObjetoPerdido  = '".$id_objeto_perdido."' and IDEstadoObjetosPerdidos  in (1,2) ";
		endif;

		// Tag
		if (!empty($tag)):
			$array_condiciones[] = " (Nombre  like '%".$tag."%' or Descripcion like '%".$tag."%') and IDEstadoObjetosPerdidos in (1,2)";
		endif;

		// Tag
		if (!empty($IDEstadoObjetosPerdidos)):
			$array_condiciones[] = " IDEstadoObjetosPerdidos  = '".$IDEstadoObjetosPerdidos."' ";
		else:
			$array_condiciones[] = " IDEstadoObjetosPerdidos  > 0 ";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_clasificado = " and " .$condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM ObjetoPerdido WHERE  IDClub = '".$id_club."'" . $condiciones_clasificado ." ORDER BY FechaTrCr DESC";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$objeto["IDObjetoPerdido"] = $r["IDObjetoPerdido"];
				$objeto["IDSocio"] = $r["IDSocio"];
				$objeto["IDCategoria"] = $r["IDSeccionObjetosPerdidos"];
				$objeto["IDClub"] = $r["IDClub"];
				$objeto["IDEstadoObjetosPerdidos"] = $r["IDEstadoObjetosPerdidos"];
				$objeto["EstadoObjetosPerdidos"] = $dbo->getFields( "EstadoObjetosPerdidos" , "Nombre" , "IDEstadoObjetosPerdidos = '" . $r["IDEstadoObjetosPerdidos"] . "'" );
				$objeto["Nombre"] = $r["Nombre"];
				$objeto["FechaInicio"] = $r["FechaInicio"];
				$objeto["FechaFin"] = $r["FechaFin"];

				$response_fotos = array();
				for($i_foto = 1; $i_foto<=6;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					if (!empty($r[$campo_foto])):
							$array_dato_foto["Foto"] = OBJETOSPERDIDOS_ROOT.$r[$campo_foto];
							array_push($response_fotos, $array_dato_foto);
					endif;
				endfor;
				$objeto["Fotos"] = $response_fotos;

				//Socios que han enviado la solicitud de entrega
				$response_socios = array();
				unset($array_socio);
				$sql_solicitud="SELECT * FROM  ObjetoPerdidoSolicitud WHERE IDObjetoPerdido = '".$r["IDObjetoPerdido"]."'";
				$r_solicitud=$dbo->query($sql_solicitud);
				while($row_solicitud=$dbo->fetchArray($r_solicitud)){
					$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $row_solicitud["IDSocio"] . "' ", "array" );
					$array_socio["IDSocio"] =  $row_solicitud["IDSocio"];
					$array_socio["Nombre"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
					$array_socio["Accion"] = $datos_socio["Accion"];
					array_push($response_socios, $array_socio);
				}

				$objeto["RequeridoPor"] = $response_socios;

				array_push($response, $objeto);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_mis_solictudes_objetos_perdidos( $id_club, $IDSocio)
	{

		$dbo =& SIMDB::get();

		//Socio
		if (!empty($IDSocio)):
				$sql_solicitudes="SELECT IDObjetoPerdido FROM ObjetoPerdidoSolicitud WHERE IDSocio = '".$IDSocio."' ";
				$r_solicitudes=$dbo->query($sql_solicitudes);
				while($row_solicitudes=$dbo->fetchArray($r_solicitudes)){
						$array_id_objeto[] = $row_solicitudes["IDObjetoPerdido"];
				}
				if(count($array_id_objeto)){
					$id_objetos=implode(",",$array_id_objeto);
				}
				else{
					$id_objetos=0;
				}
			$array_condiciones[] = " IDObjetoPerdido  in (".$id_objetos.") ";
		endif;

		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_clasificado = " and " .$condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM ObjetoPerdido WHERE IDClub = '".$id_club."'" . $condiciones_clasificado ." ORDER BY FechaTrCr DESC";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$objeto["IDObjetoPerdido"] = $r["IDObjetoPerdido"];
				$objeto["IDSocio"] = $r["IDSocio"];
				$objeto["IDCategoria"] = $r["IDSeccionObjetosPerdidos"];
				$objeto["IDClub"] = $r["IDClub"];
				$objeto["IDEstadoObjetosPerdidos"] = $r["IDEstadoObjetosPerdidos"];
				$objeto["Nombre"] = $r["Nombre"];
				$objeto["FechaInicio"] = $r["FechaInicio"];
				$objeto["FechaFin"] = $r["FechaFin"];

				$response_fotos = array();
				for($i_foto = 1; $i_foto<=6;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					if (!empty($r[$campo_foto])):
							$array_dato_foto["Foto"] = OBJETOSPERDIDOS_ROOT.$r[$campo_foto];
							array_push($response_fotos, $array_dato_foto);
					endif;
				endfor;
				$objeto["Fotos"] = $response_fotos;

				array_push($response, $objeto);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function





	function set_pregunta_clasificado($IDClub,$IDClasificado,$Pregunta,$IDSocio)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDClasificado )  && !empty( $Pregunta ) ){

		//verifico que el clasificado exista y pertenezca al club
		$datos_clasificado = $dbo->fetchAll( "Clasificado", " IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."' ", "array" );

		if (!empty($datos_clasificado["IDClasificado"])){

			$sql_pregunta = $dbo->query("Insert Into ClasificadoPregunta (IDClasificado, IDSocioPregunta, Pregunta, FechaPregunta, Publicar, UsuarioTrCr, FechaTrCr) Values ('".$IDClasificado."','".$IDSocio."', '".$Pregunta."','".date("Y-m-d")."','S','App',NOW())");

			//Envio push con notificacion de pregunta
			$Mensaje = "Tienes una pregunta del clasificado : ". $datos_clasificado["Nombre"];
			SIMUtil::enviar_notificacion_push_general($IDClub,$datos_clasificado["IDSocio"],$Mensaje);

			$respuesta["message"] = "Pregunta enviada con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion el clasificado no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "21. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


		function get_configuracion_registro_contacto($IDClub,$IDSocio,$IDUsuario){

			$dbo =& SIMDB::get();
			$response = array();


			$sql = "SELECT * FROM ConfiguracionRegistroContacto  WHERE IDClub = '".$IDClub."' ";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";
				while( $r = $dbo->fetchArray( $qry ) )
				{
						$configuracion["IDClub"] = $r["IDClub"];
						$configuracion["LabelRegistro"] = $r["LabelRegistro"];
						$configuracion["LabelBuscador"] = $r["LabelBuscador"];

						//Campos Formulario
						$response_campo_formulario = array();
						$sql_campo_form = "SELECT * FROM CampoRegistroContacto WHERE IDClub= '" . $IDClub . "' and Publicar = 'S' order by Orden ";
						$qry_campo_form = $dbo->query( $sql_campo_form );
						if ( $dbo->rows( $qry_campo_form ) > 0 ) {
							while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
								$campoformulario[ "IDCampoFormulario" ] = $r_campo[ "IDCampoRegistroContacto" ];
								$campoformulario[ "Tipo" ] = $r_campo[ "Tipo" ];
								$campoformulario[ "Nombre" ] = $r_campo[ "Nombre" ];
								$campoformulario[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
								$campoformulario[ "Valores" ] = $r_campo[ "Valores" ];
								array_push( $response_campo_formulario, $campoformulario );
							} //end while
						}
							$configuracion["CamposFormulario"] = $response_campo_formulario;

							//Campos Contacto Externo
							$response_campo_externo = array();
							$sql_campo_form = "SELECT * FROM CampoContactoExterno WHERE IDClub= '" . $IDClub . "' and Publicar = 'S' order by Orden ";
							$qry_campo_form = $dbo->query( $sql_campo_form );
							if ( $dbo->rows( $qry_campo_form ) > 0 ) {
								while ( $r_campo = $dbo->fetchArray( $qry_campo_form ) ) {
									$campoexterno[ "IDCampoContacto" ] = $r_campo[ "IDCampoContactoExterno" ];
									$campoexterno[ "Tipo" ] = $r_campo[ "Tipo" ];
									$campoexterno[ "Nombre" ] = $r_campo[ "Nombre" ];
									$campoexterno[ "Obligatorio" ] = $r_campo[ "Obligatorio" ];
									$campoexterno[ "Valores" ] = $r_campo[ "Valores" ];
									array_push( $response_campo_externo, $campoexterno );
								} //end while
							}

							$configuracion["CamposContactoExterno"] = $response_campo_externo;


						array_push($response, $configuracion);

				}//ednw hile
					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
				$configuracion["IDClub"] = $IDClub;
				$configuracion["LabelRegistro"] = "A continuación agregue a las personas con las que ha tenido un contacto (contacto se considera estar con una persona mas de 15 min)";
				$configuracion["LabelBuscador"] = "A continuación agregue a las personas con las que ha tenido un contacto (contacto se considera estar con una persona mas de 15 min)";
				array_push($response, $configuracion);

				$respuesta["message"] = "No hay configuracion en modulo registro contacto";
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
			}//end else

			return $respuesta;

		}// fin function
		function set_registro_contacto($IDClub,$IDSocio,$IDUsuario,$FechaHora,$Lugar,$Latitud,$Longitud,$Contactos,$CamposFormulario="")
		{


			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && ( !empty( $IDSocio ) || !empty( $IDUsuario )  )  && !empty( $FechaHora ) && !empty( $Lugar ) && !empty( $Latitud ) && !empty( $Longitud )  ){



					$sql_registro = $dbo->query("INSERT INTO RegistroContacto (IDClub, IDSocio, IDUsuario, Fecha, Lugar, Latitud, Longitud, UsuarioTrCr, FechaTrCr)
																			 VALUES ('".$IDClub."','".$IDSocio."', '".$IDUsuario."','".$FechaHora."','".$Lugar."','".$Latitud."','".$Longitud."','App',NOW())");
					$id_registro = $dbo->lastID();

					//Inserto los contactos
					$datos_invitado_turno = json_decode( $Contactos, true );
					$total_invitados_turno = count( $datos_invitado_turno );

					$contador_invitado_agregado = 1;


					foreach ( $datos_invitado_turno as $detalle_datos_turno ):
							$IDSocioInvitadoTurno = $detalle_datos_turno[ "IDSocio" ];
							$NombreSocioInvitadoTurno = $detalle_datos_turno[ "Nombre" ];



							// Guardo los invitados socios o externos
							$datos_invitado_actual = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;
							if ( !in_array( $datos_invitado_actual, $array_invitado_agregado ) ):

									$sql_inserta_invitado_turno = $dbo->query( "INSERT INTO RegistroContactoPersona (IDRegistroContacto, IDSocio, IDUsuario, NombreExterno, UsuarioTrCr, FechaTrCr)
																															VALUES ('" . $id_registro . "','" . $IDSocioInvitadoTurno . "','" . $IDUsuario . "', '" . $NombreSocioInvitadoTurno . "','App',NOW())" );
									$id_registro_persona = $dbo->lastID();


								//Inserto los otros datos
								$datos_dinamico_ext = json_decode( $detalle_datos_turno[ "CamposContactoExterno" ], true );
								$total_dinamico_ext = count( $datos_dinamico_ext );
								$contador_dinamico_ext = 1;
								$datos_dinamico_ext=$detalle_datos_turno[ "CamposContactoExterno" ];


								foreach ( $datos_dinamico_ext as $detalle_dinamico_ext ):
										$IDCampoFormularioExt = $detalle_dinamico_ext[ "IDCampoContacto" ];
										$ValorExt = $detalle_dinamico_ext[ "Valor" ];
										$sql_inserta_otro_ext = $dbo->query( "INSERT INTO RegistroContactoExternoOtrosDatos (IDRegistroContacto, IDCampoContactoExterno, IDRegistroContactoPersona, Valor)
																											VALUES ('" . $id_registro . "','" . $IDCampoFormularioExt . "','".$id_registro_persona."','" . $ValorExt . "')" );
								endforeach;


									$array_invitado_agregado[] = $IDSocioInvitadoTurno . "-" . $NombreSocioInvitadoTurno;

							else :
								$contador_invitado_agregado = 0;
							endif;
								$contador_invitado_agregado++;
					endforeach;

					//Inserto los otros datos
					$datos_dinamico = json_decode( $CamposFormulario, true );
					$total_dinamico = count( $datos_dinamico );
					$contador_dinamico = 1;
					foreach ( $datos_dinamico as $detalle_dinamico ):
							$IDCampoFormulario = $detalle_dinamico[ "IDCampoFormulario" ];
							$Valor = $detalle_dinamico[ "Valor" ];
							$sql_inserta_otro = $dbo->query( "INSERT INTO RegistroContactoOtrosDatos (IDRegistroContacto, IDCampoRegistroContacto, Valor)
																								VALUES ('" . $id_registro . "','" . $IDCampoFormulario . "','" . $Valor . "')" );
					endforeach;

					$respuesta["message"] = "¡Tu reporte ha sido generado exitosamente!";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "21. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

			}


		function get_verifica_accion($IDClub,$IDSocio,$IDUsuario,$IDNotificacion)
		{
			$dbo =& SIMDB::get();
			$FechaHoy=date("Y-m-d");
			//Modulos soportados
			$array_tabla_soportado=array("99"=>"Diagnostico","58"=>"Encuesta","101"=>"Encuesta2","70"=>"Votacion","102"=>"Dotacion");
			$array_tabla_resp_soportado=array("99"=>"DiagnosticoRespuesta","58"=>"EncuestaRespuesta","101"=>"Encuesta2Respuesta","70"=>"VotacionRespuesta","102"=>"DotacionRespuesta");
			if( !empty( $IDClub ) && ( !empty( $IDSocio ) || !empty( $IDUsuario )  )  && count($IDNotificacion)>0  ){

					$datos_notif = json_decode( $IDNotificacion, true );

					$response_notif = array();
					foreach ( $datos_notif as $datos_notif ){
							$id_notif=$datos_notif["IDNotificacion"];
							$datos_notif = $dbo->fetchAll( "NotificacionLocal", " IDNotificacionLocal = '" . $id_notif . "' and IDClub = '".$IDClub."' ", "array" );
							if(!empty($datos_notif["IDModulo"]) && !empty($datos_notif["IDDetalle"]) ){
								$Tabla=$array_tabla_soportado[$datos_notif["IDModulo"]];
								$IDTabla="ID".$Tabla;
								$TablaResp=$array_tabla_resp_soportado[$datos_notif["IDModulo"]];
								$IDTablaResp="ID".$TablaResp;
								$parametro_busqueda = $IDTabla . "= '".$datos_notif["IDDetalle"]."' and IDClub  = '".$IDClub."'";
								$datos_modulo = $dbo->fetchAll( $Tabla,$parametro_busqueda, "array" );
								if($datos_modulo["UnaporSocio"]=="N"){
									$condicion=" and FechaTrCr >= '".$FechaHoy." 00:00:00'";
								}
								else{
									$condicion="";
								}

								$sql_responde="SELECT  ".$IDTablaResp." FROM ".$TablaResp." WHERE IDSocio = '".$IDSocio."' and  ".$IDTabla." = '".$datos_notif["IDDetalle"]."' " . $condicion . " Limit 1";
								$r_responde=$dbo->query($sql_responde);
								if($dbo->rows($r_responde)>0){
									$array_modulo_resp["IDNotificacionLocal"]=$id_notif;
									$array_modulo_resp["Respondido"]="S";
								}
								else{
									$array_modulo_resp["IDNotificacionLocal"]=$id_notif;
									$array_modulo_resp["Respondido"]="N";
								}
							}
							else{
								$array_modulo_resp["IDNotificacionLocal"]=$id_notif;
								$array_modulo_resp["Respondido"]="S";
							}
								array_push( $response_notif, $array_modulo_resp );
					}

					$response[ "Notificacion" ] = $response_notif;

					$respuesta["message"] = "Respuesta";
					$respuesta["success"] = true;
					$respuesta["response"] = $response;

			}
			else{
				$respuesta["message"] = "NL. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

			}




	function set_pregunta_clasificado2($IDClub,$IDClasificado,$Pregunta,$IDSocio)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDClasificado )  && !empty( $Pregunta ) ){

			//verifico que el clasificado exista y pertenezca al club
			$datos_clasificado = $dbo->fetchAll( "Clasificado2", " IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."' ", "array" );

			if (!empty($datos_clasificado["IDClasificado"])){

				$sql_pregunta = $dbo->query("Insert Into ClasificadoPregunta2 (IDClasificado, IDSocioPregunta, Pregunta, FechaPregunta, Publicar, UsuarioTrCr, FechaTrCr) Values ('".$IDClasificado."','".$IDSocio."', '".$Pregunta."','".date("Y-m-d")."','S','App',NOW())");

				//Envio push con notificacion de pregunta
				$Mensaje = "Tienes una pregunta del clasificado : ". $datos_clasificado["Nombre"];
				SIMUtil::enviar_notificacion_push_general($IDClub,$id_socio_clasificado,$Mensaje);

				$respuesta["message"] = "Pregunta enviada con exito";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion el clasificado no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "21. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}

	function set_pertenencia($IDClub,$IDObjetoPerdido,$IDSocio)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDObjetoPerdido )  && !empty( $IDSocio ) ){

			$datos_objeto = $dbo->fetchAll( "ObjetoPerdido", " IDObjetoPerdido = '" . $IDObjetoPerdido . "' and IDClub = '".$IDClub."' ", "array" );

			if (!empty($datos_objeto["IDObjetoPerdido"])){

					$sql_solicitud = $dbo->query("INSERT IGNORE INTO ObjetoPerdidoSolicitud (IDObjetoPerdido, IDSocio, UsuarioTrCr, FechaTrCr) Values ('".$IDObjetoPerdido."','".$IDSocio."','App',NOW())");
					$sql_estado_solicitud = $dbo->query("UPDATE  ObjetoPerdido SET IDEstadoObjetosPerdidos =  2  WHERE IDObjetoPerdido = '".$IDObjetoPerdido."' ");
					//Envio correo
					SIMUtil::notificar_solicitud_objeto_perdido($IDObjetoPerdido,$IDSocio);


				$respuesta["message"] = "Solicitud enviada con exito";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion el objeto no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "O1. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}


	function set_respuesta_clasificado($IDClub,$IDClasificado,$IDPregunta,$Respuesta,$IDSocio)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDClasificado )  && !empty( $IDPregunta ) && !empty( $Respuesta ) ){

		//verifico que la pregunta exista y pertenezca al club
		$datos_clasificado = $dbo->fetchAll( "Clasificado", " IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."' ", "array" );
		$datos_pregunta = $dbo->fetchAll( "ClasificadoPregunta", " IDClasificadoPregunta = '" . $IDPregunta . "'", "array" );

		if (!empty($datos_pregunta["IDClasificadoPregunta"])){

			$sql_pregunta = $dbo->query("Update ClasificadoPregunta Set Respuesta = '".$Respuesta."', FechaRespuesta = '".date("Y-m-d")."' Where  IDClasificadoPregunta = '" . $IDPregunta . "'");

			//Envio push con notificacion de respuesta
			$Mensaje = "Recibio una respuesta de su pregunta al clasificado : ". $datos_clasificado["Nombre"];
			SIMUtil::enviar_notificacion_push_general($IDClub,$datos_pregunta["IDSocioPregunta"],$Mensaje);

			$respuesta["message"] = "Respuesta enviada con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion la pregunta no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "21. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_respuesta_clasificado2($IDClub,$IDClasificado,$IDPregunta,$Respuesta,$IDSocio)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDClasificado )  && !empty( $IDPregunta ) && !empty( $Respuesta ) ){

			//verifico que la pregunta exista y pertenezca al club
			$datos_clasificado = $dbo->fetchAll( "Clasificado2", " IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."' ", "array" );
			$datos_pregunta = $dbo->fetchAll( "ClasificadoPregunta2", " IDClasificadoPregunta = '" . $IDPregunta . "'", "array" );

			if (!empty($datos_pregunta["IDClasificadoPregunta"])){

				$sql_pregunta = $dbo->query("Update ClasificadoPregunta2 Set Respuesta = '".$Respuesta."', FechaRespuesta = '".date("Y-m-d")."' Where  IDClasificadoPregunta = '" . $IDPregunta . "'");

				//Envio push con notificacion de respuesta
				$Mensaje = "Recibio una respuesta de su pregunta al clasificado : ". $datos_clasificado["Nombre"];
				SIMUtil::enviar_notificacion_push_general($IDClub,$datos_pregunta["IDSocioPregunta"],$Mensaje);

				$respuesta["message"] = "Respuesta enviada con exito";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion la pregunta no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "21. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}




	function set_objeto_perdido($IDClub,$IDSocio,$IDCategoria,$Nombre,$Descripcion,$FechaInicio,$IDUsuario,$File="")
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDUsuario )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) && !empty( $FechaInicio ) ){

			//verifico que el socio exista y pertenezca al club
			$id_usuario = $dbo->getFields( "Usuario" , "IDUsuario" , "IDUsuario = '" . $IDUsuario . "' and IDClub = '".$IDClub."'" );

			if (!empty($id_usuario)){


				if(isset($File)){

					for($i_foto = 1; $i_foto<=6;$i_foto++):
						$campo_foto = "Foto".$i_foto;
						$files =  SIMFile::upload( $File[$campo_foto] , OBJETOSPERDIDOS_DIR , "IMAGE" );
						if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
							$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						endif;
						$$campo_foto = $files[0]["innername"];
					endfor;

				}//end if


				$sql_objeto = $dbo->query("INSERT INTO ObjetoPerdido (IDUsuario	, IDSeccionObjetosPerdidos, IDClub, IDEstadoObjetosPerdidos, Nombre, Descripcion, FechaInicio, Foto1, Foto2, Foto3, Foto4, Foto5, Foto6, UsuarioTrCr, FechaTrCr	)
												 Values ('".$IDUsuario."','".$IDCategoria."','".$IDClub."','1','".$Nombre."','".$Descripcion."','".$FechaInicio."'
													,'".$Foto1."','".$Foto2."','".$Foto3."','".$Foto4."','".$Foto5."','".$Foto6."','".$IDUsuario."',NOW())");

				$id_objeto = $dbo->lastID();

				$respuesta["message"] = "Guardado con exito";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion el usuario no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "22. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}

		function set_entrega_objeto_perdido($IDClub,$IDSocio,$IDObjetoPerdido,$TipoReclamante,$NombreParticular,$DocumentoParticular,$IDTipoDocumentoParticular,$Observaciones,$IDUsuario,$File="")
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $IDObjetoPerdido )  && !empty( $IDUsuario ) ){

					if(isset($File)){

						for($i_foto = 1; $i_foto<=2;$i_foto++):
							$campo_foto = "FotoEntrega".$i_foto;
							$files =  SIMFile::upload( $File[$campo_foto] , OBJETOSPERDIDOS_DIR , "IMAGE" );
							if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
								$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
								return $respuesta;
							endif;
							$$campo_foto = $files[0]["innername"];
						endfor;

					}//end if


					$sql_objeto = $dbo->query("UPDATE ObjetoPerdido SET TipoReclamante='".$TipoReclamante."', NombreParticular='".$NombreParticular."',
																		DocumentoParticular='".$DocumentoParticular."', IDTipoDocumento='".$IDTipoDocumentoParticular."',
																		Observaciones = '".$Observaciones."', IDUsuarioEntrega = '".$IDUsuario."', IDEstadoObjetosPerdidos = '2', FechaEntrega =  NOW()  WHERE IDObjetoPerdido = '".$IDObjetoPerdido."'");

					$respuesta["message"] = "Guardado con exito";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;


			}
			else{
				$respuesta["message"] = "22. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

			}




	function set_edita_clasificado($IDClub,$IDSocio,$IDClasificado,$IDEstadoClasificado,$IDCategoria,$Nombre,$Descripcion,$Telefono,$Email,$Valor,$FechaInicio,$FechaFin,$File="",$UrlFoto1,$UrlFoto2,$UrlFoto3,$UrlFoto4,$UrlFoto5)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDClasificado ) && !empty( $IDSocio )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) && !empty( $Telefono ) ){

		//verifico que el socio exista y pertenezca al club
		$id_clasificado = $dbo->getFields( "Clasificado" , "IDClasificado" , "IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."'" );




		if (!empty($id_clasificado)){

			//actualizao la fotos en blanco para que queden solo las enviadas
			$sql_clasificado ="Update Clasificado set Foto1='',Foto2='',Foto3='',Foto4='',Foto5=''
								 Where IDClasificado = '".$IDClasificado."'";
			$dbo->query($sql_clasificado);



			if(isset($File)){
				for($i_foto = 1; $i_foto<=6;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					$files =  SIMFile::upload( $File[$campo_foto] , CLASIFICADOS_DIR , "IMAGE" );
					if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
						$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
					else:
						if(!empty($files[0]["innername"])):
							$actualiza_foto .= " , " . $campo_foto . " = '".$files[0]["innername"]."'";
						endif;
					endif;

				endfor;


			}//end if


			if(!empty($UrlFoto1))
				$actualiza_foto .= " , Foto1 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto1)."'";
			if(!empty($UrlFoto2))
				$actualiza_foto .= " , Foto2 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto2)."'";
			if(!empty($UrlFoto3))
				$actualiza_foto .= " , Foto3 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto3)."'";
			if(!empty($UrlFoto4))
				$actualiza_foto .= " , Foto4 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto4)."'";
			if(!empty($UrlFoto5))
				$actualiza_foto .= " , Foto5 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto5)."'";




			$sql_clasificado ="UPDATE Clasificado
											set IDSeccionClasificados = '".$IDCategoria."', IDEstadoClasificado = '".$IDEstadoClasificado."', Nombre = '".$Nombre."', Descripcion = '".$Descripcion."',
											Telefono = '".$Telefono."', Email = '".$Email."', Valor = '".$Valor."', FechaInicio = '".$FechaInicio."', FechaFin = '".$FechaFin."',
											UsuarioTrEd = '".$IDSocio."', FechaTrEd = NOW()  ".$actualiza_foto ."
											Where IDClasificado = '".$IDClasificado."'";

			 $dbo->query($sql_clasificado);

			$respuesta["message"] = "Guardado con exito ";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion el clasificado no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "22. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_edita_clasificado2($IDClub,$IDSocio,$IDClasificado,$IDEstadoClasificado,$IDCategoria,$Nombre,$Descripcion,$Respuestas,$File="",$UrlFoto1,$UrlFoto2,$UrlFoto3,$UrlFoto4,$UrlFoto5)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDClasificado ) && !empty( $IDSocio )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) ){

			//verifico que el socio exista y pertenezca al club
			$id_clasificado = $dbo->getFields( "Clasificado2" , "IDClasificado" , "IDClasificado = '" . $IDClasificado . "' and IDClub = '".$IDClub."'" );




			if (!empty($id_clasificado)){

				//actualizao la fotos en blanco para que queden solo las enviadas
				$sql_clasificado ="Update Clasificado2 set Foto1='',Foto2='',Foto3='',Foto4='',Foto5=''
									 Where IDClasificado = '".$IDClasificado."'";
				$dbo->query($sql_clasificado);



				if(isset($File)){
					for($i_foto = 1; $i_foto<=6;$i_foto++):
						$campo_foto = "Foto".$i_foto;
						$files =  SIMFile::upload( $File[$campo_foto] , CLASIFICADOS_DIR , "IMAGE" );
						if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
							$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						else:
							if(!empty($files[0]["innername"])):
								$actualiza_foto .= " , " . $campo_foto . " = '".$files[0]["innername"]."'";
							endif;
						endif;

					endfor;


				}//end if


				if(!empty($UrlFoto1))
					$actualiza_foto .= " , Foto1 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto1)."'";
				if(!empty($UrlFoto2))
					$actualiza_foto .= " , Foto2 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto2)."'";
				if(!empty($UrlFoto3))
					$actualiza_foto .= " , Foto3 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto3)."'";
				if(!empty($UrlFoto4))
					$actualiza_foto .= " , Foto4 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto4)."'";
				if(!empty($UrlFoto5))
					$actualiza_foto .= " , Foto5 = '".str_replace(CLASIFICADOS_ROOT,"",$UrlFoto5)."'";




				$sql_clasificado ="UPDATE Clasificado2
												set IDSeccionClasificados = '".$IDCategoria."', IDEstadoClasificado = '".$IDEstadoClasificado."', Nombre = '".$Nombre."', Descripcion = '".$Descripcion."',
												Telefono = '".$Telefono."', Email = '".$Email."', Valor = '".$Valor."', FechaInicio = '".$FechaInicio."', FechaFin = '".$FechaFin."',
												UsuarioTrEd = '".$IDSocio."', FechaTrEd = NOW()  ".$actualiza_foto ."
												Where IDClasificado = '".$IDClasificado."'";

				 $dbo->query($sql_clasificado);

				 //Inserto el valor de los campos dinamicos
				 $Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
				$datos_respuesta= json_decode($Respuestas, true);
				if (count($datos_respuesta)>0):
					//borar los datos anteriores
					$sql_borra="DELETE FROM ClasificadoRespuesta Where IDClasificado = '".$IDClasificado."'";
					$dbo->query($sql_borra);
					foreach($datos_respuesta as $detalle_respuesta):
						$sql_datos_form = $dbo->query("INSERT INTO ClasificadoRespuesta (IDClasificado, IDSocio, IDClasificadoCampo, Valor, FechaTrCr) Values ('".$IDClasificado."','". $IDSocio ."','". $detalle_respuesta["IDClasificadoCampo"]."','".$detalle_respuesta["Valor"]."',NOW())");
					endforeach;
				endif;

				$respuesta["message"] = "Guardado con exito ";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion el clasificado no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "22. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}


	function set_edita_objeto_perdido($IDClub,$IDObjetoPerdido,$IDEstadoObjetosPerdidos,$IDCategoria,$Nombre,$Descripcion,$FechaInicio,$IDUsuario,$File="",$UrlFoto1,$UrlFoto2,$UrlFoto3,$UrlFoto4,$UrlFoto5)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDObjetoPerdido ) && !empty( $IDUsuario )  && !empty( $IDCategoria ) && !empty( $Nombre ) && !empty( $Descripcion ) ){

			//verifico que el socio exista y pertenezca al club
			$id_objeto = $dbo->getFields( "ObjetoPerdido" , "IDObjetoPerdido" , "IDObjetoPerdido = '" . $IDObjetoPerdido . "' and IDClub = '".$IDClub."'" );

			if (!empty($id_objeto)){

				//actualizao la fotos en blanco para que queden solo las enviadas
				$sql_objeto ="Update ObjetoPerdido set Foto1='',Foto2='',Foto3='',Foto4='',Foto5=''
									 Where IDObjetoPerdido = '".$IDObjetoPerdido."'";
				$dbo->query($sql_clasificado);



				if(isset($File)){
					for($i_foto = 1; $i_foto<=6;$i_foto++):
						$campo_foto = "Foto".$i_foto;
						$files =  SIMFile::upload( $File[$campo_foto] , CLASIFICADOS_DIR , "IMAGE" );
						if( empty( $files ) && !empty( $File[$campo_foto]["name"] ) ):
							$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						else:
							if(!empty($files[0]["innername"])):
								$actualiza_foto .= " , " . $campo_foto . " = '".$files[0]["innername"]."'";
							endif;
						endif;

					endfor;


				}//end if


				if(!empty($UrlFoto1))
					$actualiza_foto .= " , Foto1 = '".str_replace(OBJETOSPERDIDOS_ROOT,"",$UrlFoto1)."'";
				if(!empty($UrlFoto2))
					$actualiza_foto .= " , Foto2 = '".str_replace(OBJETOSPERDIDOS_ROOT,"",$UrlFoto2)."'";
				if(!empty($UrlFoto3))
					$actualiza_foto .= " , Foto3 = '".str_replace(OBJETOSPERDIDOS_ROOT,"",$UrlFoto3)."'";
				if(!empty($UrlFoto4))
					$actualiza_foto .= " , Foto4 = '".str_replace(OBJETOSPERDIDOS_ROOT,"",$UrlFoto4)."'";
				if(!empty($UrlFoto5))
					$actualiza_foto .= " , Foto5 = '".str_replace(OBJETOSPERDIDOS_ROOT,"",$UrlFoto5)."'";




				$sql_objeto ="UPDATE ObjetoPerdido
												set IDSeccionObjetosPerdidos = '".$IDCategoria."', IDEstadoObjetosPerdidos = '".$IDEstadoClasificado."', Nombre = '".$Nombre."', Descripcion = '".$Descripcion."',
												FechaInicio = '".$FechaInicio."',
												UsuarioTrEd = '".$IDUsuario."', FechaTrEd = NOW()  ".$actualiza_foto ."
												Where IDObjetoPerdido = '".$IDObjetoPerdido."'";

				 $dbo->query($sql_objeto);

				$respuesta["message"] = "Guardado con exito ";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion el objeto no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "O2. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}


	function get_categoria_beneficio( $id_club )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM SeccionBeneficio  WHERE Publicar = 'S' and IDClub = '".$id_club."' ". $condicion ." ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				// verifico que la seccion tenga por lo menos una noticia publicada
					$seccion["IDClub"] = $r["IDClub"];
					$seccion["IDCategoria"] = $r["IDSeccionBeneficio"];
					$seccion["Nombre"] = $r["Nombre"];
					$seccion["Descripcion"] = $r["Descripcion"];
					$seccion["SoloIcono"] = $r["SoloIcono"];


					if (!empty($r["Foto"])):
						$foto = CLASIFICADOS_ROOT.$r["Foto"];
					else:
						$foto="";
					endif;

					$seccion["Icono"] =  $foto;

					array_push($response, $seccion);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_beneficio($IDClub,$IDCategoria,$IDBeneficio,$Tag,$IDSocio)
	{

		$dbo =& SIMDB::get();


		// Seccion Especifica
		if (!empty($IDCategoria)):
			$array_condiciones[] = " IDSeccionBeneficio  = '".$IDCategoria."' ";
		endif;

		// Seccion Especifica
		if (!empty($IDBeneficio)):
			$array_condiciones[] = " IDBeneficio  = '".$id_clasificado."' ";
		endif;

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;

		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_clasificado = " and " .$condiciones;
		endif;



		$response = array();
		$sql = "SELECT * FROM Beneficio WHERE Publicar = 'S' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and IDClub = '".$IDClub."'" . $condiciones_clasificado ." ORDER BY FechaInicio DESC";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$beneficio["IDBeneficio"] = $r["IDBeneficio"];
				$beneficio["IDCategoria"] = $r["IDSeccionBeneficio"];
				$beneficio["IDClub"] = $r["IDClub"];
				$beneficio["Nombre"] = $r["Nombre"];
				$beneficio["Introduccion"] = $r["Introduccion"];
				$beneficio["Descripcion"] = $r["Descripcion"];
				$beneficio["Telefono"] = $r["Telefono"];
				$beneficio["PaginaWeb"] = $r["PaginaWeb"];
				$beneficio["Latitud"] = $r["Latitud"];
				$beneficio["Longitud"] = $r["Longitud"];
				$beneficio["FechaInicio"] = $r["FechaInicio"];
				$beneficio["FechaFin"] = $r["FechaFin"];


				$response_fotos = array();
				for($i_foto = 1; $i_foto<=1;$i_foto++):
					$campo_foto = "Foto".$i_foto;
					if (!empty($r[$campo_foto])):
							$array_dato_foto["Foto"] = CLASIFICADOS_ROOT.$r[$campo_foto];
							array_push($response_fotos, $array_dato_foto);
					endif;
				endfor;
				$beneficio["Fotos"] = $response_fotos;
				array_push($response, $beneficio);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function get_seccion_socio_beneficio( $id_club, $id_socio = "" ) {
		$dbo = & SIMDB::get();
		$response = array();
		$contador_resultado = 0;

		unset( $seccion );
		$nombre_modulo = "";
		//Secciones Galeria
		$sql = "SELECT * FROM SeccionBeneficio WHERE Publicar = 'S' and IDClub = '" . $id_club . "' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		while ( $r = $dbo->fetchArray( $qry ) ) {
			$contador_resultado++;
			$seccion[ "IDClub" ] = $r[ "IDClub" ];
			$nombre_modulo = "Beneficio";
			$seccion[ "IDSeccion" ] = $r[ "IDSeccionBeneficio" ];
			$seccion[ "Nombre" ] = $r[ "Nombre" ];
			$seccion[ "Descripcion" ] = $r[ "Descripcion" ];

			// verifico si es de preferencia del socio
			if ( !empty( $id_socio ) ):
				$sql_preferencia = "Select * From SocioSeccionBeneficio Where IDSocio = '" . $id_socio . "' and IDSeccionBeneficio = '" . $seccion[ "IDSeccion" ] . "'";
			$result_preferencia = $dbo->query( $sql_preferencia );
			if ( $dbo->rows( $result_preferencia ) > 0 ):
				$seccion[ "PreferenciaSocio" ] = "S";
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;
			else :
				$seccion[ "PreferenciaSocio" ] = "N";
			endif;

			array_push( $response, $seccion );
		} //end while


		$message = $contador_resultado . " Encontrados";
		if ( $contador_resultado > 0 ) {
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		} //End if
		else {
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		} //end else

		return $respuesta;

	} // fin function

	function set_preferencias_beneficio( $IDClub, $IDSocio, $SeccionesBeneficio ) {

		$dbo = & SIMDB::get();
		if ( !empty( $IDClub ) && !empty( $IDSocio ) ) {

			//verifico que el socio exista y pertenezca al club
			$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'" );

			if ( !empty( $id_socio ) ) {
				//borro las secciones asociadas al socio
				$sql_borra_seccion_gal = $dbo->query( "Delete From SocioSeccionBeneficio Where IDSocio  = '" . $IDSocio . "'" );

				if ( !empty( $SeccionesBeneficio ) ):
					$array_secciones_benef = explode( ",", $SeccionesBeneficio );
				if ( count( $array_secciones_benef ) > 0 ):
					foreach ( $array_secciones_benef as $id_seccion ):
						// verifico que la seccion sea del club
						$id_seccion = $dbo->getFields( "SeccionBeneficio", "IDSeccionBeneficio", "IDClub = '" . $IDClub . "' and IDSeccionBeneficio = '" . $id_seccion . "'" );
				if ( !empty( $id_seccion ) ):
					$sql_seccion_cla = $dbo->query( "Insert Into SocioSeccionBeneficio (IDSocio, IDSeccionBeneficio) Values ('" . $IDSocio . "', '" . $id_seccion . "')" );
				endif;
				endforeach;
				endif;
				endif;


				$respuesta[ "message" ] = "guardado";
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = NULL;

			} else {
				$respuesta[ "message" ] = "Error el socio no existe o no pertenece al club";
				$respuesta[ "success" ] = false;
				$respuesta[ "response" ] = NULL;
			}

		} else {
			$respuesta[ "message" ] = "7. Atencion faltan parametros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}

		return $respuesta;

	}



	function set_lista_espera($IDClub,$IDSocio,$IDServicio,$IDServicioElemento,$IDAuxiliar,$FechaInicio,$FechaInicioFin,$HoraInicio,$HoraFin,$AceptoTerminos,$Celular,$Tipo)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $FechaInicio ) && !empty( $Tipo ) ){

		//verifico que el socio exista y pertenezca al club
		$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."' ", "array" );

		if (!empty($datos_socio["IDSocio"])){

			$sql_lista_espera = $dbo->query("Insert Into ListaEspera (IDClub, IDSocio, IDServicio, IDAuxiliar, IDServicioElemento, FechaInicio, FechaFin, HoraInicio, HoraFin, AceptoTerminos, Celular, Tipo, UsuarioTrCr, FechaTrCr)
										 Values ('".$IDClub."','".$IDSocio."', '".$IDServicio."','".$IDAuxiliar."','".$IDServicioElemento."','".$FechaInicio."','".$FechaInicioFin."', '".$HoraInicio."','".$HoraFin."','S','".$Celular."','".$Tipo."','App',NOW())");

			$respuesta["message"] = "Guardado con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "51. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}



	function set_tipo_pago_reserva($IDClub,$IDSocio,$IDReserva,$IDTipoPago,$CodigoPago="")
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDReserva )  && !empty( $IDTipoPago ) ){

		//verifico que la reserva exista y pertenezca al club
		$id_reserva = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDReservaGeneral = '" . $IDReserva . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_reserva)){


			//Si es codigo actualizo para que no se utilice mas y valido si existe el codigo
			if(!empty($CodigoPago)):

				$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
				$codigo_disponible =  $dbo->getFields( "ClubCodigoPago" , "Disponible" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
				if (empty($id_codigo)){
						$respuesta["message"] = "Codigo invalido, por favor verifique";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
				}
				elseif($codigo_disponible<>"S"){
						$respuesta["message"] = "El codigo ya fue utilizado, por favor verifique";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
				}
				else{

					$sql_actualiza_codigo = "Update ClubCodigoPago Set Disponible= 'N', IDSocio = '".$IDSocio."'  Where   Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."'";
					$dbo->query($sql_actualiza_codigo);
				}

			endif;


			$sql_tipo_pago = "Update ReservaGeneral Set IDTipoPago =  '".$IDTipoPago."', CodigoPago = '".$CodigoPago."' Where IDReservaGeneral = '".$IDReserva."' and IDClub = '".$IDClub."'";
			$dbo->query($sql_tipo_pago);



			$respuesta["message"] = "Forma de pago registrada con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion la reserva no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "51. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_tipo_pago_reserva_hotel($IDClub,$IDSocio,$IDReserva,$IDTipoPago,$CodigoPago="")
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDReserva )  && !empty( $IDTipoPago ) ){

			//verifico que la reserva exista y pertenezca al club
			$id_reserva = $dbo->getFields( "ReservaHotel" , "IDReserva" , "IDReserva = '" . $IDReserva . "' and IDClub = '".$IDClub."'" );

			if (!empty($id_reserva)){


				//Si es codigo actualizo para que no se utilice mas y valido si existe el codigo
				if(!empty($CodigoPago)):

					$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
					$codigo_disponible =  $dbo->getFields( "ClubCodigoPago" , "Disponible" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
					if (empty($id_codigo)){
							$respuesta["message"] = "Codigo invalido, por favor verifique";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
					}
					elseif($codigo_disponible<>"S"){
							$respuesta["message"] = "El codigo ya fue utilizado, por favor verifique";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
					}
					else{

						$sql_actualiza_codigo = "Update ClubCodigoPago Set Disponible= 'N', IDSocio = '".$IDSocio."'  Where   Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."'";
						$dbo->query($sql_actualiza_codigo);
					}

				endif;


				$sql_tipo_pago = "Update ReservaHotel Set IDTipoPago =  '".$IDTipoPago."', CodigoPago = '".$CodigoPago."' Where IDReserva = '".$IDReserva."' and IDClub = '".$IDClub."'";
				$dbo->query($sql_tipo_pago);



				$respuesta["message"] = "Forma de pago registrada con exito";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion la reserva no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "51. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}

	function get_codigo_pago($IDClub,$CodigoPago){

		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $CodigoPago ) ){

			//verifico que el codigo exista y no haya sido utilizado
			$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."' and Disponible = 'S'" );

			if (!empty($id_codigo)){

				$respuesta["message"] = "Codigo correcto";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "El codigo no es valido";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "52. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

	}


	function get_documento_dinamico( $IDClub, $IDSubmodulo, $Version )
	{
		$dbo =& SIMDB::get();

		$response = array();
		//$sql = "SELECT TA.*,CTA.Icono,CTA.NombreTipoArchivo FROM TipoArchivo TA,ClubTipoArchivo CTA  WHERE TA.IDTipoArchivo=CTA.IDTipoArchivo and  CTA.IDClub = '".$IDClub."' and Activo = 'S' ORDER BY Nombre";
		$sql = "SELECT * FROM TipoArchivo".$Version." WHERE IDClub = '".$IDClub."' and Publicar = 'S'  and DirigidoA <> 'E' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

						$foto = "";
						$foto_icono = $r["Icono"]."'";

						if (!empty($r["Icono"]) && empty($foto)){
									$foto = 	CLIENTE_ROOT.$r["Icono"];
						}

						$tipo_archivo["IDTipoArchivo"] = $r["IDTipoArchivo"];
						$tipo_archivo["Nombre"] = $r["Nombre"];
						$nombre_tipoarchivo = $r["NombreTipoArchivo"];
						if(!empty($nombre_tipoarchivo)):
							$tipo_archivo["Label"] = $nombre_tipoarchivo;
						else:
							$tipo_archivo["Label"] = $r["Nombre"];
						endif;
						$tipo_archivo["Tipo"] = $r["Tipo"];
						$tipo_archivo["Icono"] = $foto;
						$tipo_archivo["SoloIcono"] = $r["SoloIcono"];

						//Consulto los archivos que tiene este tipo de archivo
						$response_archivo = array();
						$sql_archivo = "SELECT * FROM Documento".$Version." WHERE Publicar = 'S' and IDClub = '".$IDClub."' and IDTipoArchivo = '".$r["IDTipoArchivo"]."' ORDER BY Orden ASC";
						$qry_archivo = $dbo->query( $sql_archivo );
							while( $r_archivo = $dbo->fetchArray( $qry_archivo ) )
							{
								$documento["IDClub"] = $r_archivo["IDClub"];
								$documento["IDTipoArchivo"] = $r_archivo["IDTipoArchivo"];
								$foto_servicio = "";
								if (!empty($r["Icono"])):
									$foto_servicio = DOCUMENTO_ROOT.$r_archivo["Icono"];
								else:
									$foto_servicio="";
								endif;


								if(empty($r_archivo["IDServicio"])):
									$servicio = "";
									$id_servicio = "";
								else:
									$id_servicio= $r_archivo["IDServicio"];
									$id_servicio_maestro= $dbo->getFields( "Servicio" , "IDServicioMaestro" , "IDServicio = '".$r_archivo["IDServicio"]."'" );
									$servicio =  $dbo->getFields( "ServicioMaestro" , "Nombre" , "IDServicioMaestro = '".$id_servicio_maestro."'" );
									$icono_servicio =  $dbo->getFields( "Servicio" , "Icono" , "IDServicio = '".$r_archivo["IDServicio"]."'" );

									if(empty($foto_servicio)):
										if (!empty($icono_servicio)):
											$foto_servicio = SERVICIO_ROOT.$icono_servicio;
										else:
											$foto_servicio="";
										endif;
									endif;
								endif;

								$documento["IDServicio"] = $id_servicio;
								//$documento["Servicio"] = $servicio;
								$documento["Servicio"] = $r_archivo["Nombre"];
								$documento["IconoServicio"] = $foto_servicio;
								$documento["IDDocumento"] = $r_archivo["IDDocumento"];
								$documento["Titular"] = $r_archivo["Nombre"];
								$documento["Subtitular"] = $r_archivo["Subtitular"];
								$documento["Fecha"] = $r_archivo["Fecha"];
								$documento["Descripcion"] = $r_archivo["Descripcion"];

								//ruta temporal =
								$ruta_temporal=str_replace("https","http",DOCUMENTO_ROOT);
								$ruta_temporal=DOCUMENTO_ROOT;
								if (!empty($r_archivo["Archivo1"])):
									$archivo = $ruta_temporal.$r_archivo["Archivo1"];
								else:
									$archivo="";
								endif;
								$documento["Documento"] = $archivo;

								array_push($response_archivo, $documento);
							}
						//Fin consulto archivos

						$tipo_archivo["Documentos"] = $response_archivo;


						array_push($response, $tipo_archivo);


			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_documento_dinamico_funcionario( $IDClub,$Version )
	{
		$dbo =& SIMDB::get();

		$response = array();
		//$sql = "SELECT TA.*,CTA.Icono,CTA.NombreTipoArchivo FROM TipoArchivo TA,ClubTipoArchivo CTA  WHERE TA.IDTipoArchivo=CTA.IDTipoArchivo and  CTA.IDClub = '".$IDClub."' and Activo = 'S' ORDER BY Nombre";
		$sql = "SELECT * FROM TipoArchivo".$Version. " WHERE IDClub = '".$IDClub."' and Publicar = 'S' and (DirigidoA = 'E' or DirigidoA = 'T') ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

						$foto = "";
						$foto_icono = $r["Icono"]."'";

						if (!empty($r["Icono"]) && empty($foto)){
									$foto = 	CLIENTE_ROOT.$r["Icono"];
						}

						$tipo_archivo["IDTipoArchivo"] = $r["IDTipoArchivo"];
						$tipo_archivo["Nombre"] = $r["Nombre"];
						$nombre_tipoarchivo = $r["NombreTipoArchivo"];
						if(!empty($nombre_tipoarchivo)):
							$tipo_archivo["Label"] = $nombre_tipoarchivo;
						else:
							$tipo_archivo["Label"] = $r["Nombre"];
						endif;
						$tipo_archivo["Tipo"] = $r["Tipo"];
						$tipo_archivo["Icono"] = $foto;

						//Consulto los archivos que tiene este tipo de archivo
						$response_archivo = array();
						$sql_archivo = "SELECT * FROM Documento".$Version." WHERE Publicar = 'S' and IDClub = '".$IDClub."' and IDTipoArchivo = '".$r["IDTipoArchivo"]."' ORDER BY Nombre";
						$qry_archivo = $dbo->query( $sql_archivo );
							while( $r_archivo = $dbo->fetchArray( $qry_archivo ) )
							{
								$documento["IDClub"] = $r_archivo["IDClub"];
								$documento["IDTipoArchivo"] = $r_archivo["IDTipoArchivo"];
								$foto_servicio = "";
								if (!empty($r["Icono"])):
									$foto_servicio = DOCUMENTO_ROOT.$r_archivo["Icono"];
								else:
									$foto_servicio="";
								endif;


								if(empty($r_archivo["IDServicio"])):
									$servicio = "";
									$id_servicio = "";
								else:
									$id_servicio= $r_archivo["IDServicio"];
									$id_servicio_maestro= $dbo->getFields( "Servicio" , "IDServicioMaestro" , "IDServicio = '".$r_archivo["IDServicio"]."'" );
									$servicio =  $dbo->getFields( "ServicioMaestro" , "Nombre" , "IDServicioMaestro = '".$id_servicio_maestro."'" );
									$icono_servicio =  $dbo->getFields( "Servicio" , "Icono" , "IDServicio = '".$r_archivo["IDServicio"]."'" );

									if(empty($foto_servicio)):
										if (!empty($icono_servicio)):
											$foto_servicio = SERVICIO_ROOT.$icono_servicio;
										else:
											$foto_servicio="";
										endif;
									endif;
								endif;

								$documento["IDServicio"] = $id_servicio;
								//$documento["Servicio"] = $servicio;
								$documento["Servicio"] = $r_archivo["Nombre"];
								$documento["IconoServicio"] = $foto_servicio;
								$documento["IDDocumento"] = $r_archivo["IDDocumento"];
								$documento["Titular"] = $r_archivo["Nombre"];
								$documento["Subtitular"] = $r_archivo["Subtitular"];
								$documento["Fecha"] = $r_archivo["Fecha"];
								$documento["Descripcion"] = $r_archivo["Descripcion"];
								//ruta temporal =
								$ruta_temporal=str_replace("https","http",DOCUMENTO_ROOT);
								$ruta_temporal=DOCUMENTO_ROOT;
								if (!empty($r_archivo["Archivo1"])):
									$archivo = $ruta_temporal.$r_archivo["Archivo1"];
								else:
									$archivo="";
								endif;
								$documento["Documento"] = $archivo;

								array_push($response_archivo, $documento);
							}
						//Fin consulto archivos

						$tipo_archivo["Documentos"] = $response_archivo;


						array_push($response, $tipo_archivo);


			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function set_formulario_evento($IDClub,$IDEvento,$IDSocio,$IDSocioBeneficiario,$ValoresFormulario="",$OtrosDatosFormulario="",$Version="", $UsuarioCreacion="")
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub )  && !empty( $IDEvento ) && !empty( $IDSocio ) ){



		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio", "IDSocio", "IDSocio = '" . $IDSocio . "' and IDClub = '" . $IDClub . "'" );
		if ( !empty( $id_socio ) ) {


			//verifico que ya no este inscrito en este eventos
			$id_registro = (int)$dbo->getFields( "EventoRegistro".$Version , "IDEventoRegistro".$Version , "IDSocio = '" . $IDSocio . "' and IDSocioBeneficiario = '".$IDSocioBeneficiario."' and IDClub = '".$IDClub."' and IDEvento".$Version." = '".$IDEvento."' " );
			$permite_repetir = $dbo->getFields( "Evento".$Version , "PermiteRepetir" , "IDEvento".$Version." = '" . $IDEvento . "' and IDClub = '".$IDClub."' " );
			if ( $id_registro>0 && $permite_repetir=="N") {
				$respuesta["message"] = "No es posible registrarse en este evento ya que tiene una inscripcion activa.".$permite_repetir;
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
				return $respuesta;
			}
						$sql_datos_evento = $dbo->query("Insert Into EventoRegistro".$Version." (IDEvento".$Version.", IDClub, IDSocio, IDSocioBeneficiario, UsuarioTrCr, FechaTrCr) Values ('".$IDEvento."','".$IDClub."','".$IDSocio."', '".$IDSocioBeneficiario."','WebService $UsuarioCreacion',NOW())");
						$id_evento_registro = $dbo->lastID();
						//Guardo los datos de los campos
						$datos_formulario= json_decode($ValoresFormulario, true);
						if (count($datos_formulario)>0):
							foreach($datos_formulario as $detalle_datos):
								$IDSocioInvitado = $detalle_datos["IDSocio"];
								$sql_datos_form = $dbo->query("Insert Into EventoRegistroDatos".$Version." (IDEventoRegistro".$Version.", IDCampoFormularioEvento".$Version.", Valor) Values ('". $id_evento_registro ."','". $detalle_datos["IDCampoFormularioEvento".$Version]."','".$detalle_datos["Valor"]."')");
								$campo_form = $dbo->getFields( "CampoFormularioEvento".$Version , "EtiquetaCampo" , "IDCampoFormularioEvento".$Version." = '" . $detalle_datos["IDCampoFormularioEvento".$Version] . "'  " );
								$OtrosDatosFormulario .= "<br>" . $campo_form ." : ".$detalle_datos["Valor"];
							endforeach;
						endif;



						SIMUtil::notificar_nueva_inscripcion_evento($IDEvento,$IDSocio,$OtrosDatosFormulario,$Version);

						$parametros_codigo_qr=$IDEvento."|".$IDSocio;
						$ruta_qr_evento=SIMUtil::generar_qr_evento($IDSocio,$parametros_codigo_qr);
						$actualiza_qr="UPDATE EventoRegistro SET Qr = '".$ruta_qr_evento."' WHERE IDEventoRegistro = '".$id_evento_registro."'";
						$dbo->query($actualiza_qr);

						//Datos reserva
						$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );
						$response_reserva = array();
						$datos_reserva["IDEventoRegistro"] = (int)$id_evento_registro;
						//Calculo el valor de la reserva
						$valor_inicial_reserva = (int)$dbo->getFields( "Evento".$Version , "ValorInscripcion" , "IDEvento".$Version." = '" . $IDEvento . "'" );
						$datos_reserva["ValorReserva"] = $valor_inicial_reserva;
						$ValorReserva=$datos_reserva["ValorReserva"];
						$llave_encripcion = $datos_club["ApiKey"]; //llave de encripciÛn que se usa para generar la fima
						$ApiLogin = $datos_club["ApiLogin"]; //Api Login

						if($datos_club["MerchantId"]!="placetopay")
							$usuarioId = $datos_club["MerchantId"]; //c0digo inicio del cliente
						else
							$usuarioId = $datos_club["ApiLogin"]; //c0digo inicio del cliente

						$refVenta = time(); //referencia que debe ser ?nica para cada transacciÛn
						$iva = 0; //impuestos calculados de la transacciÛn
						$baseDevolucionIva = 0; //el precio sin iva de los productos que tienen iva
						$valor = $datos_reserva["ValorReserva"] + (( $datos_reserva["ValorReserva"] * $ArrayParametro["Iva"] ) / 100 ) ; //el valor ; //el valor total
						$moneda ="COP"; //la moneda con la que se realiza la compra
						$prueba = "0"; //variable para poder utilizar tarjetas de crÈdito de prueba
						$descripcion = "Pago Evento Mi Club."; //descripciÛn de la transacciÛn
						$url_respuesta = URLROOT."respuesta_transaccion_evento.php?Version=".$Version;//Esta es la p·gina a la que se direccionar· al final del pago
						$url_confirmacion = URLROOT."confirmacion_pagos_evento.php?Version=".$Version;
						$emailSocio = $dbo->getFields("Socio","CorreoElectronico","IDSocio =".$IDSocio); //email al que llega confirmaciÛn del estado final de la transacciÛn, forma de identificar al comprador
						if (filter_var(trim($emailSocio), FILTER_VALIDATE_EMAIL))
							$emailComprador = $emailSocio;
						else
							$emailComprador = "";

						$firma_cadena = "$llave_encripcion~$usuarioId~$refVenta~$valor~$moneda"; //concatenaciÛn para realizar la firma
						$firma = md5($firma_cadena); //creaciÛn de la firma con la cadena previamente hecha
						$extra1 = $id_evento_registro;



						$datos_reserva["Action"] = $datos_club["URL_PAYU"];

						$response_parametros = array();
						$datos_post["llave"] = "moneda";
						$datos_post["valor"] = (string)$moneda;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "ref";
						$datos_post["valor"] = $refVenta;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "llave";
						$datos_post["valor"] = $llave_encripcion;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "userid";
						$datos_post["valor"] = $usuarioId;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "usuarioId";
						$datos_post["valor"] = $usuarioId;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "accountId";
						$datos_post["valor"] = (string)$datos_club["AccountId"];
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "descripcion";
						$datos_post["valor"] = $descripcion;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "extra1";
						$datos_post["valor"] = (string)$extra1;
						array_push($response_parametros, $datos_post);


						$datos_post["llave"] = "extra2";
						$datos_post["valor"] = $IDClub;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "refVenta";
						$datos_post["valor"] = $refVenta;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "valor";
						$datos_post["valor"] = $ValorReserva;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "iva";
						$datos_post["valor"] = "0";
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "baseDevolucionIva";
						$datos_post["valor"] = "0";
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "firma";
						$datos_post["valor"] = $firma;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "emailComprador";
						$datos_post["valor"] = $emailComprador;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "prueba";
						$datos_post["valor"] = (string)$datos_club["IsTest"];
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "url_respuesta";
						$datos_post["valor"] = (string)$url_respuesta;
						array_push($response_parametros, $datos_post);

						$datos_post["llave"] = "url_confirmacion";
						$datos_post["valor"] = (string)$url_confirmacion;
						array_push($response_parametros, $datos_post);


						$datos_reserva["ParametrosPost"] = $response_parametros;


						$respuesta["message"] = "guardado";
						$respuesta["success"] = true;
						$respuesta["response"] = $datos_reserva;



	}
	else {
		$respuesta[ "message" ] = "No identificado, por favor cierre sesion y vuelva a ingresar!";
		$respuesta[ "success" ] = false;
		$respuesta[ "response" ] = NULL;
	}
	}
	else{
		$respuesta["message"] = "E1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


	function get_evento_socio($IDClub,$IDSocio,$Limite=0,$IDEvento="",$Version=""){
	$dbo =& SIMDB::get();

		$response = array();

		if(!empty($IDEvento)):
			$condicion_evento = " and IDEvento".$Version." = '".$IDEvento."'";
		endif;

		$sql = "SELECT *
				 FROM EventoRegistro".$Version." ER, Evento".$Version." E
				 WHERE ER.IDEvento".$Version." = E.IDEvento".$Version."
				 and IDSocio = '".$IDSocio."'
				 and FechaInicio <= '".date("Y-m-d")."'
				 ".$condicion_evento." ORDER BY ER.IDEvento".$Version." Desc  ";
		$qry = $dbo->query( $sql );


		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";

				while ($row_reserva = $dbo->fetchArray($qry))	:

						$reserva["IDClub"] = $IDClub;
						$reserva["IDSocio"] = $IDSocio;
						$reserva["IDEvento"] = $row_reserva["IDEventoRegistro".$Version];
						$reserva["IDEventoRegistro"] = $row_reserva["IDEventoRegistro".$Version];
						$reserva["Evento"] = $dbo->getFields( "Evento".$Version , "Titular" , "IDEvento".$Version." = '" . $row_reserva["IDEvento".$Version] . "'" );

						if(empty($row_reserva["Qr"])){
								$reserva["QR"] = "";
						}
						else{
								$reserva["QR"] = SOCIO_ROOT."qr/".$row_reserva["Qr"];
						}

						$rutafoto=$dbo->getFields( "Evento".$Version , "EventoFile" , "IDEvento".$Version." = '" . $row_reserva["IDEvento".$Version] . "'" );

						if ( !empty( $rutafoto ) ):
								$foto1 = IMGEVENTO_ROOT . $rutafoto;
						else :
							$foto1 = "";
						endif;
						$reserva["Foto"] = $foto1;

						$reserva[ "Fecha" ] = $row_reserva[ "FechaEvento" ];
						$reserva[ "FechaFinEvento" ] = $row_reserva[ "FechaFinEvento" ];


						$reserva["PagadaOnline"] = $row_reserva["Pagado"];
						if(!empty($row_reserva["FechaTransaccion"])){
							$reserva["FechaTransaccion"] = $row_reserva["FechaTransaccion"];
						}
						else{
							$reserva["FechaTransaccion"] = "No aplica";
						}

						$Mensaje_transaccion="";
						if(!empty($row_reserva["MensajeTransaccion"])){
							$reserva["MensajeTransaccion"] = "Mensaje transaccion: " . $Mensaje_transaccion;
						}



						//Datos Reserva
						$response_datos = array();
						$sql_datos_reserva = $dbo->query("Select * From EventoRegistroDatos".$Version." Where IDEventoRegistro".$Version." = '".$row_reserva["IDEventoRegistro".$Version]."'");
						while ($r_datos_reserva = $dbo->fetchArray($sql_datos_reserva)):
							$dato_reserva["Campo"]=utf8_encode($dbo->getFields( "CampoFormularioEvento".$Version , "EtiquetaCampo" , "IDCampoFormularioEvento".$Version." = '" . $r_datos_reserva["IDCampoFormularioEvento".$Version] . "'" ));
							$dato_reserva["Valor"]=$r_datos_reserva["Valor"];
							array_push($response_datos, $dato_reserva);
						endwhile;

						$reserva["Datos"] = $response_datos;

						array_push($response, $reserva);

				endwhile;


				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
			/*
				$reserva["IDClub"] = "";
				$reserva["IDSocio"] = "";
				$reserva["IDEvento"] = "";
				array_push($response, $reserva);

				$respuesta["message"] = "No tienes eventos programados.";
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
			*/

			$respuesta["message"] = "No tienes eventos programados.";
			$respuesta["success"] = false;
			$respuesta["response"] = $response;
		}//end else

		return $respuesta;

	}


	function elimina_evento_socio($IDClub,$IDSocio,$IDEventoRegistro,$Version)
	{
	$dbo =& SIMDB::get();

	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDEventoRegistro ) ){

		//verifico que exista
		$id_evento_socio = $dbo->getFields( "EventoRegistro".$Version , "IDEventoRegistro".$Version , "IDClub = '" . $IDClub . "' and IDEventoRegistro".$Version." = '".$IDEventoRegistro."' and IDSocio = '".$IDSocio."'" );

		if (!empty($id_evento_socio)){


			//Hacer copia del registrado por temas de confirmacion de pago
			$sql_bck="INSERT IGNORE INTO EventoRegistroEliminado".$Version." (IDEventoRegistro".$Version.", IDEvento".$Version.", IDClub, IDSocio, IDSocioBeneficiario, IDTipoPago, Valor, CodigoPago, EstadoTransaccion, FechaTransaccion, CodigoRespuesta, MedioPago, TipoMedioPago, Pagado, PagoPayu, UsuarioTrCr, FechaTrCr,UsuarioTrEd, FechaTrEd)
			SELECT IDEventoRegistro".$Version.", IDEvento".$Version.", IDClub, IDSocio, IDSocioBeneficiario, IDTipoPago, Valor, CodigoPago, EstadoTransaccion, FechaTransaccion, CodigoRespuesta, MedioPago, TipoMedioPago, Pagado, PagoPayu, UsuarioTrCr, FechaTrCr, UsuarioTrEd, FechaTrEd FROM EventoRegistro".$Version."
			WHERE IDEventoRegistro".$Version." = '".$IDEventoRegistro."' and IDSocio = '".$IDSocio."'";
			$dbo->query($sql_bck);
			// Borrar evento socio
			$sql_elimina_evento_socio = $dbo->query("DELETE FROM EventoRegistro".$Version." Where IDClub = '" . $IDClub . "' and IDEventoRegistro".$Version." = '".$IDEventoRegistro."' and IDSocio = '".$IDSocio."'");

			SIMUtil::notificar_elimina_inscripcion_evento($IDEventoRegistro,$IDSocio,$Version);

			$respuesta["message"] = "eliminado correctamente";
			$respuesta["success"] = true;
			$respuesta["response"] = "eliminado";

		}
		else{
			$respuesta["message"] = "Atencion la reserva del evento no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "51. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


	function set_tipo_pago_evento($IDClub,$IDSocio,$IDEventoRegistro,$IDTipoPago,$CodigoPago="",$Version="")
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDEventoRegistro )  && !empty( $IDTipoPago ) ){

		//verifico que la reserva exista y pertenezca al club
		$id_reserva = $dbo->getFields( "EventoRegistro".$Version , "IDEventoRegistro".$Version , "IDEventoRegistro".$Version." = '" . $IDEventoRegistro . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_reserva)){


			//Si es codigo actualizo para que no se utilice mas y valido si existe el codigo
			if(!empty($CodigoPago)):

				$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
				$codigo_disponible =  $dbo->getFields( "ClubCodigoPago" , "Disponible" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
				if (empty($id_codigo)){
						$respuesta["message"] = "Codigo invalido, por favor verifique";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
				}
				elseif($codigo_disponible<>"S"){
						$respuesta["message"] = "El codigo ya fue utilizado, por favor verifique";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
						return $respuesta;
				}
				else{

					$sql_actualiza_codigo = "Update ClubCodigoPago Set Disponible= 'N', IDSocio = '".$IDSocio."'  Where   Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."'";
					$dbo->query($sql_actualiza_codigo);
				}

			endif;


			$sql_tipo_pago = "Update EventoRegistro Set IDTipoPago =  '".$IDTipoPago."', CodigoPago = '".$CodigoPago."' Where IDEventoRegistro = '".$IDEventoRegistro."' and IDClub = '".$IDClub."'";
			$dbo->query($sql_tipo_pago);



			$respuesta["message"] = "Forma de pago registrada con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Atencion la reserva no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "51. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_tipo_pago_domicilio($IDClub,$IDSocio,$IDDomicilio,$IDTipoPago,$CodigoPago="",$Version="")
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDDomicilio )  && !empty( $IDTipoPago ) ){

			//verifico que la reserva exista y pertenezca al club
			$id_reserva = $dbo->getFields( "Domicilio".$Version , "IDDomicilio" , "IDDomicilio = '" . $IDDomicilio . "' and IDClub = '".$IDClub."'" );

			if (!empty($id_reserva)){


				//Si es codigo actualizo para que no se utilice mas y valido si existe el codigo
				if(!empty($CodigoPago)):

					$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
					$codigo_disponible =  $dbo->getFields( "ClubCodigoPago" , "Disponible" , "Codigo = '" . $CodigoPago. "' and IDClub = '".$IDClub."'" );
					if (empty($id_codigo)){
							$respuesta["message"] = "Codigo invalido, por favor verifique";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
					}
					elseif($codigo_disponible<>"S"){
							$respuesta["message"] = "El codigo ya fue utilizado, por favor verifique";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
					}
					else{

						$sql_actualiza_codigo = "Update ClubCodigoPago Set Disponible= 'N', IDSocio = '".$IDSocio."'  Where   Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."'";
						$dbo->query($sql_actualiza_codigo);
					}

				endif;


				$sql_tipo_pago = "Update Domicilio".$Version." Set IDTipoPago =  '".$IDTipoPago."', CodigoPago = '".$CodigoPago."' Where IDDomicilio = '".$IDDomicilio."' and IDClub = '".$IDClub."'";
				$dbo->query($sql_tipo_pago);



				$respuesta["message"] = "Forma de pago registrada con exito!";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "Atencion la reserva no existe o no pertenece al club";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "51. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}

	function get_codigo_pago_evento($IDClub,$CodigoPago){

		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $CodigoPago ) ){

			//verifico que el codigo exista y no haya sido utilizado
			$id_codigo = $dbo->getFields( "ClubCodigoPago" , "IDClubCodigoPago" , "Codigo = '" . $CodigoPago . "' and IDClub = '".$IDClub."' and Disponible = 'S'" );

			if (!empty($id_codigo)){

				$respuesta["message"] = "Codigo correcto";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;

			}
			else{
				$respuesta["message"] = "El codigo no es valido";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

		}
		else{
			$respuesta["message"] = "52. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

	}


	function  valida_cierre_sesion($IDSocio){
		$dbo =& SIMDB::get();
		$IDSocioCierre=$dbo->getFields( "CierreSesionSocio" , "IDSocio" , "IDSocio = '" . $IDSocio . "'" );
		 if((int)$IDSocioCierre>0): //El socio necesita cerrar sesion por alguna razon
			$respuesta=1;
		else:
			$respuesta=0;
		 endif;
		 return $respuesta;
	}

	function  set_cerrar_sesion($IDClub,$IDSocio){
		$dbo =& SIMDB::get();
		if(!empty($IDSocio)):
				$sql_actualiza_cierre = "Update Socio Set SolicitarCierreSesion = 'N', FechaCierreSesion = NOW() Where IDSocio = '".$IDSocio."' and IDClub = '".$IDClub."'";
				$dbo->query($sql_actualiza_cierre);
				$respuesta["message"] = "Sesion cerrada correctamente";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		else:
				$respuesta["message"] = "El socio no existe";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		endif;


		 return $respuesta;
	}



	//PQR Funcionarios
	function get_pqr_funcionario( $IDClub, $IDUsuario, $IDPqr)
	{
		$dbo =& SIMDB::get();

		$response = array();

		$array_id_consulta[]=$IDUsuario;

		if(!empty($IDPqr))
			$condicion = " and IDPqr = '".$IDPqr."'";


		$sql = "SELECT * FROM PqrFuncionario WHERE IDClub = '".$IDClub."' and IDUsuarioCreacion = '".$IDUsuario."' $condicion ORDER BY FIELD (IDPqrEstado,'1','4','5','2','3'),IDPqrEstado ASC ";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ($row_pqr = $dbo->fetchArray($qry))	:
				$pqr["IDClub"] = $IDClub;
				$pqr["IDUsuario"] = $IDUsuario;
				$pqr["IDPqr"] = $row_pqr["IDPqr"];
				$pqr["IDArea"] = $row_pqr["IDArea"];
				$pqr["IDTipoPqr"] = $row_pqr["IDTipoPqr"];
				$pqr["IDPqrEstado"] = $row_pqr["IDPqrEstado"];
				$pqr["NombreArea"] = utf8_encode($dbo->getFields( "AreaFuncionario" , "Nombre" , "IDArea = '" . $row_pqr["IDArea"] . "'" ));
				$pqr["Tipo"] = utf8_encode($dbo->getFields( "TipoPqrFuncionario" , "Nombre" , "IDTipoPqr = '" . $row_pqr["IDTipoPqr"] . "'" ));
				$pqr["Asunto"] = utf8_encode($row_pqr["Asunto"]);
				$pqr["Comentario"] = utf8_encode($row_pqr["Descripcion"]);
				$pqr["Archivo"] = PQR_ROOT.$row_pqr["Archivo1"];
				$pqr["Fecha"] = $row_pqr["Fecha"];
				$pqr["Estado"] = $dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );

				//Bitacora Pqr
				$response_bitacora = array();
				$sql_bitacora = $dbo->query("SELECT * FROM Detalle_PqrFuncionario WHERE IDPqr = '".$row_pqr["IDPqr"]."' Order By IDDetallePqr Desc");
				while ($r_bitacora = $dbo->fetchArray($sql_bitacora)):
					$bitacora[IDDetallePqr]=$r_bitacora["IDDetallePqr"];
					 if ($r_bitacora[IDUsuario] > 0) {
						$usuario_responde =  "CLUB: " . $dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$r_bitacora[IDUsuario] . "'" );
						$pos = strpos($r_bitacora["Respuesta"], "<p>"); //para saber si la respuesta esta en html o no
						//quito caracteres especiales
						$respuesta_pqr =  strip_tags($r_bitacora["Respuesta"]);
						//$respuesta_pqr = str_replace("&nbsp;","",$respuesta_pqr);
						if ($pos !== false) {
							//$respuesta_pqr = utf8_decode(html_entity_decode($respuesta_pqr, ENT_QUOTES, "UTF-8"));
						}


						 } elseif($r_bitacora[IDUsuarioCreacion] > 0) {
						$nombre_cliente = utf8_encode($dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$r_bitacora[IDUsuarioCreacion] . "'" ));
						$usuario_responde = "Funcionario: " . $nombre_cliente;
						$respuesta_pqr =  utf8_encode($r_bitacora["Respuesta"]);
						}
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=utf8_encode($respuesta_pqr);
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($r_bitacora["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);
				endwhile;

				//Agrego el primer comentario como parte del seguimiento
					$bitacora[IDDetallePqr]=$row_pqr["IDPqr"];
					$nombre_cliente = utf8_encode($dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$IDUsuarioCreacion . "'" ));
					$usuario_responde = "Funcionario: " . $nombre_cliente;
					$respuesta_pqr =  utf8_encode($row_pqr["Descripcion"]);
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=$respuesta_pqr;
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($row_pqr["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);




				$pqr["Seguimiento"] = $response_bitacora;
				array_push($response, $pqr);
			endwhile;

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se han encontraron resultados";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_pqr_socio_funcionario( $IDClub, $IDUsuario, $IDPqr)
	{
		$dbo =& SIMDB::get();

		$response = array();

		$array_id_consulta[]=$IDUsuario;

		if(!empty($IDPqr))
			$condicion = " and IDPqr = '".$IDPqr."'";

		//Selecciona las areas del usuario para saber cuales pqr puede gestionar
		$sql_area_usuario = "Select * From UsuarioArea Where IDUsuario = '".$IDUsuario."'";
		$result_area = $dbo->query($sql_area_usuario);
		while($row_area=$dbo->fetchArray($result_area)):
			$array_id_area[]=$row_area["IDArea"];
		endwhile;


		if(count($array_id_area)>0)
		{
			$id_area = implode(",",$array_id_area);
			$sql = "SELECT * FROM Pqr WHERE IDClub = '".$IDClub."' and IDArea in (".$id_area.") $condicion ORDER BY FIELD (IDPqrEstado,'1','4','5','2','3'),IDPqrEstado ASC ";
			$qry = $dbo->query( $sql );
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ($row_pqr = $dbo->fetchArray($qry))	:
				$pqr["IDClub"] = $IDClub;
				$pqr["IDUsuario"] = $IDUsuario;
				$pqr["IDPqr"] = $row_pqr["IDPqr"];
				$pqr["IDSocio"] = $row_pqr["IDSocio"];
				$IDSocio = $row_pqr["IDSocio"];
				$pqr["IDArea"] = $row_pqr["IDArea"];
				$pqr["IDTipoPqr"] = $row_pqr["IDTipoPqr"];
				$pqr["IDPqrEstado"] = $row_pqr["IDPqrEstado"];
				$pqr["NombreArea"] = utf8_encode($dbo->getFields( "AreaFuncionario" , "Nombre" , "IDArea = '" . $row_pqr["IDArea"] . "'" ));
				$pqr["Tipo"] = utf8_encode($dbo->getFields( "TipoPqrFuncionario" , "Nombre" , "IDTipoPqr = '" . $row_pqr["IDTipoPqr"] . "'" ));
				$pqr["Asunto"] = utf8_encode($row_pqr["Asunto"]);
				$pqr["Comentario"] = utf8_encode($row_pqr["Descripcion"]);
				$pqr["Archivo"] = PQR_ROOT.$row_pqr["Archivo1"];
				$pqr["Fecha"] = $row_pqr["Fecha"];
				$pqr["Estado"] = $dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );

				//Bitacora Pqr
				$response_bitacora = array();
				$sql_bitacora = $dbo->query("SELECT * FROM Detalle_Pqr WHERE IDPQR = '".$row_pqr["IDPqr"]."' Order By 	IDDetallePqr Desc");
				while ($r_bitacora = $dbo->fetchArray($sql_bitacora)):
					$bitacora[IDDetallePqr]=$r_bitacora["IDDetallePqr"];
					 if ($r_bitacora[IDUsuario] > 0) {
						$usuario_responde =  "CLUB: " . $dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$r_bitacora[IDUsuario] . "'" );
						$pos = strpos($r_bitacora["Respuesta"], "<p>"); //para saber si la respuesta esta en html o no
						//quito caracteres especiales
						$respuesta_pqr =  strip_tags($r_bitacora["Respuesta"]);
						//$respuesta_pqr = str_replace("&nbsp;","",$respuesta_pqr);
						if ($pos !== false) {
							$respuesta_pqr = utf8_decode(html_entity_decode($respuesta_pqr, ENT_QUOTES, "UTF-8"));
						}

						 } elseif($r_bitacora[IDSocio] > 0) {
						$nombre_cliente = utf8_encode($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '" .$r_bitacora[IDSocio] . "'" ));
						$apellido_cliente = utf8_encode($dbo->getFields( "Socio" , "Apellido" , "IDSocio = '" .$r_bitacora[IDSocio] . "'" ));
						$usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
						$respuesta_pqr =  utf8_encode($r_bitacora["Respuesta"]);
						}
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=utf8_encode($respuesta_pqr);
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($r_bitacora["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);
				endwhile;

				//Agrego el primer comentario como parte del seguimiento
					$bitacora[IDDetallePqr]=$row_pqr["IDPqr"];
					$nombre_cliente = utf8_encode($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '" .$IDSocio . "'" ));
					$apellido_cliente = utf8_encode($dbo->getFields( "Socio" , "Apellido" , "IDSocio = '" .$IDSocio . "'" ));
					$usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
					$respuesta_pqr =  utf8_encode($row_pqr["Descripcion"]);
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=$respuesta_pqr;
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($row_pqr["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);




				$pqr["Seguimiento"] = $response_bitacora;
				array_push($response, $pqr);
			endwhile;

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se han encontraron resultados";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_pqr_asignada_funcionario( $IDClub, $IDUsuario, $IDPqr)
	{
		$dbo =& SIMDB::get();

		$response = array();

		$array_id_consulta[]=$IDUsuario;

		if(!empty($IDPqr))
			$condicion = " and IDPqr = '".$IDPqr."'";

		//Selecciona las areas del usuario para saber cuales pqr puede gestionar de funcionarios
		$sql_area_usuario = "Select * From UsuarioAreaFuncionario Where IDUsuario = '".$IDUsuario."'";
		$result_area = $dbo->query($sql_area_usuario);
		while($row_area=$dbo->fetchArray($result_area)):
			$array_id_area[]=$row_area["IDArea"];
		endwhile;


		if(count($array_id_area)>0)
		{
			$id_area = implode(",",$array_id_area);
			$sql = "SELECT * FROM PqrFuncionario WHERE IDClub = '".$IDClub."' and IDArea in (".$id_area.") $condicion ORDER BY FIELD (IDPqrEstado,'1','4','5','2','3'),IDPqrEstado ASC ";
			$qry = $dbo->query( $sql );
			$message = $dbo->rows( $qry ) . " Encontrados";
			while ($row_pqr = $dbo->fetchArray($qry))	:
				$pqr["IDClub"] = $IDClub;
				$pqr["IDUsuario"] = $IDUsuario;
				$pqr["IDPqr"] = $row_pqr["IDPqr"];
				$pqr["IDUsuarioCreacion"] = $row_pqr["IDUsuarioCreacion"];
				$IDUsuario = $row_pqr["IDUsuarioCreacion"];
				$pqr["IDArea"] = $row_pqr["IDArea"];
				$pqr["IDTipoPqr"] = $row_pqr["IDTipoPqr"];
				$pqr["IDPqrEstado"] = $row_pqr["IDPqrEstado"];
				$pqr["NombreArea"] = utf8_encode($dbo->getFields( "AreaFuncionario" , "Nombre" , "IDArea = '" . $row_pqr["IDArea"] . "'" ));
				$pqr["Tipo"] = utf8_encode($dbo->getFields( "TipoPqrFuncionario" , "Nombre" , "IDTipoPqr = '" . $row_pqr["IDTipoPqr"] . "'" ));
				$UsuarioCreacion = utf8_encode($dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" . $row_pqr["IDUsuarioCreacion"] . "'" ));
				$pqr["Asunto"] = utf8_encode($row_pqr["Asunto"]) . " creado por: " . $UsuarioCreacion;
				$pqr["Comentario"] = utf8_encode($row_pqr["Descripcion"]);
				$pqr["Archivo"] = PQR_ROOT.$row_pqr["Archivo1"];
				$pqr["Fecha"] = $row_pqr["Fecha"];
				$pqr["Estado"] = $dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );

				//Bitacora Pqr
				$response_bitacora = array();
				$sql_bitacora = $dbo->query("SELECT * FROM Detalle_PqrFuncionario WHERE IDPqr = '".$row_pqr["IDPqr"]."' Order By 	IDDetallePqr Desc");
				while ($r_bitacora = $dbo->fetchArray($sql_bitacora)):
					$bitacora[IDDetallePqr]=$r_bitacora["IDDetallePqr"];
					 if ($r_bitacora[IDUsuario] > 0) {
						$usuario_responde =  "CLUB: " . $dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$r_bitacora[IDUsuario] . "'" );
						$pos = strpos($r_bitacora["Respuesta"], "<p>"); //para saber si la respuesta esta en html o no
						//quito caracteres especiales
						$respuesta_pqr =  strip_tags($r_bitacora["Respuesta"]);
						//$respuesta_pqr = str_replace("&nbsp;","",$respuesta_pqr);
						if ($pos !== false) {
							$respuesta_pqr = utf8_decode(html_entity_decode($respuesta_pqr, ENT_QUOTES, "UTF-8"));
						}


						 } elseif($r_bitacora[IDUsuarioCreacion] > 0) {
						$nombre_cliente = utf8_encode($dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '" .$r_bitacora[IDUsuarioCreacion] . "'" ));
						$usuario_responde = "Socio: " . $nombre_cliente . " " . $apellido_cliente;
						$respuesta_pqr =  utf8_decode($r_bitacora["Respuesta"]);
						}
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=utf8_encode($respuesta_pqr);
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($r_bitacora["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);
				endwhile;

				//Agrego el primer comentario como parte del seguimiento
					$bitacora[IDDetallePqr]=$row_pqr["IDPqr"];
					$nombre_cliente = utf8_encode($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '" .$IDSocio . "'" ));
					$apellido_cliente = utf8_encode($dbo->getFields( "Socio" , "Apellido" , "IDSocio = '" .$IDSocio . "'" ));
					$usuario_responde = "Usuario: " . $nombre_cliente . " " . $apellido_cliente;
					$respuesta_pqr =  utf8_encode($row_pqr["Descripcion"]);
					$bitacora[UsuarioResponde]=$usuario_responde;
					$bitacora[RespuestaPqr]=$respuesta_pqr;
					$bitacora[Estado]=$dbo->getFields( "PqrEstado" , "Nombre" , "IDPqrEstado = '" . $row_pqr["IDPqrEstado"] . "'" );
					$bitacora[FechaRespuesta]=substr($row_pqr["Fecha"],0,10);
					array_push($response_bitacora, $bitacora);




				$pqr["Seguimiento"] = $response_bitacora;
				array_push($response, $pqr);
			endwhile;

				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se han encontraron resultados";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	function get_tipo_pqr_funcionario( $IDClub )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM TipoPqrFuncionario WHERE Publicar = 'S' and IDClub = '".$IDClub."' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$tipo_pqr["IDTipoPqr"] = $r["IDTipoPqr"];
				$tipo_pqr["Nombre"] = $r["Nombre"];
				array_push($response, $tipo_pqr);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function

	function set_pqr_funcionario($IDClub,$IDArea, $IDUsuario,$TipoPqr, $Asunto, $Comentario, $Archivo, $File="",$IDTipoPqr="")	{
		$dbo =& SIMDB::get();

		//Valido el pseo del archivo
		$tamano_archivo = $File["Archivo"]["size"];
		if ( $tamano_archivo >= 6000000 ){
			$respuesta[ "message" ] = "El archivo supera el limite de peso permitido de 6 megas, por favor verifique";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
			return $respuesta;
		}


		if( !empty( $IDClub ) && !empty( $IDArea ) && !empty( $IDUsuario )  && !empty( $Comentario ) ){

		//verifico que el usuario exista y pertenezca al club
		$id_usuario = $dbo->getFields( "Usuario" , "IDUsuario" , "IDUsuario = '" . $IDUsuario . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_usuario)){

			//UPLOAD de imagenes

			if(isset($File)){

				$files =  SIMFile::upload( $File["Archivo"] , PQR_DIR , "IMAGE" );
				if( empty( $files ) && !empty( $File["Archivo"]["name"] ) ):
					$respuesta["message"] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
					return $respuesta;
				endif;
				$Archivo = $files[0]["innername"];


			}//end if

			//Consulto el siguiente consecutivo del pqr
			$sql_max_numero = "Select MAX(Numero) as NumeroMaximo From PqrFuncionario Where IDClub = '".$IDClub."'";
			$result_numero = $dbo->query($sql_max_numero);
			$row_numero = $dbo->fetchArray($result_numero);
			$siguiente_consecutivo = (int)$row_numero["NumeroMaximo"]+1;

			//Valido que el pqr no exista por que en algunos casos quedó repetido
			$sql_pqr_existe = "Select *
								 From PqrFuncionario
								 Where IDTipoPqr = '".$IDTipoPqr."' and IDArea = '".$IDArea."' and IDUsuarioCreacion = '".$IDUsuario."' and Tipo = '".$TipoPqr."' and Asunto = '".$Asunto."' and Descripcion='".$Comentario."'";
			$result_pqr_existe = $dbo->query($sql_pqr_existe);
			if($dbo->rows($result_pqr_existe)<=0):
				$sql_pqr = $dbo->query("Insert Into PqrFuncionario (IDClub, Numero, IDTipoPqr, IDArea, IDUsuarioCreacion, IDPqrEstado, Tipo, Asunto, Descripcion, Archivo1, Fecha,  UsuarioTrCr, FechaTrCr)
										Values ('".$IDClub."','".$siguiente_consecutivo."','".$IDTipoPqr."','".$IDArea."','".$IDUsuario."', '1','".$TipoPqr."','".$Asunto."','".$Comentario."','".$Archivo."',NOW(),'WebService',NOW())");
				$id_pqr = $dbo->lastID();
				SIMUtil::noticar_nuevo_pqr_funcionario($id_pqr);
			endif;

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Error el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "11. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}


	function set_pqr_respuesta_funcionario($IDClub,$IDUsuario, $IDPqr, $Comentario,$IDPqrEstado)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDUsuario )  && !empty( $Comentario ) ){

		//verifico que el socio exista y pertenezca al club
		$id_usuario = $dbo->getFields( "Usuario" , "IDUsuario" , "IDUsuario = '" . $IDUsuario . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_usuario)){

			$sql_pqr = $dbo->query("Insert Into Detalle_PqrFuncionario (IDPqr, IDUsuarioCreacion, Fecha, Respuesta, UsuarioTrCr, FechaTrCr)
									Values ('".$IDPqr."','".$IDUsuario."',NOW(), '".$Comentario."','WebService',NOW())");

			SIMUtil::noticar_respuesta_pqr_funcionario($IDPqr,$Comentario);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Error el usuaro no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "12. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

		function set_calificacion_pqr_funcionario($IDClub,$IDUsuario, $IDPqr, $Comentario, $Calificacion)
	{
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDUsuario )  && !empty( $Calificacion ) ){

			$datos_pqr = $dbo->fetchAll( "PqrFuncionario", " IDPqr = '" . $IDPqr . "' ", "array" );

			if($datos_pqr["Calificacion"]==0){

				$sql_pqr = $dbo->query("Update PqrFuncionario Set Calificacion = '".$Calificacion."', ComentarioCalificacion = '".$Comentario."', FechaCalificacion = NOW() Where IDPqr = '".$IDPqr."'");

				SIMUtil::noticar_respuesta_pqr_funcionario($IDPqr,$Comentario);

				$respuesta["message"] = "guardado";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "Ya se había registrado una calificación";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;

			}

	}
	else{
		$respuesta["message"] = "120. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function get_area_club_funcionario( $IDClub)
	{

		$dbo =& SIMDB::get();
		$response = array();
		$sql = "SELECT * From AreaFuncionario WHERE Activo = 'S' and IDClub = '".$IDClub."' and MostrarApp <> 'N' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

					$area["IDClub"] = $r["IDClub"];
					$area["IDArea"] = $r["IDArea"];
					$area["Nombre"] = utf8_encode($r["Nombre"]);
					$area["CorreoResponsable"] = $r["CorreoResponsable"];
					array_push($response, $area);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function


	 function set_pqr_respuesta_para_socio($IDClub,$IDUsuario, $IDPqr, $Comentario, $IDPqrEstado){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDUsuario )  && !empty( $Comentario ) ){

		//verifico que el socio exista y pertenezca al club
		$id_usuario = $dbo->getFields( "Usuario" , "IDUsuario" , "IDUsuario = '" . $IDUsuario . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_usuario)){

			//Actualizo el estado del pqr
			if(!empty($IDPqrEstado))
				$sql_estado =  $dbo->query("Update Pqr Set IDPqrEstado = '".$IDPqrEstado."' Where IDPqr = '".$IDPqr."' ");


			$sql_pqr = $dbo->query("Insert Into Detalle_Pqr (IDPqr, IDUsuario, Fecha, Respuesta, UsuarioTrCr, FechaTrCr)
									Values ('".$IDPqr."','".$IDUsuario."',NOW(), '".$Comentario."','WebService',NOW())");

				//Averiguo el nombre del modulo del pqr
				$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDModulo = '15' and IDClub = '".$IDClub."'" ));
				if(empty($nombre_modulo))
					$nombre_modulo = "Pqr";



				$frm = $dbo->fetchAll( "Pqr", " IDPqr = '" . $IDPqr . "' ", "array" );

				$Mensaje = "Cordial Saludo, se ha dado respuesta a su ".$nombre_modulo.", por favor ingrese al app para conocer mas detalles. (".$frm["Numero"].")";

				SIMUtil::envia_respuesta_cliente($frm,$IDPqr,$Comentario,$IDClub);
				SIMUtil::enviar_notificacion_push_general($IDClub,$frm["IDSocio"],$Mensaje);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Error el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "12. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_pqr_respuesta_para_funcionario($IDClub,$IDUsuario, $IDPqr, $Comentario, $IDPqrEstado){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDPqr ) && !empty( $IDUsuario )  && !empty( $Comentario ) ){

		//verifico que el socio exista y pertenezca al club
		$id_usuario = $dbo->getFields( "Usuario" , "IDUsuario" , "IDUsuario = '" . $IDUsuario . "' and IDClub = '".$IDClub."'" );

		if (!empty($id_usuario)){

			//Actualizo el estado del pqr
			if(!empty($IDPqrEstado))
				$sql_estado =  $dbo->query("Update PqrFuncionario Set IDPqrEstado = '".$IDPqrEstado."' Where IDPqr = '".$IDPqr."' ");


			$sql_pqr = $dbo->query("Insert Into Detalle_PqrFuncionario (IDPqr, IDUsuario, Fecha, Respuesta, UsuarioTrCr, FechaTrCr)
									Values ('".$IDPqr."','".$IDUsuario."',NOW(), '".$Comentario."','WebService',NOW())");

				//Averiguo el nombre del modulo del pqr
				$nombre_modulo = utf8_encode($dbo->getFields( "ClubModulo" , "Titulo" , "IDModulo = '15' and IDClub = '".$IDClub."'" ));
				if(empty($nombre_modulo))
					$nombre_modulo = "Pqr";



				$frm = $dbo->fetchAll( "Pqr", " IDPqr = '" . $IDPqr . "' ", "array" );

				$Mensaje = "Cordial saludo, se ha dado respuesta a su ".$nombre_modulo.", por favor ingrese al app para conocer mas detalles. (".$frm["Numero"].")";

				SIMUtil::envia_respuesta_funcionario($frm,$IDPqr,$Comentario,$IDClub);
				SIMUtil::enviar_notificacion_push_general_funcionario($IDClub,$IDUsuario,$Mensaje);

			$respuesta["message"] = "guardado";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "Error el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "12. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function get_estado_pqr( $IDClub )
	{
		$dbo =& SIMDB::get();


		$response = array();
		$sql = "SELECT * FROM PqrEstado WHERE Publicar = 'S' ORDER BY Nombre";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$estado_pqr["IDPqrEstado"] = $r["IDPqrEstado"];
				$estado_pqr["Nombre"] = $r["Nombre"];
				array_push($response, $estado_pqr);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;

	}// fin function
	//FIN PQR Funcionarios

	function get_estado_objetos_perdidos( $IDClub )
	{
	$dbo =& SIMDB::get();


	$response = array();
	$sql = "SELECT * FROM EstadoObjetosPerdidos WHERE Publicar = 'S' ORDER BY Nombre";
	$qry = $dbo->query( $sql );
	if( $dbo->rows( $qry ) > 0 )
	{
		$message = $dbo->rows( $qry ) . " Encontrados";
		while( $r = $dbo->fetchArray( $qry ) )
		{
			$estado_pqr["IDEstadoObjetosPerdidos"] = $r["IDEstadoObjetosPerdidos"];
			$estado_pqr["Nombre"] = $r["Nombre"];
			array_push($response, $estado_pqr);

		}//ednw hile
			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;
	}//End if
	else
	{
			$respuesta["message"] = "No se encontraron registro";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
	}//end else

	return $respuesta;

	}// fin function


	function get_submodulo($IDClub, $IDModulo){
	$dbo =& SIMDB::get();

		$response = array();
		$sql = "Select * From SubModulo Where IDModulo = '".$IDModulo."' and IDClub = '".$IDClub."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{
				$modulo["IDClub"] = $IDClub;
				$modulo["IDModulo"] = $IDModulo;
				$modulo["IDSubModulo"] = $r["IDSubModulo"];

				//Eventos
				$response_eve = array();
				if(!empty($r["IDSeccionEvento"])):
					$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '".$IDClub."' and IDModulo = '4' Limit 1";
					$qry_modulo = $dbo->query( $sql_modulo );
					$r_modulo = $dbo->fetchArray( $qry_modulo );
					$modulo_eve["IDModulo"] = $r_modulo["IDModulo"];
					if(!empty($r_modulo["Titulo"]))
						$modulo_eve["NombreModulo"] = $r_modulo["Titulo"];
					else
						$modulo_eve["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));



					$modulo_eve["Orden"] = $r_modulo["Orden"];
					$icono_modulo = $r_modulo["Icono"] ;
					if (!empty($r_modulo["Icono"])):
						$foto = MODULO_ROOT.$r_modulo["Icono"];
					else:
						$foto="";
					endif;
					$modulo_eve["Icono"] = $foto;

					if(($IDClub=="7") && $IDModulo=="50"){
						$modulo_eve["NombreModulo"] = "Inscripcion Torneos";
						$modulo_eve["Icono"] =  MODULO_ROOT."icon_rankf.png";
					}

					if(($IDClub=="9") && $IDModulo=="50"){
						$modulo_eve["NombreModulo"] = "Inscripcion Ranking";
						$modulo_eve["Icono"] =  MODULO_ROOT."icon_rankf.png";
					}



					$array_evento = explode("|",$r["IDSeccionEvento"]);
					$response_id_eve = array();
					foreach($array_evento as $id_evento):
						$array_id_eve["IDSeccionEvento"] = $id_evento;
						array_push($response_id_eve, $array_id_eve);
					endforeach;

					$modulo_eve["SeccionEvento"]=$response_id_eve;
					array_push($response_eve, $modulo_eve);
					$modulo["Eventos"] = $response_eve;
				endif;

				//Reservas
				$response_reserva = array();
				if(!empty($r["IDServicio"])):
					$array_reserva = explode("|",$r["IDServicio"]);
					$response_id_reserva = array();
					$id_servicio_sub=implode(",",$array_reserva);
					$sql_sub="SELECT S.IDServicio,SM.IDServicioMaestro FROM Servicio S,ServicioMaestro SM  WHERE S.IDServicioMaestro=SM.IDServicioMaestro and S.IDServicio in (".$id_servicio_sub.")";
					$r_sub=$dbo->query($sql_sub);
					unset($array_reserva);
					while($row_sub=$dbo->fetchArray($r_sub)){
							$OrdenServicio =  $dbo->getFields( "ServicioClub" , "Orden" , "IDServicioMaestro = '".$row_sub["IDServicioMaestro"]."' and IDClub = '".$IDClub."'" );
							$array_reserva[$OrdenServicio]=$row_sub["IDServicio"];
					}

					ksort($array_reserva);
					foreach($array_reserva as $id_servicio):
							$datos_servicio = $dbo->fetchAll( "Servicio", " IDServicio = '" . $id_servicio . "' ", "array" );
							$NombrePersonalizado =  $dbo->getFields( "ServicioClub" , "TituloServicio" , "IDServicioMaestro = '".$datos_servicio["IDServicioMaestro"]."' and IDClub = '".$IDClub."'" );


							$array_id_serv["IDServicio"] = $id_servicio;
							//Si tiene un nombre personalizado se lo pongo de lo contrario le pongo el general
							if(!empty($NombrePersonalizado)):
								$array_id_serv["Nombre"] = $NombrePersonalizado;
							else:
								$array_id_serv["Nombre"] = $dbo->getFields( "ServicioMaestro" , "Nombre" , "IDServicioMaestro = '".$datos_servicio["IDServicioMaestro"]."'" );
							endif;

							$foto = "";
							if (!empty($datos_servicio["Icono"])){
										$foto = 	SERVICIO_ROOT.$datos_servicio["Icono"];
							}
							else{
								$icono_maestro = $dbo->getFields( "ServicioMaestro" , "Icono" , "IDServicioMaestro = '".$datos_servicio["IDServicioMaestro"]."'" );
								if (!empty($icono_maestro)){
									$foto = 	SERVICIO_ROOT.$icono_maestro;
								}
							}
							$array_id_serv["Icono"] = $foto;
							array_push($response_id_reserva, $array_id_serv);
					endforeach;
					//Ordeno el array pr el or

					$modulo["Reservas"] = $response_id_reserva;
				endif;




				//Noticias
				$response_not = array();
				if(!empty($r["IDSeccionNoticia"])):
					$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '".$IDClub."' and IDModulo = '3' Limit 1";
					$qry_modulo = $dbo->query( $sql_modulo );
					$r_modulo = $dbo->fetchArray( $qry_modulo );
					$modulo_not["IDModulo"] = $r_modulo["IDModulo"];
					if(!empty($r_modulo["Titulo"]))
						$modulo_not["NombreModulo"] = $r_modulo["Titulo"];
					else
						$modulo_not["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));



					$modulo_not["Orden"] = $r_modulo["Orden"];
					$icono_modulo = $r_modulo["Icono"] ;
					if (!empty($r_modulo["Icono"])):
						$foto = MODULO_ROOT.$r_modulo["Icono"];
					else:
						$foto="";
					endif;
					$modulo_not["Icono"] = $foto;

					if(($IDClub=="44") && ($IDModulo=="88" || $IDModulo=="89" )){
						$modulo_not["NombreModulo"] = "Horarios";
					}


					$array_noticia = explode("|",$r["IDSeccionNoticia"]);
					$response_id_not = array();
					foreach($array_noticia as $id_noticia):
						$array_id_not["IDSeccionNoticia"] = $id_noticia;
						array_push($response_id_not, $array_id_not);
					endforeach;

					$modulo_not["SeccionNoticia"]=$response_id_not;
					array_push($response_not, $modulo_not);
					$modulo["Noticias"] = $response_not;
				endif;

				//Galerias
				$response_gal = array();
				if(!empty($r["IDSeccionGaleria"])):
					$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '".$IDClub."' and IDModulo = '5' Limit 1";
					$qry_modulo = $dbo->query( $sql_modulo );
					$r_modulo = $dbo->fetchArray( $qry_modulo );
					$modulo_gal["IDModulo"] = $r_modulo["IDModulo"];
					if(!empty($r_modulo["Titulo"]))
						$modulo_gal["NombreModulo"] = $r_modulo["Titulo"];
					else
						$modulo_gal["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));


					$modulo_gal["Orden"] = $r_modulo["Orden"];
					$icono_modulo = $r_modulo["Icono"] ;
					if (!empty($r_modulo["Icono"])):
						$foto = MODULO_ROOT.$r_modulo["Icono"];
					else:
						$foto="";
					endif;
					$modulo_gal["Icono"] = $foto;
					$array_galeria = explode("|",$r["IDSeccionGaleria"]);
					$response_id_gal = array();
					foreach($array_galeria as $id_galeria):
						$array_id_gal["IDSeccionGaleria"] = $id_galeria;
						array_push($response_id_gal, $array_id_gal);
					endforeach;

					$modulo_gal["SeccionGaleria"]=$response_id_gal;
					array_push($response_gal, $modulo_gal);
					$modulo["Galerias"] = $response_gal;
				endif;
				//Archivos
				$response_arch = array();
				if(!empty($r["IDTipoArchivo"])):
					$sql_modulo = "SELECT * FROM ClubModulo WHERE IDClub = '".$IDClub."' and IDModulo = '6' Limit 1";
					$qry_modulo = $dbo->query( $sql_modulo );
					$r_modulo = $dbo->fetchArray( $qry_modulo );
					$modulo_arch["IDModulo"] = $r_modulo["IDModulo"];
					if(!empty($r_modulo["Titulo"]))
						$modulo_arch["NombreModulo"] = $r_modulo["Titulo"];
					else
						$modulo_arch["NombreModulo"] = utf8_encode($dbo->getFields( "Modulo" , "Nombre" , "IDModulo = '".$r_modulo["IDModulo"]."'" ));


					$modulo_arch["Orden"] = $r_modulo["Orden"];
					$icono_modulo = $r_modulo["Icono"] ;
					if (!empty($r_modulo["Icono"])):
						$foto = MODULO_ROOT.$r_modulo["Icono"];
					else:
						$foto="";
					endif;
					$modulo_arch["Icono"] = $foto;
					$array_archivo = explode("|",$r["IDTipoArchivo"]);
					$response_id_arch = array();
					foreach($array_archivo as $id_tipoarchivo):
						$array_id_arch["IDTipoArchivo"] = $id_tipoarchivo;
						array_push($response_id_arch, $array_id_arch);
					endforeach;

					$modulo_arch["TipoArchivo"]=$response_id_arch;
					array_push($response_arch, $modulo_arch);
					$modulo["Archivos"] = $response_arch;

				endif;


				array_push($response, $modulo);

			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registro";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
	}



	//WEBSERVICE CLUB COLOMBIA
		function get_datos_usuario_club_colombia($Token,$email="",$clave=""){

			$curl = curl_init();
			 curl_setopt_array($curl, array(
						CURLOPT_URL => "https://www.clubcolombia.org/api/user_information.php",
						CURLOPT_RETURNTRANSFER => true,
						CURLOPT_ENCODING => "",
						CURLOPT_MAXREDIRS => 10,
						CURLOPT_TIMEOUT => 30,
						CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						CURLOPT_CUSTOMREQUEST => "POST",
						CURLOPT_POSTFIELDS => "grant_type=jwt_bearer&access_token=".$Token,
						CURLOPT_HTTPHEADER => array(
							"cache-control: no-cache",
							"content-type: application/x-www-form-urlencoded"
						),
					));
			 $response = curl_exec($curl);
			 $err = curl_error($curl);
			 curl_close($curl);
			 if (!$err):
					$resultado_usuario=json_decode($response,true);
					$datos_usuario=json_decode($resultado_usuario["usuario"],true);
					self::actualiza_datos_colombia($datos_usuario,$email,$clave);
					return "ok";
				else:
					return "no";
			 endif;
		}


		function actualiza_datos_colombia($datos_usuario,$email="",$clave=""){
				$dbo =& SIMDB::get();
					$IDClub = 38;
					$id_socio=$dbo->getFields( "Socio" , "IDSocio" , "IDSocioSistemaExterno = '".$datos_usuario["id"]."' and IDClub = '".$IDClub."'" );
					if(empty($datos_usuario["email"])):
						$cambiar_clave = "S";
				 else:
					$cambiar_clave = "N";
					endif;

					if(empty($email))
						$email=$datos_usuario["documento"];

					 if(empty($clave))
						$clave=$datos_usuario["documento"];

					if(empty($id_socio)):
					$parametros_codigo_barras = $datos_usuario["documento"].";";
						$CodigoBarras=SIMUtil::generar_codigo_barras($parametros_codigo_barras,$id);
						$sql_crea_socio="Insert into Socio (IDClub, IDSocioSistemaExterno, IDEstadoSocio, Accion, Genero, Nombre, Apellido, FechaNacimiento, NumeroDocumento, Email, Clave, CorreoElectronico, FechaTrCr, UsuarioTrCr, TipoSocio, PermiteReservar, CambioClave, Telefono, Direccion,NumeroInvitados, NumeroAccesos, CodigoBarras,ClaveSistemaExterno,FotoActualizadaSocio)
												Values ('38','".$datos_usuario["id"]."',1,'".$datos_usuario["accion"]."','".$datos_usuario["sexo"]."','".$datos_usuario["nombre"]."','','".$datos_usuario["fecha_nacimiento"]."','".$datos_usuario["documento"]."',
												'".$email."',sha1('".$clave."'), '".$datos_usuario["email"]."',NOW(),'WebServiceClubColombia','Socio','S','".$cambiar_clave."','".$datos_usuario["telefono_residencia"]."','".$datos_usuario["direccion_residencia"]."','100','100','".$CodigoBarras."','".base64_encode($clave)."','S')";
					$dbo->query($sql_crea_socio);
					//echo "<br>" . $sql_crea_socio;
					else:
						$sql_actualiza_socio="Update Socio Set
												IDSocioSistemaExterno = '".$datos_usuario["id"]."',
											IDEstadoSocio = 1,
											Accion = '".$datos_usuario["accion"]."',
											Genero = '".$datos_usuario["sexo"]."',
											Nombre = '".$datos_usuario["nombre"]."',
											Apellido = '',
											FechaNacimiento = '".$datos_usuario["fecha_nacimiento"]."',
											NumeroDocumento = '".$datos_usuario["documento"]."',
											Email = '".$email."',
											Clave = sha1('".$clave."'),
											CorreoElectronico = '".$datos_usuario["email"]."',
											FechaTrEd = 'NOW()',
											UsuarioTrEd = 'Webservice Colombia',
											TipoSocio = 'Socio',
											PermiteReservar = 'S',
											CambioClave = '".$cambiar_clave."',
											Telefono = '".$datos_usuario["telefono_residencia"]."',
											Direccion = '".$datos_usuario["direccion_residencia"]."',
											NumeroInvitados = '100',
											NumeroAccesos = '100',
											ClaveSistemaExterno = '".base64_encode($clave)."'
											Where IDSocio = '".$id_socio."' and IDClub = '".$IDClub."'";
					$dbo->query($sql_actualiza_socio);
					//echo "<br>" . $sql_actualiza_socio;
					endif;
		}



		function set_cambio_clave_colombia($Token,$NuevaClave){
			$curl = curl_init();
			 curl_setopt_array($curl, array(
						CURLOPT_URL => "https://www.clubcolombia.org/api/update_password.php",
						CURLOPT_RETURNTRANSFER => true,
						CURLOPT_ENCODING => "",
						CURLOPT_MAXREDIRS => 10,
						CURLOPT_TIMEOUT => 30,
						CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						CURLOPT_CUSTOMREQUEST => "POST",
						CURLOPT_POSTFIELDS => "grant_type=jwt_bearer&access_token=".$Token."&password=".$NuevaClave,
						CURLOPT_HTTPHEADER => array(
							"cache-control: no-cache",
							"content-type: application/x-www-form-urlencoded"
						),
					));
			 $response = curl_exec($curl);
			 $err = curl_error($curl);
			 curl_close($curl);
			 if (!$err):
					//print_r($response);
					return "ok";
			else:
				 return "no";
			 endif;

		}

		function set_recordar_clave_colombia($Token,$Email,$NuevaClave){
			$curl = curl_init();
			 curl_setopt_array($curl, array(
						CURLOPT_URL => "https://www.clubcolombia.org/api/reset_password.php",
						CURLOPT_RETURNTRANSFER => true,
						CURLOPT_ENCODING => "",
						CURLOPT_MAXREDIRS => 10,
						CURLOPT_TIMEOUT => 30,
						CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						CURLOPT_CUSTOMREQUEST => "POST",
						CURLOPT_POSTFIELDS => "grant_type=jwt_bearer&access_token=".$Token."&email=".$Email."&password=".$NuevaClave,
						CURLOPT_HTTPHEADER => array(
							"cache-control: no-cache",
							"content-type: application/x-www-form-urlencoded"
						),
					));
			 $response = curl_exec($curl);
			 $err = curl_error($curl);
			 curl_close($curl);
			 if (!$err):
					//print_r($response);
					return "ok";
			else:
				 return "no";
			 endif;

		}

		function set_email_colombia($Token,$Correo){
			$curl = curl_init();
			 curl_setopt_array($curl, array(
						CURLOPT_URL => "https://www.clubcolombia.org/api/update_email.php",
						CURLOPT_RETURNTRANSFER => true,
						CURLOPT_ENCODING => "",
						CURLOPT_MAXREDIRS => 10,
						CURLOPT_TIMEOUT => 30,
						CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						CURLOPT_CUSTOMREQUEST => "POST",
						CURLOPT_POSTFIELDS => "grant_type=jwt_bearer&access_token=".$Token."&email=".$Correo,
						CURLOPT_HTTPHEADER => array(
							"cache-control: no-cache",
							"content-type: application/x-www-form-urlencoded"
						),
					));
			 $response = curl_exec($curl);
			 $err = curl_error($curl);
			 curl_close($curl);
			 if (!$err):
					//print_r($response);
					return "ok";
			else:
				return "no";
			 endif;
		}

		function get_socios_colombia($Token){
			$curl = curl_init();
			 curl_setopt_array($curl, array(
						CURLOPT_URL => "https://www.clubcolombia.org/api/users_information.php",
						CURLOPT_RETURNTRANSFER => true,
						CURLOPT_ENCODING => "",
						CURLOPT_MAXREDIRS => 10,
						CURLOPT_TIMEOUT => 30,
						CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
						CURLOPT_CUSTOMREQUEST => "POST",
						CURLOPT_POSTFIELDS => "grant_type=jwt_bearer&access_token=".$Token,
						CURLOPT_HTTPHEADER => array(
							"cache-control: no-cache",
							"content-type: application/x-www-form-urlencoded"
						),
					));
			 $response = curl_exec($curl);
			 $err = curl_error($curl);
			 curl_close($curl);
			 if (!$err):
					//print_r($response);
					return $response;
			else:
				return "no";
			 endif;
		}

		function obtener_token_colombia($Usuario, $Clave){
			$post_data = array (
				'grant_type' => 'password',
				'client_id' => 'clubcolo_app',
				'client_secret' => '20ClUbC0l0mB1@18P@5SCl13nT',
				'username' => $Usuario,
				'password' => $Clave
			);


			$crl = curl_init();
			curl_setopt($crl, CURLOPT_POST,true);
			curl_setopt($crl, CURLOPT_URL, 'https://www.clubcolombia.org/api/login.php');
			curl_setopt($crl, CURLOPT_POSTFIELDS,  $post_data  );

			curl_setopt($crl, CURLOPT_RETURNTRANSFER, true );
			$rest = curl_exec($crl);
			if ($rest === false) {
				return curl_error($crl);
			}
			curl_close($crl);
			//print_r($rest);
			$resultado_token=json_decode($rest,true);
			$token = $resultado_token["access_token"];
			return $token;

		}

	//FIN WEBSERVICE CLUB COLOMBIA


	//WebService Country CLUB
		function autentica_country_club($usuario,$clave){

			$estado_autentica=0;
			$curl = curl_init();
			curl_setopt_array($curl, array(
				CURLOPT_PORT => "3000",
				CURLOPT_URL => "https://countryclubdebogota.com:3000/sessions/api_create",
				CURLOPT_RETURNTRANSFER => true,
				CURLOPT_ENCODING => "",
				CURLOPT_MAXREDIRS => 10,
				CURLOPT_TIMEOUT => 30,
				CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
				CURLOPT_CUSTOMREQUEST => "POST",
				CURLOPT_POSTFIELDS => "{\"session\":{\"username\":\"$usuario\",\"password\":\"$clave\"}}",
				CURLOPT_HTTPHEADER => array(
					"Authorization: Bearer 4beafec232f5610a2985bcc37f4693f2",
					"Content-Type: application/json",
					"Postman-Token: 8b8a043a-bd8d-4f92-ae7c-36740164bf5f",
					"cache-control: no-cache"
				),
			));
			curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
			$response = curl_exec($curl);
			$err = curl_error($curl);
			curl_close($curl);

			if ($err) {
				//echo "cURL Error #:" . $err;
					$estado_autentica=0;
			} else {
				$resultado_autentica=json_decode($response,true);
				if(!empty($resultado_autentica["message"])){
						$estado_autentica=0;
				}
				else{
					$CorreoElectronico= $resultado_autentica["data"]["attributes"]["email"];
					$Documento= $resultado_autentica["data"]["attributes"]["document_number"];
					$IDSocioExterno= $resultado_autentica["data"]["attributes"]["id_socio"];
					$UsuarioApp= $resultado_autentica["data"]["attributes"]["username"];
					$Nombre= $resultado_autentica["data"]["attributes"]["name"];
					$Apellido= $resultado_autentica["data"]["attributes"]["last_name"];
					$Accion=$Documento;
					$cambiar_clave = "N";

					$estado_autentica=self::crea_socio_country($usuario,$clave,$CorreoElectronico,$Documento,$IDSocioExterno,$UsuarioApp,$Nombre,$Apellido,$Accion,$cambiar_clave);

					$AccionPadre= $resultado_autentica["data"]["partner_data"]["id_derecho"];
					$Consanguinidad=$resultado_autentica["data"]["partner_data"]["id_derecho"];
					$Consecutivo=$resultado_autentica["data"]["partner_data"]["consecutivo"];
					$Digito=$resultado_autentica["data"]["partner_data"]["digito"];
					$Accion=$resultado_autentica["data"]["partner_data"]["numero_socio"];
					$IDSocioPadre=$resultado_autentica["data"]["partner_data"]["id_socio_padre"];
					$IDSocioTitular=$resultado_autentica["data"]["partner_data"]["id_socio_titular"];


					$GrupoFamiliar=$resultado_autentica["data"]["partner_group"];
					foreach($GrupoFamiliar as $datos_grupo){
						$CorreoElectronico= "";
						$Documento= $datos_grupo["numero_socio"];
						$IDSocioExterno= $datos_grupo["id_socio"];
						$UsuarioApp= $datos_grupo["numero_socio"];
						$Consanguinidad=$datos_grupo["consanguinidad"];
						$AccionPadre=$datos_grupo["id_derecho"];
						$Accion=$datos_grupo["numero_socio"];
						$Nombre= $datos_grupo["persona"]["primer_nombre"];
						$Apellido= $datos_grupo["persona"]["primer_apellido"] . " " . $datos_grupo["data"]["persona"]["segundo_apellido"];

						$Accion=$datos_grupo["numero_socio"];
						$usuario="sinusuario";
						$clave="sinclave";
						$crear_beneficiario=self::crea_socio_country($usuario,$clave,$CorreoElectronico,$Documento,$IDSocioExterno,$UsuarioApp,$Nombre,$Apellido,$Accion,$cambiar_clave,$Consanguinidad,$AccionPadre);
					}
				}
			}
				return $estado_autentica;
		}
	// WebService Country CLUB

	function crea_socio_country($usuario,$clave,$CorreoElectronico,$Documento,$IDSocioExterno,$UsuarioApp,$Nombre,$Apellido,$Accion,$cambiar_clave,$Consanguinidad,$AccionPadre){
	$dbo =& SIMDB::get();
	if((int)$IDSocioExterno<=0)
		$IDSocioExterno=$resultado_autentica["data"]["id"];

	//Si el Socio existe lo creo de los contrario lo actualizo
	$IDClub = 44;
	$id_socio=$dbo->getFields( "Socio" , "IDSocio" , "IDSocioSistemaExterno = '".$IDSocioExterno."' and IDClub = '".$IDClub."'" );

	if($Consanguinidad=="TITULAR"){
			$Accion=$AccionPadre;
			$AccionPadre="";
	}


	if(empty($id_socio)):
		$parametros_codigo_barras = $Documento;
		$CodigoBarras=SIMUtil::generar_codigo_barras($parametros_codigo_barras,$id);
		if($usuario=="sinusuario" && $clave=="sinclave"){
			$sql_crea_socio="Insert into Socio (IDClub, IDSocioSistemaExterno, IDEstadoSocio, Accion, AccionPadre, Genero, Nombre, Apellido, FechaNacimiento, NumeroDocumento, CorreoElectronico, FechaTrCr, UsuarioTrCr, TipoSocio, PermiteReservar, CambioClave, Telefono, Direccion,NumeroInvitados, NumeroAccesos, CodigoBarras,ClaveSistemaExterno)
			Values ('".$IDClub."','".$IDSocioExterno."',1,'".$Accion."','".$AccionPadre."','','".$Nombre."','".$Apellido."','','".$Documento."',
			'".$CorreoElectronico."',NOW(),'WebServiceCountry','Socio','S','".$cambiar_clave."','','','100','100','".$CodigoBarras."','".base64_encode($clave)."')";
		}
		else{
			$sql_crea_socio="Insert into Socio (IDClub, IDSocioSistemaExterno, IDEstadoSocio, Accion, AccionPadre, Genero, Nombre, Apellido, FechaNacimiento, NumeroDocumento, Email, Clave, CorreoElectronico, FechaTrCr, UsuarioTrCr, TipoSocio, PermiteReservar, CambioClave, Telefono, Direccion,NumeroInvitados, NumeroAccesos, CodigoBarras,ClaveSistemaExterno)
			Values ('".$IDClub."','".$IDSocioExterno."',1,'".$Accion."','".$AccionPadre."','','".$Nombre."','".$Apellido."','','".$Documento."',
			'".$usuario."',sha1('".$clave."'), '".$CorreoElectronico."',NOW(),'WebServiceCountry','Socio','S','".$cambiar_clave."','','','100','100','".$CodigoBarras."','".base64_encode($clave)."')";

		}
	$dbo->query($sql_crea_socio);
	//echo "<br>" . $sql_crea_socio;
	$estado_autentica=1;
	else:

		//Validacion especial con este usuario que no quiere que aparezca el nombre del esposo sino el de ella
		if($usuario=="homebrunner@gmail.com"){
			$Nombre="Ana Maria";
			$Apellido="de Brunner";
		}

		if($usuario=="sinusuario" && $clave=="sinclave"){
				$sql_actualiza_socio="Update Socio Set
									IDSocioSistemaExterno = '".$IDSocioExterno."',
									IDEstadoSocio = 1,
									Accion = '".$Accion."',
									AccionPadre = '".$AccionPadre."',
									Genero = '',
									Nombre = '".$Nombre."',
									Apellido = '".$Apellido."',
									FechaNacimiento = '',
									NumeroDocumento = '".$Documento."',
									CorreoElectronico = '".$CorreoElectronico."',
									FechaTrEd = 'NOW()',
									UsuarioTrEd = 'Webservice Country',
									TipoSocio = 'Socio',
									PermiteReservar = 'S',
									CambioClave = '".$cambiar_clave."',
									Telefono = '',
									Direccion = '',
									NumeroInvitados = '100',
									NumeroAccesos = '100',
									ClaveSistemaExterno = '".base64_encode($clave)."'
									Where IDSocio = '".$id_socio."'";
				}
				else{
					$sql_actualiza_socio="Update Socio Set
										IDSocioSistemaExterno = '".$IDSocioExterno."',
										IDEstadoSocio = 1,
										Accion = '".$Accion."',
										AccionPadre = '".$AccionPadre."',
										Genero = '',
										Nombre = '".$Nombre."',
										Apellido = '".$Apellido."',
										FechaNacimiento = '',
										NumeroDocumento = '".$Documento."',
										Email = '".$usuario."',
										Clave = sha1('".$clave."'),
										CorreoElectronico = '".$CorreoElectronico."',
										FechaTrEd = 'NOW()',
										UsuarioTrEd = 'Webservice Country',
										TipoSocio = 'Socio',
										PermiteReservar = 'S',
										CambioClave = '".$cambiar_clave."',
										Telefono = '',
										Direccion = '',
										NumeroInvitados = '100',
										NumeroAccesos = '100',
										ClaveSistemaExterno = '".base64_encode($clave)."'
										Where IDSocio = '".$id_socio."'";

				}
	$dbo->query($sql_actualiza_socio);
	//echo "<br>" . $sql_actualiza_socio;
	endif;
	return $estado_autentica=1;
	}


	function get_datos_socio($IDClub,$Identificacion,$Todos)
	{

		$dbo =& SIMDB::get();
		if( !empty( $Identificacion ) ){
					$foto="";
					$foto_cod_barras = "";
					$sql_verifica = "SELECT * FROM Socio WHERE NumeroDocumento = '".$Identificacion ."'  and IDClub = '".$IDClub."'";
					$qry_verifica = $dbo->query( $sql_verifica );
					if( $dbo->rows( $qry_verifica ) == 0 )
					{
						$respuesta["message"] = "El socio no pertenece al club";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}//end if
					else{
							$datos_socio = $dbo->fetchArray( $qry_verifica );

							if (!empty($datos_socio["Foto"])){
										$foto = 	SOCIO_ROOT.$datos_socio["Foto"];
							}

							$tipo_codigo_carne = $dbo->getFields( "Club" , "TipoCodigoCarne" , "IDClub = '".$IDClub."'" );

							switch($tipo_codigo_carne){
								case "Barras":
									if (!empty($datos_socio["CodigoBarras"])){
										$foto_cod_barras = 	SOCIO_ROOT.$datos_socio["CodigoBarras"];
									}
								break;
								case "QR":
									if (!empty($datos_socio["CodigoQR"])){
										$foto_cod_barras = 	SOCIO_ROOT."qr/".$datos_socio["CodigoQR"];
									}
								break;
								default:
								 $foto_cod_barras = 	"";
							}


							$tipo_socio = $datos_socio["TipoSocio"];
							$response["IDClub"] = $datos_socio["IDClub"];
							$response["IDSocio"] = $datos_socio["IDSocio"];
							$response["Foto"] = $foto;
							$response["Socio"] = utf8_encode( $datos_socio["Nombre"] . " " . $datos_socio["Apellido"] );
							$response["NumeroDerecho"] = $datos_socio["Accion"];
							$response["CodigoBarras"] = $foto_cod_barras;
							$response["Dispositivo"] =  $datos_socio["Dispositivo"];
							$response["TipoSocio"] =  $tipo_socio;
							$respuesta["message"] = "ok";
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}
				}
			else{
				$respuesta["message"] = "WS1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}


			return $respuesta;

	}//end function


	function get_moduloweb_view( $IDClub , $IDSocio, $IDModulo)
	{

		$dbo =& SIMDB::get();

		$response = array();

		if( !empty( $IDSocio ) ){
				$datos_club = $dbo->fetchAll( "Club", " IDClub = '" . $IDClub . "' ", "array" );

				if($IDModulo==55):
					$Mensaje=$datos_club["MensajeWebView1"];
					$UrlWebView=$datos_club["UrlWebView1"];
					$ControlNavegacion="S";
					$MostrarHeader="S";
				elseif($IDModulo==56):
					$Mensaje=$datos_club["MensajeWebView2"];
					$UrlWebView=$datos_club["UrlWebView2"];
					$ControlNavegacion="S";
					$MostrarHeader="S";
				else:
					$datos_modulo = $dbo->fetchAll( "Modulo", " IDModulo = '" . $IDModulo . "' ", "array" );
					$Mensaje=$datos_modulo["MensajeWebView"];
					$UrlWebView=$datos_modulo["Url"];
					$ControlNavegacion=$datos_modulo["MostrarControlNavegacion"];
					$MostrarHeader=$datos_modulo["MostrarHeader"];
				endif;

				$webview["IDClub"] = $IDClub;
				$webview["Encabezado"] = $Mensaje;
				$webview["Url"] = $UrlWebView."&IDSocio=".$IDSocio."&IDClub=".$IDClub;
				$webview["MostrarControlNavegacion"] = $ControlNavegacion;
				$webview["MostrarHeader"] = $MostrarHeader;
				array_push($response, $webview);
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}
		else{
			$respuesta["message"] = "2. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

	}// fin function




	function set_invitado_grupo_reserva($IDClub,$IDSocio,$IDReserva)
	{
		$dbo =& SIMDB::get();



		if( !empty( $IDSocio ) && !empty( $IDReserva ) ){

			//Verifico que todavia queden cupos
			$datos_reserva = $dbo->fetchAll( "ReservaGeneral", " IDReservaGeneral = '" . $IDReserva . "' ", "array" );
			$IDDisponibilidad = $datos_reserva["IDDisponibilidad"];
			$MaximoInvitados = $dbo->getFields( "Disponibilidad" , "MaximoInvitados" , "IDDisponibilidad = '" . $IDDisponibilidad . "'" );
			$MaximoReservaSocioServicio = $dbo->getFields( "Disponibilidad" , "MaximoReservaDia" , "IDDisponibilidad = '" . $IDDisponibilidad . "'" );

			//Verifico que el socio no tenga mas reserva
				$sql_socio_grupo = "SELECT RGI.* FROM ReservaGeneralInvitado RGI, ReservaGeneral RG WHERE RG.IDReservaGeneral = RGI.IDReservaGeneral and (RGI.IDSocio = '" . $IDSocio . "') and RG.IDClub = '" . $IDClub . "' and RG.Fecha = '" . $datos_reserva["Fecha"] . "' and RG.IDServicio = '" . $datos_reserva["IDServicio"] . "' ORDER BY IDReservaGeneralInvitado Desc ";
				$qry_socio_grupo = $dbo->query( $sql_socio_grupo );
				if ( $dbo->rows( $qry_socio_grupo ) > 0 && $MaximoReservaSocioServicio<=1 ):
					$respuesta[ "message" ] = "Lo sentimos ya esta agregado(a) en esta fecha como invitado en un grupo, no es posible realizar la reserva, por favor verifique";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					exit;
				endif;
				$IDReservaOtra = $dbo->getFields( "ReservaGeneral" , "IDReservaGeneral" , "IDSocio = '" . $IDSocio . "' and Fecha = '" . $datos_reserva["Fecha"] . "' and IDServicio = '" . $datos_reserva["IDServicio"] . "' " );
				if(!empty($IDReservaOtra)){
					$respuesta[ "message" ] = "Lo sentimos ya tiene una reserva activa para el mismo dia";
					$respuesta[ "success" ] = false;
					$respuesta[ "response" ] = NULL;
					return $respuesta;
					exit;
				}
			//Fin



			$sql_invitados = "SELECT IDReservaGeneralInvitado FROM ReservaGeneralInvitado WHERE IDReservaGeneral = '".$IDReserva."'";
			$result_invitado = $dbo->query($sql_invitados);
			$total_invitados = $dbo->rows($result_invitado);

			if((int)$MaximoInvitados>(int)$total_invitados):

				//inserto al invitado
				$insert_invitado = "Insert into ReservaGeneralInvitado (IDReservaGeneral, IDSocio ) Values ('".$IDReserva."','".$IDSocio."')";
				$dbo->query($insert_invitado);

				//Notifico al dueño de la reserva que alguien se agregó al grupo
				$datos_socio_agregado = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );
				$datos_socio_dueno_reserva = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_reserva["IDSocio"] . "' ", "array" );
				$Mensaje = "Se agrego el socio ".$datos_socio_agregado["Nombre"] . " " . $datos_socio_agregado["Apellido"] ." a la reserva del día: ".$datos_reserva["Fecha"]." Hora: ".$datos_reserva["Hora"];
				//SIMUtil::enviar_notificacion_push_general($IDClub,$datos_socio_dueno_reserva["IDSocio"],$Mensaje);

				$respuesta["message"] = "Agregado correctamente";
				$respuesta["success"] = true;
				$respuesta["response"] = NULL;
			else:
				$respuesta["message"] = "Lo sentimos la reserva ya tiene el cupo completo de invitados";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;

			endif;

		}
		else{
			$respuesta["message"] = "14. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}


	function actualiza_payande($IDSocio=""){
		$dbo =& SIMDB::get();

		$IDClub = 27;

		if(!empty($IDSocio)):
			$condicion = " and IDSocio = '".$IDSocio."'";
		endif;

		//La base de Mi Club es la maestra entre mi club y el sistema de la página
		$sql_socio = "Select * From Socio Where IDClub = '".$IDClub."' ".$condicion." Order by IDSocio ASC";
		$result_socio = $dbo->query($sql_socio);
		while($row_socio_bd = $dbo->fetchArray($result_socio)):
			$IDSocio=$row_socio_bd["IDSocio"];
			$DocumentoSocioPadre="";
			$NumeroDocumento=$row_socio_bd["NumeroDocumento"];
			if($row_socio_bd["TipoSocio"]=="Socio"):
				$TipoSocio="TITULAR";
			else:
				$TipoSocio="BENEFICIARIO";
				//Averiguo el socio padre
				if(!empty($row_socio_bd["AccionPadre"]))
					$DocumentoSocioPadre=$dbo->getFields( "Socio" , "NumeroDocumento" , "Accion = '".$row_socio_bd["AccionPadre"]."'" );
			endif;

			$Nombre=$row_socio_bd["Nombre"];
			$Apellido=$row_socio_bd["Apellido"];
			$Telefono=$row_socio_bd["Telefono"];
			$Celular=$row_socio_bd["Celular"];
			$Email=$row_socio_bd["CorreoElectronico"];
			$FechaNacimiento=$row_socio_bd["FechaNacimiento"];
			$Usuario=$row_socio_bd["Email"];
			$Clave=$row_socio_bd["Clave"];
			$Accion=$row_socio_bd["Accion"];
			if($row_socio_bd["IDEstadoSocio"]=="1")
				$Autorizado="S";
			else
				$Autorizado="N";

			$IDSocioPadre=$row_socio_bd["IDSocioSistemaExterno"];
			$key="P4y4nd3Reser";
			$action="actualizasocio";
			$url="http://www.clubpayande.com/reservas/services/club.php";
			$post = [
				'key' => $key,
				'action' => $action,
				'IDSocio'   => $IDSocio,
				'NumeroDocumento'   => $NumeroDocumento,
				'TipoSocio'   => $TipoSocio,
				'Nombre'   => $Nombre,
				'Apellido'   => $Apellido,
				'Telefono'   => $Telefono,
				'Celular'   => $Celular,
				'Email'   => $Email,
				'Usuario'   => $Usuario,
				'Clave'   => $Clave,
				'Accion'   => $Accion,
				'Autorizado'   => $Autorizado,
				'IDSocioSistemaExterno'   => $IDSocioSistemaExterno,
				'DocumentoSocioPadre' => $DocumentoSocioPadre

			];

			$ch = curl_init($url);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
			// execute!
			$response = curl_exec($ch);
			// close the connection, release resources used
			curl_close($ch);
			//print_r($response);
			//inserta _log
			$contador++;
		endwhile;

		return "<br>Proceso terminado con exito. Registros: " . $contador;

	}

	function verifica_ver_encuesta($r,$IDSocio){
			$dbo =& SIMDB::get();
			$mostrar_encuesta=1;

		//Verifico si la encuesta esta configurada solo para un grupo de socios o socios especificos
		if( ($r["DirigidoA"] == 'S' || $r["DirigidoA"] == 'T') &&  ($r["DirigidoAGeneral"]=="SE" || $r["DirigidoAGeneral"]=="GS")){
			if($r["DirigidoAGeneral"]=="SE"){
				$array_invitados=explode("|||",$r["InvitadoSeleccion"]);
				if(count($array_invitados)>0){
				foreach($array_invitados as $id_invitado => $datos_invitado){
						if(!empty($datos_invitado)){
								$array_datos_invitados=explode("-",$datos_invitado);
								$array_socios_encuesta[]=$array_datos_invitados[1];
						}
					}
				}
					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}

			}

			elseif($r["DirigidoAGeneral"]=="GS"){
					$SociosGrupo=$dbo->getFields( "GrupoSocio" , "IDSocio" , "IDGrupoSocio = '".$r["IDGrupoSocio"]."'" );
					$array_invitados=explode("|||",$SociosGrupo);
					if(count($array_invitados)>0){
						foreach($array_invitados as $id_invitado => $datos_invitado){
								$array_socios_encuesta[]=$datos_invitado;
						}
					}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}
			}
		}


		return $mostrar_encuesta;
	}

	function verifica_ver_dotacion($r,$IDSocio){
			$dbo =& SIMDB::get();
			$mostrar_encuesta=1;

		//Verifico si la encuesta esta configurada solo para un grupo de socios o socios especificos
		if( ($r["DirigidoA"] == 'S' || $r["DirigidoA"] == 'T') &&  ($r["DirigidoAGeneral"]=="SE" || $r["DirigidoAGeneral"]=="GS")){
			if($r["DirigidoAGeneral"]=="SE"){
				$array_invitados=explode("|||",$r["InvitadoSeleccion"]);
				if(count($array_invitados)>0){
				foreach($array_invitados as $id_invitado => $datos_invitado){
						if(!empty($datos_invitado)){
								$array_datos_invitados=explode("-",$datos_invitado);
								$array_socios_encuesta[]=$array_datos_invitados[1];
						}
					}
				}
					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}

			}

			elseif($r["DirigidoAGeneral"]=="GS"){
					$SociosGrupo=$dbo->getFields( "GrupoSocio" , "IDSocio" , "IDGrupoSocio = '".$r["IDGrupoSocio"]."'" );
					$array_invitados=explode("|||",$SociosGrupo);
					if(count($array_invitados)>0){
						foreach($array_invitados as $id_invitado => $datos_invitado){
								$array_socios_encuesta[]=$datos_invitado;
						}
					}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}
			}
		}


		return $mostrar_encuesta;
	}


	function verifica_ver_encuesta2($r,$IDSocio){
			$dbo =& SIMDB::get();
			$mostrar_encuesta=1;

		//Verifico si la encuesta esta configurada solo para un grupo de socios o socios especificos
		if( ($r["DirigidoA"] == 'S' || $r["DirigidoA"] == 'T') &&  ($r["DirigidoAGeneral"]=="SE" || $r["DirigidoAGeneral"]=="GS")){
			if($r["DirigidoAGeneral"]=="SE"){
				$array_invitados=explode("|||",$r["InvitadoSeleccion"]);
				if(count($array_invitados)>0){
				foreach($array_invitados as $id_invitado => $datos_invitado){
						if(!empty($datos_invitado)){
								$array_datos_invitados=explode("-",$datos_invitado);
								$array_socios_encuesta[]=$array_datos_invitados[1];
						}
					}
				}
					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}

			}

			elseif($r["DirigidoAGeneral"]=="GS"){
					$SociosGrupo=$dbo->getFields( "GrupoSocio" , "IDSocio" , "IDGrupoSocio = '".$r["IDGrupoSocio"]."'" );
					$array_invitados=explode("|||",$SociosGrupo);
					if(count($array_invitados)>0){
						foreach($array_invitados as $id_invitado => $datos_invitado){
								$array_socios_encuesta[]=$datos_invitado;
						}
					}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}
			}
		}


		return $mostrar_encuesta;
	}


	function verifica_ver_diagnostico($r,$IDSocio,$IDUsuario){
			$dbo =& SIMDB::get();
			$mostrar_encuesta=1;
		//Verifico si la encuesta esta configurada solo para un grupo de socios o socios especificos
		if( ($r["DirigidoA"] == 'S' || $r["DirigidoA"] == 'T') &&  ($r["DirigidoAGeneral"]=="SE" || $r["DirigidoAGeneral"]=="GS")){
			if($r["DirigidoAGeneral"]=="SE"){
				$array_invitados=explode("|||",$r["InvitadoSeleccion"]);
				if(count($array_invitados)>0){
				foreach($array_invitados as $id_invitado => $datos_invitado){
						if(!empty($datos_invitado)){
								$array_datos_invitados=explode("-",$datos_invitado);
								$array_socios_encuesta[]=$array_datos_invitados[1];
						}
					}
				}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}

			}

			elseif($r["DirigidoAGeneral"]=="GS"){
					$SociosGrupo=$dbo->getFields( "GrupoSocio" , "IDSocio" , "IDGrupoSocio = '".$r["IDGrupoSocio"]."'" );
					$array_invitados=explode("|||",$SociosGrupo);
					if(count($array_invitados)>0){
						foreach($array_invitados as $id_invitado => $datos_invitado){
								$array_socios_encuesta[]=$datos_invitado;
						}
					}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}
			}
			elseif($r["DirigidoAGeneral"]=="E"){
						$mostrar_encuesta=1;
						//$mostrar_encuesta=0;

			}
		}


		return $mostrar_encuesta;
	}

	function verifica_ver_votacion($r,$IDSocio){
			$dbo =& SIMDB::get();
			$mostrar_encuesta=1;
		//Verifico si la encuesta esta configurada solo para un grupo de socios o socios especificos
		if( ($r["DirigidoA"] == 'S' || $r["DirigidoA"] == 'T') &&  ($r["DirigidoAGeneral"]=="SE" || $r["DirigidoAGeneral"]=="GS" || $r["DirigidoAGeneral"]=="L")){

			if($r["DirigidoAGeneral"]=="SE"){
				$array_invitados=explode("|||",$r["InvitadoSeleccion"]);
				if(count($array_invitados)>0){
				foreach($array_invitados as $id_invitado => $datos_invitado){
						if(!empty($datos_invitado)){
								$array_datos_invitados=explode("-",$datos_invitado);
								$array_socios_encuesta[]=$array_datos_invitados[1];
						}
					}
				}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}

			}
			elseif($r["DirigidoAGeneral"]=="GS"){

					$SociosGrupo=$dbo->getFields( "GrupoSocio" , "IDSocio" , "IDGrupoSocio = '".$r["IDGrupoSocio"]."'" );
					$array_invitados=explode("|||",$SociosGrupo);
					if(count($array_invitados)>0){
						foreach($array_invitados as $id_invitado => $datos_invitado){
								$array_socios_encuesta[]=$datos_invitado;
						}
					}

					if(in_array($IDSocio,$array_socios_encuesta)){
						$mostrar_encuesta=1;
					}
					else{
						$mostrar_encuesta=0;
					}
			}
				elseif($r["DirigidoAGeneral"]=="L"){
					$IDVotacionEvento = $dbo->getFields( "VotacionEventoVotacion" , "IDVotacionEvento" , "IDVotacion = '".$r["IDVotacion"]."' and Activa = 'S'" );
					if(empty($IDVotacionEvento)){
						$mostrar_encuesta=0;
					}
					else{
							$sql_votante="SELECT IDSocio
														FROM VotacionVotante
														WHERE Presente = 'S' and Moroso= 'N' and IDVotacionEvento = '".$IDVotacionEvento."'";

							$r_votante=$dbo->query($sql_votante);
							while($row_votante=$dbo->fetchArray($r_votante)){
								$array_socios_encuesta[]=$row_votante["IDSocio"];
							}

							if(in_array($IDSocio,$array_socios_encuesta)){
								$mostrar_encuesta=1;
							}
							else{
								$mostrar_encuesta=0;
							}

							//verifico si la votacion esta activa
							$ActivaVitacion=$dbo->getFields( "VotacionEventoVotacion" , "Activa" , "IDVotacion = '".$r["IDVotacion"]."' and IDVotacionEvento = '".$IDVotacionEvento."'" );
							if($ActivaVitacion=="S")
								$mostrar_encuesta=1;
							else
								$mostrar_encuesta=0;



					}


				}
		}


		if($mostrar_encuesta==1){
			$datos_votacion = $dbo->fetchAll( "Votacion", " IDVotacion = '" . $r["IDVotacion"] . "' ", "array" );
			if($datos_votacion["UnaporSocio"]=="S"){
				//verifico si la persona ya voto
				$sql_votacion="SELECT * FROM VotacionRespuesta WHERE IDVotacion = '".$r["IDVotacion"]."' AND IDSocio = '".$IDSocio."'";
				$result_votacion=$dbo->query($sql_votacion);
				if($dbo->rows($result_votacion)<=0)
					$mostrar_encuesta=1;
				else
					$mostrar_encuesta=0;
			}else{
				$mostrar_encuesta=1;
			}
		}


		return $mostrar_encuesta;
	}


	function verificar_notificacion_local($IDSocio,$IDUsuario,$IDClub){
		$dbo =& SIMDB::get();

		//Diagnostico
			if(!empty($IDSocio))
					$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
			elseif(!empty($IDUsuario))
					$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";

			$sql = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
			$r_sql=$dbo->query($sql);
			while($r = $dbo->fetchArray($r_sql)){
				$mostrar_encuesta=SIMWebserviceQuemado::verifica_ver_diagnostico($r,$IDSocio,$IDUsuario);
				if($mostrar_encuesta==1){
					$array_modulos["99"][]=$r["IDDiagnostico"];
				}
			}
		//Fin Diagnostico

		//Diagnostico
		if(!empty($IDSocio))
				$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
		elseif(!empty($IDUsuario))
				$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";



		$sql = "SELECT * FROM Dotacion WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
		$qry = $dbo->query( $sql );
		$message = $dbo->rows( $qry ) . " Encontrados";
		while( $r = $dbo->fetchArray( $qry ) ){
			$mostrar_encuesta=self::verifica_ver_dotacion($r,$IDSocio);
				if($mostrar_encuesta==1){
					$array_modulos["102"][]=$r["IDDotacion"];
				}
		}
		//Fin Diagnostico

		//Encuesta Calificada
			if(!empty($IDSocio))
					$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
			elseif(!empty($IDUsuario))
					$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";

			$sql = "SELECT * FROM Encuesta2 WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
			$qry = $dbo->query( $sql );
				while( $r = $dbo->fetchArray( $qry ) )
				{
					$mostrar_encuesta=SIMWebserviceQuemado::verifica_ver_encuesta2($r,$IDSocio);
					if($mostrar_encuesta==1){
						$array_modulos["101"][]=$r["IDEncuesta2"];
					}
				}
		//Fin encuesta

		//Encuesta Normal
			if(!empty($IDSocio))
					$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
			elseif(!empty($IDUsuario))
					$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";

			$sql = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
			$qry = $dbo->query( $sql );
				while( $r = $dbo->fetchArray( $qry ) )
				{
					$mostrar_encuesta=SIMWebserviceQuemado::verifica_ver_encuesta($r,$IDSocio);
					if($mostrar_encuesta==1){
						$array_modulos["58"][]=$r["IDEncuesta"];
					}
				}
		//Fin encuesta

		//Votacion
		if(!empty($IDSocio))
				$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
		elseif(!empty($IDUsuario))
				$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";

		$sql = "SELECT * FROM Votacion WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
		$qry = $dbo->query( $sql );
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) ){
				$mostrar_encuesta=SIMWebserviceQuemado::verifica_ver_votacion($r,$IDSocio);
				if($mostrar_encuesta==1){
					$array_modulos["70"][]=$r["IDVotacion"];
				}
			}
		//Fin Votacion

		foreach($array_modulos as $id_modulo => $detalle_modulo){
		 foreach($detalle_modulo as $id_detalle => $valor_detalle){
			 $array_condicion_modulo[]=" (IDModulo = '".$id_modulo."' and IDDetalle = '".$valor_detalle."') ";
		 }
		}

		if(count($array_condicion_modulo)>0){
		 $condicion_notif=implode(" or ", $array_condicion_modulo);
		}
		else{
		 $condicion_notif=" and IDModulo = 0 and IDSeccion = 0 ";
		}

		$condicion=" and  (".$condicion_notif.")";
		return $condicion;

	}


	function get_campo_acceso( $IDClub )
		{

			$dbo =& SIMDB::get();
			$response = array();
			//Pregunta
			$pregunta = array();
			$response_pregunta = array();
			$sql_respuesta="Select * From PreguntaAcceso Where IDClub = '".$IDClub."' and Publicar = 'S' Order by Orden";
			$r_encuesta=$dbo->query($sql_respuesta);
			if($dbo->rows($r_encuesta)>0){
				$message=$dbo->rows($r_encuesta) . " Encontrados";
			while($row_pregunta = $dbo->FetchArray($r_encuesta)):
					$pregunta["IDPreguntaAcceso"]=$row_pregunta["IDPreguntaAcceso"];
					$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
					$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
					$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
					$pregunta[ "Valores" ] = $row_pregunta[ "Valores" ];
					$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
					array_push( $response, $pregunta );
			endwhile;

					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "No se encontraron registros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;

		}// fin function


	function get_encuesta( $IDClub , $IDSocio = "",$IDUsuario = "")
		{

			$dbo =& SIMDB::get();

			$response = array();

			if(!empty($IDSocio))
					$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
			elseif(!empty($IDUsuario))
					$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";



			$sql = "SELECT * FROM Encuesta WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";

				while( $r = $dbo->fetchArray( $qry ) )
				{

					$mostrar_encuesta=self::verifica_ver_encuesta($r,$IDSocio);

					if($mostrar_encuesta==1){
							$encuesta["IDClub"] = $r["IDClub"];
							$encuesta["IDEncuesta"] = $r["IDEncuesta"];
							$encuesta["Nombre"] = $r["Nombre"];
							$encuesta["Descripcion"] = $r["Descripcion"];
							$encuesta["SolicitarAbrirApp"] = $r["SolicitarAbrirApp"];
							$encuesta["FechaInicio"] = $r["FechaInicio"];
							$encuesta["FechaFin"] = $r["FechaFin"];
							$encuesta["SegundaClave"] = $r["SegundaClave"];

							$datos_modulo = $dbo->fetchAll( "ClubModulo", " IDModulo = '58' and IDClub='" . $IDClub . "' ", "array" );
							$icono_modulo = $datos_modulo[ "Icono" ];
							if ( !empty( $datos_modulo[ "Icono" ] ) ):
								$foto = MODULO_ROOT . $datos_modulo[ "Icono" ];
							else :
								$foto = "";
							endif;
							$encuesta[ "Icono" ] = $foto;


							//Verifico si el socio ya contesto la encuesta
							if(!empty($IDSocio)){
								$sql_contesta="SELECT * FROM EncuestaRespuesta WHERE IDSocio='".$IDSocio."' and IDEncuesta = '".$r["IDEncuesta"]."'";
								$r_contesta=$dbo->query($sql_contesta);
								if($dbo->rows($r_contesta>0)){
									$encuesta["Respondida"] = "S";
								}
								else{
									$encuesta["Respondida"] = "N";
								}
							}

							//Pregunta
							$pregunta = array();
							$response_pregunta = array();
							$sql_respuesta="Select * From Pregunta Where IDEncuesta = '".$encuesta["IDEncuesta"]."' and Publicar = 'S' Order by Orden";
							$r_encuesta=$dbo->query($sql_respuesta);
							while($row_pregunta = $dbo->FetchArray($r_encuesta)):
									$pregunta["IDPregunta"]=$row_pregunta["IDPregunta"];
									$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
									$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
									$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
									$pregunta[ "Valores" ] = $row_pregunta[ "Valores" ];
									$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
									array_push( $response_pregunta, $pregunta );
							endwhile;

							$encuesta["Preguntas"] = $response_pregunta;
							array_push($response, $encuesta);
						}
				}//ednw hile


					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "No se encontraron registros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;

		}// fin function

		function get_dotacion( $IDClub , $IDSocio = "",$IDUsuario = "")
			{

				$dbo =& SIMDB::get();

				$response = array();

				if(!empty($IDSocio))
						$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
				elseif(!empty($IDUsuario))
						$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";



				$sql = "SELECT * FROM Dotacion WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
				$qry = $dbo->query( $sql );
				if( $dbo->rows( $qry ) > 0 )
				{
					$message = $dbo->rows( $qry ) . " Encontrados";

					while( $r = $dbo->fetchArray( $qry ) )
					{

						$mostrar_encuesta=self::verifica_ver_dotacion($r,$IDSocio);

						if($mostrar_encuesta==1){
								$encuesta["IDClub"] = $r["IDClub"];
								$encuesta["IDDotacion"] = $r["IDDotacion"];
								$encuesta["Nombre"] = $r["Nombre"];
								$encuesta["Descripcion"] = $r["Descripcion"];
								$encuesta["SolicitarAbrirApp"] = $r["SolicitarAbrirApp"];
								$encuesta["FechaInicio"] = $r["FechaInicio"];
								$encuesta["FechaFin"] = $r["FechaFin"];
								$encuesta["SegundaClave"] = $r["SegundaClave"];

								$datos_modulo = $dbo->fetchAll( "ClubModulo", " IDModulo = '102' and IDClub='" . $IDClub . "' ", "array" );
								$icono_modulo = $datos_modulo[ "Icono" ];
								if ( !empty( $datos_modulo[ "Icono" ] ) ):
									$foto = MODULO_ROOT . $datos_modulo[ "Icono" ];
								else :
									$foto = "";
								endif;
								$encuesta[ "Icono" ] = $foto;


								//Verifico si el socio ya contesto la encuesta
								if(!empty($IDSocio)){
									$sql_contesta="SELECT * FROM DotacionRespuesta WHERE IDSocio='".$IDSocio."' and IDEncuesta = '".$r["IDDotacion"]."'";
									$r_contesta=$dbo->query($sql_contesta);
									if($dbo->rows($r_contesta>0)){
										$encuesta["Respondida"] = "S";
									}
									else{
										$encuesta["Respondida"] = "N";
									}
								}

								//Pregunta
								$pregunta = array();
								$response_pregunta = array();
								$sql_respuesta="Select * From PreguntaDotacion Where IDDotacion = '".$encuesta["IDDotacion"]."' and Publicar = 'S' Order by Orden";
								$r_encuesta=$dbo->query($sql_respuesta);
								while($row_pregunta = $dbo->FetchArray($r_encuesta)):
										$pregunta["IDPreguntaDotacion"]=$row_pregunta["IDPreguntaDotacion"];
										$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
										$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
										$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
										$pregunta[ "Valores" ] = $row_pregunta[ "Valores" ];
										$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
										array_push( $response_pregunta, $pregunta );
								endwhile;

								$encuesta["Preguntas"] = $response_pregunta;
								array_push($response, $encuesta);
							}
					}//ednw hile


						$respuesta["message"] = $message;
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
				}//End if
				else
				{
						$respuesta["message"] = "No se encontraron registros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
				}//end else

				return $respuesta;

			}// fin function

		function get_diagnostico( $IDClub , $IDSocio = "",$IDUsuario = "")
			{

				$dbo =& SIMDB::get();

				$response = array();

				if(!empty($IDSocio))
						$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
				elseif(!empty($IDUsuario))
						$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";



				$sql = "SELECT * FROM Diagnostico WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
				$qry = $dbo->query( $sql );
				if( $dbo->rows( $qry ) > 0 )
				{
					$message = $dbo->rows( $qry ) . " Encontrados";

					while( $r = $dbo->fetchArray( $qry ) )
					{

						$mostrar_encuesta=self::verifica_ver_diagnostico($r,$IDSocio,$IDUsuario);

						if($mostrar_encuesta==1){
								$encuesta["IDClub"] = $r["IDClub"];
								$encuesta["IDDiagnostico"] = $r["IDDiagnostico"];
								$encuesta["Nombre"] = $r["Nombre"];
								$encuesta["Descripcion"] = $r["Descripcion"];
								$encuesta["SolicitarAbrirApp"] = $r["SolicitarAbrirApp"];
								$encuesta["FechaInicio"] = $r["FechaInicio"];
								$encuesta["FechaFin"] = $r["FechaFin"];
								$encuesta["SegundaClave"] = $r["SegundaClave"];

								$datos_modulo = $dbo->fetchAll( "ClubModulo", " IDModulo = '99' and IDClub='" . $IDClub . "' ", "array" );
								$icono_modulo = $datos_modulo[ "Icono" ];
								if ( !empty( $datos_modulo[ "Icono" ] ) ):
									$foto = MODULO_ROOT . $datos_modulo[ "Icono" ];
								else :
									$foto = "";
								endif;
								$encuesta[ "Icono" ] = $foto;


								//Verifico si el socio ya contesto la encuesta
								if(!empty($IDSocio)){
									$sql_contesta="SELECT * FROM DiagnosticoRespuesta WHERE IDSocio='".$IDSocio."' and IDDiagnostico = '".$r["IDDiagnostico"]."'";
									$r_contesta=$dbo->query($sql_contesta);
									if($dbo->rows($r_contesta>0)){
										$encuesta["Respondida"] = "S";
									}
									else{
										$encuesta["Respondida"] = "N";
									}
								}

								//Pregunta
								$pregunta = array();
								$response_pregunta = array();
								$sql_respuesta="SELECT * FROM PreguntaDiagnostico Where IDDiagnostico = '".$encuesta["IDDiagnostico"]."' and Publicar = 'S' Order by Orden";
								$r_encuesta=$dbo->query($sql_respuesta);
								while($row_pregunta = $dbo->fetchArray($r_encuesta)):
										$pregunta["IDPreguntaDiagnostico"]=$row_pregunta["IDPreguntaDiagnostico"];
										$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
										$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
										$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
										//Consulto los valores
										$sql_opciones="SELECT * FROM DiagnosticoOpcionesRespuesta WHERE IDDiagnosticoPregunta = '".$row_pregunta["IDPreguntaDiagnostico"]."' order by Orden";
										$r_opciones=$dbo->query($sql_opciones);
										$opciones_respuesta = array();
										$response_valores = array();
										while($row_opciones=$dbo->fetchArray($r_opciones)){
													$opciones_respuesta[ "IDDiagnosticoPregunta" ] = $row_opciones[ "IDDiagnosticoPregunta" ];
													$opciones_respuesta[ "IDDiagnosticoOpcionesRespuesta" ] = $row_opciones[ "IDDiagnosticoOpcionesRespuesta" ];
													//$opciones_respuesta[ "IDDiagnosticoPreguntaSiguiente" ] = $row_opciones[ "IDDiagnosticoPreguntaSiguiente" ];
													$opciones_respuesta[ "Opcion" ] = $row_opciones[ "Opcion" ];
													$opciones_respuesta[ "Terminar" ] = $row_opciones[ "Terminar" ];
													$opciones_respuesta[ "Peso" ] = $row_opciones[ "Peso" ];
													array_push( $response_valores, $opciones_respuesta );
										}
										$pregunta[ "Valores" ] = $response_valores;
										$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
										array_push( $response_pregunta, $pregunta );
								endwhile;

								$encuesta["Preguntas"] = $response_pregunta;
								array_push($response, $encuesta);
							}
					}//ednw hile


						$respuesta["message"] = $message;
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
				}//End if
				else
				{
						$respuesta["message"] = "No se encontraron registros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
				}//end else

				return $respuesta;

			}// fin function

			function set_respuesta_diagnostico($IDClub,$IDSocio,$IDDiagnostico,$Respuestas,$IDUsuario="",$NumeroDocumento="",$Nombre="")
			{
				$dbo =& SIMDB::get();
				if( !empty( $IDClub )  && (!empty( $IDSocio ) || !empty( $IDUsuario ) || !empty( $NumeroDocumento ) ) && !empty( $IDDiagnostico ) ){
						$guardar_encuesta=0;
						$datos_diagnostico = $dbo->fetchAll( "Diagnostico", " IDDiagnostico = '".$IDDiagnostico."' and IDClub='" . $IDClub . "' ", "array" );
						$contesta_una=$datos_diagnostico["UnaporSocio"];
						if($contesta_una=="S"){
							$sql_resp="SELECT IDDiagnostico From DiagnosticoRespuesta Where IDSocio = '".$IDSocio."' and IDDiagnostico = '".$IDDiagnostico."' Limit 1"	;
							$r_resp=$dbo->query($sql_resp);
							if ( $dbo->rows( $r_resp ) <= 0 ) {
									$guardar_encuesta=1;
							}
						}
						else{
							$guardar_encuesta=1;
						}

						if(!empty( $IDUsuario )){
							$IDSocio=$IDUsuario;
							$TipoUsuario="Funcionario";
							$condicion_unica=" and IDUsuario='".$IDUsuario."'";
						}
						elseif(!empty( $IDSocio )){
							$TipoUsuario="Socio";
							$condicion_unica=" and IDSocio='".$IDSocio."'";
						}
						else{
							$TipoUsuario="Externo";
							$condicion_unica=" and NumeroDocumento='".$NumeroDocumento."'";
						}


						$fecha_hoy=date("Y-m-d") . " 00:00:00";
						$sql_unica="SELECT IDDiagnosticoRespuesta FROM  DiagnosticoRespuesta WHERE IDDiagnostico = '".$IDDiagnostico."' and FechaTrCr >= '".$fecha_hoy."' " . $condicion_unica;
						$r_unica=$dbo->query($sql_unica);
						$total_unica=$dbo->rows($r_unica);
						if($total_unica>0){
							$respuesta["message"] = "Ya había registrado los datos el día de hoy";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
							return $respuesta;
						}

						if($guardar_encuesta==1){

							$sql_pregunta="SELECT IDPreguntaDiagnostico,Obligatorio FROM PreguntaDiagnostico WHERE IDDiagnostico = '".$IDDiagnostico."' ";
							$r_pregunta=$dbo->query($sql_pregunta);
							while($row_pregunta=$dbo->fetchArray($r_pregunta)){
								$array_pregunta[$row_pregunta["IDPreguntaDiagnostico"]]=$row_pregunta["Obligatorio"];
							}

								$datos_correctos="S";
								$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
								$datos_respuesta= json_decode($Respuestas, true);
								if (count($datos_respuesta)>0):

									foreach($datos_respuesta as $detalle_respuesta){
										if($detalle_respuesta["Valor"]=="null" && $array_pregunta[$detalle_respuesta["IDPreguntaDiagnostico"]]=="S"){
											$datos_correctos="N";
										}
										else{
											$datos_correctos="S";
											break;
										}
									}
									if($datos_correctos=="N"){
										$respuesta["message"] = "Datos No fueron enviados, alguna de las respuestas es incorrecta, por favor verifique";
										$respuesta["success"] = false;
										$respuesta["response"] = NULL;
										return $respuesta;
									}

									foreach($datos_respuesta as $detalle_respuesta):
										if($detalle_respuesta["Valor"]!="null"){
												$sql_datos_form = $dbo->query("INSERT INTO DiagnosticoRespuesta (IDDiagnostico, IDSocio, IDUsuario, IDPreguntaDiagnostico, IDDiagnosticoOpcionesRespuesta, NumeroDocumento, Nombre, TipoUsuario, Valor, Peso, FechaTrCr) Values ('".$IDDiagnostico."','". $IDSocio ."','".$IDUsuario."','". $detalle_respuesta["IDPreguntaDiagnostico"]."','".$detalle_respuesta["ValorID"]."','".$NumeroDocumento."','".$Nombre."','".$TipoUsuario."','".$detalle_respuesta["Valor"]."','".$detalle_respuesta["Peso"]."',NOW())");
												$suma_peso+=$detalle_respuesta["Peso"];
												$datos_pregunta = $dbo->fetchAll( "PreguntaDiagnostico", " IDPreguntaDiagnostico = '".$detalle_respuesta["IDPreguntaDiagnostico"]."' ", "array" );
												$respuestas_diagnostico.=$datos_pregunta["EtiquetaCampo"]."=".$detalle_respuesta["Valor"]."<br>";
												if($detalle_respuesta["Terminar"]=="S" && $detalle_respuesta["Peso"]>0){
													$suma_peso=$datos_diagnostico["PesoMaximo"]+1;
												}
											}
									endforeach;
								endif;

								$RespuestaDiagnostico=$datos_diagnostico["MensajeBien"];
								if($suma_peso>=$datos_diagnostico["PesoMaximo"] && !empty($datos_diagnostico["EmailAlerta"])){
									SIMUtil::notifica_alerta_diagnostico($IDClub,$IDSocio,$IDDiagnostico,$respuestas_diagnostico,$IDUsuario,$datos_diagnostico["EmailAlerta"],$suma_peso,$TipoUsuario);
									$RespuestaDiagnostico=$datos_diagnostico["MensajeMal"];
									$estado_salud="UPDATE Socio Set IDEstadoSalud = 2 Where IDSocio='".$IDSocio."'";
									$dbo->query($estado_salud);
									//regisyro el seguimiento
									$sql_insert="INSERT INTO SocioSeguimiento (IDSocioSeguimiento,IDSocio,IDUsuario,IDEstadoSalud,Observacion,Fecha,FechaTrCr)
																VALUES ('','".$IDSocio."','". $IDUsuario."','2','Autodiagnostico',CURDATE(),now()) ";
									$dbo->query($sql_insert);
								}



								$respuesta["message"] = $RespuestaDiagnostico;
								$respuesta["success"] = true;
								$respuesta["response"] = $response;
						}
						else{
							$respuesta["message"] = "Este diagnostico ya había sido contestada por ud, solo se permite 1 vez por día";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

				}
				else{
					$respuesta["message"] = "E1. Atencion faltan parametros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}

				return $respuesta;

			}

			function get_encuesta_calificacion( $IDClub , $IDSocio = "",$IDUsuario = "")
				{

					$dbo =& SIMDB::get();

					$response = array();

					if(!empty($IDSocio))
							$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
					elseif(!empty($IDUsuario))
							$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";



					$sql = "SELECT * FROM Encuesta2 WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
					$qry = $dbo->query( $sql );
					if( $dbo->rows( $qry ) > 0 )
					{
						$message = $dbo->rows( $qry ) . " Encontrados";

						while( $r = $dbo->fetchArray( $qry ) )
						{

							$mostrar_encuesta=self::verifica_ver_encuesta2($r,$IDSocio);

							if($mostrar_encuesta==1){
									$encuesta["IDClub"] = $r["IDClub"];
									$encuesta["IDEncuesta"] = $r["IDEncuesta2"];
									$encuesta["Nombre"] = $r["Nombre"];
									$encuesta["Descripcion"] = $r["Descripcion"];
									$encuesta["SolicitarAbrirApp"] = $r["SolicitarAbrirApp"];
									$encuesta["FechaInicio"] = $r["FechaInicio"];
									$encuesta["FechaFin"] = $r["FechaFin"];
									$encuesta["SegundaClave"] = $r["SegundaClave"];

									$datos_modulo = $dbo->fetchAll( "ClubModulo", " IDModulo = '101' and IDClub='" . $IDClub . "' ", "array" );
									$icono_modulo = $datos_modulo[ "Icono" ];
									if ( !empty( $datos_modulo[ "Icono" ] ) ):
										$foto = MODULO_ROOT . $datos_modulo[ "Icono" ];
									else :
										$foto = "";
									endif;
									$encuesta[ "Icono" ] = $foto;


									//Verifico si el socio ya contesto la encuesta
									if(!empty($IDSocio)){
										$sql_contesta="SELECT * FROM  Encuesta2Respuesta WHERE IDSocio='".$IDSocio."' and IDEncuesta2 = '".$r["IDEncuesta2"]."'";
										$r_contesta=$dbo->query($sql_contesta);
										if($dbo->rows($r_contesta>0)){
											$encuesta["Respondida"] = "S";
										}
										else{
											$encuesta["Respondida"] = "N";
										}
									}

									//Pregunta
									$pregunta = array();
									$response_pregunta = array();
									$sql_respuesta="SELECT * FROM PreguntaEncuesta2 Where IDEncuesta2 = '".$encuesta["IDEncuesta"]."' and Publicar = 'S' Order by Orden";
									$r_encuesta=$dbo->query($sql_respuesta);
									while($row_pregunta = $dbo->fetchArray($r_encuesta)):
											$pregunta["IDPreguntaEncuesta"]=$row_pregunta["IDPreguntaEncuesta2"];
											$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
											$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
											$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
											//Consulto los valores
											$sql_opciones="SELECT * FROM Encuesta2OpcionesRespuesta WHERE IDEncuesta2Pregunta = '".$row_pregunta["IDPreguntaEncuesta2"]."' Order by orden";
											$r_opciones=$dbo->query($sql_opciones);
											$opciones_respuesta = array();
											$response_valores = array();
											while($row_opciones=$dbo->fetchArray($r_opciones)){
														$opciones_respuesta[ "IDEncuestaPregunta" ] = $row_opciones[ "IDEncuesta2Pregunta" ];
														$opciones_respuesta["IDEncuesta2OpcionesRespuesta"]=$row_opciones["IDEncuesta2OpcionesRespuesta"];
														//$opciones_respuesta[ "IDDiagnosticoPreguntaSiguiente" ] = $row_opciones[ "IDDiagnosticoPreguntaSiguiente" ];
														$opciones_respuesta[ "Opcion" ] = $row_opciones[ "Opcion" ];
														$opciones_respuesta[ "RespuestaCorrecta" ] = $row_opciones[ "RespuestaCorrecta" ];
														$opciones_respuesta[ "Puntos" ] = $row_opciones[ "Puntos" ];
														array_push( $response_valores, $opciones_respuesta );
											}
											$pregunta[ "Valores" ] = $response_valores;
											$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
											array_push( $response_pregunta, $pregunta );
									endwhile;

									$encuesta["Preguntas"] = $response_pregunta;
									array_push($response, $encuesta);
								}
						}//ednw hile


							$respuesta["message"] = $message;
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}//End if
					else
					{
							$respuesta["message"] = "No se encontraron registros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
					}//end else

					return $respuesta;

				}// fin function

				function set_respuesta_encuesta_calificacion($IDClub,$IDSocio,$IDEncuesta,$Respuestas,$IDUsuario="")
				{
					$dbo =& SIMDB::get();
					if( !empty( $IDClub )  && (!empty( $IDSocio ) || !empty( $IDUsuario ) ) && !empty( $IDEncuesta ) ){
							$guardar_encuesta=0;
							$datos_diagnostico = $dbo->fetchAll( "Encuesta2", " IDEncuesta2 = '".$IDEncuesta."' and IDClub='" . $IDClub . "' ", "array" );
							$contesta_una=$datos_diagnostico["UnaporSocio"];
							if($contesta_una=="S"){
								$sql_resp="SELECT IDEncuesta2 From Encuesta2Respuesta Where IDSocio = '".$IDSocio."' and IDDiagnostico = '".$IDDiagnostico."' Limit 1"	;
								$r_resp=$dbo->query($sql_resp);
								if ( $dbo->rows( $r_resp ) <= 0 ) {
										$guardar_encuesta=1;
								}
							}
							else{
								$guardar_encuesta=1;
							}

							if(!empty( $IDUsuario )){
								$IDSocio=$IDUsuario;
								$TipoUsuario="Funcionario";
							}
							else{
								$TipoUsuario="Socio";
							}


							if($guardar_encuesta==1){
								$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
									$datos_respuesta= json_decode($Respuestas, true);

									if (count($datos_respuesta)>0):
										foreach($datos_respuesta as $detalle_respuesta):
											$sql_datos_form = $dbo->query("INSERT INTO Encuesta2Respuesta (IDEncuesta2, IDSocio, IDPreguntaEncuesta2, IDEncuesta2OpcionesRespuesta, TipoUsuario, Valor, Puntos, RespuestaCorrecta, FechaTrCr)
																										Values ('".$IDEncuesta."','". $IDSocio ."','". $detalle_respuesta["IDEncuestaPregunta"]."','".$detalle_respuesta["ValorID"]."','".$TipoUsuario."','".$detalle_respuesta["Valor"]."','".$detalle_respuesta["Puntos"]."','".$detalle_respuesta["RespuestaCorrecta"]."',NOW())");
											$suma_puntos+=$detalle_respuesta["Puntos"];
										endforeach;
									endif;

									$respuesta["message"] = "Datos enviado correctamente";
									$respuesta["success"] = true;
									$respuesta["response"] = $response;
							}
							else{
								$respuesta["message"] = "Este encuesta ya había sido contestada por ud, solo se permite 1 vez por día";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
							}

					}
					else{
						$respuesta["message"] = "E1. Atencion faltan parametros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}

					return $respuesta;

				}

		function set_respuesta_encuesta($IDClub,$IDSocio,$IDEncuesta,$Respuestas,$IDUsuario="")
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub )  && (!empty( $IDSocio ) || !empty( $IDUsuario ) ) && !empty( $IDEncuesta ) ){
					$guardar_encuesta=0;
					$contesta_una=utf8_decode($dbo->getFields( "Encuesta" , "UnaporSocio" , "IDEncuesta = '".$IDEncuesta."'" ));
					if($contesta_una=="S"){
						$sql_resp="Select IDEncuesta From EncuestaRespuesta Where IDSocio = '".$IDSocio."' and IDEncuesta = '".$IDEncuesta."' Limit 1"	;
						$r_resp=$dbo->query($sql_resp);
						if ( $dbo->rows( $r_resp ) <= 0 ) {
								$guardar_encuesta=1;
						}
					}
					else{
						$guardar_encuesta=1;
					}

					if(!empty( $IDUsuario )){
						$IDSocio=$IDUsuario;
						$TipoUsuario="Funcionario";
					}
					else{
						$TipoUsuario="Socio";
					}

					$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
					if($guardar_encuesta==1){
							$datos_respuesta= json_decode($Respuestas, true);
							if (count($datos_respuesta)>0):
								foreach($datos_respuesta as $detalle_respuesta):
									$sql_datos_form = $dbo->query("Insert Into EncuestaRespuesta (IDEncuesta, IDSocio, IDPregunta,  TipoUsuario, Valor, FechaTrCr) Values ('".$IDEncuesta."','". $IDSocio ."','". $detalle_respuesta["IDPregunta"]."','".$TipoUsuario."','".$detalle_respuesta["Valor"]."',NOW())");
								endforeach;
							endif;
							$respuesta["message"] = "guardado";
							$respuesta["success"] = true;
							$respuesta["response"] = $datos_reserva;
					}
					else{
						$respuesta["message"] = "Esta encuesta ya había sido contestada por ud, solo se permite 1 vez";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}

			}
			else{
				$respuesta["message"] = "E1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

		}

		function set_respuesta_dotacion($IDClub,$IDSocio,$IDDotacion,$Respuestas,$IDUsuario="")
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub )  && (!empty( $IDSocio ) || !empty( $IDUsuario ) ) && !empty( $IDDotacion ) ){
					$guardar_encuesta=0;
					$contesta_una=utf8_decode($dbo->getFields( "Dotacion" , "UnaporSocio" , "IDDotacion = '".$IDDotacion."'" ));
					if($contesta_una=="S"){
						$sql_resp="Select IDDotacion From DotacionRespuesta Where IDSocio = '".$IDSocio."' and IDDotacion = '".$IDDotacion."' Limit 1"	;
						$r_resp=$dbo->query($sql_resp);
						if ( $dbo->rows( $r_resp ) <= 0 ) {
								$guardar_encuesta=1;
						}
					}
					else{
						$guardar_encuesta=1;
					}

					if(!empty( $IDUsuario )){
						$IDSocio=$IDUsuario;
						$TipoUsuario="Funcionario";
					}
					else{
						$TipoUsuario="Socio";
					}

					$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
					if($guardar_encuesta==1){
							$datos_respuesta= json_decode($Respuestas, true);
							if (count($datos_respuesta)>0):
								foreach($datos_respuesta as $detalle_respuesta):
									$sql_datos_form = $dbo->query("Insert Into DotacionRespuesta (IDDotacion, IDSocio, IDPreguntaDotacion, TipoUsuario, Valor, FechaTrCr) Values ('".$IDDotacion."','". $IDSocio ."','". $detalle_respuesta["IDPreguntaDotacion"]."','".$TipoUsuario."','".$detalle_respuesta["Valor"]."',NOW())");
								endforeach;
							endif;
							$respuesta["message"] = "guardado";
							$respuesta["success"] = true;
							$respuesta["response"] = $datos_reserva;
					}
					else{
						$respuesta["message"] = "Esta encuesta ya había sido contestada por ud, solo se permite 1 vez";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}

			}
			else{
				$respuesta["message"] = "E1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

		}

		function get_votacion( $IDClub , $IDSocio = "",$IDUsuario = "")
			{


				$dbo =& SIMDB::get();
				$response = array();

				if(!empty($IDSocio))
						$condicion=" and (DirigidoA = 'S' or DirigidoA = 'T') ";
				elseif(!empty($IDUsuario))
						$condicion=" and (DirigidoA = 'E' or DirigidoA = 'T') ";

				$sql = "SELECT * FROM Votacion WHERE Publicar = 'S' and IDClub = '".$IDClub."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() ".$condicion." ORDER BY Orden ";
				$qry = $dbo->query( $sql );
				if( $dbo->rows( $qry ) > 0 )
				{
					$message = $dbo->rows( $qry ) . " Encontrados";

					while( $r = $dbo->fetchArray( $qry ) )
					{


						$mostrar_encuesta=self::verifica_ver_votacion($r,$IDSocio);
						if($mostrar_encuesta==1){
								$encuesta["IDClub"] = $r["IDClub"];
								$encuesta["IDVotacion"] = $r["IDVotacion"];
								$encuesta["Nombre"] = $r["Nombre"];
								$encuesta["Descripcion"] = $r["Descripcion"];
								$encuesta["SolicitarAbrirApp"] = $r["SolicitarAbrirApp"];
								$encuesta["FechaInicio"] = $r["FechaInicio"];
								$encuesta["FechaFin"] = $r["FechaFin"];
								$encuesta["SegundaClave"] = $r["SegundaClave"];
								$encuesta[ "Georeferenciacion" ] = $r[ "Georeferenciacion" ];
								$encuesta[ "Latitud" ] = $r[ "Latitud" ];
								$encuesta[ "Longitud" ] = $r[ "Longitud" ];
								$encuesta[ "Rango" ] = $r[ "Rango" ];
								$encuesta[ "MensajeFueraRango" ] = $r[ "MensajeFueraRango" ];

								$datos_modulo = $dbo->fetchAll( "ClubModulo", " IDModulo = '70' and IDClub='" . $IDClub . "' ", "array" );
								$icono_modulo = $datos_modulo[ "Icono" ];
								if ( !empty( $datos_modulo[ "Icono" ] ) ):
									$foto = MODULO_ROOT . $datos_modulo[ "Icono" ];
								else :
									$foto = "";
								endif;
								$encuesta[ "Icono" ] = $foto;

								//Verifico si el socio ya contesto la encuesta
								if(!empty($IDSocio)){
									$sql_contesta="SELECT * FROM VotacionRespuesta WHERE IDSocio='".$IDSocio."' and IDVotacion = '".$r["IDVotacion"]."'";
									$r_contesta=$dbo->query($sql_contesta);
									if($dbo->rows($r_contesta>0)){
										$encuesta["Respondida"] = "S";
									}
									else{
										$encuesta["Respondida"] = "N";
									}
								}

								//Pregunta
								$pregunta = array();
								$response_pregunta = array();
								$sql_respuesta="Select * From PreguntaVotacion Where IDVotacion = '".$encuesta["IDVotacion"]."' and Publicar = 'S' Order by Orden";
								$r_encuesta=$dbo->query($sql_respuesta);
								while($row_pregunta = $dbo->FetchArray($r_encuesta)):
										$pregunta["IDPregunta"]=$row_pregunta["IDPregunta"];
										$pregunta[ "TipoCampo" ] = $row_pregunta[ "TipoCampo" ];
										$pregunta[ "EtiquetaCampo" ] = $row_pregunta[ "EtiquetaCampo" ];
										$pregunta[ "Obligatorio" ] = $row_pregunta[ "Obligatorio" ];
										$pregunta[ "Valores" ] = $row_pregunta[ "Valores" ];
										$pregunta[ "Orden" ] = $row_pregunta[ "Orden" ];
										array_push( $response_pregunta, $pregunta );
								endwhile;

								$encuesta["Preguntas"] = $response_pregunta;
								array_push($response, $encuesta);
							}
					}//ednw hile


						$respuesta["message"] = $message;
						$respuesta["success"] = true;
						$respuesta["response"] = $response;
				}//End if
				else
				{
						$respuesta["message"] = "No se encontraron registros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
				}//end else

				return $respuesta;

			}// fin function

			function set_respuesta_votacion($IDClub,$IDSocio,$IDVotacion,$Respuestas,$IDUsuario="")
			{
				$dbo =& SIMDB::get();
				if( !empty( $IDClub )  && (!empty( $IDSocio ) || !empty( $IDUsuario ) ) && !empty( $IDVotacion ) ){
						$guardar_encuesta=0;
						$contesta_una=utf8_decode($dbo->getFields( "Votacion" , "UnaporSocio" , "IDVotacion = '".$IDVotacion."'" ));
						$nombre_votacion=utf8_decode($dbo->getFields( "Votacion" , "Nombre" , "IDVotacion = '".$IDVotacion."'" ));
						if($contesta_una=="S"){
							$sql_resp="Select IDVotacion From VotacionRespuesta Where IDSocio = '".$IDSocio."' and IDVotacion = '".$IDVotacion."' Limit 1"	;
							$r_resp=$dbo->query($sql_resp);
							if ( $dbo->rows( $r_resp ) <= 0 ) {
									$guardar_encuesta=1;
							}
						}
						else{
							$guardar_encuesta=1;
						}

						if(!empty( $IDUsuario )){
							$IDSocio=$IDUsuario;
							$TipoUsuario="Funcionario";
						}
						else{
							$TipoUsuario="Socio";
						}

						$Respuestas= trim(preg_replace('/\s+/', ' ', $Respuestas));
						if($guardar_encuesta==1){
								$datos_respuesta= json_decode($Respuestas, true);
								if (count($datos_respuesta)>0):
									foreach($datos_respuesta as $detalle_respuesta):

										//Verifico el coeficiente del votante
										$coeficiente=SIMUtil::verifica_coeficiente($IDSocio);
										if((float)($coeficiente)<=0){
												$PesoVoto=1;
										}
										else{
											$PesoVoto=$coeficiente;
										}

										$sql_datos_form = $dbo->query("INSERT INTO VotacionRespuesta (IDVotacion, IDSocio, IDPregunta, TipoUsuario, Valor, PesoVoto, FechaTrCr) Values ('".$IDVotacion."','". $IDSocio ."','". $detalle_respuesta["IDPregunta"]."','".$TipoUsuario."','".$detalle_respuesta["Valor"]."','".$PesoVoto."',NOW())");
									endforeach;
									SIMUtil::enviar_notificacion_push_general($IDClub,$IDSocio,"Tu votacion a: ".$nombre_votacion." fue contabilizada");
								endif;
								$respuesta["message"] = "guardado";
								$respuesta["success"] = true;
								$respuesta["response"] = $datos_reserva;
						}
						else{
							$respuesta["message"] = "Ya había votado, solo se permite 1 vez";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

				}
				else{
					$respuesta["message"] = "E1. Atencion faltan parametros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}

				return $respuesta;

			}








					function get_correspondencia( $IDClub,$IDSocio,$Tag )
					{
						$dbo =& SIMDB::get();

						$response = array();

						if(!empty($IDSocio))
							$condicion = " and IDSocio = '".$IDSocio."'";

							if(!empty($Tag))
								$condicion = " and ( Nombre = '".$Tag."' or Apellido = '".$Tag."' or Accion = '".$Tag."' or Predio = '".$Tag."' )";

						$sql = "SELECT * FROM Socio 	WHERE IDClub = '".$IDClub."' ".$condicion." ORDER BY Nombre ASC ";
						$qry = $dbo->query( $sql );
						if( $dbo->rows( $qry ) > 0 )
						{
							$message = $dbo->rows( $qry ) . " Encontrados";
							while ($row = $dbo->fetchArray($qry))	{
								$socio["IDClub"] = $IDClub;
								$socio["IDSocio"] = $row["IDSocio"];
								$socio["Predio"] = $row["Predio"];

								$response_cat_correspondencia = array();
								$sql_cat_correspondencia = $dbo->query("SELECT * FROM CategoriaCorrespondencia WHERE IDClub = '".$IDClub."' ORDER BY Nombre ASC");
								while ($r_cat_correspondencia = $dbo->fetchArray($sql_cat_correspondencia)){
									 $dato_cat_correspondencia["IDCategoriaCorrespondencia"]=$r_cat_correspondencia["IDCategoriaCorrespondencia"];
									 $dato_cat_correspondencia["Nombre"]=$r_cat_correspondencia["Nombre"];
									 $dato_cat_correspondencia["ServicioPublico"]=$r_cat_correspondencia["ServicioPublico"];

									 $response_correspondencia = array();


									 $sql_correspondencia = $dbo->query("SELECT C.*, TC.Nombre as NombreCorrespondencia
																												FROM Correspondencia C, TipoCorrespondencia TC, CategoriaCorrespondencia CC
																												WHERE C.IDTipoCorrespondencia=TC.IDTipoCorrespondencia
																												AND CC.IDCategoriaCorrespondencia = TC.IDCategoriaCorrespondencia
																												AND TC.IDCategoriaCorrespondencia= '".$dato_cat_correspondencia["IDCategoriaCorrespondencia"]."'
																												AND C.IDSocio = '".$row["IDSocio"]."'
																												ORDER BY FIELD (IDCorrespondenciaEstado,'1','2'),IDCorrespondenciaEstado ASC");

										while ($r_correspondencia = $dbo->fetchArray($sql_correspondencia)){
										 $dato_correspondencia["IDCorrespondencia"]=$r_correspondencia["IDCorrespondencia"];
										 $dato_correspondencia["IDCorrespondenciaEstado"]=$r_correspondencia["IDCorrespondenciaEstado"];
										 $dato_correspondencia["Estado"]=utf8_decode($dbo->getFields( "CorrespondenciaEstado" , "Nombre" , "IDCorrespondenciaEstado = '".$r_correspondencia["IDCorrespondenciaEstado"]."'" ));
										 $dato_correspondencia["NombreCorrespondencia"]=$r_correspondencia["NombreCorrespondencia"];
										 $dato_correspondencia["Destinatario"]=$r_correspondencia["Destinatario"];
										 $dato_correspondencia["FechaRecepcion"]=$r_correspondencia["FechaRecepcion"];
										 $dato_correspondencia["FechaEntrega"]=$r_correspondencia["FechaEntrega"];
										 $dato_correspondencia["EntregadoA"]=$r_correspondencia["EntregadoA"];
										 if(!empty($r_correspondencia["Archivo"]))
											$foto=CORRESPONDENCIA_ROOT . $r_correspondencia["Archivo"];
										else
											$foto="";

										 $dato_correspondencia["Archivo"]=$foto;
										 $dato_correspondencia["EntregadoPor"]=utf8_decode($dbo->getFields( "Usuario" , "Nombre" , "IDUsuario = '".$r_correspondencia["IDUsuarioEntrega"]."'" ));
										 array_push($response_correspondencia, $dato_correspondencia);
									 }

									 $dato_cat_correspondencia["Nombre"]=$r_cat_correspondencia["Nombre"];
									 $dato_cat_correspondencia["DatosCorrespondencia"]=$response_correspondencia;
									 array_push($response_cat_correspondencia, $dato_cat_correspondencia);

								 }
									$socio["Correspondencia"] = $response_cat_correspondencia;
									array_push($response, $socio);
									$respuesta["message"] = $message;
									$respuesta["success"] = true;
									$respuesta["response"] = $response;
								}


						}//End if
						else
						{
								$respuesta["message"] = "No se han encontraron resultados";
								$respuesta["success"] = true;
								$respuesta["response"] = NULL;
						}//end else

						return $respuesta;

					}// fin function

					function get_tipo_correspondencia( $IDClub )
					{
						$dbo =& SIMDB::get();

						$response = array();
						$sql = "SELECT TC.*,CC.Nombre as Categoria,CC.ServicioPublico FROM TipoCorrespondencia TC, CategoriaCorrespondencia CC WHERE TC.IDCategoriaCorrespondencia = CC.IDCategoriaCorrespondencia and TC.Publicar = 'S' and TC.IDClub = '".$IDClub."' ORDER BY TC.Nombre";
						$qry = $dbo->query( $sql );
						if( $dbo->rows( $qry ) > 0 )
						{
							$message = $dbo->rows( $qry ) . " Encontrados";
							while( $r = $dbo->fetchArray( $qry ) )
							{
								$tipo_corresp["IDTipoCorrespondencia"] = $r["IDTipoCorrespondencia"];
								$tipo_corresp["Nombre"] = $r["Nombre"] . " - " . $r["Categoria"];
								$tipo_corresp["EsServicioPublico"] = $r["ServicioPublico"];
								array_push($response, $tipo_corresp);

							}//ednw hile
								$respuesta["message"] = $message;
								$respuesta["success"] = true;
								$respuesta["response"] = $response;
						}//End if
						else
						{
								$respuesta["message"] = "No se encontraron registro";
								$respuesta["success"] = false;
								$respuesta["response"] = NULL;
						}//end else

						return $respuesta;

					}// fin function


					function set_correspondencia($IDClub,$IDSocio,$IDUsuario,$IDTipoCorrrespondencia,$Vivienda,$Destinatario,$FechaRecepcion,$HoraRecepcion,$EntregarATodos,$Archivo, $File = "")
					{
						$dbo =& SIMDB::get();
						if( !empty( $IDClub )  && !empty( $EntregarATodos ) && !empty( $IDTipoCorrrespondencia ) ){



								if($EntregarATodos=="S"){
									$condicion_socio=" ";
								}else{
									$condicion_socio=" and IDSocio = '".$IDSocio."'";
								}

								if ( isset( $File ) ) {

									$files = SIMFile::upload( $File[ "Archivo" ], CORRESPONDENCIA_DIR, "IMAGE" );
									if ( empty( $files ) && !empty( $File[ "Archivo" ][ "name" ] ) ):
										$respuesta[ "message" ] = "Ha ocurrido un error durante la carga de la imagen. Verifique que la imagen no contenga errores y que el tipo de archivo sea permitido.";
										$respuesta[ "success" ] = false;
										$respuesta[ "response" ] = NULL;
										return $respuesta;
									endif;
									$Archivo = $files[ 0 ][ "innername" ];


								} //end if

								$sql_socio="Select * From Socio Where IDClub = '".$IDClub."' ".$condicion_socio;
								$r_socio=$dbo->query($sql_socio);
								while($row_socio=$dbo->FetchArray($r_socio)){
										$inserta_corresp = "INSERT INTO Correspondencia (IDClub, IDSocio, IDTipoCorrespondencia, IDUsuarioCrea, IDCorrespondenciaEstado, Vivienda, Destinatario, FechaRecepcion, Archivo, UsuarioTrCr, FechaTrCr) Values
																																	('".$IDClub."','". $IDSocio ."','". $IDTipoCorrrespondencia."','".$IDUsuario."','1','".$Vivienda."','".$Destinatario."','".$FechaRecepcion . " " . $HoraRecepcion."','".$Archivo."','".$IDUsuario."',NOW())";
										$dbo->query($inserta_corresp);
										//Envio la notificacion
										if($EntregarATodos!="S"){
											$Mensaje = "Nueva correspondencia: " . utf8_decode($dbo->getFields( "TipoCorrespondencia" , "Nombre" , "IDTipoCorrespondencia = '".$IDTipoCorrrespondencia."'" ));
											SIMUtil::enviar_notificacion_push_general($IDClub,$IDSocio,$Mensaje);
										}
										else{
											//Inserto Cola de notificaciones
											$sql_notif="INSERT INTO ColaNotificacionPush (IDClub, IDSocio, Mensaje, UsuarioTrCr, FechaTrCr) VALUES ('".$IDClub."','".$IDSocio."','".$Mensaje."','Aut',NOW())";
											$dbo->query($sql_notif);
										}
								}

								$respuesta["message"] = "guardado";
								$respuesta["success"] = true;
								$respuesta["response"] = "";

						}
						else{
							$respuesta["message"] = "E1. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

					}

					function set_entrega_correspondencia($IDClub,$IDSocio,$IDUsuario,$IDCorrespondencia,$FechaEntrega,$HoraEntrega,$EntregadoA)
					{
						$dbo =& SIMDB::get();
						if( !empty( $IDClub )  && !empty( $IDSocio ) && !empty( $IDUsuario )  && !empty( $IDCorrespondencia ) && !empty( $EntregadoA ) ){
								$datos_corresp = $dbo->fetchAll( "Correspondencia", " IDCorrespondencia = '" . $IDCorrespondencia . "' ", "array" );
								$update_corresp ="UPDATE Correspondencia Set IDUsuarioEntrega = '".$IDUsuario."', IDCorrespondenciaEstado=2, FechaEntrega='".$FechaEntrega." ".$HoraEntrega."', EntregadoA='".$EntregadoA."', UsuarioTrEd='".$IDUsuario."',FechaTrEd =NOW() Where IDCorrespondencia = '".$IDCorrespondencia."'";
								$dbo->query($update_corresp);
								$Mensaje = "Correspondencia: " . utf8_decode($dbo->getFields( "TipoCorrespondencia" , "Nombre" , "IDTipoCorrespondencia = '".$datos_corresp["IDTipoCorrrespondencia"]."'" )). " entregado a " . $EntregadoA;
								SIMUtil::enviar_notificacion_push_general($IDClub,$IDSocio,$Mensaje);

								$respuesta["message"] = "guardado";
								$respuesta["success"] = true;
								$respuesta["response"] = "";

						}
						else{
							$respuesta["message"] = "E1. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

					}

					function set_codigo_qr($IDClub,$IDSocio,$CodigoQR){
						$dbo =& SIMDB::get();
						if( !empty( $IDClub )  && !empty( $IDSocio ) && !empty( $CodigoQR ) ){

								//Por ahora guardo el qr en registro temporal para verificar que guarda
								$actualiza="Update Socio Set ObservacionEspecial='".$CodigoQR."' Where IDSocio = '5533'";
								$dbo->query($actualiza);

								$respuesta["message"] = "guardado";
								$respuesta["success"] = true;
								$respuesta["response"] = "";

						}
						else{
							$respuesta["message"] = "E1. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
						}

						return $respuesta;

					}


	function get_header_club( $IDClub ){
			$dbo = & SIMDB::get();
			$response = array();

			//Obtener clima
			$apiKey = "4fb76e57d4c8d4ea7aa61f8ce5cb4eaa";
			$cityId = "3652462";
			$googleApiUrl = "http://api.openweathermap.org/data/2.5/weather?id=" . $cityId . "&lang=en&units=metric&APPID=" . $apiKey;

			$ch = curl_init();
			curl_setopt($ch, CURLOPT_HEADER, 0);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_URL, $googleApiUrl);
			curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
			curl_setopt($ch, CURLOPT_VERBOSE, 0);
			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
			$response_temp = curl_exec($ch);
			curl_close($ch);
			$data = json_decode($response_temp);
			$currentTime = time();

			$temperatura=(int)$data->main->temp_max;

			//Header Reserva, clima, bienvenida
			$header_club[ "IDClub" ] = $IDClub;
			$header_club[ "Tipo" ] = "Reserva";
			$header_club[ "TextoBienvenida" ] = "Bienvenido al club";
			$header_club[ "Latitud" ] = "0.097035";
			$header_club[ "Longitud" ] = "78.493674";
			$header_club[ "Icono" ] = "https://miclubapp.com/img/iconos/iconogolfheader.png";
			$header_club[ "TextoIcono" ] = "QTGC Golf.";
			$header_club[ "LinkIcono" ] = "https://www.feg.org.ec/";
			$header_club[ "Clima" ] = $temperatura."º";
			$header_club[ "IconoClima" ] = "https://miclubapp.com/img/iconos/iconoclima.png";
			$header_club[ "FotoFondo" ] = "https://miclubapp.com/img/iconos/fotoarbol.png";

			array_push( $response, $header_club );

			//Header Noticia
			unset($header_club);
			$sql = "SELECT * FROM Noticia WHERE FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and IDClub = '" . $IDClub . "'" . " ORDER BY FechaInicio DESC,Orden Limit 2";
			$qry = $dbo->query( $sql );
			while ( $r = $dbo->fetchArray( $qry ) ) {
				$header_club[ "IDClub" ] = $IDClub;
				$header_club[ "Tipo" ] = "Noticia";
				$header_club[ "IDNoticia" ] = $r["IDNoticia"];
				$header_club[ "IDSeccion" ] = $r["IDSeccion"];
				$header_club[ "Titular" ] = $r["Titular"];
				$header_club[ "Introduccion" ] = $r["Introduccion"];
				if ( !empty( $r[ "NoticiaFile" ] ) ):
					if ( strstr( strtolower( $r[ "NoticiaFile" ] ), "http://" ) )
						$foto1 = $r[ "NoticiaFile" ];
					else
						$foto1 = IMGNOTICIA_ROOT . $r[ "NoticiaFile" ];
					//$foto1 = IMGNOTICIA_ROOT.$r["NoticiaFile"];
				else :
					$foto1 = "";
				endif;
				$header_club[ "Imagen" ] = $foto1;
				array_push( $response, $header_club );
			}


			//Header Evento
			unset($header_club);
			$orden = " FechaEvento ASC";
			$sql = "SELECT * FROM Evento WHERE (DirigidoA = 'S' or DirigidoA = 'T') and Publicar = 'S' and FechaInicio <= NOW() and FechaFin >= NOW() " . $CondicionFechaEvento . " and IDClub = '" . $IDClub . "' " . $condiciones_noticia . " ORDER BY " . $orden . " Limit 2";
			$qry = $dbo->query( $sql );
				while ( $r = $dbo->fetchArray( $qry ) ) {
					$header_club[ "IDClub" ] = $r[ "IDClub" ];
					$header_club[ "Tipo" ] = "Evento";
					$header_club[ "IDEvento" ] = $r[ "IDEvento" ];
					$header_club[ "IDSeccion" ] = $r["IDSeccionEvento"];
					$header_club[ "Titular" ] = $r[ "FechaEvento" ] . ": " . $r[ "Titular" ];
					$header_club[ "Introduccion" ] = $r[ "Introduccion" ];

					if ( !empty( $r[ "EventoFile" ] ) ):
						if ( strstr( strtolower( $r[ "EventoFile" ] ), "http://" ) )
							$foto1 = $r[ "EventoFile" ];
						else
							$foto1 = IMGEVENTO_ROOT . $r[ "EventoFile" ];
						//$foto1 = IMGEVENTO_ROOT.$r["EventoFile"];
					else :
						$foto1 = "";
					endif;
					$header_club[ "Imagen" ] = $foto1;
				}

					if($header_club[ "IDEvento" ]>0)
						array_push( $response, $header_club );

				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;

			return $respuesta;

	}// fin function

	function get_datos_socio_ws( $IDClub, $IDSocio ){
			$dbo = & SIMDB::get();
			$response = array();

			$Accion=01;

			require_once(LIBDIR.'nusoap/lib/nusoap.php');
			$client = new nusoap_client(ENDPOINT_CONDADO, 'wsdl');
			$err = $client->getError();
			if ($err) {
				echo '<h2>Constructor error</h2><pre>' . $err . '</pre>';
				echo '<h2>Debug</h2><pre>' . htmlspecialchars($client->getDebug(), ENT_QUOTES) . '</pre>';
				exit();
			}


			$params="
				<ns1:Socio xmlns:ns1='http://www.w3.org/XML/1998/namespace:lang'>
					<ns1:Request>
					<ns1:TypeSQL></ns1:TypeSQL>
					<ns1:DynamicProperty></ns1:DynamicProperty>
					<ns1:SessionID></ns1:SessionID>
					<ns1:Action></ns1:Action>
					<ns1:Body><![CDATA[<generatortoken><security user='ClubesWS' password='Zeus1234%' />    </generatortoken>]]>
				</ns1:Body>
					</ns1:Request>
				</ns1:Socio>";

			$result = $client->call('Socio', $params, '', '');

			echo "1a";
			print_r($client);
			exit;


			if ($client->fault) {
				echo '<h2>Fault (Expect - The request contains an invalid SOAP body)</h2><pre>'; print_r($result); echo '</pre>';
			} else {
				$err = $client->getError();
				if ($err) {
					echo '<h2>Error</h2><pre>' . $err . '</pre>';
				}
			}

			//print_r( $result);
			//echo "<br>Sesion:" . $result["SessionIDTokenResult"]["SessionID"];
			//echo "<br>Status:" . $result["SessionIDTokenResult"]["Status"];

			return $result;




				$respuesta[ "message" ] = $message;
				$respuesta[ "success" ] = true;
				$respuesta[ "response" ] = $response;

			return $respuesta;

	}// fin function

	function get_presalida($IDClub,$IDSocio,$Documento){
		$dbo =& SIMDB::get();
		if( !empty( $Documento ) ){
					$autorizacion_recogida=0;
					$autorizacion_invitacion=0;

					//BUSQUEDA INVITADOS ACCESOS
						$qryString = str_replace(".","",$Documento);
						$qryString = str_replace(",","",$qryString);
						$qryString = str_replace("-","",$qryString);
						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE, Invitado I Where SIE.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SIE.IDClub='".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";
						} else {
							//seguramente es una placa
							//Consulto en invitaciones accesos
							$sql_invitacion = "Select SIE.* From SocioInvitadoEspecial SIE,Vehiculo V Where SIE.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()  and SIE.IDClub='".$IDClub."'";
							$modo_busqueda = "PLACA";
						}


							$result_invitacion = $dbo->query($sql_invitacion);
							$total_resultados = $dbo->rows($result_invitacion);

							if($total_resultados>0)
								$autorizacion_invitacion=1;

							$datos_invitacion = $dbo->fetchArray($result_invitacion);
							$datos_invitacion["TipoInvitacion"] = "InvitadoAcceso";
							$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitadoEspecial"];
							$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
							$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );
							$tipo_socio = $datos_socio["TipoSocio"];
							$datos_socio["TipoSocio"] = "Invitado por";
							$datos_invitacion["PersonaAutoriza"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . "(".$tipo_socio.")") ;

							if($datos_invitacion["Ingreso"]=="N"){
								$accion_acceso = "ingreso";
								$label_accion_acceso = "Ingres&oacute;";
							}
							elseif($datos_invitacion["Salida"]=="N")	{
								$accion_acceso	= "salio";
								$label_accion_acceso	= "Sali&oacute;";
							}
							//Consulto grupo Familiar
							if($datos_invitacion["CabezaInvitacion"]=="S"):
								$sql_grupo = "Select * From SocioInvitadoEspecial Where IDPadreInvitacion = '".$datos_invitacion["IDSocioInvitadoEspecial"]."'";
								$result_grupo = $dbo->query($sql_grupo);
							endif;
					//FIN BUSQUEDA INVITADOS ACCESOS

					//BUSQUEDA CONTRATISTA
						if($total_resultados<=0):
							if (ctype_digit($qryString)) {
									// si es solo numeros en un numero de documento
									$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Invitado I Where SA.IDInvitado = I.IDInvitado  and I.NumeroDocumento = '".(int)$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE()  and SA.IDClub='".$IDClub."'";
									$modo_busqueda = "DOCUMENTO";
							} else {
								//seguramente es una placa
								//Consulto en invitaciones accesos
								$sql_invitacion = "Select SA.* From SocioAutorizacion SA, Vehiculo V Where SA.IDVehiculo = V.IDVehiculo and V.Placa = '".$qryString."' and FechaInicio <= CURDATE() AND FechaFin >= CURDATE() and SA.IDClub='".$IDClub."'";
								$modo_busqueda = "PLACA";
							}

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);
								if($total_resultados>0)
									$autorizacion_invitacion=1;

								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioAutorizacion"];
								$datos_invitacion["TipoInvitacion"] = "Contratista";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado = $dbo->fetchAll( "Invitado", " IDInvitado = '" . $datos_invitacion["IDInvitado"] . "' ", "array" );
								$datos_socio["TipoSocio"] = "Invitado por";
								$datos_invitacion["PersonaAutoriza"] = utf8_encode($datos_socio["Nombre"] . " " . $datos_socio["Apellido"] . "(".$tipo_socio.")") ;

						endif;
					//FIN BUSQUEDA CONTRATISTA

					//BUSQUEDA INVITADOS GENERAL
					if($total_resultados<=0):
						if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select SI.* From SocioInvitado SI Where SI.NumeroDocumento = '".(int)$qryString."' and FechaIngreso = '".date("Y-m-d")."' and IDClub = '".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";

								$result_invitacion = $dbo->query($sql_invitacion);
								$total_resultados = $dbo->rows($result_invitacion);
								$datos_invitacion = $dbo->fetchArray($result_invitacion);

								if($total_resultados>0)
									$autorizacion_invitacion=1;
								$datos_invitacion["Ingreso"];
								$datos_invitacion["Salida"];
								$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocioInvitado"];
								$datos_invitacion["TipoInvitacion"] = "Invitado";
								$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
								$datos_invitado["Nombre"] = $datos_invitacion["Nombre"];
						}
					endif;
				//FIN BUSQUEDA CONTRATISTA

				//BUSQUEDA SOCIO o Empleado si esta como Socio
				if($total_resultados<=0):
					if (ctype_digit($qryString)) {
							// si es solo numeros en un numero de documento
							$sql_invitacion = "Select * From Socio Where (NumeroDocumento = '".(int)$qryString."' or Accion = '".$qryString."' or NumeroDerecho = '".$qryString."') and IDClub = '".$IDClub."'";
							$modo_busqueda = "DOCUMENTO";
					} else {
						//seguramente es una placa	o una accion
						//Consulto las placas de vehiculos de socios
						$sql_invitacion = "Select * From Socio Where (Accion = '".$qryString."' or NumeroDerecho = '".$qryString."') and IDClub = '".$IDClub."'
											UNION Select S.* From Socio S , Vehiculo V  Where S.IDSocio=V.IDSocio and  V.Placa = '".$qryString."' and IDClub = '".$IDClub."'
											UNION Select S.* From Socio S , Predio P  Where S.IDSocio=P.IDSocio and  P.Predio = '".$qryString."' and IDClub = '".$IDClub."'  and AccionPadre = ''";

					}


						$result_invitacion = $dbo->query($sql_invitacion);
						$total_resultados = $dbo->rows($result_invitacion);

						if($total_resultados>0)
							$autorizacion_invitacion=1;


						$datos_invitacion = $dbo->fetchArray($result_invitacion);
						$datos_invitacion["IDInvitacion"] = $datos_invitacion["IDSocio"];
						$datos_invitacion["TipoInvitacion"] = "SocioClub";
						$datos_invitacion["PersonaAutoriza"]="b";
						$datos_invitacion["FechaInicio"]='indefinida';
						$datos_invitacion["FechaFin"]='indedefinida';
						$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_invitacion["IDSocio"] . "' ", "array" );
						$datos_invitado = $datos_socio;
						$modulo="Socio";
						$id_registro = $datos_invitacion["IDSocio"];

				endif;
			//FIN BUSQUEDA SOCIO



				//Busco en autorizaciones de recogida d alumnos
				$array_autorizacion_recogida = self::buscar_autorizacion_recogida($IDClub,$Documento );

					if($total_resultados<=0 && count($array_autorizacion_recogida)<=0)
					{
						$respuesta["message"] = "No encontrado!";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}//end if
					else{

							//Para fontanar en observaciones agrego el predio del socio
							if($IDClub==18 || $IDClub==35)
								$Observaciones= "Se dirije a " . $datos_socio["Predio"];



							$Observaciones.=" "  . $datos_invitacion["ObservacionSocio"];
							if($autorizacion_invitacion==1):
								$datos_invitacion_individual= array();
								$datos_invitacion_individual["IDInvitacion"] = $datos_invitacion["IDInvitacion"];
								$datos_invitacion_individual["TipoInvitacion"] = $datos_invitacion["TipoInvitacion"];
								$datos_invitacion_individual["FechaInicio"] = $datos_invitacion["FechaInicio"];
								$datos_invitacion_individual["FechaFin"] = $datos_invitacion["FechaFin"];
								$datos_invitacion_individual["Accion"] = $datos_socio["Accion"];
								$datos_invitacion_individual["Socio"] = $datos_invitacion["PersonaAutoriza"];
								$datos_invitacion_individual["TipoSocio"] = $datos_socio["TipoSocio"];
								$datos_invitacion_individual["Observaciones"] = $Observaciones;
								$datos_invitacion_individual["Ingreso"] = $datos_invitacion["Ingreso"];
								$datos_invitacion_individual["FechaIngreso"] = $datos_invitacion["FechaInicio"];
								$datos_invitacion_individual["Salida"] = $datos_invitacion["Salida"];
								$datos_invitacion_individual["FechaSalida"] = $datos_invitacion["FechaFin"];

								if (!empty($datos_invitado[FotoFile])) {
									$foto = 	IMGINVITADO_ROOT.$datos_invitado["FotoFile"];
								}else{
									$foto = URLROOT."plataform/assets/images/sinfoto.png";
								}

								$datos_invitacion_individual["Foto"] = $foto;
								$datos_invitacion_individual["NombreInvitado"] = utf8_encode($datos_invitado["Nombre"] . " " . $datos_invitado["Apellido"]);
								$tipodoc = $dbo->getFields( "TipoDocumento" , "Nombre" , "IDTipoDocumento = '" . $datos_invitado["IDTipoDocumento"] . "'" );
								if(empty($tipodoc))
									$TipoDocumento="Doc";
								else
									$TipoDocumento=$tipodoc;

								$datos_invitacion_individual["TipoDocumentoInvitado"] = $TipoDocumento;
								$datos_invitacion_individual["NumeroDocumentoInvitado"] = $datos_invitado["NumeroDocumento"];


								//Consulto el historial de ingresos y salidas del dia
										$response_historial_acceso = array();
										$fecha_hoy_desde = date("Y-m-d") . " 00:00:00";
										$fecha_hoy_hasta = date("Y-m-d") . " 23:59:59";
										$sql_historial = $dbo->query("Select * From LogAccesoDiario Where IDInvitacion = '".$datos_invitacion["IDInvitacion"]."' and FechaTrCr >= '".$fecha_hoy_desde."' and FechaTrCr <= '".$fecha_hoy_hasta."'");
										while($row_historial = $dbo->fetchArray($sql_historial)):
												 $dato_historial["Tipo"] = $row_historial["Tipo"];
												 $dato_historial["Salida"] = $row_historial["Salida"];
												 $dato_historial["FechaSalida"] = $row_historial["FechaSalida"];
												 $dato_historial["Entrada"] = $row_historial["Entrada"];
												 $dato_historial["FechaIngreso"] = $row_historial["FechaIngreso"];
												 $UltimoMovimiento=$row_historial["Entrada"];
												 array_push($response_historial_acceso, $dato_historial);
										 endwhile;
									$datos_invitacion_individual["Historial"] = $response_historial_acceso;
							else:
								$datos_invitacion_individual = NULL;
							endif;

							$datos_invitacion_individual["Presalida"] = $datos_invitado["Presalida"];
							$datos_invitacion_individual["MostrarPresalida"] = ($UltimoMovimiento=="S" && $datos_invitado["Presalida"]!="S") ? "S" : "N";



							$response["Invitacion"] = $datos_invitacion_individual;


							$respuesta["message"] = "ok";
							$respuesta["success"] = true;
							$respuesta["response"] = $response;
					}
				}
			else{
				$respuesta["message"] = "1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}


			return $respuesta;
	}


	function set_estado_cuenta_ws($IDClub,$IDRegistro,$NumeroDocumento,$Accion,$Secuencia,$Concepto,$Valor,$Fecha,$Observaciones)
	{
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDRegistro ) && !empty( $NumeroDocumento )  && !empty( $Accion ) && !empty( $Secuencia ) && !empty( $Valor ) && !empty( $Fecha ) ){
				$datos_estado = $dbo->fetchAll( "SocioEstadoCuentaWS", " IDClub = '".$IDClub."' and NumeroDocumento = '" . $NumeroDocumento . "' ", "array" );
				if($datos_estado["IDSocioEstadoCuentaWS"]>0){
						$sql_inserta="INSERT INTO SocioEstadoCuentaWS (IDClub,IDRegistro,NumeroDocumento,Accion,Secuencia,Concepto,Valor,Fecha,Observaciones,UsuarioTrCr,FechaTrCr)
													VALUES('".$IDClub."','".$IDRegistro."','".$NumeroDocumento."','".$Accion."','".$Secuencia."','".$Concepto."','".$Valor."','".$Fecha."','".$Observaciones."','WS',NOW())";
						$dbo->query($sql_inserta);
						$respuesta["message"] = "guardado";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
					}
				else{
					$respuesta["message"] = "EC2. El registro ya existe, por favor verifique";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}
		}
		else{
			$respuesta["message"] = "EC1. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;
		}

		function set_borrar_estado_cuenta_ws($IDClub,$NumeroDocumento)
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $NumeroDocumento ) ){
					$datos_estado = $dbo->fetchAll( "SocioEstadoCuentaWS", " IDClub = '".$IDClub."' and NumeroDocumento = '" . $NumeroDocumento . "' ", "array" );
					if($datos_estado["IDSocioEstadoCuentaWS"]>0){
							$sql_borra="DELETE FROM  SocioEstadoCuentaWS WHERE IDClub = '".$IDClub."' and  NumeroDocumento = '" . $NumeroDocumento . "'";
							$dbo->query($sql_borra);
							$respuesta["message"] = "Registro borrardo correctamente";
							$respuesta["success"] = true;
							$respuesta["response"] = NULL;
						}
					else{
						$respuesta["message"] = "EC3. El registro no existe, por favor verifique";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}
			}
			else{
				$respuesta["message"] = "EC1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;
			}



	function set_presalida_cualquiera($IDClub,$IDSocio,$IDInvitacion,$TipoInvitacion,$TipoSocio){
		$dbo =& SIMDB::get();


		if( !empty( $IDClub ) && !empty( $IDInvitacion ) && !empty( $TipoInvitacion )  ){

					switch($TipoInvitacion){
						case "InvitadoAcceso":
							$sql_presalida="Update  SocioInvitadoEspecial Set IDSocioPresalida = '".$IDSocio."', Presalida = 'S', FehaPresalida = NOW() Where IDSocioInvitadoEspecial = '".$IDInvitacion."' and IDClub = '".$IDClub."'  Limit 1";
							$dbo->query($sql_presalida);
						break;
						case "Contratista":
							$sql_presalida="Update  SocioAutorizacion Set IDSocioPresalida = '".$IDSocio."', Presalida = 'S', FehaPresalida = NOW() Where IDSocioAutorizacion = '".$IDInvitacion."' and IDClub = '".$IDClub."'  Limit 1";
							$dbo->query($sql_presalida);
						break;
						case "Socio":
							$sql_presalida = $dbo->query("Update  Socio Set IDSocioPresalida = '".$IDSocio."', Presalida = 'S', FehaPresalida = NOW() Where IDSocio = '".$IDInvitacion."' and IDClub = '".$IDClub."'  Limit 1");
						break;
						case "SocioInvitado":
						case "Invitado":
						break;
					}
					$respuesta["message"] = "Presalida registrada con exito." . $mensaje_alerta_ingreso ;
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;

		}
		else{
			$respuesta["message"] = "7. Atencion faltan parametros";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}
		return $respuesta;
	}

	function get_place_to_pay_transacciones($IDClub,$IDSocio){
		$dbo =& SIMDB::get();
		$response = array();

		switch($IDClub){
			case "23": //Arrayanes es factura
				$TipoBusqueda='Factura';
			break;
			default:
				$TipoBusqueda='Servicio_Pago_Factura';


		}


		$sql = "SELECT *
				 FROM PeticionesPlacetoPay
				 WHERE IDSocio = '".$IDSocio."' and tipo = '".$TipoBusqueda."'
				 ORDER BY IDPeticionesPlacetoPay DESC
				 LIMIT 10";

		$qry = $dbo->query( $sql );


		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";

				while ($row_reg = $dbo->fetchArray($qry))	:

					switch($row_reg["estado_transaccion"]){
						case "OK":
						case "APPROVED":
							$estadoTx = "APROBADA";
							$color="verde";
						break;
						case "REJECTED":
							$estadoTx = "RECHAZADA";
							$color="rojo";
						break;
						case "PENDING":
							$estadoTx = "PENDIENTE";
							$color="amarillo";
						break;
						case "APPROVED_PARTIAL":
							$estadoTx = "APROBADO PARCIAL";
							$color="verde";
						break;
						case "PARTIAL_EXPIRED":
							$estadoTx = "PARCIALMENTE EXPIRADO";
							$color="rojo";
						break;
						case "PENDING_VALIDATION":
							$estadoTx = "PENDIENTE DE VALIDACION";
							$color="rojo";
						break;
						case "REFUNDED":
							$estadoTx = "REINTEGRADO";
							$color="azul";
						break;
						default:
							$estadoTx = $estado_transaccion;
							$color="rojo";
					}


					if($row_reg["tipo"]=="EventoRegistro")
						$Descripcion=utf8_decode($dbo->getFields( "Evento" , "Titular" , "IDEvento = '".$row_reg["IDEvento"]."'" ));
					elseif($row_reg["tipo"]=="Deuda" || $row_reg["tipo"]=="Servicio_Pago_Factura")
						$Descripcion="Pagos pendientes";
					else
						$Descripcion="Pagos";

						$documentos_transacc="";
						/*
						$array_documentos = json_decode( $row_reg["Documento"], true );
						if ( count( $array_documentos ) > 0 ){
							foreach ( $array_documentos as $detalle_documento ){
									$documentos_transacc.=$detalle_documento["NumeroDocumento"];
							}
							$mensajes_documentos=" Documentos: " . $documentos_transacc;
						}
						*/
						if(!empty($row_reg["Documento"])){
							$mensajes_documentos=" Documento: " . $row_reg["Documento"];
						}


						$transaccion["IDClub"] = $IDClub;
						$transaccion["IDSocio"] = $row_reg["IDSocio"];
						$transaccion["Referencia"] = $row_reg["referencia"]. $mensajes_documentos;
						$transaccion["Estado"] = $estadoTx;
						$transaccion["Descripcion"] = $Descripcion;
						$transaccion["Color"] = $color;
						$fecha_hora=substr($row_reg["fecha_peticion"],0,19);
						$fecha_hora=str_replace("T"," ", $fecha_hora);
						$transaccion["Fecha"] = $fecha_hora;
						$transaccion["Valor"] = $row_reg["valor"];
						array_push($response, $transaccion);
				endwhile;
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
			$respuesta["message"] = "No tienes historial de transacciones.";
			$respuesta["success"] = false;
			$respuesta["response"] = $response;
		}//end else
		return $respuesta;
	}

	function get_tipo_ingreso( $IDClub, $IDSocio ) {
		$dbo = & SIMDB::get();

		$response = array();
		$TipoIngreso = utf8_decode($dbo->getFields( "AppEmpleado" , "OpcionesIngreso" , "IDClub = '".$IDClub."'" ));
		$array_tipo=explode(",",$TipoIngreso);
		if(count($array_tipo)>0){
				$encontrados=1;
				$message = count($array_tipo) . " Encontrados";
			foreach ($array_tipo as $value) {
				$tipo_ingreso[ "Nombre" ] = utf8_encode($value);
				array_push( $response, $tipo_ingreso );
			}
		}

		$sql_vehiculo = "Select * From Vehiculo Where IDSocio = '".$IDSocio."' ";
		$r_vehiculo=$dbo->query($sql_vehiculo);
		if ( $dbo->rows( $r_vehiculo ) > 0 ) {
			$encontrados=1;
			while($row_vehiculo = $dbo->fetchArray($r_vehiculo)){
				$tipo_ingreso[ "Nombre" ] = "Vehiculo: " . utf8_encode($row_vehiculo["Placa"]);
				array_push( $response, $tipo_ingreso );
			}
		}


		if($encontrados==1){
			$respuesta[ "message" ] = $message;
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;
		}else{
			$respuesta[ "message" ] = "No se encontraron registros";
			$respuesta[ "success" ] = false;
			$respuesta[ "response" ] = NULL;
		}
		return $respuesta;
	} // fin function



	function set_factura_consumo($IDClub,$Accion,$Cedula,$TipoSocio,$NumeroDocumentoFactura,$Total,$Iva,$Servicio,$Estado,$IDFactura,$Detalle,$TextoRecibo,$SubTotal0,$SubTotal12,$RucAsociado="")
	{
		$dbo =& SIMDB::get();
		$datos_socio = $dbo->fetchAll( "Socio", " NumeroDocumento = '" . $Cedula . "' and IDClub = '".$IDClub."' ", "array" );
		if(!empty($datos_socio["IDSocio"])){
					if( !empty( $IDClub ) && !empty( $Accion )  && !empty( $Cedula ) && !empty( $TipoSocio ) && !empty( $Total ) && !empty( $Estado ) ){

						//verifico si la factura ya existe para crear o editar
						$datos_factura = $dbo->fetchAll( "FacturaConsumo", " NumeroDocumentoFactura = '" . $NumeroDocumentoFactura . "' and IDClub = '".$IDClub."' ", "array" );


						if (empty($datos_factura["IDFacturaConsumo"])){
							$sql_factura = $dbo->query("INSERT INTO FacturaConsumo (IDClub, IDSocio, IDFactura, Detalle, TextoRecibo, Accion, Cedula, NumeroDocumentoFactura, TipoSocio, Total, Iva, SubTotal0, SubTotal12, RucAsociado, Servicio, Estado, UsuarioTrCr, FechaTrCr )
																					Values ('".$IDClub."','".$datos_socio["IDSocio"]."','".$IDFactura."','".$Detalle."','".$TextoRecibo."', '".$Accion."', '".$Cedula."','".$NumeroDocumentoFactura."'
																						,'".$TipoSocio."','".$Total."','".$Iva."','".$SubTotal0."','".$SubTotal12."','".$RucAsociado."','".$Servicio."','".$Estado."','WS',NOW())");

							//Envio push con notificacion de factura
							$Mensaje = "Se genero una nueva factura ". $NumeroDocumentoFactura;
							SIMUtil::enviar_notificacion_push_general($IDClub,$datos_socio["IDSocio"],$Mensaje);
							$respuesta["message"] = "Factura registrada con exito";
							$respuesta["success"] = true;
							$respuesta["response"] = NULL;
						}
						else{

							if($Estado=="Pagada" || $Estado=="Anulada"){
								$sql_factura = $dbo->query("UPDATE  FacturaConsumo SET Estado = '".$Estado."', UsuarioTrEd = 'WS', FechaTrEd= NOW()
																						WHERE IDFacturaConsumo = '" . $datos_factura["IDFacturaConsumo"] . "' and Estado <> 'Pagado' ");


							}
							else{
								$sql_factura = $dbo->query("UPDATE  FacturaConsumo SET  Total = '".$Total."', $SubTotal12='".$SubTotal12."', $SubTotal0 ='".$SubTotal0."', Iva = '".$Iva."',
																						Servicio = '".$Servicio."', Estado = '".$Estado."', UsuarioTrEd = 'WS',IDfactura='".$IDFactura."', Detalle = '".$Detalle."', FechaTrEd= NOW()
																						WHERE IDFacturaConsumo = '" . $datos_factura["IDFacturaConsumo"] . "' and Estado <> 'Pagado' ");

							}


							$respuesta["message"] = "Factura modificada con exito.";
							$respuesta["success"] = true;
							$respuesta["response"] = NULL;
						}
					}
					else{
						$respuesta["message"] = "FC1. Atencion faltan parametros";
						$respuesta["success"] = false;
						$respuesta["response"] = NULL;
					}
		}
		else{
			$respuesta["message"] = "FC2. Atencion socio no existe";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

		return $respuesta;

		}


		function get_estado_factura_consumo( $IDClub,$Accion,$Cedula,$NumeroDocumentoFactura )
		{
			$dbo =& SIMDB::get();


			$response = array();
			$sql = "SELECT * FROM FacturaConsumo WHERE Accion = '".$Accion."' and  Cedula = '".$Cedula."'  and NumeroDocumentoFactura = '".$NumeroDocumentoFactura."' LIMIT 1";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";
				while( $r = $dbo->fetchArray( $qry ) )
				{
					$facturaconsumo["NumeroDocumentoFactura"] = $r["NumeroDocumentoFactura"];
					$facturaconsumo["Total"] = $r["Total"];
					$facturaconsumo["Estado"] = $r["Estado"];
					$facturaconsumo["NumeroAprobacion"] = $r["NumeroAprobacion"];
					$facturaconsumo["Tarjeta"] = $r["Tarjeta"];
					array_push($response, $facturaconsumo);

				}//ednw hile
					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "No se encontraron facturas";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;

		}// fin function



	function set_solicitar_vehiculo($IDClub,$IDSocio,$Placa,$Tercero){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $Placa ) && !empty( $Tercero ) ){

		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );
		//Verifico que la placa exista
		$id_valet = $dbo->getFields( "ValetParking" , "IDValetParking" , "Placa = '" . $Placa . "' and IDClub = '".$IDClub."'" );
		if (!empty($id_socio)){
			if (!empty($id_valet)){
						//inserto movimiento
						$sql_log="INSERT INTO LogValetParking(IDClub,IDSocio,Estado,Placa,FechaSolicitado,UsuarioTrCr, FechaTrCr)
										 VALUES ('".$IDClub."','".$IDSocio."','Solicitado','".$Placa."',NOW(),'SOCIO APP',NOW())";
						$dbo->query($sql_log);
						$sql_valet = $dbo->query("UPDATE ValetParking SET Estado='Solicitado', FechaSolicitado = NOW() WHERE Placa = '".$Placa."'");
						$id_valet = $dbo->lastID();
						$Mensaje = "Solicitud entrega vehiculo: " . $Placa;
						SIMUtil::enviar_notificacion_push_entrega_vehiculo($IDClub,$Mensaje);

						$respuesta["message"] = "Solicitado con exito";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "La placa no esta registrada!";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
		}
		else{
			$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "O1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_recibir_vehiculo($IDClub,$IDSocio,$IDUsuario,$Placa,$Cedula,$Nombre,$NumeroParqueadero){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub )  && !empty( $IDUsuario ) && !empty( $Placa ) && !empty( $NumeroParqueadero ) ){


		//Verifico que la placa exista
		$id_valet = $dbo->getFields( "ValetParking" , "IDValetParking" , "Placa = '" . $Placa . "' and IDClub = '".$IDClub."'" );

			//inserto movimiento
			$sql_log="INSERT INTO LogValetParking(IDClub,IDSocio,Estado,Placa,IDUsuarioRecibe,FechaRecibe,CedulaTercero,NombreTercero,NumeroParqueadero,UsuarioTrCr, FechaTrCr)
							 VALUES ('".$IDClub."','".$IDSocio."','Recibido','".$Placa."','".$IDUsuario."',NOW(),'".$Cedula."','".$Nombre."','".$NumeroParqueadero."','SOCIO APP',NOW())";
			$dbo->query($sql_log);

			if (!empty($id_valet)){
						$sql_valet = $dbo->query("UPDATE ValetParking
																			SET Estado='Recibido',IDUsuarioRecibe='".$IDUsuario."',FechaRecibe=NOW(),CedulaTercero='".$Cedula."',NombreTercero='".$Nombre."',NumeroParqueadero='".$NumeroParqueadero."',UsuarioTrCr='".$IDUsuario."', FechaTrCr=NOW()
																			WHERE Placa = '".$Placa."'");
			}
			else{
				$sql_valet="INSERT INTO ValetParking(IDClub,IDSocio,Estado,Placa,IDUsuarioRecibe,FechaRecibe,CedulaTercero,NombreTercero,NumeroParqueadero,UsuarioTrCr, FechaTrCr)
								 VALUES ('".$IDClub."','".$IDSocio."','Recibido','".$Placa."','".$IDUsuario."',NOW(),'".$Cedula."','".$Nombre."','".$NumeroParqueadero."','SOCIO APP',NOW())";
				$dbo->query($sql_valet);
			}
			$respuesta["message"] = "Vehiculo recibido con exito";
			$respuesta["success"] = true;
			$respuesta["response"] = NULL;

	}
	else{
		$respuesta["message"] = "O1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_entregar_vehiculo($IDClub,$IDSocio,$IDUsuario,$Placa){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $Placa ) ){

		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );
		//Verifico que la placa exista
		$id_valet = $dbo->getFields( "ValetParking" , "IDValetParking" , "Placa = '" . $Placa . "' and IDClub = '".$IDClub."'" );
		if (!empty($id_socio)){
			if (!empty($id_valet)){
						//inserto movimiento
						$sql_log="INSERT INTO LogValetParking(IDClub,IDSocio,Estado,Placa,IDUsuarioEntrega,FechaEntrega,UsuarioTrCr, FechaTrCr)
										 VALUES ('".$IDClub."','".$IDSocio."','Entregado','".$Placa."','".$IDUsuario."',NOW(),'".$IDUsuario."',NOW())";
						$dbo->query($sql_log);
						$sql_valet = $dbo->query("UPDATE ValetParking SET Estado='Entregado',IDUsuarioEntrega='".$IDUsuario."',FechaEntrega=NOW() WHERE Placa = '".$Placa."'");

						$respuesta["message"] = "Entregado con exito";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "La placa no esta registrada!";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
		}
		else{
			$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "O1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function set_cancelar_entregar_vehiculo($IDClub,$IDSocio,$IDUsuario,$Placa,$Tercero){

	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio )  && !empty( $Placa ) && !empty( $Tercero ) ){

		//verifico que el socio exista y pertenezca al club
		$id_socio = $dbo->getFields( "Socio" , "IDSocio" , "IDSocio = '" . $IDSocio . "' and IDClub = '".$IDClub."'" );
		//Verifico que la placa exista
		$id_valet = $dbo->getFields( "ValetParking" , "IDValetParking" , "Placa = '" . $Placa . "' and IDClub = '".$IDClub."'" );
		if (!empty($id_socio)){
			if (!empty($id_valet)){
						//inserto movimiento
						$sql_log="INSERT INTO LogValetParking(IDClub,IDSocio,Estado,Placa,FechaSolicitado,UsuarioTrCr, FechaTrCr)
										 VALUES ('".$IDClub."','".$IDSocio."','Cancelado','".$Placa."',NOW(),'SOCIO APP',NOW())";
						$dbo->query($sql_log);
						$sql_valet = $dbo->query("UPDATE ValetParking SET Estado='Recibido' WHERE Placa = '".$Placa."'");
						$id_valet = $dbo->lastID();
						$Mensaje = "Cancelacion de entrega vehiculo: " . $Placa;
						SIMUtil::enviar_notificacion_push_entrega_vehiculo($IDClub,$Mensaje);

						$respuesta["message"] = "Cancelado con exito";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "La placa no esta registrada!";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}
		}
		else{
			$respuesta["message"] = "Atencion el socio no existe o no pertenece al club";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
		}

	}
	else{
		$respuesta["message"] = "O1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function get_configuracion_valet($IDClub){

	$dbo =& SIMDB::get();
	$response = array();

	$sql = "SELECT * FROM ConfiguracionValet  WHERE IDClub = '".$IDClub."'";
	$qry = $dbo->query( $sql );
	if( $dbo->rows( $qry ) > 0 )
	{
		$message = $dbo->rows( $qry ) . " Encontrados";
		while( $r = $dbo->fetchArray( $qry ) )
		{

			$configuracion["MensajeCancelacion"] = $r["MensajeCancelacion"];
			$configuracion["MensajeSolicitar"] = $r["MensajeSolicitar"];
			$configuracion["MensajeSolicitarTercero"] = $r["MensajeSolicitarTercero"];
			$configuracion["BotonSolicitar"] = $r["BotonSolicitar"];
			$configuracion["BotonSolicitarTercero"] = $r["BotonSolicitarTercero"];
			$configuracion["BotonCancelacion"] = $r["BotonCancelacion"];
			$configuracion["LabelRecibirSocio"] = $r["LabelRecibirSocio"];
			$configuracion["BotonBuscarSocio"] = $r["BotonBuscarSocio"];
			$configuracion["BotonRecibirSocio"] = $r["BotonRecibirSocio"];
			$configuracion["LabelRecibirTercero"] = $r["LabelRecibirTercero"];
			$configuracion["BotonRecibirTercero"] = $r["BotonRecibirTercero"];
			array_push($response, $configuracion);
		}//ednw hile
			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;
	}//End if
	else
	{
			$respuesta["message"] = "Sin configuracion";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
	}//end else

	return $respuesta;
	}// fin function

	function get_rutas($IDClub,$IDSocio,$IDUsuario,$Tag){
		$dbo =& SIMDB::get();

		// Tag
		if (!empty($Tag)):
			$array_condiciones[] = " (Nombre  like '%".$Tag."%' or Descripcion like '%".$Tag."%')";
		endif;


		if (count($array_condiciones)>0):
			$condiciones = implode (" and " , $array_condiciones);
			$condiciones_busqueda = " and " .$condiciones;
		endif;

		$response = array();

		$sql = "SELECT * FROM Ruta  WHERE IDClub = '".$IDClub."' and Publicar= 'S'".$condiciones_busqueda;
		$qry = $dbo->query( $sql );

		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$ruta["IDRuta"] = $r["IDRuta"];
				$ruta["IDClub"] = $r["IDClub"];
				$ruta["Nombre"] = $r["Nombre"];
				$ruta["Descripcion"] = $r["Descripcion"];
				array_push($response, $ruta);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron rutas";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
		}// fin function

		function get_personas_ruta($IDClub,$IDSocio,$IDUsuario,$IDRuta){

			$dbo =& SIMDB::get();
			$response = array();

			$sql = "SELECT * FROM Ruta  WHERE IDRuta = '".$IDRuta."' and Publicar= 'S'";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";
				while( $r = $dbo->fetchArray( $qry ) )
				{

					$ruta["IDRuta"] = $r["IDRuta"];
					$ruta["IDClub"] = $r["IDClub"];
					$ruta["Nombre"] = $r["Nombre"];
					$ruta["Descripcion"] = $r["Descripcion"];

					//Obtengo las personas de la ruta
					$response_personas = array();
					$array_personas=explode("|||",$r["IDSocio"]);
					if(count($array_personas)>0){
					foreach($array_personas as $id_persona => $datos_persona){
							if(!empty($datos_persona)){
									$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_persona . "' ", "array" );
									$array_datos_persona["IDPersona"] = $datos_socio["IDSocio"];
									$array_datos_persona["Nombre"] = $datos_socio["Nombre"] . " " . $datos_socio["Apellido"];
									$array_datos_persona["Tipo"] = "Socio";
									array_push($response_personas, $array_datos_persona);
							}
						}
					}
					$ruta["Personas"] = $response_personas;
					array_push($response, $ruta);
				}//ednw hile
					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "No se encontraron rutas";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;
			}// fin function

			function set_ingreso_ruta($IDClub,$IDRuta,$IDSocio,$IDUsuario,$IDPersona,$Tipo)
			{
				$dbo =& SIMDB::get();
				if( !empty( $IDClub ) && !empty( $IDRuta ) && !empty( $IDPersona )  && !empty( $Tipo ) ){
						$sql_ingreso = "INSERT INTO RutaIngreso (IDRuta,IDSocio,IDUsuario,IDPersona,Tipo,UsuarioTrCr,FechaTrCr)
														VALUES('".$IDRuta."','".$IDSocio."','".$IDUsuario."','".$IDPersona."','".$Tipo."','App',NOW())";
						$dbo->query($sql_ingreso);
						$respuesta["message"] = "guardado";
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
				}
				else{
					$respuesta["message"] = "Rt. Atencion faltan parametros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
				}

				return $respuesta;

				}

	function get_configuracion_encuesta_calificacion($IDClub,$IDSocio,$IDUsuario){

		$dbo =& SIMDB::get();
		$response = array();

		$sql = "SELECT * FROM ConfiguracionEncuesta2  WHERE IDClub = '".$IDClub."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$configuracion["LabelResultado"] = $r["LabelResultado"];
				array_push($response, $configuracion);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "Sin configuracion";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
		}// fin function

	function get_vehiculo_registrado_socio($IDClub,$IDSocio){

		$dbo =& SIMDB::get();
		$response = array();
		$sql = "SELECT * FROM ValetParking  WHERE IDSocio = '".$IDSocio."'";
		$qry = $dbo->query( $sql );
		if( $dbo->rows( $qry ) > 0 )
		{
			$message = $dbo->rows( $qry ) . " Encontrados";
			while( $r = $dbo->fetchArray( $qry ) )
			{

				$valet["IDSocio"] = $r["IDSocio"];
				$valet["IDValetParking"] = $r["IDValetParking"];
				$valet["Placa"] = $r["Placa"];
				$valet["Estado"] = $r["Estado"];
				array_push($response, $valet);
			}//ednw hile
				$respuesta["message"] = $message;
				$respuesta["success"] = true;
				$respuesta["response"] = $response;
		}//End if
		else
		{
				$respuesta["message"] = "No se encontraron registros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
		}//end else

		return $respuesta;
		}// fin function


	function get_solicitud_entrega( $IDClub, $Placa="" )
		{
			$dbo =& SIMDB::get();
			// Seccion Especifica
			if (!empty($Placa)):
				$array_condiciones[] = " Placa  = '".$Placa."'";
			endif;

			if (count($array_condiciones)>0):
				$condiciones = implode (" and " , $array_condiciones);
				$condiciones = " and " .$condiciones;
			endif;

			$response = array();
			$sql = "SELECT * FROM ValetParking WHERE Estado = 'Solicitado' and IDClub = '".$IDClub."'" . $condiciones ." ORDER BY FechaSolicitado ASC";
			$qry = $dbo->query( $sql );
			if( $dbo->rows( $qry ) > 0 )
			{
				$message = $dbo->rows( $qry ) . " Encontrados";

				while( $r = $dbo->fetchArray( $qry ) )
				{
					$valet["IDClub"] = $IDClub;
					$valet["IDValetParking"] = $r["IDValetParking"];
					$valet["Placa"] = $r["Placa"];
					$valet["IDSocio"] = $r["IDSocio"];
					$valet["Socio"] = utf8_encode($dbo->getFields( "Socio" , "Nombre" , "IDSocio = '" .$r["IDSocio"] . "'" ) . " " . $dbo->getFields( "Socio" , "Apellido" , "IDSocio = '" .$r["IDSocio"] . "'" ));
					$valet["CedulaTercero"] = utf8_encode($r["CedulaTercero"]);
					$valet["NombreTercero"] = utf8_encode($r["NombreTercero"]);
					array_push($response, $valet);
				}//end while

					$respuesta["message"] = $message;
					$respuesta["success"] = true;
					$respuesta["response"] = $response;
			}//End if
			else
			{
					$respuesta["message"] = "No se encontraron registros";
					$respuesta["success"] = false;
					$respuesta["response"] = NULL;
			}//end else

			return $respuesta;

		}// fin function

	function curso_buscar($IDClub, $IDSocio, $IDSede,$IDCursoTipo,$IDCursoEntrenador){
	$dbo =& SIMDB::get();
	$response = array();
	$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $IDSocio . "' ", "array" );

	if($datos_socio["IDCursoNivel"]==0){
		$respuesta["message"] = "Lo sentimos no tiene un nivel asignado, debe comunicarse con la sede";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
		return $respuesta;
	}

	if(!empty($IDCursoTipo))
		$array_condicion_curso[]="CH.IDCursoTipo = '".$IDCursoTipo."'";

	if(!empty($IDCursoEntrenador))
		$array_condicion_curso[]="CH.IDCursoEntrenador = '".$IDCursoEntrenador."'";

	if(count($array_condicion_curso)>0){
		$condicion_curso = " and " . implode(" and ",$array_condicion_curso);
	}

	$sql_entrenador="SELECT * FROM CursoEntrenador WHERE IDClub = '".$IDClub."'";
	$r_entrenador=$dbo->query($sql_entrenador);
	while($row_entrenador=$dbo->fetchArray($r_entrenador)){
		$array_entrenador[$row_entrenador["IDCursoEntrenador"]]=$row_entrenador["Nombre"];
	}

	$sql_nivel="SELECT * FROM CursoNivel WHERE IDClub = '".$IDClub."'";
	$r_nivel=$dbo->query($sql_nivel);
	while($row_nivel=$dbo->fetchArray($r_nivel)){
		$array_nivel[$row_nivel["IDCursoNivel"]]=$row_nivel["Nombre"];
	}

	$sql_edad="SELECT * FROM CursoEdad WHERE IDClub = '".$IDClub."'";
	$r_edad=$dbo->query($sql_edad);
	while($row_edad=$dbo->fetchArray($r_edad)){
		$array_edad[$row_edad["IDCursoEdad"]]=$row_edad["Nombre"];
	}

	$sql_sede="SELECT * FROM CursoSede WHERE IDClub = '".$IDClub."'";
	$r_sede=$dbo->query($sql_sede);
	while($row_sede=$dbo->fetchArray($r_sede)){
		$array_sede[$row_sede["IDCursoSede"]]=$row_sede["Nombre"];
	}

	$sql_tipo="SELECT * FROM CursoTipo WHERE IDClub = '".$IDClub."'";
	$r_tipo=$dbo->query($sql_tipo);
	while($row_tipo=$dbo->fetchArray($r_tipo)){
		$array_tipo[$row_tipo["IDCursoTipo"]]=$row_tipo["Nombre"];
	}


	$mes_actual=date("m")-1;

	$fecha_consulta=date("Y")."-".$mes_actual."-01";


	$sql = "SELECT *
					FROM CursoHorario CH, CursoCalendario CC
					WHERE CH.IDCursoTipo=CC.IDCursoTipo
					AND CH.IDClub = '".$IDClub."'
					AND CH.IDCursoSede = '".$IDSede."'
					AND CH.IDCursoNivel = '".$datos_socio["IDCursoNivel"]."' " . $condicion_curso . "
					AND CC.FechaInicio >= '".$fecha_consulta."'
					ORDER BY FechaInicio, HoraDesde";
	$qry = $dbo->query( $sql );
	if( $dbo->rows( $qry ) > 0 ){
		$message = $dbo->rows( $qry ) . " Encontrados";
		while( $r = $dbo->fetchArray( $qry ) ){


						$curso["IDClub"] = $r["IDClub"];
						$curso["IDCursoHorario"] = $r["IDCursoHorario"];
						$curso["IDCursoEntrenador"] = $r["IDCursoEntrenador"];
						$curso["IDCursoCalendario"] = $r["IDCursoCalendario"];
						$curso["Entrenador"] = $array_entrenador[$r["IDCursoEntrenador"]];
						$curso["IDCursoNivel"] = $r["IDCursoNivel"];
						$curso["Nivel"] = $array_nivel[$r["IDCursoNivel"]];
						$curso["IDCursoEdad"] = $r["IDCursoEdad"];
						$curso["Edad"] = $array_edad[$r["IDCursoEdad"]];
						$curso["IDCursoSede"] = $r["IDCursoSede"];
						$curso["Sede"] = $array_sede[$r["IDCursoSede"]];
						$curso["IDCursoTipo"] = $r["IDCursoTipo"];
						$curso["Dia"] = $array_tipo[$r["IDCursoTipo"]];
						$curso["Nombre"] = $r["Nombre"];
						$curso["Descripcion"] = $r["Descripcion"];
						$curso["Cupo"] = $r["Cupo"];
						$curso["ValorMes"] = $r["ValorMes"];
						$curso["ValorTrimestre"] = $r["ValorTrimestre"];
						$curso["HoraDesde"] = $r["HoraDesde"];
						$curso["HoraHasta"] = $r["HoraHasta"];
						$curso["FechaInicio"] = $r["FechaInicio"];
						$curso["FechaFin"] = $r["FechaFin"];
						array_push($response, $curso);
		}//ednw hile
			$respuesta["message"] = $message;
			$respuesta["success"] = true;
			$respuesta["response"] = $response;
	}//End if
	else{
			$respuesta["message"] = "No se encontraron cursos";
			$respuesta["success"] = false;
			$respuesta["response"] = NULL;
	}//end else


	return $respuesta;

	}


	function set_curso_inscribir($IDClub,$IDSocio, $IDCursoHorario,$IDCursoCalendario, $IDUsuarioInscribe, $HoraDesde, $Cupos, $Valor, $referencia=""){
	$dbo =& SIMDB::get();
	if( !empty( $IDClub ) && !empty( $IDSocio ) && !empty( $IDCursoHorario ) && !empty( $IDCursoCalendario ) && !empty( $HoraDesde ) && !empty( $Valor )  ){
					//Verifico que queden Cupos
					$inscritos=self::get_curso_inscritos($IDClub,$IDCursoHorario,$IDCursoCalendario,$HoraDesde);
					if($Cupos>0 && $Cupos>$inscritos){

						if(!empty($IDUsuarioInscribe)){
								$Estado="Confirmado";
								$CreadoPor="Starter-".$IDUsuarioInscribe;
						}
						else{
								$Estado="EsperaPago";
								$CreadoPor="Socio";
						}

						$sql_inscribe = "INSERT INTO CursoInscripcion (IDClub,IDSocio, IDCursoHorario, IDCursoCalendario, Referencia, HoraDesde, Valor, EstadoInscripcion, IDUsuarioInscribe,UsuarioTrCr,FechaTrCr )
														 VALUES ('".$IDClub."','".$IDSocio."','".$IDCursoHorario."','".$IDCursoCalendario."','".$referencia."','".$HoraDesde."','".$Valor."','".$Estado."','".$IDUsuarioInscribe."','".$CreadoPor."',NOW())";
						$dbo->query($sql_inscribe);
						$id_inscripcion = $dbo->lastID();
						$respuesta["message"] = "Inscripcion realizada-. NUMERO: " . $id_inscripcion;
						$respuesta["success"] = true;
						$respuesta["response"] = NULL;
				}
				else{
					$respuesta["message"] = "No hay cupos disponibles!";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
				}
	}
	else{
		$respuesta["message"] = "C1. Atencion faltan parametros";
		$respuesta["success"] = false;
		$respuesta["response"] = NULL;
	}

	return $respuesta;

	}

	function get_curso_inscritos($IDClub,$IDCursoHorario,$IDCursoCalendario,$HoraDesde){
		$dbo =& SIMDB::get();
		if( !empty( $IDClub ) && !empty( $IDCursoHorario ) && !empty( $IDCursoCalendario ) && !empty( $HoraDesde )  ){
						$sql_inscrito = "SELECT COUNT(IDCursoInscripcion) as Total
														 FROM CursoInscripcion
														 WHERE  IDClub='".$IDClub."' and IDCursoHorario='".$IDCursoHorario."' and  IDCursoCalendario = '".$IDCursoCalendario."' and HoraDesde = '".$HoraDesde."' and EstadoInscripcion = 'Confirmado'";
						$r_inscrito=$dbo->query($sql_inscrito);
						$row_inscrito = $dbo->fetchArray($r_inscrito);
						$total_inscrito = $row_inscrito["Total"];
		}
		else{
			$total_inscrito=0;
		}
		return $total_inscrito;
		}


		function set_push_general($IDClub,$Accion,$Mensaje)
		{
			$dbo =& SIMDB::get();
			if( !empty( $IDClub ) && !empty( $Accion )  && !empty( $Mensaje )  ) {
					$datos_socio = $dbo->fetchAll( "Socio", " Accion = '" . $Accion . "' and IDClub = '".$IDClub."' ", "array" );
					SIMUtil::enviar_notificacion_push_general($IDClub,$datos_socio["IDSocio"],$Mensaje);
					$respuesta["message"] = "Enviado con exito";
					$respuesta["success"] = true;
					$respuesta["response"] = NULL;
			}
			else{
				$respuesta["message"] = "PUSH1. Atencion faltan parametros";
				$respuesta["success"] = false;
				$respuesta["response"] = NULL;
			}

			return $respuesta;

			}


			function crear_pqr_ws($IDClub,$IDPqr){
				$dbo =& SIMDB::get();
				if( !empty( $IDClub ) && !empty( $IDPqr )   ) {
						$datos_pqr = $dbo->fetchAll( "Pqr", " IDPqr = '" . $IDPqr . "' ", "array" );
						$datos_socio = $dbo->fetchAll( "Socio", " IDSocio = '" . $datos_pqr["IDSocio"] . "' ", "array" );
						$datos_tipo_pqr = $dbo->fetchAll( "TipoPqr", " IDTipoPqr = '" . $datos_pqr["IDTipoPqr"] . "' ", "array" );

							$URLHUB=URLHUB;
							$IDHUB=IDHUB;
							$ACCESSTOKENHUB=ACCESSTOKENHUB;
							$PASSWORDTOKENHUB=PASSWORDTOKENHUB;
							$curl = curl_init();

							if($datos_tipo_pqr["TipoExterno"]=="REQ_FLR"){
									curl_setopt_array($curl, array(
									CURLOPT_URL => $URLHUB,
									CURLOPT_RETURNTRANSFER => true,
									CURLOPT_ENCODING => "",
									CURLOPT_MAXREDIRS => 10,
									CURLOPT_TIMEOUT => 0,
									CURLOPT_FOLLOWLOCATION => true,
									CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
									CURLOPT_CUSTOMREQUEST => "POST",
									CURLOPT_POSTFIELDS =>"{\n \"id\": \"".$IDHUB."\",\n \"accessToken\": \"".$ACCESSTOKENHUB."\",\n \"passwordToken\": \"".$PASSWORDTOKENHUB."\",\n \"action\": \"REQ_FLR\",
										\n \"data\": {\n \"address\": \"".$datos_socio["Predio"]."\",\n \"owner\": \"".$datos_socio["Predio"]."\",\n \"code\": \"".$IDPqr."\",\n \"id_equipment\": \"".$IDEquipo."\",
										\n \"id_type\": \"".$datos_tipo_pqr["IDTipoExterno"]."\",\n \"title\": \"".$datos_pqr["Asunto"]."\",\n \"description\": \"".$datos_pqr["Descripcion"]."\",\n \"priority\": \"1\"\n}\n}",
									CURLOPT_HTTPHEADER => array(
										"Content-Type: application/json"
									),
								));

							}
							elseif($datos_tipo_pqr["TipoExterno"]=="REQ_HSK"){
								curl_setopt_array($curl, array(
								CURLOPT_URL => $URLHUB,
								CURLOPT_RETURNTRANSFER => true,
								CURLOPT_ENCODING => "",
								CURLOPT_MAXREDIRS => 10,
								CURLOPT_TIMEOUT => 0,
								CURLOPT_FOLLOWLOCATION => true,
								CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
								CURLOPT_CUSTOMREQUEST => "POST",
								CURLOPT_POSTFIELDS =>"{\n \"id\": \"".$IDHUB."\",\n \"accessToken\": \"".$ACCESSTOKENHUB."\",\n \"passwordToken\": \"".$PASSWORDTOKENHUB."\",\n \"action\": \"REQ_HSK\",
									\n \"data\": {\n \"address\": \"".$datos_socio["Predio"]."\",\n \"owner\": \"".$datos_socio["Predio"]."\",\n \"code\": \"".$IDPqr."\",
									\n \"id_type\": \"".$datos_tipo_pqr["IDTipoExterno"]."\",\n \"description\": \"".$datos_pqr["Descripcion"]."\"\n}\n}",
								CURLOPT_HTTPHEADER => array(
									"Content-Type: application/json"
								),
								));
							}

							$response = curl_exec($curl);
							curl_close($curl);
							return $response;
				}
			}

			function get_labels( $IDClub) {
				$dbo = & SIMDB::get();

			$response=array();
			$datos_modulo=array();
			$datos_modulo=array();
			$sql_modulos = "SELECT IDClubLabelModulo, Nombre
										FROM ClubLabelModulo
										WHERE 1";
			$qry_modulo = $dbo->query( $sql_modulos );
			if ( $dbo->rows( $qry_modulo ) > 0 ) {
				while ( $r_modulo = $dbo->fetchArray( $qry_modulo ) ) {
							//$datos_modulo[ "Nombre" ] = $r_modulo[ "Nombre" ];
							//etiquetas
							$response_label = array();
							$array_label=array();

							$sql_label="SELECT Etiqueta,Valor FROM ClubLabel WHERE IDClubLabelModulo = '".$r_modulo[ "IDClubLabelModulo" ]."' and IDClub = '".$IDClub."'";
							$r_label=$dbo->query($sql_label);
							while ( $row_label = $dbo->fetchArray( $r_label ) ) {
								$array_label[$row_label["Etiqueta"]] = $row_label["Valor"];
							}
							array_push($response_label, $array_label);
							$datos_modulo[$r_modulo[ "Nombre" ]] = $response_label;
						}
				}
			array_push($response, $datos_modulo);
			$respuesta[ "message" ] = "Encontrado";
			$respuesta[ "success" ] = true;
			$respuesta[ "response" ] = $response;

			return $respuesta;

		}


			function actualizar_pqr_ws($IDClub,$IDPqr,$Hub_Code,$Status){
				$dbo =& SIMDB::get();
				if( !empty( $IDClub ) && !empty( $IDPqr )   ) {
							$actualizacion_hub="CODE:".$IDPqr . " Hub_Code " . $Hub_Code . " Status " .$Status;
							$sql_pqr="UPDATE Pqr SET NombreColaborador = '".$actualizacion_hub."' WHERE IDPqr='".$IDPqr."'";
							$dbo->query($sql_pqr);
							$respuesta["message"] = "Actualizacion exitosa";
							$respuesta["success"] = true;
							$respuesta["response"] = NULL;
				}
				else{
							$respuesta["message"] = "PQW. Atencion faltan parametros";
							$respuesta["success"] = false;
							$respuesta["response"] = NULL;
				}
				return $respuesta;
			}





} //end class
?>
